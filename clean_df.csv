repo,language,readme_contents
/rainbow-me/rainbow,TypeScript,http pb twimg com profile banner 1103191459409420288 1573207178 1500x500 rainbow ethereum wallet life pocket available io app store http apps apple com u app rainbow ethereum wallet id1457119021 android beta available google play store http play google com store apps detail id rainbow follow u twitter http twitter com rainbowdotme setup general install nvm node j 14 http github com creationix nvm install project dependency yarn setup macos 1 install latest version xcode http developer apple com xcode 2 install watchman shell brew install watchman 3 install cocoapods shell sudo gem install cocoapods 4 install required bundle pod project shell yarn install bundle yarn install pod linux 1 install system dependency shell sudo apt install libsecret tool watchman 2 follow react native environment setup instruction http reactnative dev doc environment setup carefully involve installing android studio android sdk emulator etc making available path 3 ensure least one avd image http developer android com studio run managing avds available emulator unless using physical device developing new react native helpful introduction http reactnative dev doc getting started preflight 1 run nvm use 14 force node j v14 2 set env file use env example guide note feature currently accessible working data provider order provide open source api key resource generate api key etherscan http etherscan io apis infura http infura io eth gas station http doc ethgasstation info imgix http www imgix com 3 ensure google service json ha added relevant project directory directory compile fail either live google service config internal development self provided config personal firebase project third party contributor registered package name rainbow macos note darwin version application developed built darwin platform xcode 1 start react native webserver shell yarn start 2 open rainbow wallet io rainbow xcworkspace xcode 3 run project clicking play button linux note linux development environment cannot develop build darwin version project 1 start react native webserver shell yarn start 2 build install start debug version app emulator shell yarn android
/Bytom/bytom,Go,bytom build status http travis ci org bytom bytom svg http travis ci org bytom bytom agpl v3 http img shield io badge license agpl 20v3 brightgreen svg license official golang implementation bytom protocol automated build available stable release unstable master branch binary archive published http github com bytom bytom release bytom bytom software designed operate connect highly scalable blockchain network confirming bytom blockchain protocol allows partipicants define issue transfer digitial asset multi asset shared ledger please refer white paper http github com bytom wiki blob master white paper e6 af 94 e5 8e 9f e9 93 e6 8a 80 e6 9c af e7 99 bd e7 9a ae e4 b9 a6 e8 8b b1 e6 96 87 e7 89 88 md detail current state bytom able manage key account well asset send transaction e issue spend retire asset installing homebrew brew tap bytom bytom brew install bytom building source requirement go http golang org doc install version 1 8 higher gopath set preferred directory installation ensure go supported version installed properly bash go version go env goroot gopath get source code bash git clone http github com bytom bytom git gopath src github com bytom bytom build source code bash cd gopath src github com bytom bytom make bytomd build bytomd make bytomcli build bytomcli successfully building project bytomd bytomcli binary present cmd bytomd cmd bytomcli directory respectively executables bytom project come several executables found cmd directory command description bytomd bytomd command help initialize launch bytom domain custom parameter bytomd help command line option bytomcli main bytom cli client entry point bytom network main test private net capable running full node archive node retaining historical state used process gateway bytom network via json rpc endpoint exposed top http websocket ipc transport bytomcli help bytomcli wiki page http github com bytom bytom wiki command line option command line option running bytom currently bytom still active development ton work need done also provide following content eager something bytom section ' cover command bytomd bytomcli length information please help every command e g bytomcli help initialize first initialize node bash cd cmd bytomd bytomd init chain id mainnet three option flag chain id mainnet connect mainnet testnet connect testnet wisdom solonet standalone mode ' see config toml generated launch node launch bash bytomd node available flag bytomd node flag auth disable disable rpc access authenticate chain id string select network type h help help node log file string log output file default log log level string select log level debug info warn error fatal p2p dial timeout int set dial timeout default 3 p2p handshake timeout int set handshake timeout default 30 p2p keep dial string peer address try keeping connecting separated ' ' example 1 1 1 1 46657 2 2 2 2 46658 p2p laddr string node listen address 0 0 0 0 0 mean interface port default tcp 0 0 0 0 46656 p2p lan discoverable whether node discovered node lan default true p2p max num peer int set max num peer default 50 p2p node key string node key p2p communication p2p proxy address string connect via socks5 proxy eg 127 0 0 1 1086 p2p proxy password string password proxy server p2p proxy username string username proxy server p2p seed string comma delimited host port seed node p2p skip upnp skip upnp configuration prof laddr string use http profile bytomd program vault mode run offline enviroment wallet disable disable wallet wallet rescan rescan wallet wallet txindex save global tx index web closed lanch web browser w max num concurrent reqs int max number concurrent websocket request may processed concurrently default 20 w max num websockets int max number websocket connection default 25 global flag home string root directory config data r root string deprecated use home default user zcc library application support bytom trace print full stack trace error given bytomd node running general workflow follows create key create account asset send transaction e build sign submit transaction query kind information let ' say avaliable key account key balance transaction etc dashboard access dashboard open http localhost 9888 docker ensure docker http www docker com version 17 05 higher bash docker build bytom usage please refer running docker wiki http github com bytom bytom wiki running docker contributing thank considering helping source code contribution highly appreciated grateful even smallest fix run issue feel free bytom issue http github com bytom bytom issue repository glad help license agpl v3 license
/DimensionDev/Maskbook,TypeScript,cspell disable markdownlint disable inline html first line heading href http mask io img src http dimensiondev github io mask vi asset logo mb logo geo forcecircle blue svg width 200 height 200 title b alt b markdownlint enable inline html first line heading mask network github license badge license license circle ci badge ci circle ci join chat http gitter im maskbook community badge gitter gitter chrome web store badge chrome client chrome mozilla add badge firefox client firefox fossa status badge fossa fossa crowdin badge crowdin crowdin mask network portal new open internet bridge web2 0 web3 0 mask network send encrypted post friend trade best token twitter enjoy nft pfps participate crypto lucky draw share encrypted file platform already using general introduction see mask io http mask io fossa status fossa status fossa downloads mask network chrome web store client chrome mask network firefox addon store client firefox mask network io client io mask network io testflight client io testflight beta mask network android client android useful link user forum http github com dimensiondev maskbook discussion report bug report bug twitter http twitter com realmasknetwork facebook http www facebook com masknetwork telegram http maskbook group discord http discord gg 4svxvj7 developer documentation please check doc http doc mask io reporting vulnerability contact security mask io see security md github security md work mask network please submit resume job mask io badge chrome http img shield io chrome web store v jkoeaghipilijlahjplgbfiocjhldnap svg logo maskbook logocolor 231c68f3 style flat square label chrome 20store badge ci http img shield io circleci project github dimensiondev maskbook svg style flat square logo circleci badge crowdin http badge crowdin net mask network localized svg badge firefox http img shield io amo v maskbook label firefox 20store style flat square badge fossa http app fossa io api project git 2bgithub com 2fdimensiondev 2fmaskbook svg type shield badge gitter http badge gitter im maskbook community svg badge license http img shield io badge license agpl blue svg style flat square client android http play google com store apps detail id com dimension maskbook client chrome http chrome google com webstore detail maskbook jkoeaghipilijlahjplgbfiocjhldnap client firefox http addons mozilla org en u firefox addon maskbook client io testflight http testflight apple com join pyomz4pj client io http apps apple com app id1478382964 circle ci http circleci com gh dimensiondev maskbook crowdin http crowdin com project mask network fossa status http app fossa io api project git 2bgithub com 2fdimensiondev 2fmaskbook svg type large fossa http app fossa io project git 2bgithub com 2fdimensiondev 2fmaskbook gitter http gitter im maskbook community license http github com dimensiondev maskbook blob master license report bug http github com dimensiondev maskbook issue new template bug md assignee jack work project dimensiondev maskbook 3 title 5bbug 5d 20 label type 3a 20bug
/ccyanxyz/uniswap-arbitrage-analysis,Python,uniswap arbitrage analysis see readme en pdf 0 foreword &#9; uniswap popular dex 11000 trading pair 2b dollar liquidity market arbitrage opportunity uniswap trade coin coin follow given path e g b c also coin mean trade follow given path lucky get original input amount find path determine optimal input amount maximum profit go 1 arbitrage problem alalysis order perform arbitrage need figure 2 thing find best path find optimal input amount 1 1 path finding coin vertex graph trading pair edge graph problem find circle graph classic graph problem use depth first search dfs solve dfs also control max path length import arbitrage since longer path requires gas sample code python def findarb pair tokenin tokenout maxhops currentpairs path circle range len pair newpath path copy pair pair pair ' token0 ' ' address ' tokenin ' address ' pair ' token1 ' ' address ' tokenin ' address ' continue pair ' reserve0 ' pow 10 pair ' token0 ' ' decimal ' 1 pair ' reserve1 ' pow 10 pair ' token1 ' ' decimal ' 1 continue tokenin ' address ' pair ' token0 ' ' address ' tempout pair ' token1 ' else tempout pair ' token0 ' newpath append tempout tempout ' address ' tokenout ' address ' len path 2 &#9; c ' route ' currentpairs ' path ' newpath circle append c elif maxhops 1 len pair 1 pairsexcludingthispair pair pair 1 circle findarb pairsexcludingthispair tempout tokenout maxhops 1 currentpairs pair newpath circle return circle 1 2 optimal input amount let ' little recap uniswap constant function market maker cfmm model assume trading pair coin b reserve r 0 reserve b r 1 use delta amount trade delta b amount b assume fee 1 r following equation hold r 0 r delta r 1 delta b r 0r 1 equation mean product reserve r 0r 1 remains constant trade call constant function market maker assume found circle path b c find optimal input amount optimization problem begin align max delta ' delta r n 0 delta n 0 r 0 r delta r 1 delta b r 0r 1 tag1 r 1 ' r delta b r 2 delta c r 1 ' r 2 tag2 r 2 ' r delta c r 3 delta ' r 2 ' r 1 ' tag3 end align equation 1 hold trade b 2 hold trade b c 3 hold trade c seems pretty simple since 3 equation get representation delta ' delta calculate derivative delta ' delta find optimal delta path longer b c need general solution arbitrary length path consider b c situation maybe trading pair directly c b bridge trade c say virtual trading pool c get reserve parameter e 0 e 1 virtual pool need find representation e 0 e 1 r 0 r 1 r 1 ' r 2 e pool parameter b b c according equation 1 2 delta b frac r 1r delta r 0 r delta tag4 delta c frac r 2r delta b r 1 ' r delta b tag5 replace delta b 5 using 4 delta c frac frac rr 1r 2 r 1 ' r 1r r delta frac r 0 r 1 ' r 1 ' r 1r r delta tag6 comparing form 6 4 6 5 e 0 frac r 0 r 1 ' r 1 ' r 1r e 1 frac rr 1r 2 r 1 ' r 1r parameter virtual pool c consider path b c virtual pool path c calculate parameter say e e b e e b arbitrage opportunity arbitrary length path calculate e e b iteratively parameter e e b virtual pool constructed given path begin align delta ' frac e ar delta e 0 r delta f delta ' delta end align f profit calculate derivative find optimal input amount delta frac sqrt e ae br e r code path finding optimal input amount calculation python def findarb pair tokenin tokenout maxhops currentpairs path besttrades count 5 range len pair newpath path copy pair pair pair ' token0 ' ' address ' tokenin ' address ' pair ' token1 ' ' address ' tokenin ' address ' continue pair ' reserve0 ' pow 10 pair ' token0 ' ' decimal ' 1 pair ' reserve1 ' pow 10 pair ' token1 ' ' decimal ' 1 continue tokenin ' address ' pair ' token0 ' ' address ' tempout pair ' token1 ' else tempout pair ' token0 ' newpath append tempout tempout ' address ' tokenout ' address ' len path 2 ea eb geteaeb tokenout currentpairs pair newtrade ' route ' currentpairs pair ' path ' newpath ' ea ' ea ' eb ' eb ea eb ea eb newtrade ' optimalamount ' getoptimalamount ea eb newtrade ' optimalamount ' 0 newtrade ' outputamount ' getamountout newtrade ' optimalamount ' ea eb newtrade ' profit ' newtrade ' outputamount ' newtrade ' optimalamount ' newtrade ' p ' int newtrade ' profit ' pow 10 tokenout ' decimal ' else continue besttrades sorttrades besttrades newtrade besttrades reverse besttrades besttrades count elif maxhops 1 len pair 1 pairsexcludingthispair pair pair 1 besttrades findarb pairsexcludingthispair tempout tokenout maxhops 1 currentpairs pair newpath besttrades count return besttrades 2 implementation ethereum block interval 15 second 3 thing 15 second update reserve trading pair small amount trading pair batch request state trading pair large amount trading pair batch request parse every new block event swap sync mint burn update related pair reserve find best path optimal input amount optimize dfs explore algorithm like bellman ford spfa etc send transaction call uniswapv2router02 getamountsout send tx confirm really make profit test test png ' cover gas fee though 3 finally uniswap arbitrage competitive area may find hard make profit still defi arbitraguers also arbitrage different exchange like curve fi balancer exchange flashloans even borrow money make arbitrage happy hacking contact ccyanxyz gmail com donation 0x0af66d3641640755878f0d72a610fc2eea856cd6
/chainsulting/Smart-Contract-Security-Audits,HTML,smart contract audit chainsulting smart contract audit ethereum hyperledger eos tezos reputable company essential part smart contract development rise blockchain present unique opportunity create smart contract digital asset utility security token smart contract application come unique security concern historically led million usd loss dao parity freeze mitigate risk necessary conduct smart contract security audit also provide transparency investor community chainsulting provides audit german technology security standard highest world process 1 automated vulnerability test mythril slither oyente solhint honeybadger internal tool br 2 manual security test line line swc registry overflow cve gamification function br 3 optimization code convention check br 4 verify claim general function business logic get double checked br 5 full report recommendation find critical high issue audit reach immediately br pr br social medium post chainsulting verified twitter br reflecting audit github website br audit displayed cmc listing token br b awarded top open source project b br href http gitclone dev top ethereum contract open source project github http gitclone dev top ethereum contract open source project github b get smart contract security audit today b contact br hello chainsulting de br http chainsulting br http chainsulting de br
/OneKeyHQ/app-monorepo,TypeScript,p align center img width 200 src http github com rayston92 graph bed blob e3b2c938fc5b17d68531f69178908afb16266e6a img onekey logo badge border png raw trueg p github star http img shield io github star onekeyhq app monorepo logo github style badge labelcolor 000 http github com onekeyhq app monorepo stargazer version http img shield io github release onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo release http img shield io github contributor anon onekeyhq app monorepo style badge labelcolor 000 http github com onekeyhq app monorepo graph contributor last commit http img shield io github last commit onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo commits onekey issue http img shield io github issue raw onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo issue q 3aissue 3aopen pull request http img shield io github issue pr raw onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo pull q 3apr 3aopen discord http img shield io discord 868309113942196295 style badge labelcolor 000 http discord gg onekey twitter follow http img shield io twitter follow onekeyhq style badge labelcolor 000 http twitter com onekeyhq p align center img src http github com rayston92 graph bed blob master img repo hero bg png raw true p community support community forum http github com orgs onekeyhq discussion best help building discussion best practice github issue http github com onekeyhq app monorepo issue best bug error encounter using onekey discord http discord gg onekey best sharing idea hanging community repo status public production ready really need support star watch repo latest update kbd img src http github com rayston92 graph bed blob e3b2c938fc5b17d68531f69178908afb16266e6a img onekey monorepo star gif raw true alt star repo kbd getting onboard 1 install node j lts version 16 http nodejs org en 2 install yarn package management tool http yarnpkg com installing latest version yarn execute yarn policy set version 1 18 0 root directory 3 install git lf http git lf github com binary required pulling updating 4 start io project make sure local xcode version greater equal 13 3 5 start android project make sure local jdk version greater equal 11 pulling latest code via git command line tool install project dependency root directory via yarn command install j dependency submodule dependency yarn install expo command line tool globally npm install g expo cli develop execute following command root directory develop different business code yarn web develop web mode start static server port 3000 locally yarn io connect iphone device via usb development debugging yarn android develop android yarn desktop development desktop mode yarn ext development extension mode build production execute following command root directory build target production make sure platform start correctly environment variable configured correctly web cd package web yarn build build static file package web web build production build see release web yml github workflow release web yml job detail io using expo server build see release io yml github workflow release io yml job detail android using expo server build see release android yml github workflow release android yml job detail desktop cd package desktop yarn build see release desktop yml github workflow release desktop yml job detail ext cd package ext yarn build see release ext yml github workflow release ext yml job detail multi repository directory structure repository organized using monorepo model keep code different end centralized unaffected making reusable possible packaging compilation process package component hold ui component package kit hold reusable page level ui content package app app code package desktop desktop electron code package web web side code package ext chrome extension firefox addon code install dependency subdirectory package directory separate project corresponding monorepo name value name field corresponding directory package json need install dependency subdirectory use yarn workspace onekeyhq web add axios prefix like yarn workspace onekeyhq web axios module eventually installed root directory web subproject dependency native part need go package app io directory pod install installing j dependency common problem 1 app doe start environment module dependency issue startup phase recommended use command yarn clean root directory first command clear sub dependency well module cache yarn cache tool metro babel restart project try 2 installation dependency adding new dependency yarn prompt error unexpected error occurred expected workspace package exist refer http github com yarnpkg yarn issue 7807 set current environment yarn version 1 18 0 command yarn policy set version 1 18 0 roadmap check kbd img src http github com rayston92 graph bed blob master img roadmap light png raw true alt roadmap onekey kbd doc language available language simplified chinese doc i18n readme zh cn md german deutsch doc i18n readme de md japanese doc i18n readme jp md french francais doc i18n readme fr md italian italiano doc i18n readme md security please read bug bunty rule http github com onekeyhq app monorepo blob onekey doc bug rule md detailed exact plan article please report suspected security vulnerability private dev onekey please create publicly viewable issue suspected security vulnerability open source project although yet profitable try give reward white hat hacker disclose vulnerability u timely manner ' hiring table thead tr th colspan 2 hiring many role remote href http onekeyhq atlassian net wiki space oc overview click check open position th tr thead tbody tr td li remote live anywhere li li global pay literally li li esop everybody li li open source see li li awesome colleague hell yeah li td td li li li li li li li li li li td tr tbody table salute http img shield io github contributor anon onekeyhq app monorepo style badge labelcolor 000 http github com onekeyhq app monorepo graph contributor href http github com onekeyhq app monorepo graph contributor img src http contrib rock image repo onekeyhq app monorepo max 240 column 24 license onekey available mit http github com onekeyhq app monorepo blob onekey license license free commercial non commercial use
/WaykiChain/WaykiChain,C++,quick resource access download waykichain coind waykichain coind binary release http github com waykichain waykichain wiki download waykichain binary release docker docker pull wicc waykicoind 3 2 developer documentation english version http wicc devbook readthedocs io en latest chinese version http wicc devbook readthedocs io zh cn latest waykichain introduction waykichain waykichain grows bitcoin ethereum technology ha adopted dpos consensus algorithm engergy saving superior performance compared pow etc simliar algorithm waykichain support wicc mastercoin value transfer also support turing complete smart contract capability enables token issuance sort value driven activity waykichain blockchain technology ecosystem partner build powerful trustworthy guessing game exchange digital asset like market pegged asset user issued asset many application service limited imagination waykichain heading waykichain continues evolve break thing ' work coming month waykichain way stronger many front ease development deployment higher throughput security robustness waykichain keep abreast latest blockchain technology take hesitation innovating long term success ecosystem team behind waykichain please feel free contanct u coredev waykichainhk dot com provide u feedback make waykichain better ecosystem partner participant
/rainbow-me/rainbow,TypeScript,http pb twimg com profile banner 1103191459409420288 1573207178 1500x500 rainbow ethereum wallet life pocket available io app store http apps apple com u app rainbow ethereum wallet id1457119021 android beta available google play store http play google com store apps detail id rainbow follow u twitter http twitter com rainbowdotme setup general install nvm node j 14 http github com creationix nvm install project dependency yarn setup macos 1 install latest version xcode http developer apple com xcode 2 install watchman shell brew install watchman 3 install cocoapods shell sudo gem install cocoapods 4 install required bundle pod project shell yarn install bundle yarn install pod linux 1 install system dependency shell sudo apt install libsecret tool watchman 2 follow react native environment setup instruction http reactnative dev doc environment setup carefully involve installing android studio android sdk emulator etc making available path 3 ensure least one avd image http developer android com studio run managing avds available emulator unless using physical device developing new react native helpful introduction http reactnative dev doc getting started preflight 1 run nvm use 14 force node j v14 2 set env file use env example guide note feature currently accessible working data provider order provide open source api key resource generate api key etherscan http etherscan io apis infura http infura io eth gas station http doc ethgasstation info imgix http www imgix com 3 ensure google service json ha added relevant project directory directory compile fail either live google service config internal development self provided config personal firebase project third party contributor registered package name rainbow macos note darwin version application developed built darwin platform xcode 1 start react native webserver shell yarn start 2 open rainbow wallet io rainbow xcworkspace xcode 3 run project clicking play button linux note linux development environment cannot develop build darwin version project 1 start react native webserver shell yarn start 2 build install start debug version app emulator shell yarn android
/Bytom/bytom,Go,bytom build status http travis ci org bytom bytom svg http travis ci org bytom bytom agpl v3 http img shield io badge license agpl 20v3 brightgreen svg license official golang implementation bytom protocol automated build available stable release unstable master branch binary archive published http github com bytom bytom release bytom bytom software designed operate connect highly scalable blockchain network confirming bytom blockchain protocol allows partipicants define issue transfer digitial asset multi asset shared ledger please refer white paper http github com bytom wiki blob master white paper e6 af 94 e5 8e 9f e9 93 e6 8a 80 e6 9c af e7 99 bd e7 9a ae e4 b9 a6 e8 8b b1 e6 96 87 e7 89 88 md detail current state bytom able manage key account well asset send transaction e issue spend retire asset installing homebrew brew tap bytom bytom brew install bytom building source requirement go http golang org doc install version 1 8 higher gopath set preferred directory installation ensure go supported version installed properly bash go version go env goroot gopath get source code bash git clone http github com bytom bytom git gopath src github com bytom bytom build source code bash cd gopath src github com bytom bytom make bytomd build bytomd make bytomcli build bytomcli successfully building project bytomd bytomcli binary present cmd bytomd cmd bytomcli directory respectively executables bytom project come several executables found cmd directory command description bytomd bytomd command help initialize launch bytom domain custom parameter bytomd help command line option bytomcli main bytom cli client entry point bytom network main test private net capable running full node archive node retaining historical state used process gateway bytom network via json rpc endpoint exposed top http websocket ipc transport bytomcli help bytomcli wiki page http github com bytom bytom wiki command line option command line option running bytom currently bytom still active development ton work need done also provide following content eager something bytom section ' cover command bytomd bytomcli length information please help every command e g bytomcli help initialize first initialize node bash cd cmd bytomd bytomd init chain id mainnet three option flag chain id mainnet connect mainnet testnet connect testnet wisdom solonet standalone mode ' see config toml generated launch node launch bash bytomd node available flag bytomd node flag auth disable disable rpc access authenticate chain id string select network type h help help node log file string log output file default log log level string select log level debug info warn error fatal p2p dial timeout int set dial timeout default 3 p2p handshake timeout int set handshake timeout default 30 p2p keep dial string peer address try keeping connecting separated ' ' example 1 1 1 1 46657 2 2 2 2 46658 p2p laddr string node listen address 0 0 0 0 0 mean interface port default tcp 0 0 0 0 46656 p2p lan discoverable whether node discovered node lan default true p2p max num peer int set max num peer default 50 p2p node key string node key p2p communication p2p proxy address string connect via socks5 proxy eg 127 0 0 1 1086 p2p proxy password string password proxy server p2p proxy username string username proxy server p2p seed string comma delimited host port seed node p2p skip upnp skip upnp configuration prof laddr string use http profile bytomd program vault mode run offline enviroment wallet disable disable wallet wallet rescan rescan wallet wallet txindex save global tx index web closed lanch web browser w max num concurrent reqs int max number concurrent websocket request may processed concurrently default 20 w max num websockets int max number websocket connection default 25 global flag home string root directory config data r root string deprecated use home default user zcc library application support bytom trace print full stack trace error given bytomd node running general workflow follows create key create account asset send transaction e build sign submit transaction query kind information let ' say avaliable key account key balance transaction etc dashboard access dashboard open http localhost 9888 docker ensure docker http www docker com version 17 05 higher bash docker build bytom usage please refer running docker wiki http github com bytom bytom wiki running docker contributing thank considering helping source code contribution highly appreciated grateful even smallest fix run issue feel free bytom issue http github com bytom bytom issue repository glad help license agpl v3 license
/DimensionDev/Maskbook,TypeScript,cspell disable markdownlint disable inline html first line heading href http mask io img src http dimensiondev github io mask vi asset logo mb logo geo forcecircle blue svg width 200 height 200 title b alt b markdownlint enable inline html first line heading mask network github license badge license license circle ci badge ci circle ci join chat http gitter im maskbook community badge gitter gitter chrome web store badge chrome client chrome mozilla add badge firefox client firefox fossa status badge fossa fossa crowdin badge crowdin crowdin mask network portal new open internet bridge web2 0 web3 0 mask network send encrypted post friend trade best token twitter enjoy nft pfps participate crypto lucky draw share encrypted file platform already using general introduction see mask io http mask io fossa status fossa status fossa downloads mask network chrome web store client chrome mask network firefox addon store client firefox mask network io client io mask network io testflight client io testflight beta mask network android client android useful link user forum http github com dimensiondev maskbook discussion report bug report bug twitter http twitter com realmasknetwork facebook http www facebook com masknetwork telegram http maskbook group discord http discord gg 4svxvj7 developer documentation please check doc http doc mask io reporting vulnerability contact security mask io see security md github security md work mask network please submit resume job mask io badge chrome http img shield io chrome web store v jkoeaghipilijlahjplgbfiocjhldnap svg logo maskbook logocolor 231c68f3 style flat square label chrome 20store badge ci http img shield io circleci project github dimensiondev maskbook svg style flat square logo circleci badge crowdin http badge crowdin net mask network localized svg badge firefox http img shield io amo v maskbook label firefox 20store style flat square badge fossa http app fossa io api project git 2bgithub com 2fdimensiondev 2fmaskbook svg type shield badge gitter http badge gitter im maskbook community svg badge license http img shield io badge license agpl blue svg style flat square client android http play google com store apps detail id com dimension maskbook client chrome http chrome google com webstore detail maskbook jkoeaghipilijlahjplgbfiocjhldnap client firefox http addons mozilla org en u firefox addon maskbook client io testflight http testflight apple com join pyomz4pj client io http apps apple com app id1478382964 circle ci http circleci com gh dimensiondev maskbook crowdin http crowdin com project mask network fossa status http app fossa io api project git 2bgithub com 2fdimensiondev 2fmaskbook svg type large fossa http app fossa io project git 2bgithub com 2fdimensiondev 2fmaskbook gitter http gitter im maskbook community license http github com dimensiondev maskbook blob master license report bug http github com dimensiondev maskbook issue new template bug md assignee jack work project dimensiondev maskbook 3 title 5bbug 5d 20 label type 3a 20bug
/ccyanxyz/uniswap-arbitrage-analysis,Python,uniswap arbitrage analysis see readme en pdf 0 foreword &#9; uniswap popular dex 11000 trading pair 2b dollar liquidity market arbitrage opportunity uniswap trade coin coin follow given path e g b c also coin mean trade follow given path lucky get original input amount find path determine optimal input amount maximum profit go 1 arbitrage problem alalysis order perform arbitrage need figure 2 thing find best path find optimal input amount 1 1 path finding coin vertex graph trading pair edge graph problem find circle graph classic graph problem use depth first search dfs solve dfs also control max path length import arbitrage since longer path requires gas sample code python def findarb pair tokenin tokenout maxhops currentpairs path circle range len pair newpath path copy pair pair pair ' token0 ' ' address ' tokenin ' address ' pair ' token1 ' ' address ' tokenin ' address ' continue pair ' reserve0 ' pow 10 pair ' token0 ' ' decimal ' 1 pair ' reserve1 ' pow 10 pair ' token1 ' ' decimal ' 1 continue tokenin ' address ' pair ' token0 ' ' address ' tempout pair ' token1 ' else tempout pair ' token0 ' newpath append tempout tempout ' address ' tokenout ' address ' len path 2 &#9; c ' route ' currentpairs ' path ' newpath circle append c elif maxhops 1 len pair 1 pairsexcludingthispair pair pair 1 circle findarb pairsexcludingthispair tempout tokenout maxhops 1 currentpairs pair newpath circle return circle 1 2 optimal input amount let ' little recap uniswap constant function market maker cfmm model assume trading pair coin b reserve r 0 reserve b r 1 use delta amount trade delta b amount b assume fee 1 r following equation hold r 0 r delta r 1 delta b r 0r 1 equation mean product reserve r 0r 1 remains constant trade call constant function market maker assume found circle path b c find optimal input amount optimization problem begin align max delta ' delta r n 0 delta n 0 r 0 r delta r 1 delta b r 0r 1 tag1 r 1 ' r delta b r 2 delta c r 1 ' r 2 tag2 r 2 ' r delta c r 3 delta ' r 2 ' r 1 ' tag3 end align equation 1 hold trade b 2 hold trade b c 3 hold trade c seems pretty simple since 3 equation get representation delta ' delta calculate derivative delta ' delta find optimal delta path longer b c need general solution arbitrary length path consider b c situation maybe trading pair directly c b bridge trade c say virtual trading pool c get reserve parameter e 0 e 1 virtual pool need find representation e 0 e 1 r 0 r 1 r 1 ' r 2 e pool parameter b b c according equation 1 2 delta b frac r 1r delta r 0 r delta tag4 delta c frac r 2r delta b r 1 ' r delta b tag5 replace delta b 5 using 4 delta c frac frac rr 1r 2 r 1 ' r 1r r delta frac r 0 r 1 ' r 1 ' r 1r r delta tag6 comparing form 6 4 6 5 e 0 frac r 0 r 1 ' r 1 ' r 1r e 1 frac rr 1r 2 r 1 ' r 1r parameter virtual pool c consider path b c virtual pool path c calculate parameter say e e b e e b arbitrage opportunity arbitrary length path calculate e e b iteratively parameter e e b virtual pool constructed given path begin align delta ' frac e ar delta e 0 r delta f delta ' delta end align f profit calculate derivative find optimal input amount delta frac sqrt e ae br e r code path finding optimal input amount calculation python def findarb pair tokenin tokenout maxhops currentpairs path besttrades count 5 range len pair newpath path copy pair pair pair ' token0 ' ' address ' tokenin ' address ' pair ' token1 ' ' address ' tokenin ' address ' continue pair ' reserve0 ' pow 10 pair ' token0 ' ' decimal ' 1 pair ' reserve1 ' pow 10 pair ' token1 ' ' decimal ' 1 continue tokenin ' address ' pair ' token0 ' ' address ' tempout pair ' token1 ' else tempout pair ' token0 ' newpath append tempout tempout ' address ' tokenout ' address ' len path 2 ea eb geteaeb tokenout currentpairs pair newtrade ' route ' currentpairs pair ' path ' newpath ' ea ' ea ' eb ' eb ea eb ea eb newtrade ' optimalamount ' getoptimalamount ea eb newtrade ' optimalamount ' 0 newtrade ' outputamount ' getamountout newtrade ' optimalamount ' ea eb newtrade ' profit ' newtrade ' outputamount ' newtrade ' optimalamount ' newtrade ' p ' int newtrade ' profit ' pow 10 tokenout ' decimal ' else continue besttrades sorttrades besttrades newtrade besttrades reverse besttrades besttrades count elif maxhops 1 len pair 1 pairsexcludingthispair pair pair 1 besttrades findarb pairsexcludingthispair tempout tokenout maxhops 1 currentpairs pair newpath besttrades count return besttrades 2 implementation ethereum block interval 15 second 3 thing 15 second update reserve trading pair small amount trading pair batch request state trading pair large amount trading pair batch request parse every new block event swap sync mint burn update related pair reserve find best path optimal input amount optimize dfs explore algorithm like bellman ford spfa etc send transaction call uniswapv2router02 getamountsout send tx confirm really make profit test test png ' cover gas fee though 3 finally uniswap arbitrage competitive area may find hard make profit still defi arbitraguers also arbitrage different exchange like curve fi balancer exchange flashloans even borrow money make arbitrage happy hacking contact ccyanxyz gmail com donation 0x0af66d3641640755878f0d72a610fc2eea856cd6
/chainsulting/Smart-Contract-Security-Audits,HTML,smart contract audit chainsulting smart contract audit ethereum hyperledger eos tezos reputable company essential part smart contract development rise blockchain present unique opportunity create smart contract digital asset utility security token smart contract application come unique security concern historically led million usd loss dao parity freeze mitigate risk necessary conduct smart contract security audit also provide transparency investor community chainsulting provides audit german technology security standard highest world process 1 automated vulnerability test mythril slither oyente solhint honeybadger internal tool br 2 manual security test line line swc registry overflow cve gamification function br 3 optimization code convention check br 4 verify claim general function business logic get double checked br 5 full report recommendation find critical high issue audit reach immediately br pr br social medium post chainsulting verified twitter br reflecting audit github website br audit displayed cmc listing token br b awarded top open source project b br href http gitclone dev top ethereum contract open source project github http gitclone dev top ethereum contract open source project github b get smart contract security audit today b contact br hello chainsulting de br http chainsulting br http chainsulting de br
/OneKeyHQ/app-monorepo,TypeScript,p align center img width 200 src http github com rayston92 graph bed blob e3b2c938fc5b17d68531f69178908afb16266e6a img onekey logo badge border png raw trueg p github star http img shield io github star onekeyhq app monorepo logo github style badge labelcolor 000 http github com onekeyhq app monorepo stargazer version http img shield io github release onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo release http img shield io github contributor anon onekeyhq app monorepo style badge labelcolor 000 http github com onekeyhq app monorepo graph contributor last commit http img shield io github last commit onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo commits onekey issue http img shield io github issue raw onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo issue q 3aissue 3aopen pull request http img shield io github issue pr raw onekeyhq app monorepo svg style badge labelcolor 000 http github com onekeyhq app monorepo pull q 3apr 3aopen discord http img shield io discord 868309113942196295 style badge labelcolor 000 http discord gg onekey twitter follow http img shield io twitter follow onekeyhq style badge labelcolor 000 http twitter com onekeyhq p align center img src http github com rayston92 graph bed blob master img repo hero bg png raw true p community support community forum http github com orgs onekeyhq discussion best help building discussion best practice github issue http github com onekeyhq app monorepo issue best bug error encounter using onekey discord http discord gg onekey best sharing idea hanging community repo status public production ready really need support star watch repo latest update kbd img src http github com rayston92 graph bed blob e3b2c938fc5b17d68531f69178908afb16266e6a img onekey monorepo star gif raw true alt star repo kbd getting onboard 1 install node j lts version 16 http nodejs org en 2 install yarn package management tool http yarnpkg com installing latest version yarn execute yarn policy set version 1 18 0 root directory 3 install git lf http git lf github com binary required pulling updating 4 start io project make sure local xcode version greater equal 13 3 5 start android project make sure local jdk version greater equal 11 pulling latest code via git command line tool install project dependency root directory via yarn command install j dependency submodule dependency yarn install expo command line tool globally npm install g expo cli develop execute following command root directory develop different business code yarn web develop web mode start static server port 3000 locally yarn io connect iphone device via usb development debugging yarn android develop android yarn desktop development desktop mode yarn ext development extension mode build production execute following command root directory build target production make sure platform start correctly environment variable configured correctly web cd package web yarn build build static file package web web build production build see release web yml github workflow release web yml job detail io using expo server build see release io yml github workflow release io yml job detail android using expo server build see release android yml github workflow release android yml job detail desktop cd package desktop yarn build see release desktop yml github workflow release desktop yml job detail ext cd package ext yarn build see release ext yml github workflow release ext yml job detail multi repository directory structure repository organized using monorepo model keep code different end centralized unaffected making reusable possible packaging compilation process package component hold ui component package kit hold reusable page level ui content package app app code package desktop desktop electron code package web web side code package ext chrome extension firefox addon code install dependency subdirectory package directory separate project corresponding monorepo name value name field corresponding directory package json need install dependency subdirectory use yarn workspace onekeyhq web add axios prefix like yarn workspace onekeyhq web axios module eventually installed root directory web subproject dependency native part need go package app io directory pod install installing j dependency common problem 1 app doe start environment module dependency issue startup phase recommended use command yarn clean root directory first command clear sub dependency well module cache yarn cache tool metro babel restart project try 2 installation dependency adding new dependency yarn prompt error unexpected error occurred expected workspace package exist refer http github com yarnpkg yarn issue 7807 set current environment yarn version 1 18 0 command yarn policy set version 1 18 0 roadmap check kbd img src http github com rayston92 graph bed blob master img roadmap light png raw true alt roadmap onekey kbd doc language available language simplified chinese doc i18n readme zh cn md german deutsch doc i18n readme de md japanese doc i18n readme jp md french francais doc i18n readme fr md italian italiano doc i18n readme md security please read bug bunty rule http github com onekeyhq app monorepo blob onekey doc bug rule md detailed exact plan article please report suspected security vulnerability private dev onekey please create publicly viewable issue suspected security vulnerability open source project although yet profitable try give reward white hat hacker disclose vulnerability u timely manner ' hiring table thead tr th colspan 2 hiring many role remote href http onekeyhq atlassian net wiki space oc overview click check open position th tr thead tbody tr td li remote live anywhere li li global pay literally li li esop everybody li li open source see li li awesome colleague hell yeah li td td li li li li li li li li li li td tr tbody table salute http img shield io github contributor anon onekeyhq app monorepo style badge labelcolor 000 http github com onekeyhq app monorepo graph contributor href http github com onekeyhq app monorepo graph contributor img src http contrib rock image repo onekeyhq app monorepo max 240 column 24 license onekey available mit http github com onekeyhq app monorepo blob onekey license license free commercial non commercial use
/WaykiChain/WaykiChain,C++,quick resource access download waykichain coind waykichain coind binary release http github com waykichain waykichain wiki download waykichain binary release docker docker pull wicc waykicoind 3 2 developer documentation english version http wicc devbook readthedocs io en latest chinese version http wicc devbook readthedocs io zh cn latest waykichain introduction waykichain waykichain grows bitcoin ethereum technology ha adopted dpos consensus algorithm engergy saving superior performance compared pow etc simliar algorithm waykichain support wicc mastercoin value transfer also support turing complete smart contract capability enables token issuance sort value driven activity waykichain blockchain technology ecosystem partner build powerful trustworthy guessing game exchange digital asset like market pegged asset user issued asset many application service limited imagination waykichain heading waykichain continues evolve break thing ' work coming month waykichain way stronger many front ease development deployment higher throughput security robustness waykichain keep abreast latest blockchain technology take hesitation innovating long term success ecosystem team behind waykichain please feel free contanct u coredev waykichainhk dot com provide u feedback make waykichain better ecosystem partner participant
/Synthetixio/synthetix,JavaScript,synthetix circleci http circleci com gh synthetixio synthetix svg style svg http circleci com gh synthetixio synthetix codecov http codecov io gh synthetixio synthetix branch develop graph badge svg http codecov io gh synthetixio synthetix npm version http badge fury io j synthetix svg http badge fury io j synthetix discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io synthetix crypto backed synthetic asset platform multi token system powered snx synthetix network token snx holder stake snx issue synths chain synthetic asset via staking dapp http staking synthetix io network currently support ever growing list synthetic asset http www synthetix io synths please see list deployed contract main testnets http doc synthetix io address synths traded using kwenta http kwenta io synthetix us proxy system upgrade disruptive functionality contract smooth user interaction since new functionality become available without interruption experience also transparent community large since upgrade accompanied event announcing upgrade new release managed via synthetix improvement proposal sip http sip synthetix io sip system similar eips http eips ethereum org price committed chain trusted oracle provided chainlink http feed chain link please note repository development latest system documentation see doc synthetix io http doc synthetix io dapps staking synthetix io http staking synthetix io kwenta io http kwenta io stats synthetix io http stats synthetix io community discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io guide community see synthetix community http synthetix community repo guide branching note branch used repo master represents contract live mainnet testnets new version contract make way testnets eventually becomes promoted master semver http semver org reflecting contract change major minor portion version depending backwards compatibility patch change simply change javascript interface testing circleci http circleci com gh synthetixio synthetix svg style svg http circleci com gh synthetixio synthetix codecov http codecov io gh synthetixio synthetix branch develop graph badge svg http codecov io gh synthetixio synthetix please see doc synthetix io contract testing http doc synthetix io contract testing overview automated testing methodology module usage npm version http badge fury io j synthetix svg http badge fury io j synthetix repo may installed via npm install support node j scripting application solidity contract development example 100 please see walkthroughs code example javascript solidity doc synthetix io integration http doc synthetix io integration solidity api interface available via path synthetix contract interface contract interface zap code key use iaddressresolver tied immutable proxy readproxyaddressresolver http contract synthetix io readproxyaddressresolver introduced sip 57 http sip synthetix io sip sip 57 fetch synthetix feepool depot et al via iaddressresolver getaddress bytes32 name name bytes32 version contract name case sensitive fetch synth using iaddressresolver getsynth bytes32 synth synth bytes32 name synth e g ieth susd sdefi e g npm install synthetix write solidity using compiler link named import via node module solidity pragma solidity 0 5 16 import ' synthetix contract interface iaddressresolver sol ' import ' synthetix contract interface isynthetix sol ' contract mycontract instantiated readproxyaddressresolver ' readproxy ' change safe code without setter see http doc synthetix io address address mainnet testnets iaddressresolver public synthetixresolver constructor iaddressresolver snxresolver public synthetixresolver snxresolver function synthetixissue external isynthetix synthetix synthetixresolver getaddress ' synthetix ' require synthetix address 0 ' synthetix missing synthetix resolver ' issue msg sender address mycontract synthetix issuemaxsynths function synthetixissueonbehalf address user external isynthetix synthetix synthetixresolver getaddress ' synthetix ' require synthetix address 0 ' synthetix missing synthetix resolver ' note fail delegateapprovals approveissueonbehalf address mycontract ha yet invoked user synthetix issuemaxsynthsonbehalf user node j api getast source match contract return abstract syntax tree ast compiled source optionally add source restrict single contract source set match empty regex ' like source asts including third party contract getpathtonetwork network file ' ' return path folder file within folder given network getsource network return abi bytecode contract source getsuspensionreasons code return mapping systemstatus suspension code string reason getstakingrewards network return list staking reward contract available getsynths network return list synths network gettarget network return information contract ' address source file contract name specified doc synthetix io address http doc synthetix io address gettokens network return list token synths snx used system along address getusers network return list user account within synthetix protocol e g owner fee etc getversions network bycontract false return list deployed version network keyed tagged version bycontract true key contract name network return list supported network tobytes32 convert string bytes32 value via code javascript const snx require ' synthetix ' snx getast ' contract addressresolver sol ' import ' contract owned sol ' ' contract interface iaddressresolver sol ' ' contract interface isynthetix sol ' contract addressresolver object interface library ' contract owned sol ' import contract owned object interface library snx getast source ' synthetix sol ' import ' contract externstatetoken sol ' ' contract mixinresolver sol ' ' contract interface isynthetix sol ' ' contract tokenstate sol ' ' contract interface isynth sol ' ' contract interface ierc20 sol ' ' contract interface isystemstatus sol ' ' contract interface iexchanger sol ' ' contract interface iissuer sol ' ' contract interface isynthetixstate sol ' ' contract interface iexchangerates sol ' ' contract supplyschedule sol ' ' contract interface irewardescrow sol ' ' contract interface ihasbalance sol ' ' contract interface irewardsdistribution sol ' contract synthetix function array event array variable array modifier array structs inherits array interface library get path network snx getpathtonetwork network ' mainnet ' ' synthetixio synthetix publish deployed mainnet ' retrieve object detailing contract abi bytecode snx getsource network ' goerli ' contract ' proxy ' bytecode ' 0 0 ' abi snx getsuspensionreasons &#9; 1 ' system upgrade ' &#9; 2 ' market closure ' &#9; 3 ' circuit breaker ' &#9; 99 ' emergency ' retrieve array synths used snx getsynths network ' goerli ' map name name ' susd ' ' seur ' retrieve object detailing contract deployed given network snx gettarget network ' goerli ' contract ' proxysynthetix ' &#9; name ' proxysynthetix ' address ' 0x322a3346bf24363f451164d96a5b5cd5a7f4c337 ' source ' proxy ' link ' http goerli etherscan io address 0x322a3346bf24363f451164d96a5b5cd5a7f4c337 ' timestamp ' 2019 03 06t23 05 43 914z ' txn ' ' &#9; network ' goerli ' retrieve list system user address snx getusers network ' mainnet ' name ' owner ' address ' 0xeb3107117fead7de89cd14d463d340a2e6917769 ' name ' deployer ' address ' 0xde910777c787903f78c89e7a0bf7f4c435cbb1fe ' name ' marketclosure ' address ' 0xc105ea57eb434fbe44690d7dec2702e4a2fbfcf7 ' name ' oracle ' address ' 0xac1ed4fabbd5204e02950d68b6fc8c446ac95362 ' name ' fee ' address ' 0xfeefeefeefeefeefeefeefeefeefeefeefeefeef ' name ' zero ' address ' 0x0000000000000000000000000000000000000000 ' snx getversions ' v2 21 12 107 ' tag ' v2 21 12 107 ' fulltag ' v2 21 12 107 ' release ' hadar ' network ' goerli ' date ' 2020 05 08t12 52 06 04 00 ' commit ' 19997724bc7eaceb902c523a6742e0bd74fc75cb ' &#9; &#9; contract readproxyaddressresolver object &#9; &#9; snx network ' local ' ' goerli ' ' mainnet ' snx tobytes32 ' susd ' ' 0x7355534400000000000000000000000000000000000000000000000000000000 ' cli tool cli tool output json using name without get prefix bash npx synthetix ast contract synth sol import contract owned sol contract externstatetoken sol contract mixinresolver sol contract interface isynth sol contract interface ierc20 sol contract interface isystemstatus sol contract interface ifeepool sol contract interface isynthetix sol contract interface iexchanger sol contract interface iissue npx synthetix bytes32 susd 0x7355534400000000000000000000000000000000000000000000000000000000 npx synthetix network ' local ' ' goerli ' ' mainnet ' npx synthetix source network goerli contract proxy bytecode 0 0 abi npx synthetix suspension reason code 2 market closure npx synthetix synths network goerli key name susd seur npx synthetix target network goerli contract proxysynthetix name proxysynthetix address 0x322a3346bf24363f451164d96a5b5cd5a7f4c337 source proxy link http goerli etherscan io address 0x322a3346bf24363f451164d96a5b5cd5a7f4c337 timestamp 2019 03 06t23 05 43 914z network goerli npx synthetix user network mainnet user oracle name oracle address 0xac1ed4fabbd5204e02950d68b6fc8c446ac95362 npx synthetix version v2 0 19 tag v2 0 19 fulltag v2 0 19 release network mainnet date 2019 03 11t18 17 52 04 00 commit eeb271f4fdd2e615f9dba90503f42b2cb9f9716e contract depot address 0x172e09691dfbbc035e37c73b62095caa16ee2388 status replaced replaced v2 18 1 exchangerates address 0x73b172756bd5ddf0110ba8d7b88816eb639eb21c status replaced replaced v2 1 11 npx synthetix version contract depot address 0x172e09691dfbbc035e37c73b62095caa16ee2388 status replaced replaced v2 18 1 address 0xe1f64079ada6ef07b03982ca34f1dd7152aa3b86 status current exchangerates address 0x73b172756bd5ddf0110ba8d7b88816eb639eb21c status replaced replaced v2 1 11
/studydefi/money-legos,Solidity,money lego circleci http badgen net circleci github studydefi money lego http app circleci com pipeline github studydefi money lego npm http badgen net npm v studydefi money lego http www npmjs com package studydefi money lego type http badgen net npm type studydefi money lego minzip http badgen net bundlephobia minzip studydefi money lego lego autocomplete asset lego autocomplete gif get abis address solidity interface popular defi protocol typescript powered autocomplete money lego npm package provides mainnet address abis solidity interface popular defi protocol click http money lego studydefi com doc visit discord http discord gg rbr3u32 protocol supported aave compound curve finance dappsys dydx erc20 idle v3 kyber network makerdao onesplit uma protocol uniswap v1 synthetix balancer mstable uniswap v2 importing specific protocol also supported img src asset weight png alt size width 540 install bash npm install studydefi money lego usage javascript javascript import lego studydefi money lego access abis address lego erc20 abi lego erc20 dai address many popular defi protocol lego uniswap factory abi lego uniswap factory address import protocol interested import uniswap studydefi money lego uniswap uniswap factory abi uniswap factory address solidity solidity pragma solidity 0 5 0 import studydefi money lego onesplit contract ionesplit sol import openzeppelin contract token erc20 ierc20 sol contract onesplitswapper uniswap mainnet factory address address constant onesplitaddress 0xc586bef4a0992c495cf22e1aeee4e446cecdee0e function swap address address uint256 amountwei internal ierc20 fromierc20 ierc20 ierc20 toierc20 ierc20 uint256 returnamount uint256 memory distribution ionesplit onesplitaddress getexpectedreturn fromierc20 toierc20 amountwei 10 0 ionesplit onesplitaddress swap fromierc20 toierc20 amountwei returnamount distribution 0
/curvefi/curve-contract,Python,curve contract vyper contract used curve http www curve fi exchange pool overview curve exchange liquidity pool ethereum designed extremely efficient stablecoin trading low risk supplemental fee income liquidity provider without opportunity cost curve allows user trade correlated cryptocurrencies bespoke low slippage low fee algorithm liquidity pool also supplied lending protocol generates additional income liquidity provider testing development dependency python3 http www python org downloads release python 368 version 3 6 3 8 python3 dev brownie http github com iamdefinitelyahuman brownie tested version 1 13 2 http github com eth brownie brownie release tag v1 13 2 ganache cli http github com trufflesuite ganache cli tested version 6 12 1 http github com trufflesuite ganache cli release tag v6 12 1 brownie token tester http github com iamdefinitelyahuman brownie token tester tested version 0 1 0 http github com iamdefinitelyahuman brownie token tester release tag v0 1 0 curve contract compiled using vyper http github com vyperlang vyper however installation required vyper version handled brownie setup get started first create initialize python virtual environment http doc python org 3 library venv html next clone repo install developer dependency bash git clone http github com curvefi curve contract git cd curve contract pip install r requirement txt organization workflow new curve pool built contract template contract pool template contract pool template deployed contract pool added contract pool contract pool see documentation within contract contract ' subdirectory detailed information get started developing curve running test test suite test contains common test curve pool well unique per pool test run entire suite bash brownie test run test specific pool bash brownie test test pool pool name valid pool name name subdirectory within contract pool contract pool template prepend template subdirectory name within contract pool template contract pool template example base template template base optionally include coverage flag view coverage report upon completion test deployment deploy new pool 1 ensure pooldata json pool deploying contains necessary field 2 edit configuration setting within script deploy py script deploy py 3 test deployment locally forked mainnet bash brownie run deploy network mainnet fork script completes open console call various getter method deployed contract ensure pool ha configured correctly 4 deploy pool mainnet bash brownie run deploy network mainnet sure open pull request add deployment address pool readme md audit security curve smart contract audited trail bit audit report made available curve website http www curve fi audit also active bug bounty http www curve fi bugbounty issue lead substantial loss money critical bug broken live ness condition irreversible loss fund license c curve fi 2020 right reserved license
/SunWeb3Sec/DeFiHackLabs,Solidity,defi hack reproduce foundry reproduce defi hack incident using foundry 50 incident included repo educational purpose let ' make web3 secure getting started follow instruction http book getfoundry sh getting started installation html install foundry http github com foundry r foundry clone install dependency git submodule update init recursive list defi hack exploit 20220807 egd finance 20220807 egd finance flashloans price manipulation 20220802 nomad bridge 20220802 nomad bridge business logic flaw incorrect acceptable merkle root check 20220801 reaper farm 20220801 reaper farm business logic flaw lack access control mechanism 20220725 lpc 20220725 lpc business logic flaw incorrect recipient balance check 20220713 audius 20220723 audius storage collision malicious proposal 20220713 spacegodzilla 20220713 spacegodzilla flashloans price manipulation 20220710 omni nft 20220710 omni nft reentrancy 20220706 flippazone nft 20220706 flippazone nft accesscontrol 20220701 quixotic optimism nft marketplace 20220701 quixotic optimism nft marketplace 20220626 xcarnival 20220626 xcarnival infinite number loan 20220624 harmony ' horizon bridge 20220624 harmony horizon bridge 20220618 snood 20220618 snood miscalculation spendallowance 20220616 inversefinance 20220616 inversefinance flashloan price oracle manipulation 20220608 gymnetwork 20220608 gymnetwork accesscontrol 20220608 optimism wintermute 20220608 optimism wintermute 20220606 discover 20220606 discover flashloan price oracle manipulation 20220529 novo protocol 20220529 novo protocol flashloan price oracle manipulation 20220517 apecoin 20220517 apecoin ape flashloan 20220508 fortress loan 20220508 fortress loan malicious proposal price oracle manipulation 20220430 rari capital fei protocol 20220430 rari capitalfei protocol flashloan attack reentrancy 20220428 deus dao 20220428 deus dao flashloan price oracle manipulation 20220424 wiener doge 20220424 wiener doge flashloan 20220421 zeed finance 20220421 zeed finance 20220416 beanstalkfarms 20220416 beanstalkfarms dao flashloan 20220415 rikkei finance 20220415 rikkei finance accesscontrol price oracle manipulation 20220412 elephantmoney 20220412 elephantmoney flashloan price oracle manipulation 20220409 gymnetwork 20220409 gymnetwork 20220327 revest finance 20220327 revest finance reentrancy 20220326 auctus 20220326 auctus 20220322 compoundtusdsweeptokenbypass 20220322 compoundtusdsweeptokenbypass 20220321 onering finance 20220321 onering finance flashloan price oracle manipulation 20220320 li fi 20220320 li fi bridge 20220313 paraluni 20220313 paraluni flashloan reentrancy 20220309 fantasm finance 20220309 fantasm finance 20220305 bacon protocol 20220305 bacon protocol reentrancy 20220303 treasuredao 20220303 treasuredao zero fee 20220214 buildfinance dao 20220214 buildfinance dao 20220208 sandbox land 20220208 sandbox land access control 20220118 multichain anyswap 20220118 multichain anyswap insufficient token validation 20211221 visor finance 20211221 visor finance reentrancy 20211218 grim finance 20211218 grim finance flashloan reentrancy 20211130 monox finance 20211130 monox finance price manipulation 20210916 sushiswap miso 20210916 sushiswap miso 20210830 cream finance 20210830 cream finance flashloan attack reentrancy 20210817 xsurge 20210817 xsurge flashloan attack reentrancy 20210607 88mph nft 20210607 88mph nft access control 20210308 dodo 20210308 dodo flashloan attack 20201229 cover protocol 20201229 cover protocol 20201026 harvest finance 20201026 harvest finance flashloan attack 20171106 parity ' accidentally killed ' 20171106 parity accidentally killed transaction debugging tool http dashboard tenderly co explorer http ethtx info http versatile blocksecteam com tx 20220807 egd finance flashloans price manipulation lost 36 044 usdt testing sh forge test contract src test egd finance exp sol vvv link reference http twitter com blocksecteam status 1556483435388350464 http twitter com peckshieldalert status 1556486817406283776 20220802 nomad bridge business logic flaw incorrect acceptable merkle root check lost multiple erc 20 token 152m u testing sh forge test contract src test nomadbridge exp sol vvv link reference http twitter com samczsun status 1554252024723546112 http www certik com resource blog 28fmavd63cpzjokojb9dx3 nomad bridge exploit incident analysis http blog coinbase com nomad bridge incident analysis 899b425b0f34 20220801 reaper farm business logic flaw lack access control mechanism lost multiple erc 20 token 1 7m u testing sh forge test contract src test reaperfarm exp sol vvv link reference http twitter com reaper farm status 1554500909740302337 http twitter com beosinalert status 1554476940593340421 20220725 lpc business logic flaw incorrect recipient balance check check sender recipient transfer lost 178 bnb 45 715 u testing sh forge test contract src test lpc exp sol vvv link reference http www panewslab com zh hk articledetails uwv4sma2 html http twitter com beosinalert status 1551535854681718784 20220723 audius storage collision malicious proposal storage collision proxy implementation contract lost 704 eth 1 08m u testing sh forge test contract src test audius exp sol vvv link reference http twitter com audiusproject status 1551000725169180672 http twitter com 1nf0s3cpt status 1551050841146400768 http blog audius co article audius governance takeover post mortem 7 23 22 20220713 spacegodzilla flashloans price manipulation lost 25 378 busd testing sh forge test contract src test spacegodzilla exp sol vvv link reference http mobile twitter com blocksecteam status 1547456591900749824 http www panewslab com zh hk articledetails u25j5p3kdvu9 html http medium com numen cyber lab spacegodzilla attack event analysis d29a061b17e1 http learnblockchain cn article 4396 http learnblockchain cn article 4395 math behind attack 20220710 omni nft reentrancy lost 1 4m testing sh forge test contract src test omni exp sol vv link reference http twitter com peckshield status 1546084680138498049 http twitter com slowmist team status 1546379086792388609 http etherscan io tx 0x05d65e0adddc5d9ccfe6cd65be4a7899ebcb6e5ec7a39787971bcc3d6ba73996 20220706 flippazone nft access control ownerwithdrawallto without onlyowner call testing sh forge test contract src test flippazone sol vvvv link reference http twitter com bertcmiller status 1544496577338826752 http etherscan io tx 0x8bded20c1db5a1d5f595b15e682a95ce11d3c895d6031147fa49c4ffa5729a30 20220703 crema finance faulty owner validation solana lost 8 8m attack wa made possible due faulty owner validation one protocol account storing price tick data data used crema calculate lp fee testing sh forge test contract src test quixotic exp sol vv link reference http rekt news crema finance rekt http twitter com crema finance status 1543638844410499073 20220701 quixotic optimism nft marketplace lost 100k fillsellorder function check seller signature ecdsa signature combined v r recoveredaddress sellorder seller sellorder execute testing sh forge test contract src test quixotic exp sol vv link reference http twitter com 1nf0s3cpt status 1542808565349777408 http twitter com slowmist team status 1542795627603857409 http optimistic etherscan io tx 0x5dc519726e1236eb846271f6699e03cdd1a8fd593a2900c71cd2aabbdb7c92e6 20220626 xcarnival infinite number loan lost 3087 eth 3 87m testing sh forge test contract src test xcarnival exp sol vv link reference http twitter com xcarnival lab status 1541226298399653888 http twitter com peckshield status 1541047171453034501 http twitter com blocksecteam status 1541070850505723905 20220624 harmony ' horizon bridge private key compromised lost 100 million private key compromised case multisig wallet testing sh forge test contract src test harmony multisig sol vvvv link reference http twitter com harmonyprotocol status 1540110924400324608 http twitter com 0xivo status 1540165571681128448 http twitter com 1nf0s3cpt status 1540139812715261952 20220618 snood miscalculation spendallowance lost 104 eth spendallowance function use getstandardamount getreflectedamount testing sh forge test contract src test snood poc sol vv link reference http ethereum stackexchange com question 130472 attack erc 777 smart contract uniswapv2pair resulting 104 eth liquidit http etherscan io tx 0x9a6227ef97d7ce75732645bd604ef128bb5dfbc1bfbe0966ad1cd2870d45a20e http ethtx info mainnet 0x9a6227ef97d7ce75732645bd604ef128bb5dfbc1bfbe0966ad1cd2870d45a20e 20220616 inversefinance flashloan price oracle manipulation lost 53 2445 wbtc 99 976 29 usdt testing sh forge test contract src test inversefinance exp sol vv link reference http twitter com peckshield status 1537382891230883841 http twitter com slowmist team status 1537602909512376321 http blocksecteam medium com price oracle manipulation attack inverse finance a5544218ea91 http www certik com resource blog 6lbl57wa3imnm8zd7q111r inverse finance incident analysis http etherscan io tx 0x958236266991bc3fe3b77feaacea120f172c0708ad01c7a715b255f218f9313c 20220608 gymnetwork access control lost 2 1 million testing sh forge test contract src test gym 2 exp sol vv link reference http twitter com peckshield status 1534423219607719936 http twitter com 1nf0s3cpt status 1534464698069884929 http www jinse com news blockchain 1658455 html 20220608 optimism wintermute signature replay lost 20 million optimism op token returned 17 million testing sh forge test contract src test optimism exp sol vv link reference http inspexco medium com 20 million op wa stolen multisig wallet yet owned wintermute 3f6c75db740a http optimistic etherscan io tx 0x75a42f240d229518979199f56cd7c82e4fc1f1a20ad9a4864c635354b4a34261 http optimistic etherscan io tx 0x00a3da68f0f6a69cb067f09c3f7e741a01636cbc27a84c603b468f65271d415b 20220606 discover flashloan price oracle manipulation lost 49 bnb testing sh forge test contract src test discover exp sol vv link reference http www twitter com beosinalert status 1533734518623899648 http www anquanke com post id 274003 http bscscan com tx 0x8a33a1f8c7af372a9c81ede9e442114f0aabb537e5c3a22c0fd7231c4820f1e9 http bscscan com tx 0x1dd4989052f69cd388f4dfbeb1690a3f3a323ebb73df816e5ef2466dc98fa4a4 20220529 novo protocol flashloan price oracle manipulation lost 279 bnb testing sh forge test contract src test novo exp sol vvv link reference http www panewslab com zh hk articledetails f40t9xb4 html http bscscan com tx 0xc346adf14e5082e6df5aeae650f3d7f606d7e08247c2b856510766b4dfcdc57f http bscscan com address 0xa0787daad6062349f63b7c228cbfd5d8a3db08f1 code 20220517 apecoin ape flashloan lost 1 1 million buy vault token redeems nfts claim airdrop 60k ape supply ' pool testing sh forge test contract src test bayc apecoin exp vvv link reference http etherscan io tx 0xeb8c3bebed11e2e4fcd30cbfc2fb3c55c4ca166003c7f7d319e78eaab9747098 http news coincu com 73892 flashloan attack ape airdrop claim 1 1 million ape token 20220508 fortress loan malicious proposal price oracle manipulation lost 1 048 1 eth 400 000 dai 3 00m testing sh forge test contract src test fortressloans exp sol vvv link reference http twitter com fortressloans status 1523495202115051520 http twitter com peckshieldalert status 1523489670323404800 http twitter com blocksecteam status 1523530484877209600 http www certik com resource blog k6ezopnk5kdde7rfhbzgw fortress loan exploit 20220430 rari capital fei protocol flashloan attack reentrancy lost 80 million testing sh forge test contract src test rari exp sol vv link reference http certik medium com fei protocol incident analysis 8527440696cc http twitter com peckshield status 1520369315698016256 http etherscan io tx 0xab486012f21be741c9e674ffda227e30518e8a1e37a5f1d58d0b0d41f6e76530 20220424 wiener doge flashloan lost 78 bnb testing sh forge test contract src test wdoge exp sol vvv link reference http coinyuppie com four combination hacker analysis attack wiener doge last kilometer medamon pidao project http twitter com solid group 1 status 1519034573354676224 http bscscan com tx 0x4f2005e3815c15d1a9abd8588dd1464769a00414a6b7adcbfd75a5331d378e1d 20220428 deus dao flashloan price oracle manipulation lost 13 million testing sh forge test contract src test deus exp sol vv link reference http twitter com peckshield status 1519531866109317121 http ftmscan com tx 0xe374495036fac18aa5b1a497a17e70f256c4d3d416dd1408c026f3f5c70a3a9c 20220421 zeed finance reward distribution flaw lost 1 million testing sh forge test contract src test zeed exp sol vv link reference http www cryptotimes io hacker leaf 1m self destruct zeed protocol exploit http medium com zeedcommunity solution yeed lp pool attack a120c53948cd http bscscan com tx 0x0507476234193a9a5c7ae2c47e4c4b833a7c3923cefc6fd7667b72f3ca3fa83a 20220416 beanstalkfarms dao flashloan lost 182 million testing sh forge test contract src test beanstalk exp sol vv link reference http rekt news beanstalk rekt http medium com uno beanstalk farm hacked total damage 182 million b699dd3e5c8 http twitter com peckshield status 1515680335769456640 http etherscan io tx 0x68cdec0ac76454c3b0f7af0b8a3895db00adf6daaf3b50a99716858c4fa54c6f http etherscan io tx 0xcd314668aaa9bbfebaf1a0bd2b6553d01dd58899c508d4729fa7311dc5d33ad7 20220415 rikkei finance access control price oracle manipulation lost 1 1 million 2671 bnb testing sh forge test contract src test rikkei exp sol vv link reference http blockmagnates com rikkei finance hack http knownseclab com news 625e865cf1c544005a4bdaf2 http rikkeifinance medium com rikkei finance incident investigation report b5b1745b0155 http bscscan com tx 0x93a9b022df260f1953420cd3e18789e7d1e095459e36fe2eb534918ed1687492 20220412 elephantmoney flashloan price oracle manipulation lost 11 2 million 27 416 46 bnb testing sh forge test contract src test elephant money poc sol vv link reference http medium com elephant money reserve exploit 52fd36ccc7e8 http twitter com peckshield status 1514023036596330496 http twitter com blocksecteam status 1513966074357698563 http bscscan com tx 0xec317deb2f3efdc1dbf7ed5d3902cdf2c33ae512151646383a8cf8cbcd3d4577 20220409 gymnetwork flashloan token migrate flaw lost 1 327 wbnb testing sh forge test contract src test gym 1 exp sol vv link reference http twitter com blocksecteam status 1512832398643265537 http medium com beosin com beosin analysis attack gymdefi e5a23bfd93fe http bscscan com tx 0xa5b0246f2f8d238bb56c0ddb500b04bbe0c30db650e06a41e00b6a0fff11a7e5 20220327 revest finance reentrancy lost 11 2 million testing sh forge test contract src test revest exp sol vv link reference http blocksecteam medium com revest finance vulnerability entrancy 1609957b742f http etherscan io tx 0xe0b0c2672b760bef4e2851e91c69c8c0ad135c6987bbf1f43f5846d89e691428 20220326 auctus lost 726 k testing sh forge test contract src test auctus exp sol vv link reference http twitter com auctusoptions status 1508647849663291398 cxt hhwwjiczpbzo5e8paaaa http etherscan io tx 0x2e7d7e7a6eb157b98974c8687fbd848d0158d37edc1302ea08ee5ddb376befea 20220322 compoundtusdsweeptokenbypass testing sh forge test contract src test compoundtusd exp sol vv link reference http blog openzeppelin com compound tusd integration issue retrospective 20220321 onering finance flashloan price oracle manipulation lost 1 45 million testing sh forge test contract src test onering exp sol vv link reference http medium com oneringfinance onering finance exploit post mortem oshare hack 602a529db99b http ftmscan com tx 0xca8dd33850e29cf138c8382e17a19e77d7331b57c7a8451648788bbb26a70145 20220320 li fi bridge lost 570k testing sh forge test contract src test lifi exp sol vvvv link reference http blog li fi 20th march exploit e9e1c5c03eb9 http twitter com lifiprotocol status 1505738407938387971 http etherscan io tx 0x4b4143cbe7f5475029cf23d6dcbb56856366d91794426f2e33819b9b1aac4e96 20220313 paraluni flashloan reentrancy lost 1 7 million testing sh forge test contract src test paraluni exp sol vv link reference http halborn com explained paraluni hack march 2022 http twitter com peckshield status 1502815435498176514 http mobile twitter com paraluni status 1502951606202994694 http zhuanlan zhihu com p 517535530 http bscscan com tx 0x70f367b9420ac2654a5223cc311c7f9c361736a39fd4e7dff9ed1b85bab7ad54 20220309 fantasm finance business logic mint lost 2 6 million testing sh forge test contract src test fantasm exp sol vv link reference http twitter com fantasm finance status 1501569232881995785 http medium com quillhash fantom based protocol fantasm suffers 2 6m exploit 32de8191ccd4 http etherscan io tx 0xacfcaa8e1c482148f9f2d592c78ca7a27934c7333dab31978ed0aef333a28ab6 20220305 bacon protocol reentrancy lost 1 million testing sh forge test contract src test bacon exp sol vv link reference http twitter com peckshield status 1500105933128495108 http etherscan io tx 0xacfcaa8e1c482148f9f2d592c78ca7a27934c7333dab31978ed0aef333a28ab6 http etherscan io tx 0x7d2296bcb936aa5e2397ddf8ccba59f54a178c3901666b49291d880369dbcf31 20220303 treasuredao zero fee lost 1 million testing sh forge test contract src test treasuredao exp sol vv link reference http slowmist medium com analysis treasuredao zero fee exploit 73791f4b9c14 http arbiscan io tx 0x82a5ff772c186fb3f62bf9a8461aeadd8ea0904025c3330a4d247822ff34bc02 20220214 buildfinance dao lost 470k testing sh forge test contract src test buildf exp sol vv link reference http twitter com finance build status 1493223190071554049 http www cryptotimes io build finance suffered hostile governance takeover lost 470k http etherscan io tx 0x544e5849b71b98393f41d641683586d0b519c46a2eeac9bcb351917f40258a85 20220208 sandbox land access control testing sh forge test contract src test sandbox exp sol vv link reference http slowmist medium com vulnerability behind sandbox land migration 2abf68933170 http etherscan io tx 0x34516ee081c221d8576939f68aee71e002dd5557180d45194209d6692241f7b1 20220118 multichain anyswap insufficient token validation lost 1 4 million testing sh forge test contract src test anyswap poc sol vv link reference http medium com zengo without permit multichains exploit explained 8417e8c1639b http twitter com peckshieldalert status 1483363515411099651 http etherscan io tx 0xe50ed602bd916fc304d53c4fed236698b71691a95774ff0aeeb74b699c6227f7 20211221 visor finance reentrancy lost 8 2 million testing sh forge test contract src test visor exp sol vv link reference http beosin medium com two vulnerability one function analysis visor finance exploit a15735e2492 http twitter com gammastrategies status 1473306777131405314 http etherscan io tx 0x69272d8c84d67d1da2f6425b339192fa472898dce936f24818fda415c1c1ff3f 20211218 grim finance flashloan reentrancy lost 30 million testing sh forge test contract src test grim exp sol vv link reference http cointelegraph com news defi protocol grim finance lost 30m 5x reentrancy hack http rekt news grim finance rekt http ftmscan com tx 0x19315e5b150d0a83e797203bb9c957ec1fa8a6f404f4f761d970cb29a74a5dd6 20211130 monox finance price manipulation lost 31 million testing sh forge test contract src test mono exp sol vv link reference http slowmist medium com detailed analysis 31 million monox protocol hack 574d8c44a9c8 http knownseclab com news 61a986811992da0067558749 http www tuoniaox com news p 521076 html http polygonscan com tx 0x5a03b9c03eedcb9ec6e70c6841eaa4976a732d050a6218969e39483bb3004d5d http etherscan io tx 0x9f14d093a2349de08f02fc0fb018dadb449351d0cdb7d0738ff69cc6fef5f299 20210916 sushiswap miso lost fund returned testing sh forge test contract src test sushimiso exp sol vv link reference http www paradigm xyz 2021 08 two right might make wrong http etherscan io tx 0x78d6355703507f88f2090eb780d245b0ab26bf470eabdb004761cedf3b1cda44 20210830 cream finance flashloan attack reentrancy lost 18 million testing sh forge test contract src test cream exp sol vv link reference http twitter com peckshield status 1432249600002478081 http etherscan io tx 0xa9a1b8ea288eb9ad315088f17f7c7386b9989c95b4d13c81b69d5ddad7ffe61e http slowmist medium com cream hacked analysis u 130 million hacked 95c9410320ca 20210817 xsurge flashloan attack reentrancy lost 5 million testing sh forge test contract src test xsurge exp sol vv link reference http beosin medium com sweet blow fb0a5e08657d http medium com knownsec blockchain lab knownsec blockchain lab comprehensive analysis xsurge attack c83d238fbc55 http bscscan com tx 0x8c93d6e5d6b3ec7478b4195123a696dbc82a3441be090e048fe4b33a242ef09d 20210607 88mph nft access control testing sh forge test contract src test 88mph exp sol vv link reference http medium com immunefi 88mph function initialization bug fix postmortem c3a2282894d3 20210308 dodo flashloan attack lost 700 000 testing sh forge test contract src test dodo flashloan exp sol vv link reference http blog dodoex io dodo pool incident postmortem little help friend 327e66872d42 http halborn com explained dodo dex hack march 2021 http etherscan io tx 0x395675b56370a9f5fe8b32badfa80043f5291443bd6c8273900476880fb5221e 20201229 cover protocol testing sh forge test contract src test cover exp sol vv link reference http mudit blog cover protocol hack analysis token minted exploit http slowmist medium com brief analysis cover protocol hacked event 700d747b309c 20201026 harvest finance flashloan attack lost 33 8 million testing sh forge test contract src test harvestfinance exp sol vv link reference http mudit blog cover protocol hack analysis token minted exploit http slowmist medium com brief analysis cover protocol hacked event 700d747b309c http rekt news harvest finance rekt http etherscan io tx 0x35f8d2f572fceaac9288e5d462117850ef2694786992a8c3f6d02612277b0877 20171106 parity ' accidentally killed ' lost 514k eth testing sh forge test contract src test parity kill sol vvvv link reference http elementus io blog icos affected parity wallet bug http etherscan io tx 0x05f71e1b2cb4f03e547739db15d080fd30c989eda04d37ce6264c5686e0722c9 http etherscan io tx 0x47f7cff7a5e671884629c93b368cb18f58a993f4b19c2a53a8662e3f1482f690 view gas report foundry also ha ability report http book getfoundry sh forge gas report gas used per function call mimic behavior hardhat gas reporter http github com cgewecke hardhat gas reporter generally speaking gas cost per function call high likelihood success reduced gas optimization important activity done smart contract developer every poc repository produce gas report like bash forge test gas report contract contract vvv example let u find gas used audius poc 20220723 audius storage collision malicious proposal execution bash forge test gas report contract src test audius exp sol vvv demo audiuspocgasreport gif bug reproduce moved defivulnlabs http github com sunweb3sec defivulnlabs flashloan testing moved defilabs http github com sunweb3sec defilabs code referred rivaill w2ning repo rewrote foundry version
/zeriontech/defi-sdk,Solidity,http ibb co 7qcqkpd medium final png build status http github com zeriontech defi sdk workflow build badge svg http github com zeriontech defi sdk action query workflow build test status http github com zeriontech defi sdk workflow test badge svg http github com zeriontech defi sdk action query workflow test coverage status http github com zeriontech defi sdk workflow coverage badge svg http github com zeriontech defi sdk action query workflow coverage lint status http github com zeriontech defi sdk workflow lint badge svg http github com zeriontech defi sdk action query workflow lint license http badgen net github license zeriontech defi sdk http www gnu org license lgpl 3 0 en html discord http badgen net badge zerion zerion icon discord label discord http zerion io discord twitter follow http badgen net twitter follow zerion io icon twitter http twitter com intent follow screen name zerion io defi sdk open source system smart contract allows execute trade erc20 token track balance different protocol question defi sdk feel free reach u discord server http zerion io discord http ibb co rc54sjl defisdk png feature trade erc20 token l2 chain using single router contract see swap erc20 token using defi sdk router doc router md query user asset debt deposited defi protocol like maker aave dydx etc much debt doe 0xdead beef compound get underlying component complex derivative erc20 token much cusdc v eth doe ethmacoapy interact multiple defi protocol unified way see interact defi sdk contract doc interacting md trading feature trade erc20 token two type amount absolute usual amount relative percentage balance three type permit function approving token transaction eip2612 dai like yearn like two type swap fixed input amount fixed output amount two type fee protocol fee managed router contract owner possibility one time discount requiring signature address special role marketplace fee managed transaction creator relayed transaction requiring eip712 signature user add adapter read interactive adapter maintained master http github com zeriontech defi sdk tree master interactive update http github com zeriontech defi sdk tree interactive update branch defi sdk repo respectively full instruction add custom adapter may found doc doc creating adapter index md question want add adapter zerion reach u discord server http zerion io discord address deployed contract ' address available doc address md security vulnerability discover security vulnerability within defi sdk please send u e mail inbox zerion io security vulnerability promptly addressed project us slither http github com crytic slither security analysis previously installed e g via pip http pypi org project pip run npm run slither run security check dev note use hardhat http github com nomicfoundation hardhat run test extremely fast also use truffle dashboard http trufflesuite com doc truffle getting started using truffle dashboard secure deployment installation run npm install install dependency deployment run npm run truffle dashboard start truffle dashboard run npm run deploy router truffle dashboard deploy router contract sign deployment transaction browser http localhost 24012 fill address newly deployed contract script deployment j instruction applies simplecaller contract deploy sc truffle dashboard command filling fee beneficiary chosen network script deployment j initialize router truffle dashboard command may run run npm run verify verify contract block explorer respective block explorer api key filled env file required step see hardhat config file detail etherscan field config variable us api key testing coverage router contract dependency fully covered test run npm run test npm run coverage run test coverage respectively infura api key filled env file required step report gas filled env file enables disables gas report test linting run npm run lint j solidity linters run npm run lint eslint npm run lint solhint run linter j solidity separately serve doc npm run doc serve license smart contract released gnu lgplv3 license
/BeamMW/beam,C++,build status http travis ci org beammw beam svg branch master http travis ci org beammw beam build http github com beammw beam action workflow build yml badge svg http github com beammw beam action workflow build yml codeql http github com beammw beam action workflow codeql analysis yml badge svg http github com beammw beam action workflow codeql analysis yml alt text http s3 eu central 1 amazonaws com website storage beam mw medium homepage scc scc 1 jpg beam logo welcome beam beam next generation scalable confidential cryptocurrency based elegant innovative mimblewimble protocol http doc beam mw mimblewimble pdf download latest version http beam mw downloads eager electron 5 1 9898 join community telegram english http beamprivacy http beam ru http beamchina http beamjp follow beam twitter http twitter com beamprivacy medium http medium com beam mw reddit http www reddit com r beamprivacy gitter http gitter im beamprivacy lobby bitcointalk http bitcointalk org index php topic 5052151 0 youtube http www youtube com channel ucddqbnfspwibf4f8onejm w contribute read contribution guide http github com beammw beam wiki contribution guideline get started get beam binary http beam mw downloads build source please use ' mainnet ' branch peer eu node mainnet beam mw 8100 u node mainnet beam mw 8100 ap node mainnet beam mw 8100 ap hk node mainnet beam mw 8100 latest documentation http documentation beam mw build source building instruction http github com beammw beam wiki build thing make beam special include user complete control privacy user decides information available party complete control personal data accordance applicable law confidentiality without penalty beam confidential transaction cause bloating blockchain avoiding excessive computational overhead penalty performance scalability completely concealing transaction value trusted setup required block mined using equihash proof work algorithm limited emission using periodic halving address stored blockchain information whatsoever either sender receiver transaction stored blockchain superior scalability compact blockchain size using cut feature mimblewimble make beam blockchain order magnitude smaller blockchain implementation beam support many transaction type escrow transaction time locked transaction atomic swap premine ico backed treasury emitted every block first five year implemented scratch c roadmap see beam roadmap 2020 http beam mw community project list beam related project created community member tested beam team beam pay http github com vsnation beampay payment processor allows easy integration online store beam wallet java api http github com beamfan java beam api java library beam cryptocurrency wallet api current development status mainnet january 3rd 2019 fully functional wallet key generator storage supporting secure confidential online transaction full node transaction block validation full utxo state management equihash miner periodic mining difficulty adjustment batch bulletproofs efficient non interactive zero knowledge range proof batch mode graphical wallet application linux mac window platform offline transaction using secure bb system chainwork sublinear blockchain validation based flyclient idea loi luu benedikt bunz mahdi zamani compact history using cut agile atom february 2019 payment exchange apis mining pool apis lightning network position paper bright boson 2 0 march 2019 payment proof ultra fast sync android mobile wallet clear cathode 3 0 july 2019 pow change beamhash ii atomic swap cli support relative time lock laser beam support double doppler 4 0 december 2019 atomic swap desktop wallet support sync mechanism improvement eager electron 5 0 may 2020 confidential asset one side payment utxo unlinking using lelantus mw
/AcalaNetwork/Acala,Rust,p align center img src http acala subdao com logo acala logo horizontal gradient png width 460 p div align center github workflow status http img shield io github workflow status acalanetwork acala test label action logo github http github com acalanetwork acala action query workflow 3atest github tag latest date http img shield io github v tag acalanetwork acala http github com acalanetwork acala tag substrate version http img shield io badge substrate 2 0 0 brightgreen logo parity 20substrate http substrate io codecov http codecov io gh acalanetwork acala branch master graph badge svg token erf7edgafw http codecov io gh acalanetwork acala license http img shield io github license acalanetwork acala color green http github com acalanetwork acala blob master license br twitter url http img shield io twitter url style social url http 3a 2f 2ftwitter com 2facalanetwork http twitter com acalanetwork discord http img shield io badge discord gray logo discord http www acala gg telegram http img shield io badge telegram gray logo telegram http acalaofficial discourse http img shield io badge forum gray logo discourse http acala discourse group medium http img shield io badge medium gray logo medium http medium com acalanetwork div toc 1 introduction 1 introduction 2 overview 2 overview 2 1 ausd honzon stablecoin protocol 21 ausd honzon stablecoin protocol 2 2 acala network economic model 22 acala network economic model 3 building 3 building 4 run 4 run 5 development 5 development 6 bug bounty bug 6 bug bounty bug toc 1 introduction project initiated facilitated acala foundation acala foundation nurture application field decentralized finance protocol particularly serve open finance infrastructure stable currency staking liquidity acala foundation founded laminar http laminar one polkawallet http polkawallet io participant contributor polkadot ecosystem acala foundation welcome industry participant progress 2 overview significance cross chain communication blockchain like internet intranet polkadot empowers network public consortium private blockchains enables true interoperability economic transactional scalability cross chain stablecoin system 1 create sound stable currency low cost borderless value transfer chain network 2 enable commerical lending predictable risk 3 serve building block open finance service acala dollar stablecoin ticker ausd multi collateral backed cryptocurrency value stable u dollar aka 1 1 ausd usd soft peg completely decentralized created using asset blockchains connected polkadot network including ethereum bitcoin collateral used chain digital jurisdiction within polkadot network application chain nature essential acala network eventually become community owned economic model sustain development participation polkadot network well ensure stability security following section provide high level overview following topic ausd honzon stablecoin protocol economic model initial parachain offering 2 1 ausd honzon stablecoin protocol every ausd backed excess crypto asset mechanism known collateralized debt position cdp together set incentive supply demand balancing risk management mechanism core component honzon stablecoin protocol acala network stability ausd ensured cdp mechanism design inspired first decentralized stablecoin project makerdao ha become defi building block ethereum ecosystem besides honzon protocol enables many unique feature native multi asset support cross chain stablecoin capability automatic liquidation increase responsiveness risk pluggable oracle auction house improve modularity name honzon protocol contains following component multi collateral type collateral adapter oracle price auction auction manager cdp cdp engine emergency shutdown governance honzon interface component note section still work progress update information progress refer github wiki http github com acalanetwork acala wiki detail 2 2 acala network economic model acala network token aca feature following utility value aca token accrue increased usage network revenue stability fee liquidation penalty 1 network utility token pay network fee stability fee 2 governance token vote risk parameter network change proposal 3 economic capital case liquidation without sufficient collateral enable cross chain functionality acala network connect polkadot one three way 1 parathread pay go connection polkadot 2 parachain permanent connection given period 3 independent chain bridge back polkadot becoming parachain would ideal option bootstrap acala network maximize benefit reach chain application polkadot network secure parachain slot acala network require supportive dot holder lock dot bid slot collectively process known initial parachain offering ipo aca token offered reward participated ipo compensation opportunity cost staking dot note section still work progress update information progress refer token economy working paper http github com acalanetwork acala white paper detail 3 building note connect mandala tc6 network want version 0 7 10 code repo mandala tc6 acala repo master branch http github com acalanetwork acala tree master install rust bash curl http sh rustup r ssf sh may need additional dependency checkout substrate io http doc substrate io v3 getting started installation info bash sudo apt get install git clang curl libssl dev llvm libudev dev make sure submodule recurse set true make life submodule easier bash git config global submodule recurse true install required tool install git hook bash make init build mandala tc native code bash make build full 4 run start development chain bash make run 5 development type check bash make check purge old chain data bash make purge purge old chain data run bash make restart update orml bash make update note build command makefile designed local development purpose hence skip wasm build enabled speed build time use execution native run use native execution mode 6 bug bounty bug bug bounty program includes chain vulnerability lead significant economic loss instability network check detail bug bounty submit vulnerability http immunefi com bounty acala 7 bench bot bench bot take care syncing branch master generating weightinfos module runtime generate module weight comment pr bench runtime module module name e module currency bench bot benchmarking generate weight r file push change branch generate runtime weight comment pr bench runtime runtime module name e bench runtime mandala module currency generate weight module pas module name e bench runtime mandala bench bot benchmarking generate weight file push change branch bench acala evm comment pr bench evm benchmark acala evm bench bot generate precompile weight gastoweight ratio 8 migration testing runtime modify storage test data migration upgrade runtime try testing runtime try runtime karura bash use live chain run migration test save state snapshot file snapshot bin add module name specify module cargo run feature karura runtime feature try runtime try runtime chain karura dev wasm execution compiled runtime upgrade live uri w karura api onfinality io 443 public w 0x9def608d5674f6d16574f53849218fe13d80ec1042ef7c2d4de7d4c50abab806 tmp snapshot bin use state snapshot run migration test cargo run feature karura runtime feature try runtime try runtime chain karura dev wasm execution compiled runtime upgrade snap tmp snapshot bin try runtime acala bash cargo run feature acala runtime feature try runtime try runtime chain acala dev runtime upgrade live uri w acala polkadot api onfinality io 443 public w tmp snapshot bin cargo run feature acala runtime feature try runtime try runtime chain acala dev runtime upgrade snap tmp snapshot bin 9 run local testnet parachain launch http github com open web3 stack parachain launch build relaychain parachain local testnet develop bash cd launch install dependency yarn generate docker compose yml genesis note docker image latest need download manually e g docker pull acala karura node latest karura testnet yarn start generate karura bifrost testnet yarn start generate config karura bifrost yml start relaychain parachain cd output note regenerate output directory need rebuild image docker compose build list container docker p track container log docker log f container id container name stop container docker compose stop remove container docker compose rm note want clear data restart need clear volume remove volume docker volume l docker volume rm volume name prune volume docker volume prune 10 run local testnet polkadot launch http github com paritytech polkadot launch copy acala related launch json polkadot launch bash polkadot launch home polkadot launch cp script polkadot launch json polkadot launch build polkadot bash git clone n http github com paritytech polkadot git cargo build release cp target release polkadot tmp polkadot build karura bash make build karura release launch polkadot parachain json config file polkadot launch bash polkadot launch acala launch json ' json file run karura parachain script polkadot launch acala statemine json run karura statemine script polkadot launch acala bifrost json run karura bifrost 11 build release release artifact optimized build config used config take around 2x 3x longer build produce optimized binary run bash make build release 12 setup local evm test enviroment set basic local network need two thing running locally node eth rpc adapter setup service respective terminal free use favorite evm tool locally ex hardhat setting local node compile node source code bash make run note may need normal block production certain workflow use command run node without instant sealing flag bash cargo run feature mandala runtime dev lruntime debug run node using docker bash docker run rm p 9944 9944 p 9933 9933 ghcr io acalanetwork mandala node master dev w external rpc port 9933 rpc external rpc cors rpc method unsafe tmp levm debug instant sealing setting eth rpc adapter bash npx acala network eth rpc adapter l 1 note usecase need eth getlogs rpc call need subquery instance index local chain case follow tutorial found local network tutorial http evmdocs acala network network network setup local development network
/uniswap-python/uniswap-python,Python,p align center img width 350 height 350 src http user image githubusercontent com 9441295 107376524 d96b5880 6a9e 11eb 9eba 094c439cfb07 png p uniswap python github action http github com shanefontaine uniswap python workflow test badge svg http github com shanefontaine uniswap python action codecov http codecov io gh uniswap python uniswap python branch master graph badge svg token vhazhhlfx8 http codecov io gh uniswap python uniswap python downloads http pepy tech badge uniswap python http pepy tech project uniswap python license http img shield io badge license mit blue svg http raw githubusercontent com shanefontaine uniswap python master license pypi http img shield io pypi v uniswap python http pypi org project uniswap python typechecking mypy http www mypy lang org static mypy badge svg http mypy lang org code style black http img shield io badge code 20style black 000000 svg http github com ambv black github repo star http img shield io github star uniswap python uniswap python style social http github com uniswap python uniswap python stargazer twitter follow http img shield io twitter follow uniswappython label follow style social http twitter com uniswappython unofficial python client uniswap http uniswap io documentation available http uniswap python com functionality simple use python wrapper available contract function variable basic cli get price token metadata simple parsing data returned uniswap contract support uniswap v3 v0 5 0 including beta support arbitrum optimism deployment v0 5 4 uniswap v2 v0 4 0 uniswap v1 deprecated various fork untested work honeyswap xdai pancakeswap bsc sushiswap mainnet getting started see getting started guide http uniswap python com getting started html documentation testing unit test development using pytest framework contribution welcome test run fork main net using ganache cli need install npm install g ganache cli running test run full test suite project directory set provider env variable mainnet provider run sh poetry install export provider url provider e g http mainnet infura io v3 make test poetry run pytest capture ' capture output verbose support continued work support u gitcoin grant http gitcoin co grant 2631 uniswap python author shane fontaine http twitter com shanecoin erik bjareholt http twitter com erikbjare liquid 8 http github com liquid 8 others http github com uniswap python uniswap python graph contributor want help development funding see 181 http github com uniswap python uniswap python discussion 181 changelog 0 5 4 added use gas estimation instead fixed gas limit support arbitrum added use estimate gas constructor argument used testing added constant basic support arbitrum optimism polygon fantom untested incomplete changelog 0 5 3 incomplete changelog 0 5 2 incomplete changelog 0 5 1 updated dependency fixed minor typing issue 0 5 0 basic support uniswap v3 added new method get price input get price output made lot previously public method private added documentation site removed en support wa probably broken begin 0 4 6 bug fix update bleach package 3 1 4 3 3 0 0 4 5 bug fix use eth instead en 0 4 4 general add new logo uniswap v2 bug fix invalid balance check 25 bug fix fixed error passing weth token 0 4 3 allow kwargs approved decorator 0 4 2 add note uniswap v2 support 0 4 1 update changelog pypi clean 0 4 0 huge thank erik bjareholt http github com erikbjare adding uniswap v2 support well change version added support uniswap v2 handle arbitrary token address using factory contract switched setup py pyproject toml poetry switched travis github action ci work repo need set secret mainnet provider use infura running test local fork mainnet using ganache cli started fixture fixed test make trade make trade output added type annotation entire codebase check mypy ci formatted entire codebase black moved stuff around basic import becomes uniswap import uniswap instead uniswap uniswap import uniswapwrapper fixed misc bug 0 3 3 provide token input address instead name 0 3 2 add ability transfer token trade add test new functionality 0 3 1 add test type trade 0 3 0 add ability make type trade add example readme 0 2 1 add liquidity test 0 2 0 add liquidity erc20 pool method 0 1 1 major readme update 0 1 0 add market endpoint add test market endpoint
/makerdao/dss,Solidity,multi collateral dai build status http github com makerdao ds action workflow github workflow test yaml badge svg branch master repository contains core smart contract code multi collateral dai high level description system assuming familiarity basic economic mechanic described whitepaper additional documentation ds also documented wiki http github com makerdao ds wiki developing md http github com makerdao ds blob master developing md design consideration token agnostic system ' care implementation external token operate entirely independently system provided authority assigns initial collateral user system provides price data verifiable designed bottom amenable formal verification core cdp balance database make external call contains precision loss e division modular multi contract core system made adaptable changing requirement allows implementation e g auction liquidation cdp risk condition altered live system allows addition novel collateral type e g whitelisting collateral adapter wrapper collateral foundation dai dai creation possible without many potential candidate collateral whether native ether erc20 token fungible token standard like erc777 non fungible token number financial instrument token wrapper one solution need standardise collateral behaviour dai inconsistent decimal transfer semantics reason wrapping example weth token erc20 wrapper around native ether mcd abstract different token behaviour away behind adapter adapter manipulate single core system function slip modifies user collateral balance adapter small well defined contract adapter powerful carefully vetted mkr holder example given join sol note adapter connection given collateral type concrete chain token represents multitude adapter collateral type different requirement example eth collateral could adapter native ether also weth dai token fundamental state dai balance given balance core vat dai sometimes referred given number way implement dai used outside system different trade offs fundamentally dai token directly fungible core kovan deployment dai represented erc20 dstoken interacting cdps auction user must exit system gain balance token used oasis etc possible multiple fungible dai token allowing adoption new token standard need careful consideration ux perspective notion canonical token address becoming increasingly restrictive future cross chain communication scalable sidechains likely lead proliferation multiple dai token user core could exit plasma sidechain ethereum shard different blockchain entirely via e g cosmos hub price feed price feed crucial part dai system code assumes working price feed value pushed contract specifically price required highest acceptable quantity cdp dai debt per unit collateral liquidation auction important difference scd mcd switch fixed price sell offs auction mean liquidating collateral auction implemented simple expect liquidation occur fixed size lot say 10 000 eth settlement another important difference scd mcd handling system debt system debt debt ha taken risky cdps scd covered diluting collateral pool via peth mechanism mcd covered dilution external token namely mkr collateral liquidation dilution occurs auction flop using fixed size lot order reduce collateral intensity large cdp liquidation mkr dilution delayed configurable period e g 1 week similarly system surplus handled auction flap sell dai surplus return highest bidder mkr authentication contract use simple multi owner authentication system contract totally trust multiple contract call function configure expected modification state via interface used governance layer
/ApeWorX/ape,Python,quick start prerequisite latest release ape requires linux macos python 3 8 later window 1 install window subsystem linux wsl http doc microsoft com en u window wsl install 2 choose ubuntu 20 04 linux distribution python 3 8 later check python command entering bash python3 version installation 3 way install ape pipx pip docker via pipx install pipx via installation instruction http pypa github io pipx install ape via bash pipx install eth ape install w apeworx recommended plugins via bash pipx install eth ape recommended plugins via pip suggestion create virtual environment using virtualenv venv may skip creating virtual environment know ' require one use case virtualenv http pypi org project virtualenv venv http doc python org 3 library venv html note macos user advise installing virtual environment avoid interfering level site package virtualenv via homebrew macos option install via homebrew brew http formula brew sh formula virtualenv create virtual environment folder bash python3 venv path new environment source venv folder bin activate note path venv real path see name venv desktop name path deactivate virtual environment bash deactivate python version later 3 7 2 created virtual environment let ' install ape install latest release via pip http pypi org project pip bash pip install u pip pip install eth ape install w apeworx recommended plugins via bash pip install eth ape recommended plugins via docker please visit dockerhub http hub docker com repository docker apeworx ape detail using ape docker bash docker run volume home ape root ape volume home vvm root vvm volume home solcx root solcx volume pwd root project workdir root project apeworx ape compile docker uninstall process need remove file generated docker bash sudo rm rf solcx sudo rm rf vvm overview depth information project please look project http doc apeworx io ape stable userguides project html explains purpose folder use effectively use ape init initialize ape project folder visit userguide project http doc apeworx io ape stable userguides project html information bash ape init environment variable environment variable used help connect file ecosystem outside apeworx please setup environment variable applicable follow latest instruction 3rd party example use case bash used ape infura plugin export web3 infura project id infura project id used ape alchemy plugin export web3 alchemy api key alchemy key visit ape alchemy http github com apeworx ape alchemy blob main readme md quick usage visit ape infura http github com apeworx ape infura readme ape console ape provides ipython interactive console useful pre defined local interact project interact deployed contract local environment start opening console bash ape console network mainnet fork hardhat visit ape console http doc apeworx io ape stable command console html learn use ape console quick usage use h list command bash ape h import generate account bash ape account import acc0 prompt private key ape account generate acc1 list account list command bash ape account list add plugins may need vyper bash ape plugins list ape plugins install vyper ape plugins list note plugin doe originate apeworx github organization http github com apeworx q ape type get warning installing 3rd class plugins plugin official plugin ha chance trustworthy thus mindful plugins install additionally plugins come bundled ape core installation cannot removed considered part ape core software interact compile contract example project contract interact bash git clone http github com brownie mix vyper token mix git cd vyper token mix compile contract within contract directory project size option display size contract bash ape compile size provide argument pytest would ape test command bash ape test k test one thing connect ipython session favorite provider bash ape console network ethereum mainnet infura want run specific file script directory using ape run command bash command run file named deploy script directory ape run deploy logging enable debug logging run command verbosity flag using debug value bash ape run verbosity debug use ape package outside script ape run command well work registered network provider blockchain ecosystem like ethereum python ape import network network ethereum mainnet use provider infura work infura provider work test account local account wip popular hardware wallet python ape import account account 0 load index account example eth load en address account load alias load alias also work contract type python ape import project c deploy project mycontract c viewthis make web3 call c dothat sender make web3 transaction assert c myevent 1 caller search web3 event
/RabbyHub/Rabby,TypeScript,rabby daviddm http img shield io david rabbyhub rabby http david dm org rabbyhub rabby rabby open source browser plugin defi ecosystem providing user better use secure multi chain experience install download latest rabby http github com rabbyhub rabby release latest guideline integrating rabby wallet help dapp developer support integrate rabby wallet easily recommend use integration solution ha almost development cost doe introduce uncertainty problem dapp connects extension wallet usually work way 1 extension wallet integrate ethereum object dapp page ' loading 2 dapp look ethereum object determine extension wallet installed 3 ethereum object detected following interaction dapp extension wallet realized ethereum object 4 ethereum object detected dapp ask user download new extension wallet problem many dapps wrongly display detected ethereum object metamask display connect metamask button default brings lot confusion user web3 wallet inject ethereum object solution recommend solve problem simple modification follows 1 connection page display connection button metamask rabby wallet ethereum object detected two button basically function user click interact ethereum object perform connection operation two button used display brand ' logo help user understand operation path 2 ethereum object detected suggest user go download extension wallet provide download link metamask rabby wallet solution doe involve change actual business logic simple ui adjustment doe introduce uncertainty rather low cost refer http debank com http debank com final display effect potential issue according solution user using rabby wallet click connect metamask button still interact rabby wallet vice versa might little bit weird however issue rare scenario unlikely happen user likely click interact extension wallet ' installed even happens ' real problem user ' perspective please ' hesitate reach u doubt contribution install dependency 1 install node j version 14 later 2 install yarn npm install g yarn 3 run yarn install dependency development run yarn build dev develop file watching development log see request sent dapp website console mode notification close focus lost run yarn build pro build production package ' dist folder language 1 copy raw locale en message json raw locale localcode message json find locale code http en wikipedia org wiki language localisation language tag code http en wikipedia org wiki language localisation language tag code 2 replace content message property locale language attention create new key make sure key without space duplicate exist case insensitive architecture architecture doc architecture png extension ' script 4 script live different context background j async request encrypt thing user ' keyrings password wallet personal preference data stored chrome local storage ha 2 main controller 1 walletcontroller expose method background window script access method runtime getbackgroundpage e g ui j 2 providercontroller handle request page dapp request content script injected document start share dom dapp use broadcastchannel tap pageprovider main purpose inject pageprovider j pas message pageprovider j background j pageprovider j script injected dapp ' context content script mount ethereum window dapp use window ethereum request send message content script broadcastchannel wait ' response content script send message background runtime connect background receive message use providercontroller handle request keep message channel sessionsevice later communicate ui ' used 3 page share j code template html different respective purpose 1 notification html triggered dapp request user ' permission 2 index html opened browser tab better user interaction experience 3 popup html user click extension icon right address bar popup show thanks thanks contribution metamask team browser extension wallet community rabby use fork make rabby better
/yearn/yearn-vaults,Python,yearn vault contract please read familiar specification specification md repository set smart contract used yearn vault contains requirement code deployment script test necessary core protocol including inheritable template strategy use solidity based strategy interact yearn vault contract used create simple way generate high risk adjusted return depositor various asset via best class lending protocol liquidity pool community made yield farming strategy ethereum requirement run project need python 3 8 local development environment node j 10 x development environment ganache brownie local environment setup see instruction install http eth brownie readthedocs io en stable install html local env variable etherscan api http etherscan io apis infura http infura io etherscan token web3 infura project id local ganache environment installed npm install g ganache cli 6 12 1 installation use tool project provides please pull repository github install dependency follows need yarn http yarnpkg com lang en doc install installed recommended use python virtual environment bash git clone http github com yearn yearn vault cd yearn vault yarn install lock file compile smart contract bash brownie compile add size see contract compiled size extended instruction guide cover installation mac linux window window using window subsystem linux command code block meant executed mac linux terminal window command prompt 0 note window user want use window subsystem linux wsl go ahead install http doc microsoft com en u window wsl install win10 ' installed launch chosen linux subsystem follow linux instruction within terminal except vscode vscode installation happens window linux subsystem 1 install vscode http code visualstudio com doc setup setup overview 2 install vscode extension solidity http marketplace visualstudio com item itemname juanblanco solidity python http marketplace visualstudio com item itemname python python vyper http marketplace visualstudio com item itemname tintinweb vscode vyper ' using wsl wait install solidity vyper ' later step install remote wsl http marketplace visualstudio com item itemname vscode remote remote wsl 3 install python 3 8 http www python org downloads release python 380 linux refer distro documentation mac installer http www python org ftp python 3 8 0 python 3 8 0 macosx10 9 pkg window installer http www python org ftp python 3 8 0 python 3 8 0 amd64 exe 4 setup brownie http github com eth brownie brownie python3 pip install user pipx note get error effect python3 installed recognized run python version return back something like python 3 8 x replace python3 python python command instruction python3 pipx ensurepath pipx install eth brownie ' window pure window wsl ' need install c build tool http visualstudio microsoft com visual cpp build tool executing 5 install node j 10 x linux mac via package manager http nodejs org en download package manager window x64 installer http nodejs org dist latest v12 x node v12 13 0 x64 msi 10 x downloads http nodejs org dist latest v12 x 6 install ganache http github com trufflesuite ganache cli npm install g ganache cli 6 12 1 7 install yarn http classic yarnpkg com en doc install 8 install black http pypi org project black python3 pip install black 9 setup account etherscan http etherscan io create api key set etherscan token environment variable key ' value window setx etherscan token yourtokenvalue mac linux echo export etherscan token yourtokenvalue sudo tee bash profile 10 setup account infura http infura io create api key set web3 infura project id environment variable key ' value window setx web3 infura project id yourtokenvalue mac linux echo export web3 infura project id yourtokenvalue sudo tee bash profile 11 close open terminal proceeding get new environment variable value 12 ' git yet go set http doc github com en free pro team latest github getting started github set git 13 pull repository github install dependency git clone http github com yearn yearn vault cd yearn vault yarn install lock file may install ignore engine try get error 14 compile smart contract brownie compile 15 brownie test test functional n auto everything worked ' see something like following console http imgur com wgsmcry png 16 launch vscode ' window using wsl type code launch vscode point install solidity compiler http marketplace visualstudio com item itemname juanblanco solidity sure install wsl install vyper http marketplace visualstudio com item itemname tintinweb vscode vyper well wsl open one sol file right click code click soldity change workspace compiler version remote change 0 6 12 alternatively go file preference setting youre using wsl go remote wsl tab otherwise choose workspace tab search solidity copy paste v0 6 12 commit 27d51765 solidity compile using remote version textbox set black linter ' see toast notification bottom right asking linting choose black ' see go file preference setting ' using wsl go remote wsl tab otherwise choose workspace tab search python formatting provider choose black search format save check box 17 lastly ' want add vscode global gitignore use terminal mac linux use git bash window touch gitignore global use favorite editor add vscode ignore file using vi vi gitignore global copy vscode hit p vi type x hit enter git config global core excludesfile gitignore global 18 congratulation ' set use git pull stay date change made source code test ' familiar brownie see quickstart http eth brownie readthedocs io en stable quickstart html fastest way run test bash brownie test test functional n auto run test coverage gas profiling bash brownie test test functional coverage gas n auto brief explanation flag provides iterative display test executed n auto parallelize test letting brownie choose degree parallelization gas generates gas profile report coverage generates test coverage report formatting check linter rule json sol file bash yarn lint check fix linter error json sol file bash yarn lint fix check linter rule py file bash black check fix linter error py file bash black security security concern please visit bug bounty http github com yearn yearn vault security policy documentation read yearn finance documentation webpage http doc yearn finance discussion question covered doc please visit discord server http discord yearn finance
/gauss314/defi,Python,br defi open source tool downloads http pepy tech badge defi http pepy tech project defi license http img shield io badge license mit blue svg http github com gauss314 defi blob main license txt twitter http img shield io twitter follow johngalt www color blue style flat square http twitter com johngalt www update http img shield io github last commit gauss314 defi http github com gauss314 defi update http img shield io pypi pyversions defi color green label python http pypi org project defi br get started instalation instalation general tool impermanent loss simple calculation impermanent loss compare buy hold staking farming buyhold v stake farming strategy complete list defi protocol tvl volume defi protocol example listing top20 defi dapps tvl top 20 dapps tvl chain example show historical tvl one protocol historical tvl coingecko api api endpoint coingecko api get id list coingecko id list live price coingecko get price coin diferent currency exchange price coin coingecko get main exchange coin token historial price por coin coingecko historical price coin simulate farming strategy coingecko farming simulate pancakeswap api token price real time pancakeswap get token price real time pair liquidity volume pancakeswap get pair liquidity get data real time one token pancakeswap get token info get data real time one pair pancakeswap get pair info simulate invest lp considering impermanent loss 3d graph pancakeswap simulate lp invest br br get started br instalation sh pip install defi br impermanent loss python import defi defi tool dft impermanent loss stablecoin 20 return token dft ilo 0 8 0 62 python import defi defi tool dft impermanent loss stablecoin 60 return token dft ilo 1 6 numerical true 0 027 2 7 br buy hold v stake farming strategy python import defi defi tool dft exercise get return 20 day assuming token stablecoin token b perform 150 individual staking pool 0 01 0 05 daily liquidity pool farming reward 0 2 daily earn fee day 0 01 dft compare day 20 var 0 var b 150 rw pool 0 01 rw pool b 0 05 rw pool ab 0 2 fee ab 0 01 json buy hold 75 00 stake 75 60 farm 71 96 best stake br defi protocol python import defi defi tool dft metadata df dft getprotocol ' uniswap ' metadata json id 1 name uniswap address 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984 symbol uni url http info uniswap org description fully decentralized protocol automated liquidity provision ethereum r n chain ethereum logo none audit 2 audit note none gecko id uniswap cmcid 7083 category dexes chain ethereum module uniswap j br top 20 dapps tvl chain python import defi defi tool dft import matplotlib pyplot plt df dft getprotocols fig ax plt subplots figsize 12 6 n 50 quantity show top df sort value ' tvl ' ascending false head n chain top groupby ' chain ' size index value tolist chain chain filtro top loc top chain chain ax bar filtro index filtro tvl label chain ax set title f ' top n dapp tvl groupby dapp main chain ' fontsize 14 ax grid alpha 0 5 plt legend plt xticks rotation 90 plt show img src image top20 dapps png width 600 br historical tvl python import defi defi tool dft import panda pd exchange ' pancakeswap ' ' curve ' ' makerdao ' ' uniswap ' ' compound ' ' aave ' ' sushiswap ' ' anchor ' hist dft getprotocol exchange 1 exchange exchange df pd concat hist axis 1 df column exchange df plot figsize 12 6 img src image main dapps png width 600 br coingecko api endpoint available example dft getgeckoids coingecko first 5000 id &#9; dft geckoprice bitcoin ethereum usd eur brl &#9; &#9; coingecko quote &#9; dft geckolist page 1 per page 250 &#9; &#9; full coingecko cyptocurrency list &#9; dft geckomarkets ethereum &#9; &#9; top 100 liquidity market price eth coin &#9; dft geckohistorical ' cardano ' &#9; &#9; full history containing price market cap volume dft farmsimulate ' huobi token ' ' tether ' apr 45 simulate farming strategy apr 45 coingecko id list python import defi defi tool dft id dft getgeckoids id 10 pre ' bitcoin ' ' ethereum ' ' binancecoin ' ' tether ' ' solana ' ' cardano ' ' ripple ' ' polkadot ' ' shiba inu ' ' dogecoin ' pre coingecko get price coin diferent currency python import defi defi tool dft dft geckoprice bitcoin ethereum usd eur brl json ethereum usd 2149 85 eur 1807 58 brl 12208 77 bitcoin usd 60188 eur 50606 brl 341802 br coingecko get main exchange coin token python import defi defi tool dft df dft geckomarkets ethereum print df info return top 100 ethereum quote volume text index 100 entry idcm ftx u data column total 9 column column non null count dtype 0 base 100 non null object 1 target 100 non null object 2 last 100 non null float64 3 volume 100 non null float64 4 spread 100 non null float64 5 timestamp 100 non null datetime64 n utc 6 volume usd 100 non null float64 7 price usd 100 non null float64 8 trust score 100 non null object dtypes datetime64 n utc 1 float64 5 object 3 memory usage 7 8 kb br coingecko historical price coin python import defi defi tool dft df dft geckohistorical ' cardano ' print df pre price market cap total volume date 2017 10 18 00 00 00 0 026845 6 960214e 08 2 351678e 06 2017 10 19 00 00 00 0 026830 6 956220e 08 2 815156e 06 2017 10 20 00 00 00 0 030300 7 855800e 08 8 883473e 06 2017 10 21 00 00 00 0 028588 7 412021e 08 5 308857e 06 2017 10 22 00 00 00 0 027796 7 206698e 08 2 901876e 06 2021 04 13 00 00 00 1 319790 4 223483e 10 5 005258e 09 2021 04 14 00 00 00 1 422447 4 565529e 10 5 693373e 09 2021 04 15 00 00 00 1 456105 4 676570e 10 8 920293e 09 2021 04 16 00 00 00 1 478071 4 730118e 10 5 151595e 09 2021 04 17 03 47 55 1 433489 4 595961e 10 5 152747e 09 1278 row x 3 column pre coingecko farming simulate python import defi defi tool dft pair ' huobi token ' ' tether ' apr 45 dft farmsimulate pair apr start ' 2021 01 01 ' pre downloading huobi token downloading tether ' token 1 ' ' huobi token ' ' token 2 ' ' tether ' ' start ' ' 2021 01 01 ' ' fixed apr ' ' 45 ' ' buy hold ' ' 68 90 ' ' impermanent loss ' ' 8 66 ' ' farming reward ' ' 75 45 ' ' farming reward il ' ' 153 02 ' pre img src image simulate png width 800 br pancakeswap get token price real time python import defi defi tool dft df dft pcstokens print df text name symbol price price bnb updated 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82 pancakeswap token cake 24 0636 0 0450 2021 04 17 04 29 08 332 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c wrapped bnb wbnb 534 2575 1 0000 2021 04 17 04 29 08 332 0x0f9e4d49f25de22c2202af916b681fbb3790497b perlin prl 0 2091 0 0004 2021 04 17 04 29 08 332 0xe9e7cea3dedca5984780bafc599bd69add087d56 busd token busd 1 0000 0 0019 2021 04 17 04 29 08 332 0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c btcb token btcb 62166 5517 116 3604 2021 04 17 04 29 08 332 0xb6802c06a441ba63624751c53c7c0708b75f06ec finalmoon finalmoon 0 0651 0 0001 2021 04 17 04 29 08 332 0x2cf0da1eb4165d73156ce1e32450e4a0e1c1791b fairunicorn funi 0 0000 0 0000 2021 04 17 04 29 08 332 0x5ced26185f82b07e1516d0b013c54ccbd252a4ad peach peach 0 1130 0 0002 2021 04 17 04 29 08 332 0x2ba64efb7a4ec8983e22a49c81fa216ac33f383a wrapped bgl wbgl 0 1000 0 0002 2021 04 17 04 29 08 332 0x019be1796178516e060072004f267b59a49a0801 pepper finance pepr 0 1819 0 0003 2021 04 17 04 29 08 332 854 row x 5 column br pancakeswap get pair liquidity python import defi defi tool dft pair dft pcspairs df false print pair json updated 1618645355351 data 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c &#9; pair address 0xa527a61703d82139f8a06bc30097cc9caa2df5a6 &#9; base name pancakeswap token &#9; base symbol cake &#9; base address 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82 &#9; quote name wrapped bnb &#9; quote symbol wbnb &#9; quote address 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c &#9; price 0 04503969270521829587 &#9; base volume 5473068 824002232134035221 &#9; quote volume 239997 1228321299572591638 &#9; liquidity 1076144814 0632013827775993748053 &#9; liquidity bnb 2007551 221740467021401314 &#9; br pancakeswap get token info python import defi defi tool dft dft pcstokeninfo ' cake ' json name pancakeswap token symbol cake price 24 03353223898417117634582253598019 price bnb 0 04503467915973850237292527741402623 br pancakeswap get pair info python import defi defi tool dft dft pcspairinfo ' cake ' ' bnb ' json pair address 0xa527a61703d82139f8a06bc30097cc9caa2df5a6 base name pancakeswap token base symbol cake base address 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82 quote name wrapped bnb quote symbol wbnb quote address 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c price 0 04503969270521829587 base volume 5473068 824002232134035221 quote volume 239997 1228321299572591638 liquidity 1076144814 0632013827775993748053 liquidity bnb 2007551 221740467021401314 br pancakeswap simulate lp invest python import defi defi tool dft dft value f ilo dft ilo simulate ' cake ' ' bnb ' value 1000 base pct chg 50 quote pct chg 25 img src image imp loss 3d png width 600 br twitter user johngalt www http twitter com johngalt www
/horizontalsystems/unstoppable-wallet-android,Kotlin,unstoppable wallet dream world world private property untouchable market access unconditional obsession led u engineer crypto wallet equally open life online forever unconditionally protects asset fully peer peer work without centrally managed server ' stopped blocked taken approach enables wallet operate anywhere remain censorship resistant user control money http unstoppable money http unstoppable money download img src http fdroid gitlab io artwork badge get png alt get f droid height 80 http f droid org package io horizontalsystems bankwallet img src http play google com intl en u badge image generic en play badge png alt get google play height 80 http play google com store apps detail id io horizontalsystems bankwallet source code http github com horizontalsystems unstoppable wallet android http github com horizontalsystems unstoppable wallet android license wallet open source available term mit lincense
/yearn/yearn-protocol,Solidity,yearn protocol github license http img shield io badge license agpl blue svg http github com iearn finance yearn protocol blob master license lint http github com iearn finance yearn protocol workflow lint badge svg test http github com iearn finance yearn protocol workflow test badge svg yearn protocol set ethereum smart contract focused creating simple way generate high risk adjusted return depositor various asset via best class lending protocol liquidity pool community made yield farming strategy ethereum getting started repo please read andre ' overview blog post http medium com iearn yearn finance v2 af2c6a6a3613 describing yearn finance work delegated vault blog post http medium com iearn delegated vault explained fa81f1c3fce2 explaining delegated vault work yeth vault explained http medium com iearn yeth vault explained c29d6b93a371 describing yeth vault work requirement run project need python 3 8 local development environment node j 10 x development environment ganache brownie local environment setup see instruction eth brownie http github com eth brownie brownie local env variable etherscan api http etherscan io apis infura http infura io etherscan token web3 infura project id local ganache environment installed npm install g ganache cli 6 11 installation run yearn protocol pull repository github install dependency need yarn http yarnpkg com lang en doc install installed bash git clone http github com iearn finance yearn protocol cd yearn protocol yarn install lock file compile smart contract bash brownie compile test run test bash brownie test run test coverage bash brownie test coverage formatting check linter rule json sol file bash yarn lint check fix linter error json sol file bash yarn lint fix check linter rule py file bash black check config black config toml fix linter error py file bash black config black config toml security security concern please visit bug bounty http github com iearn finance yearn protocol blob develop security md documentation read yearn finance documentation webpage http doc yearn finance discussion question covered doc please visit discord server http discord yearn finance
/adrianmcli/eth95,TypeScript,circle ci http badgen net circleci github adrianmcli eth95 http circleci com gh adrianmcli eth95 npm version http badgen net npm v eth95 http www npmjs com package eth95 mit licensed http badgen net badge license mit blue screenshot asset screenshot png instant retro ui calling contract function want see online eth95 dev http eth95 dev ' example dai http eth95 dev network 1 address 0x6b175474e89094c44da98b954eedeac495271d0f direct link http eth95 dev network 1 address 0x6b175474e89094c44da98b954eedeac495271d0f feature call contract function long abi connect via localhost 8545 metamask custom node url watch artifact folder automatically update ui encode call proxy call behalf set custom signer custom contract address built log easy visibility install work dapp project truffle buidler etc long point json artifact even ' project run manually add abis artifact 1 install shell npm install g eth95 2 run path artifact folder shell eth95 build contract work eth95 run express server fired frontend packaged parcel http parceljs org served localhost 3000 define port flag p 1234 server watch directory passed change artifact send change frontend via websockets note also add contract want abi artifact add contract button contact question comment please file issue
/MoralisWeb3/unity-web3-game-kit,C#,unity web3 game kit web3 game kit fastest way connect build game web3 provides single workflow building high performance dapps fully compatible favourite platform kit built moralis web3 unity sdk http github com moralisweb3 web3 unity sdk moralis http moralis io utm source github utm medium readme utm campaign ethereum boilerplate please check official documentation moralis http doc moralis io user functionality moralis demo gifs moralis unity boilerplate 2 gif star u kit help build dapps faster please star project every star make u happy city sunrise community best thing moralis super active community ready help time help need help need help setting kit question ' hesitate write community forum check asap forum link http forum moralis io ethereum unity3d boilerplate question 4553 discord become moralis mage join moralis dao discord http moralis io mage feedback give feedback ask question make feature request either use forum http forum moralis io game dev http discordapp com channel 819584798443569182 918645175562145822 discord thread bug logged using github issue system report bug simply open new issue quick start warning please read updating project 1 2 0 release represents major reworking project includes namespace structural change addition functionality change please cautious migrating previous version 1 2 0 see changelog changelog md information install dependency unity hub http unity3d com get unity download visual studio http visualstudio microsoft com unity supported development platform 1 using unity 2020 3 higher create new game project 2 download install latest package add package gifs moralis package setup gif 3 enter moralis server information setup wizard insertvalues gifs moralis server setup gif 4 open run demo scene kit ha tested following unity3d release 1 2020 3 34f1 2 2021 3 3f1 table content moralis web3 unity boilerplate moralis web3 unity boilerplate quick start quick start table content table content moralis web3 unity sdk moralis web3 unity sdk client client authentication authentication query query live query live query custom object custom object user object user object authentication data authentication data hostmanifestdata hostmanifestdata serverconnectiondata server connectiondata web3 web3 webgl webgl ethereum web3api method ethereum web3api method web3api note web3api note chain chain account account getnativebalance getnativebalance getnfts getnfts getnftsforcontract getnftsforcontract getnfttransfers getnfttransfers gettokenbalances gettokenbalances gettokentransfers gettokentransfers gettransactions gettransactions defi defi getpairaddress getpairaddress getpairreserves getpairreserves native native getblock getblock getcontractevents getcontractevents getdatetobloc getdatetobloc getlogsbyaddress getlogsbyaddress getnfttransfersbyblock getnfttransfersbyblock gettransaction gettransaction runcontractfunction runcontractfunction resolve resolve resolvedomain resolvedomain storage erc20balance token erc20transfers getalltokenids getalltokenids getcontractnfttransfers getcontractnfttransfers getnftlowestprice getnftlowestprice getnftmetadata getnftmetadata getnftowners getnftowners getnfttrades getnfttrades getnfttransfersfromtoblock getnfttransfersfromtoblock gettokenadresstransfers gettokenaddrestransfers gettokenallowance gettokenallowance gettokenidmetadata gettokenidmetadata gettokenidowners gettokenidowners gettokenmetadata gettokenmetadata gettokenmetadatabysymbol gettokenmetadatabysymbol gettokenprice gettokenprice getwallettokenidtransfers getwallettokenidtransfers searchnfts searchnfts solana api method solana api method solana account solana account solana balance solana balance solana getnfts solana getnfts solana getportfolio solana getportfolio solana getspltokens solana getspltokens solana nft solana nft solana getnftmetadata solana getnftmetadata helpful tool helpful tool moralis web3 unity sdk moralis web3 unity sdk provides easy use method make integrating application moralis snap find net sdk work much javascript use unity3d added additional quick start object integrating moralis web3 unity sdk unity3d application example follow provide example use moralis web3 unity sdk using provided moralis unity3d quick start tool client moralis web3 unity sdk client provides way easily interact moralis database web3api unity3d provided singleton wrapper named moralis make easy initialize moralisclient access anywhere unity3d application sdk client initialization provided authenticationkit prefab make authenticating moralis crypto wallet snap drag prefab package io moralis web3 unity sdk runtime kit authenticationkit prefab authentication screen need get started authenticationkit prefab needed anywhere else game initialize client use authenticationkit create completely custom authentication process wish initialize moralis place time choosing moralisclient moralis new moralisclient new serverconnectiondata applicationid application id serveruri serer url new web3apiclient note new web3apiclient parameter optional included using functionality moralis web3api rest service unity3d client initialization initialize client moralis initialize moralisapplicationid moralisserveruri hostmanifestdata note hostmanifestdata parameter see hostmanifestdata hostmanifestdata required unity3d application note see user object userobject information initializing moralis client custom user object authentication authentication handled similar manner sdk unity3d direct manner interact securely wallet net application moralis web3 unity sdk interacts wallet loosely coupled manner unity3d boilerplate application example provide use wallet connect facilitate interaction wallet basic moralis authentication moralisuser user await moralis loginasync authentication data note see authentication data authentication data information authenticationdata parameter wallet connect authentication example public async void walletconnect onconnectedeventsession wcsessiondata wcsessiondata extract wallet address wallet connect session data object string address wcsessiondata account 0 tolower string appid moralis dappid long servertime 0 retrieve server time moralis server message signature dictionary string object servertimeresponse await moralis cloud runasync dictionary string object getservertime new dictionary string object servertimeresponse null servertimeresponse containskey datetime long tryparse servertimeresponse datetime tostring servertime debug logerror failed retrieve server time moralis server string signmessage moralis authentication n nid appid servertime string signature null signature await walletconnect session ethpersonalsign address signmessage create moralis auth data message signing response dictionary string object authdata new dictionary string object id address signature signature data signmessage attempt login user moralisuser user await moralis loginasync authdata wcsessiondata chainid value webgl authentication example string address web3gl account tolower string appid moralis dappid long servertime 0 retrieve server time moralis server message signature dictionary string object servertimeresponse await moralis cloud runasync dictionary string object getservertime new dictionary string object servertimeresponse null servertimeresponse containskey datetime long tryparse servertimeresponse datetime tostring servertime debug logerror failed retrieve server time moralis server string signmessage moralis authentication n nid appid servertime string signature null signature await web3gl sign signmessage create moralis auth data message signing response dictionary string object authdata new dictionary string object id address signature signature data signmessage get chain id int chainid web3gl chainid attempt login user moralisuser user await moralis loginasync authdata chainid query query provide way retrieve information moralis database following example return hero record ' level ' equal 3 query example moralisquery hero q await moralis query hero q q whereequalto level 3 ienumerable hero result await q findasync moralis web3 unity sdk support query method j sdk example creating ' ' ' ' ' ' query example take base query construct ' ' query return record level greater equal ' 3 ' hero ' name ' zuko ' furthermore sort order result set hero ' strength descending compound query example moralisquery playerdata q await moralis query playerdata moralisquery playerdata q1 q wheregreaterthanorequalto level 2 moralisquery playerdata q2 q whereequalto name zuko moralisquery playerdata q3 moralis buildorquery playerdata new moralisquery playerdata q1 q2 orderbydescending strength ienumerable playerdata result await q3 findasync live query live query query include subscription provide update whenever data targeted query updated live query subscription emits event indicate state client change data information please see doc http doc moralis io moralis server database live query following example use query example query live query example since unity3d mainly used create game unity3d apps generaly life cycle event usually need worray normal program created special live query wrapper object automatically handle subscription pause unpause close etc example show create subscription using wrapper class moralisquery hero q moralis query hero moralislivequerycontroller addsubscription hero hero q callback note callback parameter optional please see callback explained live query callback explained bellow moralislivequerycontroller singleton object available anywhere within application first parameter hero key use retrieve subscription check status example remove subscription using moralislivequerycontroller object need worry properly closing disposing subscription wrapper object handle live query callback explained callback used handle event emitted subscription set callback directly subscription however usually cleaner separate main code facilitate included moralislivequerycallbacks object optional object passed subscription example moralislivequerycallbacks use moralislivequerycallbacks hero callback new moralislivequerycallbacks hero callback onconnectedevent debug log connection established callback onsubscribedevent requestid debug log subscription requestid created callback onunsubscribedevent requestid debug log unsubscribed requestid callback onerrorevent errormessage em debug log error code em code msg em error requestid em requestid callback oncreateevent item requestid debug log created hero name item name level item level strength item strength warcry item warcry callback onupdateevent item requestid debug log updated hero name item name level item level strength item strength warcry item warcry callback ondeleteevent item requestid debug log hero item name ha defeated removed roll callback ongeneralmessageevent text debug log websocket message text custom object creating object support npc character game object simple creating plain old c object poco stipulation custom object must child moralis object create instance object made via moralis create method associate extension object enable perform moralis function save directly object note inclusion base object name important proper database handling sample object public class hero moralisobject public int strength get set public int level get set public string name get set public string warcry get set public list string bag get set public hero base hero bag new list string create save instance object hero h moralis create hero h name zuko h strength 50 h level 15 h warcry honor h bag add leather armor h bag add crown prince hair clip await h saveasync user object user object contains information currently logged user upon successful login user stored local storage logout allows user log login session expires logout need create instance moralisuser reason example signup username password manner moralisuser user moralis create moralisuser using method instead default constructor moralisuser ensures moralisuser object created associated moralis instance mean several method object work problerly saveasync signupasync etc create custom user object must inherit moralisuser since c typed language compiler must know type used compile time due since moralisuser integral internal function moralis web3 unity sdk create custom user object must initialize moralis client using custom user object step use moralis client usual initialize moralis client custom user object moralisclient youruserobject moralis new moralisclient youruserobject new serverconnectiondata applicationid application id serveruri serer url new web3apiclient note unity3d need make change moralis initialize object also need replace moralisuser object elsewhere boilerplate code warning make replacement file moralisdtonet folder authentication data authentication data dictionary string string object contains information required moralis authenticate user minimum authentication data dictionary must contain following entry 1 id wallet address wallet used sign message 2 signature signature data returned sign request sent wallet 3 data message wa sent wallet signed example dictionary string object authdata new dictionary string object id address tolower signature signature data data message hostmanifestdata unity3d application hostmanifestdata object used pas information moralis usually autogenerated window system variable since unity3d support multiple platform information always available serverconnectiondata description web3 web3 object used executing evm rpc call meaning transaction directly chain web3api ethereum web3api method efficient web3 call web3api doe support state change transaction web3 object doe allow state change transaction change web3 support nethereum http nethereum com web3 object exposed moralis developer use web3 object directly important used web3 object must initialized unfortunetly cannot done connection wallet established private void initializeweb3 moralis setupweb3 summary must referenced walletconnect game object summary param name session param public void walletconnectsessionestablished walletconnectunitysession session initializeweb3 make web3 call easier included tool first evmcontractmanager object currently available webgl provides easy way set contract reflected across several chain contract andits function easily retrieved code via moralis setup contract instance use insertcontractinstance moralis insertcontractinstance reward gameawardcontractabi mumbai 0x05af21b57d2e378f90106b229e717dc96c7bb5e2 example contract key reward created using contract abi json main chain contract address contract chain live example please see mainmenuscript c file calling moralis addcontractchainaddress contract key chain id contract address create multiple chain specific instance contract using abi originally added contract key retrieve nethereum contract instance call contract c moralis evmcontractinstance contract key chain id retrieve nethereum contract function instance function f moralis evmcontractfunctioninstance contract key chain id function name call function parameter parameter object par new object 0 string jsonresult await f callasync par call function parameter object par string 2 string jsonresult await f callasync par call function parameter specify gas value string playeraddress 0x37bd48252f4dce15c7147ea82b31978a00750f81 object par string 2 nethereum hex hextypes hexbiginteger g new nethereum hex hextypes hexbiginteger 80 nethereum hex hextypes hexbiginteger wei new nethereum hex hextypes hexbiginteger 1000 string jsonresult await func callasync playeraddress new nethereum hex hextypes hexbiginteger 80 new nethereum hex hextypes hexbiginteger 1000 par call function varients see nethereum documentation http nethereum com execute transaction also call moralis sendevmtransactionasync moralis sendtransactionandwaitforreceiptasync function represent couple variant available nethereum contract function object webgl due way webgl work security reason doe support outbound call multi threading moralis web3 unity sdk depends heavily functionality switch build type webgl seemless important player setting change webgl template moralis webgl template file used webgl non webgl build use unity webgl pre processor statement seperate code used type build example part using statement tokenlistcontroller c file boilerplate example unity webgl webgl specific code else non webgl code endif loading external resource hood webgl load external resource similar javascript using ajax mean run cors issue client browser loading external resource prescribed method solve issue setting cors server side create proxy service part webgl solution example tokenlistcontroller c file show use moralis cloud function proxy loading external resource successfully display image token wallet example need create following cloud function moralis server 1 log moralis select expand server instance 2 click cloud function button 3 copy following code cloud function moralis cloud define loadresource async request const logger moralis cloud getlogger return await moralis cloud httprequest url request params url function httpresponse let resp status httpresponse status header httpresponse header data json stringify httpresponse buffer return resp function httpresponse error occurred logger error ' request failed response code ' httpresponse status return httpresponse &#9; field url 4 click save button ethereum web3api method web3api note complete moralis web3api schema including endpoint operation model found logging moralis server selecting web3 api use either moralis web3 unity sdk unity3d following using statement required chain use code snippet retrieve list evm chain supported moralis web3api list used populating dropdown list etc example list chainentry chain moralis supportedchains account code example demonstrating use moralis web3api account endpoint operation getnativebalance get native balance specific address address string required target address chain chainlist required chain query providerurl string optional web3 provider url user using local dev chain toblock string optional maximum block number get log example nativebalance balance await moralis web3api account getnativebalance address tolower chainlist eth debug log getnativebalance balance balance balance getnfts get nfts owned given address address string required target address chain chainlist required chain query format string optional format token id offset integer optional offset limit integer optional limit order string optional field order ordered ascending descending order specified fieldname1 order fieldname2 order example 1 name name asc name desc example 2 name symbol name asc symbol desc example nftownercollection nftcollection await moralis web3api account getnfts useraddress chainid nftcollection total 1 debug log user useraddress doe nfts chain chainid tostring else debug log nfts user useraddress foreach nftowner nft nftcollection result debug log tokenid nft tokenid name nft name balance nft amount getnftsforcontract get nfts owned given address address string required target address tokenaddress string required address contract chain chainlist required chain query format string optional format token id offset integer optional offset limit integer optional limit order string optional field order ordered ascending descending order specified fieldname1 order fieldname2 order example 1 name name asc name desc example 2 name symbol name asc symbol desc example nftownercollection resp await moralis web3api account getnftsforcontract address tolower 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth debug log getnftsforcontract count resp total getnfttransfers get transfer token matching given parameter address string required target address chain chainlist required chain query format string optional format token id direction string optional transfer direction offset integer optional offset limit integer optional limit order string optional field order ordered ascending descending order specified fieldname1 order fieldname2 order example 1 name name asc name desc example 2 name symbol name asc symbol desc example nfttransfercollection balance await moralis web3api account getnfttransfers address tolower chainlist eth debug log getnfttransfers match balance total gettokenbalances get token balance specific address address string required target address chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain toblock string optional maximum block number get log example list erc20tokenbalance balance await moralis web3api account gettokenbalances address tolower chainlist eth debug log gettokenbalances count balance count gettokentransfers get erc20 token transaction descending order based block number address string required target address chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs offset integer optional offset limit integer optional limit example erc20transactioncollection balance await moralis web3api account gettokentransfers address tolower chainlist eth debug log gettokentransfers count balance total gettransactions get native transaction descending order based block number address string required target address chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs offset integer optional offset limit integer optional limit example transactioncollection balance await moralis web3api account gettransactions address tolower chainlist eth debug log gettransactions count balance total defi code example demonstrating use moralis web3api defi endpoint operation getpairaddress fetch return pair data provided token0 token1 combination token0 token1 option interchangable ie different outcome token0 weth token1 usdt token0 usdt token1 weth exchange string required factory name address token exchange token0address string required token0 address token1address string required token1 address chain chainlist required chain query toblock string optional maximum block number get log todate string optional get log date format accepted momentjs example reservescollection nfttransers moralis web3api defi getpairaddress exchange token0address token1address chainlist eth getpairreserves get liquidity reserve given pair address pairaddress string required liquidity pair address chain chainlist required chain query toblock string optional maximum block number get log todate string optional get log date format accepted momentjs providerurl string optional web3 provider url user using local dev chain example reservescollection nfttransers moralis web3api defi getpairreserves pairaddress chainlist eth native code example demonstrating use moralis web3api native endpoint operation getblock get content block block hash blocknumberorhash string required block hash block number chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain example block block moralis web3api native getblock blocknumberorhash chainlist eth getcontractevents get event descending order based block number address string required target address topic string required topic event hash function abi object required abi event searched see example object format chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain providerurl string optional web3 provider url user using local dev chain fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs offset integer optional offset limit integer optional limit example event abi input parameter object inputparams new object 3 inputparams 0 new indexed true internaltype bytes32 name role type bytes32 inputparams 1 new indexed true internaltype address name account type address inputparams 2 new indexed true internaltype address name sender type address event abi object abi new anonymous false input inputparams name rolegranted type event list logevent logevents await moralis web3api native getcontractevents 0x698d7d745b7f5d8ef4fdb59ceb660050b3599ac3 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d abi chainlist mumbai debug log contract function returned logevents count event getdatetoblock get closest block provided date data string required unix date miliseconds datestring format accepted momentjs chain chainlist required chain query providerurl string optional web3 provider url user using local dev chain example string blocknumberorhash 25509457 block block await moralis web3api native getblock blocknumberorhash chainid debug log getblock blocknumber block number transaction count block transactioncount getlogsbyaddress get log address address string required target address chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain blocknumber string optional block number fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs topic0 string optional topic1 string optional topic2 string optional topic3 string optional example logeventbyaddress logevents await moralis web3api native getlogsbyaddress useraddress chainid debug log getlogsbyaddress blocknumber logevents blocknumber transaction count logevents data getnfttransfersbyblock get nft transfer block number block hash blocknumberorhash string required block hash block number chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain example nfttransfercollection nfttransfers await moralis web3api native getnfttransfersbyblock 500000 chainid debug log getnfttransfersbyblock nfts returned nfttransfers result count gettransaction get content block transaction hash transactionhash string required transaction hash chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain example string transactionhash 0xe1ec2dd9964f4dc59b53dce083917abfb5ab5191a37cb1e21566969caa614fcd blocktransaction blocktransaction await moralis web3api native gettransaction transactionhash chainlist mumbai debug log block transaction blacknumber blocktransaction blocknumber address blocktransaction fromaddress runcontractfunction run given function contract abi return readonly data address string required target address abi object required abi function called see example format chain chainlist required chain query functionname string required function name target function subdomain string optional subdomain moralis server use use selecting local devchain chain providerurl string optional web3 provider url user using local dev chain example function abi input parameter object inputparams new object 1 inputparams 0 new internaltype uint256 name id type uint256 function abi output parameter object outputparams new object 1 outputparams 0 new internaltype string name type string function abi object abi new object 1 abi 0 new input inputparams name uri output outputparams statemutability view type function define request object runcontractdto rcd new runcontractdto abi abi params new id 15310200874782 string resp await moralis web3api native runcontractfunction 0x698d7d745b7f5d8ef4fdb59ceb660050b3599ac3 uri rcd chainlist mumbai debug log contract function returned resp resolve code example demonstrating use moralis web3api resolve endpoint operation resolvedomain resolve unstoppable domain return address domain string required domain resolved currency string optional currency query example resolve resp await moralis web3api resolve resolvedomain brad crypto debug log resolvedomain address resp address resolveaddress resolve eth address find en name address string required wallet address perform reverse lookup example en resp await moralis web3api resolve resolveaddress 0xd8da6bf26964af9d7eed9e03e53415d37aa96045 debug log resolveaddress name resp name storage code example demonstrating use moralis web3api storage endpoint operation uploadfolder resolve eth address find en name request list ipfsfilerequest required upload data example define file information ipfsfilerequest req new ipfsfilerequest &#9; path moralis logo jpg &#9; content ivborw0kggoaaaansuheugaaabgaaaaycayaaadgdz34aaaabhncsvqicagifahkiaaaaalwsflzaaaapgaaakyb3x3 multiple request sent via list define request list list ipfsfilerequest reqs new list ipfsfilerequest add request request list reqs add req list ipfsfile resp web3api storage uploadfolder reqs token code example demonstrating use moralis web3api token endpoint operation getalltokenids get data including metadata available token id given contract address address string required target address chain chainlist required chain query foramt string optional format token id offset integer optional offset limit integer optional limit order string optional order ascending descending based blocknumber nft wa minted allowed value asc desc example nftcollection resp await moralis web3api token getalltokenids 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth null 0 10 debug log getalltokenids returned resp total nfts getcontractnfttransfers get transfer token matching given parameter address string required target address chain chainlist required chain query foramt string optional format token id offset integer optional offset limit integer optional limit order string optional order ascending descending based blocknumber nft wa minted allowed value asc desc example nfttransfercollection resp await moralis web3api token getcontractnfttransfers 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth null 0 10 debug log getcontractnfttransfers returned resp total nft transfer entry getnftlowestprice get lowest price found nft token contract last x day trade paid eth address string required target address chain chainlist required chain query day integer optional offset providerurl string optional web3 provider url user using local dev chain marketplace string optional web3 marketplace get trade opensea supported moment example trade resp await moralis web3api token getnftlowestprice 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth 2000 debug log getnftlowestprice price resp price getnftmetadata get contract level metadata name symbol base token uri given contract address string required target address chain chainlist required chain query example nftcontractmetadata resp await moralis web3api token getnftmetadata 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth debug log getnftmetadata name resp name tokenaddress resp tokenaddress getnftowners get owner nft item within given contract collection address string required target address chain chainlist required chain query format string optional format token id offset integer optional offset limit integer optional limit order string optional order ascending descending based blocknumber nft wa minted allowed value asc desc example nftownercollection resp await moralis web3api token getnftowners 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth null 0 10 debug log getnftowners returned resp total nft owner record getnfttrades get nft trade given contract marketplace address string required target address chain chainlist required chain query fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs providerurl string optional web3 provider url user using local dev chain marketplace string optional web3 marketplace get trade opensea supported moment offset integer optional offset limit integer optional limit example tradecollection resp await moralis web3api token getnfttrades 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth null null null null null null 0 10 debug log getnfttrades returned resp total nft trade getnfttransfersfromtoblock get transfer token block number block number chain chainlist required chain query fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs format string optional format token id offset integer optional offset limit integer optional limit order string optional order ascending descending based blocknumber nft wa minted allowed value asc desc example nfttransfercollection resp await moralis web3api token getnfttransfersfromtoblock chainlist eth 99999 25999999 null null null 0 10 debug log getnfttransfersfromtoblock returned resp total nft transfer gettokenaddresstransfers get erc20 token contract transaction descending order based block number address string required target address chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs offset integer optional offset limit integer optional limit example erc20transactioncollection resp await moralis web3api token gettokenaddresstransfers 0x06012c8cf97bead5deae237070f9587f8e7a266d chainlist eth null null null null null 0 10 debug log gettokenaddresstransfers returned resp total transfer entry gettokenallowance get amount spender allowed withdraw spender address string required target address owneraddress string required target address spenderaddress string required target address chain chainlist required chain query providerurl string optional web3 provider url user using local dev chain example erc20allowance allowance moralis web3api token gettokenallowance address owneraddress spenderaddress chainlist eth gettokenidmetadata get data including metadata available given token id given contract address address string required target address tokenid string required id token chain chainlist required chain query foramt string optional format token id example nft resp await moralis web3api token gettokenidmetadata 0x06012c8cf97bead5deae237070f9587f8e7a266d 10 chainlist eth debug log gettokenidmetadata name resp name amount resp amount gettokenidowners get owner nft item within given contract collection address string required target address tokenid string required id token chain chainlist required chain query foramt string optional format token id offset integer optional offset limit integer optional limit order string optional order ascending descending based blocknumber nft wa minted allowed value asc desc example nftownercollection resp await moralis web3api token gettokenidowners 0x06012c8cf97bead5deae237070f9587f8e7a266d 10 chainlist eth null 0 10 debug log gettokenidowners returned resp total nfts gettokenmetadata return metadata name symbol decimal logo given token contract address address list string required target address chain chainlist required chain query subdomain string optional subdomain moralis server use use selecting local devchain chain providerurl string optional web3 provider url user using local dev chain example list string address new list string address add 0x6b175474e89094c44da98b954eedeac495271d0f list erc20metadata resp await moralis web3api token gettokenmetadata address chainlist eth debug log gettokenmetadata returned resp count entry gettokenmetadatabysymbol return metadata name symbol decimal logo given token contract address symbol list string required target address chain chainlist required symbol get metadata subdomain string optional subdomain moralis server use use selecting local devchain chain example list string symbol new list string symbol add dai list erc20metadata resp await moralis web3api token gettokenmetadatabysymbol symbol chainlist eth debug log gettokenmetadatabysymbol returned resp count entry gettokenprice return price nominated native token usd given token contract address address string required target address chain chainlist required chain query providerurl string optional web3 provider url user using local dev chain exchange string optional factory name address token exchange toblock string optional maximum block number get log example erc20price resp await moralis web3api token gettokenprice 0x6b175474e89094c44da98b954eedeac495271d0f chainlist eth debug log gettokenprice price resp usdprice usd getwallettokenidtransfers get transfer token matching given parameter address string required target address tokenid string required id token chain chainlist required chain query foramt string optional format token id offset integer optional offset limit integer optional limit order string optional order ascending descending based blocknumber nft wa minted allowed value asc desc example nfttransfercollection resp await moralis web3api token getwallettokenidtransfers 0x06012c8cf97bead5deae237070f9587f8e7a266d 10 chainlist eth null 0 10 debug log getwallettokenidtransfers returned resp total nfts searchnfts get nfts match given metadata search q string required search string chain chainlist required chain query foramt string optional format token id filter string optional field search match look entire metadata set value ' global ' better response time look specific field like name available value name description attribute global name description name attribute description attribute name description attribute fromblock string optional minimum block number get log toblock string optional maximum block number get log fromdate string optional date get log format accepted momentjs todate string optional get log date format accepted momentjs offset integer optional offset limit integer optional limit example nftmetadatacollection resp await moralis web3api token searchnfts ape chainlist eth null null null null null null 0 10 debug log searchnfts returned resp total nfts solana api method solana account solana balance nativebalance bal await moralis solanaapi account balance networktypes mainnet 6xu36wcxwoblx5rtsb58kmgajkvymmvqy4shxxenayae solana getnfts list splnft bal await moralis solanaapi account getnfts networktypes mainnet 6xu36wcxwoblx5rtsb58kmgajkvymmvqy4shxxenayae solana getportfolio portfolio bal await moralis solanaapi account getportfolio networktypes mainnet 6xu36wcxwoblx5rtsb58kmgajkvymmvqy4shxxenayae solana getspltokens list spltokenbalanace bal await moralis solanaapi account getspltokens networktypes mainnet 6xu36wcxwoblx5rtsb58kmgajkvymmvqy4shxxenayae solana nft solana getnftmetadata nftmetadata bal await moralis solanaapi nft getnftmetadata networktypes mainnet 6xu36wcxwoblx5rtsb58kmgajkvymmvqy4shxxenayae helpful tool 1 unity3d asset http assetstore unity com best place find unity3d asset range budget 2 gimp http www gimp org open source image editing tool 3 blender http www blender org open source tool creating 3d model animation texture everything else need game character object 4 maximo http www mixamo com free use registration animation humanoid rigged model
/horizontalsystems/unstoppable-wallet-ios,Swift,unstoppable wallet dream world world private property untouchable market access unconditional obsession led u engineer crypto wallet equally open life online forever unconditionally protects asset fully peer peer work without centrally managed server ' stopped blocked taken approach enables wallet operate anywhere remain censorship resistant user control money http unstoppable money http unstoppable money download http itunes apple com u app bank wallet id1447619907 l 1 mt 8 http itunes apple com u app bank wallet id1447619907 l 1 mt 8 installation 1 git clone git github com horizontalsystems unstoppable wallet io git 2 need development xcconfig file debug configuration production xcconfig file release unstoppablewallet unstoppablewallet configuration use sample configuration template xcconfig file 3 install zcash library dependency curl http sh rustup r ssf sh select default cargo install cargo lipo rustup target add aarch64 apple io x86 64 apple io brew install sourcery 4 open xcode run license wallet open source available term mit license
/paulrberg/prb-math,TypeScript,prbmath github action gha badge gha coverage status coverall badge coverall styled prettier prettier badge prettier license unlicense license badge license gha http github com paulrberg prb math action gha badge http github com paulrberg prb math action workflow integration yml badge svg coverall http coverall io github paulrberg prb math coverall badge http coverall io repos github paulrberg prb math badge svg branch main prettier http prettier io prettier badge http img shield io badge code style prettier ff69b4 svg license http unlicense org license badge http img shield io badge license unlicense blue svg smart contract library advanced fixed point math operates signed 59 18 decimal fixed point unsigned 60 18 decimal fixed point number name number format stem fact 59 60 digit integer part 18 decimal fractional part number bound minimum maximum value permitted solidity type int256 uint256 operates signed unsigned denary fixed point number 18 trailing decimal offer advanced math function like logarithm exponential power square root gas efficient still user friendly bakes overflow safe multiplication division reverts custom error instead reason string well documented via natspec comment thoroughly tested hardhat waffle created wanted fixed point math library time practical intuitive efficient looked abdkmath64x64 http github com abdk consulting abdk library solidity blob d8817cb600381319992d7caa038bf4faceb1097f abdkmath64x64 md fast ' like operates binary number limit precision int128 looked fixidity http github com cementdao fixidity operates denary number ha wide precision slow susceptible phantom overflow install yarn bash yarn add prb math npm bash npm install prb math usage prbmath come four flavor basic signed typed signed basic unsigned typed unsigned prbmathsd59x18 sol solidity spdx license identifier unlicense pragma solidity 0 8 4 import prb math contract prbmathsd59x18 sol contract signedconsumer using prbmathsd59x18 int256 function signedlog2 int256 x external pure return int256 result result x log2 notice calculates x y1e18 handling possible intermediary overflow dev try x type int256 max 5e17 function signedmul int256 x int256 external pure return int256 result result x mul dev assuming 1e18 100 1e16 1 function signedyield int256 principal int256 apr external pure return int256 result result principal mul apr prbmathsd59x18typed sol solidity spdx license identifier unlicense pragma solidity 0 8 4 import prb math contract prbmathsd59x18typed sol contract signedconsumertyped using prbmathsd59x18typed prbmath sd59x18 function signedlog2 int256 x external pure return int256 result prbmath sd59x18 memory xsd prbmath sd59x18 value x result xsd log2 value notice calculates x y1e18 handling possible intermediary overflow dev try x type int256 max 5e17 function signedmul int256 x int256 external pure return int256 result prbmath sd59x18 memory xsd prbmath sd59x18 value x prbmath sd59x18 memory ysd prbmath sd59x18 value result xsd mul ysd value dev assuming 1e18 100 1e16 1 function signedyield int256 principal int256 apr external pure return int256 result prbmath sd59x18 memory principalsd prbmath sd59x18 value principal prbmath sd59x18 memory aprsd prbmath sd59x18 value apr result principalsd mul aprsd value prbmathud60x18 sol solidity spdx license identifier unlicense pragma solidity 0 8 4 import prb math contract prbmathud60x18 sol contract unsignedconsumer using prbmathud60x18 uint256 dev note x must greater equal 1e18 lest result would negative negative number supported unsigned 60 18 decimal fixed point representation function unsignedlog2 uint256 x external pure return uint256 result result x log2 notice calculates x y1e18 handling possible intermediary overflow dev try x type uint256 max 5e17 function unsignedmul uint256 x uint256 external pure return uint256 result result x mul dev assuming 1e18 100 1e16 1 function unsignedyield uint256 principal uint256 apr external pure return uint256 result result principal mul apr prbmathud60x18typed sol solidity spdx license identifier unlicense pragma solidity 0 8 4 import prb math contract prbmathud60x18typed sol contract unsignedconsumertyped using prbmathud60x18typed prbmath ud60x18 function unsignedlog2 uint256 x external pure return uint256 result prbmath ud60x18 memory xud prbmath ud60x18 value x result xud log2 value notice calculates x y1e18 handling possible intermediary overflow dev try x type uint256 max 5e17 function unsignedmul uint256 x uint256 external pure return uint256 result prbmath ud60x18 memory xud prbmath ud60x18 value x prbmath ud60x18 memory yud prbmath ud60x18 value result xud mul yud value dev assuming 1e18 100 1e16 1 function unsignedyield uint256 principal uint256 apr external pure return uint256 result prbmath ud60x18 memory principalud prbmath ud60x18 value principal prbmath ud60x18 memory aprud prbmath ud60x18 value apr result principalud mul aprud value javascript sdk prbmath accompanied javascript sdk whatever function solidity library find replicated sdk exception fromuint touint use evm bn http github com paulrberg evm bn ' example calculate binary logarithm import type bignumber ethersproject bignumber import log2 prb math import frombn tobn evm bn async function const x bignumber tobn 16 const result bignumber log2 x console log result frombn result pro tip see sdk used test test contract prbmath gas efficiency typeless prbmath library faster abdkmath ab exp exp2 gm inv ln log2 conversely slower abdkmath avg div mul powu sqrt two technical reason prbmath lag behind abdkmath ' mul div function 1 prbmath operates 256 bit word size ha account possible intermediary overflow abdkmath operates 128 bit word size 2 prbmath round instead truncating certain case see listing 6 text article http accu org index php journal 1717 make slightly precise abdkmath come gas cost prbmath based v2 0 1 library sd59x18 min max avg ud60x18 min max avg ab 68 72 70 n n n n avg 57 57 57 avg 57 57 57 ceil 82 117 101 ceil 78 78 78 div 431 483 451 div 205 205 205 exp 38 2797 2263 exp 1874 2742 2244 exp2 63 2678 2104 exp2 1784 2652 2156 floor 82 117 101 floor 43 43 43 frac 23 23 23 frac 23 23 23 fromint 83 83 83 fromuint 49 49 49 gm 26 892 690 gm 26 893 691 inv 40 40 40 inv 40 40 40 ln 463 7306 4724 ln 419 6902 3814 log10 104 9074 4337 log10 503 8695 4571 log2 377 7241 4243 log2 330 6825 3426 mul 455 463 459 mul 219 275 247 pow 64 11338 8518 pow 64 10637 6635 powu 293 24745 5681 powu 83 24535 5471 sqrt 140 839 716 sqrt 114 846 710 toint 23 23 23 touint 23 23 23 prbmathtyped based v2 0 1 library sd59x18 min max avg ud60x18 min max avg ab 128 132 130 n n n n add 221 221 221 add 97 97 97 avg 120 120 120 avg 120 120 120 ceil 95 166 141 ceil 132 132 132 div 524 582 546 div 259 259 259 exp 82 3076 2617 exp 2086 2954 2456 exp2 110 2768 2233 exp2 1840 2708 2212 floor 95 171 143 floor 97 97 97 fromint 118 118 118 fromuint 84 84 84 frac 82 82 82 frac 77 77 77 gm 67 947 741 gm 67 948 743 inv 82 82 82 inv 82 82 82 ln 645 7503 5041 ln 626 7124 4029 log10 182 9287 4337 log10 2414 8912 7280 log2 422 7285 4701 log2 407 6910 4108 mul 538 546 542 mul 273 336 305 pow 115 11824 8471 pow 115 11129 7346 powu 479 25213 5931 powu 132 24426 4207 sqrt 195 918 798 sqrt 153 903 769 sub 218 218 218 sub 98 98 98 toint 29 29 29 touint 29 29 29 abdkmath64x64 based v3 0 library see abdk gas estimation http github com paulrberg abdk gas estimation method min max avg ab 88 92 90 avg 41 41 41 div 168 168 168 exp 77 3780 2687 exp2 77 3600 2746 gavg 166 875 719 inv 157 157 157 ln 7074 7164 7126 log2 6972 7062 7024 mul 111 111 111 pow 303 4740 1792 sqrt 129 809 699 security set high bar code quality test coverage ' assume project completely safe use contract audited security researcher caveat emptor experimental software provided available basis give warranty liable loss direct indirect continued use codebase contact discover security issue please report via keybase http keybase io paulrberg acknowledgement mikhail vladimirov insight shared math solidity http medium com coinmonks math solidity part 1 number 384c8377f26d series remco bloemen work overflow safe multiplication division http xn 2 umb com 21 muldiv responding question asked developing library license unlicense license md
/flashbots/mev-inspect-rs,Rust,h1 align center mev inspect h1 ethereum mev inspector rust br documentation mev inspect r available http doc flashbots net flashbots data mev inspect r inspect quick start inspector curve balancer uniswap clone aave compound 0x dydx installing cargo build release running cli usage target release mev inspect option optional argument h help r reset clear build database overwrite skip block already exist u url url tracing archival node ' url default http localhost 8545 c cache cache path trace cached db cfg db cfg database config db table db table table database default mev inspection available command tx inspect transaction block inspect range block running test test require postgres installed cargo test
/SunWeb3Sec/DeFiVulnLabs,Solidity,defivulnlabs wa internal web3 solidity security training xrex http xrex io want share material everyone interested web3 security find vulnerability code exploit every vulnerability testing us foundry faster easier collection vulnerable code snippet taken solidity example http solidity example org swc registry http swcregistry io blockchain ctf http github com blockthreat blocksec ctfs etc education please use production getting started follow instruction http book getfoundry sh getting started installation html install foundry http github com foundry r foundry clone install dependency git submodule update init recursive test vulnerability forge test contract src test reentrancy sol vvvv list vulnerability integer overflow 1 src test overflow sol integer overflow 2 src test overflow2 sol previous version solidity prior solidity 0 8 x integer would automatically roll lower higher number without safemath prior solidity 0 8 x selfdestruct 1 src test selfdestruct sol selfdestruct 2 src test selfdestruct2 sol due missing insufficient access control malicious party self destruct contract selfdestruct address function remove bytecode contract address sends ether stored specified address unsafe delegatecall src test delegatecall sol allows smart contract dynamically load code different address runtime reentrancy src test reentrancy sol one major danger calling external contract take control flow following check effect interaction http fravoll github io solidity pattern check effect interaction html pattern reentrancyguard erc777 callback reentrancy src test erc777 reentrancy sol erc777 token allow arbitrary callback via hook called token transfer malicious contract address may cause reentrancy callback reentrancy guard used ref1 http medium com cream finance c r e finance post mortem amp exploit 6ceb20a630c5 ref2 http quantstamp com blog dforce hacker used reentrancy steal 25 million cream poc http github com sunweb3sec defihacklabs 20210830 cream finance flashloan attack reentrancy unsafe low level call call injection src test unsafecall sol use low level call avoided whenever possible call value controllable easy cause arbitrary function execution private data src test privatedata sol private data secure ' readable slot contract storage smart contract public transparent content read corresponding slot specified contract address sensitive information recommended placed smart contract program unprotected callback nft mint src test unprotected callback sol safemint secure attacker reenter mint function inside onerc721received callback backdoor assembly src test backdoor assembly sol attacker manipulate smart contract backdoor writing inline assembly sensitive parameter changed time bypass iscontract src test bypasscontract sol attacker need write code constructor smart contract bypass detection mechanism whether smart contract src test sol external call fail accidentally deliberately cause condition contract example contract receive ether contain fallback receive function unexpected revert randomness src test randomness sol use global variable like block hash block number block timestamp field insecure miner attacker control visibility src test visibility sol default visibility function public unsafe visibility setting attacker directly call sensitive function smart contract real case flippazone nft http github com sunweb3sec defihacklabs 20220706 flippazone nft accesscontrol 88mph nft http github com sunweb3sec defihacklabs 20210607 88mph nft access control coinstorenft public burn http etherscan io token 0x59585bbc68cde26261eb4b417a84acaa5c5841db code sandbox land public burn http etherscan io address 0x50f5474724e0ee42d9a4e711ccfb275809fd6d4a code txorigin phishing src test txorigin sol tx origin global variable solidity using variable authentication smart contract make contract vulnerable phishing attack uninitialized state variable src test uninitialized variable sol uninitialized local storage variable may contain value storage variable contract fact cause unintentional vulnerability exploited deliberately storage collision 1 src test storage collision sol storage collision 2 audius src test storage collision audio sol variable storage location fixed happens another variable ha index offset storage location implementation contract storage collision ref http blog openzeppelin com proxy pattern approval scam src test approvescam sol current scam use approve setapprovalforall defraud transfer right especially careful part signature replay 1 src test signaturereplay sol signature replay 2 nba src test signaturereplaynba sol missing protection signature replay attack signature used multiple time execute function ref1 http medium com cryptronics signature replay vulnerability smart contract 3b6f7596df57 ref2 http coinsbench com signature replay hack solidity 13 735997ad02e5 ref3 http medium com cypher core replay attack vulnerability ethereum smart contract introduced transferproxy 124bf3694e25 ref4 http medium defcon org def 20con 2026 def 20con 2026 20presentations defcon 26 bai zheng chai wang may paid imagine pdf ref5 http github com openzeppelin openzeppelin contract security advisory ghsa 4h98 2769 gh6h data location storage v memory src test datalocation sol incorrect use storage slot memory save variable state easily cause contract use value updated calculation ref1 http mudit blog cover protocol hack analysis token minted exploit ref2 http www educative io answer storage v memory solidity dirtybytes src test dirtybytes sol copying byte array memory calldata storage may result dirty storage value bug reproduce 20220714 sherlock yield strategy bug cross protocol reentrancy bounty 250k poc http github com sherlock protocol bug poc reference http mirror xyz 0xe400820f3d60d77a3ec8018d44366ed0d334f93c lozf1ybch1ebdxlc6hp223cametpngq kc4ejquxmga 20220623 sense finance access control missing access control onswap bounty 50 000 testing sh forge test contract src test sensefinance exp sol vv link reference http medium com immunefi sense finance access control issue bugfix review 32e0c806b1a0 spotthebugchallenge immunefi spotthebugchallenge 1 src test immunefi ch1 sol incorrect check msg value mint many nfts 1 eth immunefi spotthebugchallenge 2 src test immunefi ch2 sol link reference mastering ethereum smart contract security http github com ethereumbook ethereumbook blob develop 09smart contract security asciidoc ethereum smart contract best practice http consensys github io smart contract best practice attack awesome smart contract security http github com saeidshirazi awesome smart contract security smart contract http github com crytic smart contract smart contract attack vector http github com kadenzipfel smart contract attack vector secureum security pitfall 101 http secureum substack com p security pitfall best practice 101 r secureum security pitfall 201 http secureum substack com p security pitfall best practice 201 r secure smart contract 6 solidity vulnerability avoid part 1 http medium com loom network secure smart contract 6 solidity vulnerability avoid part 1 c33048d4d17d part 2 http medium com loom network secure smart contract 6 solidity vulnerability avoid part 2 730db0aa4834 top 10 defi security best practice http blog chain link defi security best practice
/sambacha/q-evm,q,kdb q evm kdb q see kx com http kx com overview kdb adapted usage ethereum evm chain code longer usage manifold finance open sourced setup warning mortal require instruction warned 1 need license kdb use install instruction via code kx com http code kx com q learn install 2 get 64bit license via demand personal exemption http kx com 64bit demand personal edition required library library required http github com manifoldfinance qbigint http github com manifoldfinance qbigint http github com manifoldfinance qquarticroots http github com manifoldfinance qquarticroots http github com manifoldfinance qabiencode http github com manifoldfinance qabiencode utils jupyter notebook sushiswap uniswap liquidity market depth http gist github com sambacha a21955e8a8feec7579a607f153476547 file sushiswap liquiditypairs ipynb install http code kx com q4m3 14 introduction kdb 1481 environment variable set qhome location q k pas license invoke q qlic set directory kc lic located q k file loaded l path file file loaded defining name path defining function flashbots overview http doc flashbots net flashbots auction overview note current state flashbots doc relevance assumption bundle process anatomy bundle const blocknumber await provider getblocknumber const mintimestamp await provider getblock blocknumber timestamp const maxtimestamp mintimestamp 120 const signedbundle flashbotsprovider signbundle signedtransaction signed oracle update pending pool serialized signed transaction hex signer wallet ether signer transaction transaction ether populated transaction object const bundlereceipt await flashbotsprovider sendrawbundle signedbundle bundle signed targetblocknumber block number bundle valid mintimestamp optional minimum timestamp bundle valid inclusive maxtimestamp optional maximum timestamp bundle valid inclusive revertingtxhashes tx1 tx2 optional list transaction hash allowed revert without specifying revert invalidates entire bundle miner reward coinbase transfer http doc flashbots net flashbots auction searcher advanced coinbase payment include last action smart contract solidity block coinbase transfer amount transfer edge case deal sending miner contract solidity block coinbase call value ethamounttocoinbase new byte 0 subject reentrancy attack http medium com coinmonks protect solidity smart contract reentrancy attack 9972c3af7c21 bundle pricing http doc flashbots net flashbots auction searcher advanced bundle pricing conflicting bundle received flashbots ordered following formula bg white large score frac minerbribe totalgasused priorityfeepergas mempoolgasused priorityfeepergas totalgasused http latex codecogs com png latex bg white space large space score frac minerbribe space space totalgasused space space priorityfeepergas space space mempoolgasused space space priorityfeepergas totalgasused eligibility http doc flashbots net flashbots auction miner mev geth spec v04 bundle must target blocknumber priorityfeepergas 1 gwei reverting tx http doc flashbots net flashbots auction miner mev geth spec v04 constructing block node reject bundle megabundle ha reverting transaction unless hash included revertingtxhashes list bundle debugging http doc staging flashbots net flashbots auction searcher advanced troubleshooting 1 transaction failure within bundle 2 incentive gas price coinbase transfer high enough offset value block space simulate bundle const signedtransactions await flashbotsprovider signbundle transactionbundle const simulation await flashbotsprovider simulate signedtransactions targetblocknumber targetblocknumber 1 console log json stringify simulation null 2 3 competitor paying get conflicting bundle prior block const signedtransactions await flashbotsprovider signbundle transactionbundle console log await flashbotsprovider getconflictingbundle signedtransactions 13140328 blocknumber 4 bundle received late appear target block get submission time data compare block time console log await flashbotsprovider getbundlestats 0x123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234 13509887 license source code form subject term mozilla public license v 2 0 copy mpl wa distributed file obtain one http mozilla org mpl 2 0
/DeFiCh/ain,C++,lint http github com defich action workflow lint yaml badge svg http github com defich action workflow lint yaml test http github com defich action workflow test yaml badge svg http github com defich action workflow test yaml dev build http github com defich action workflow dev build yaml badge svg http github com defich action workflow dev build yaml defichain logo doc img defichain logo svg defichain http defichain com note master branch development branch thus unstable run run compile tagged release http github com defich release instead unless know defichain defichains primary vision enable decentralized finance bitcoin grade security strength immutability ' blockchain dedicated fast intelligent transparent financial service accessible everyone information visit defichain website http defichain com read white paper http defichain com white paper downloadable binary available github release http github com defich release page bitcoin core defichain fork bitcoin core http github com bitcoin bitcoin commit 7d6f63c http github com bitcoin bitcoin commit 7d6f63cc2c2b9c4f07a43619eef0b7314474fffd slightly v0 18 1 bitcoin core defichain ha done significant modification bitcoin core instance moving proof work proof stake masternode model community fund support bitcoin blockchain block anchoring increased decentralized financial transaction opcode support etc configuration default mainnet port 8555 4 testnet port 18555 4 regnet port 19555 4 etc merges upstream bitcoin core done selectively applies improved functionality security defichain quick start running node doc setup node md running node docker doc setup node docker md running masternode doc setup masternodes md building scratch doc build quick md license defichain released term mit license see copying copying information see http opensource org license mit development process master branch regularly built tested guaranteed completely stable tag http github com defich tag created regularly indicate new official stable release version defichain contribution workflow described contributing md contributing md question pull request warmly welcomed reach u engineering defichain com mailto engineering defichain com question collaboration
/ialberquilla/aave-liquidation,JavaScript,liquidation aave protocol example repository created educational purpose may contain error use risk info medium post aave liquidation script http medium com coinmonks creating liquidation script aave defi protocol ef584ad87e8f installation instruction 1 create env file mv env template env 2 fill variable env file 3 install dependency npm install integration test integration test call external resource ropsten network 1 fill test data 2 execute test npm test execute liquidation 1 fill data app j 2 execute liquidation script npm start
/Decurity/semgrep-smart-contracts,Solidity,semgrep rule smart contract repository find semgrep http semgrep dev rule look pattern vulnerability smart contract based actual defi exploit disclaimer currently semgrep support solidity http semgrep dev doc language support experimental mode rule may work solidity beta least scanning semgrep smart contract sanctuary http github com tintinweb smart contract sanctuary shell semgrep config solidity smart contract sanctuary arbitrum contract mainnet testing rule accompanied actual vulnerable source code wa targeted exploit vulnerable line marked ruleid case rule yet supported semgrep find todoruleid run test shell semgrep test solidity validate rule shell semgrep validate config solidity rule rule id target description compound borrowfresh reentrancy compound ola finance hundred finance agave function borrowfresh compound performs state update dotransferout compound sweeptoken restricted tusd compound function sweeptoken allowed called anyone erc20 public transfer creat future custom erc20 implementation expose transfer public erc20 public burn hospowise anyone burn token account erc677 reentrancy ola finance erc677 callaftertransfer reentrancy erc777 reentrancy bacon protocol erc777 tokensreceived reentrancy erc721 reentrancy hype bear erc721 onerc721received reentrancy erc721 arbitrary transferfrom distortion genesis custom erc721 implementation lack access control check transfer gearbox token path confusion gearbox uniswapv3 adapter implemented incorrect extraction path parameter keeper network oracle manipulation inverse finance keep3rv2 current call ha high data freshness ha low security exploiter simply need manipulate 2 data point able impact feed basic oracle manipulation onering finance deus finance getshareprice manipulated via flashloan redacted cartel custom approval bug redacted cartel transferfrom steal allowance account rigoblock missing access control rigoblock setmultipleallowances missing onlyowner modifier oracle price update restricted rikkei finance aave oracle price data submitted anyone superfluid ctx injection superfluid specially crafted calldata may used impersonate account tecra coin burnfrom bug tecra coin parameter checked incorrect position allowance mapping arbitrary low level call auctus option starstream finance basketdao li finance attacker may perform call arbitrary address controlled calldata sense missing oracle access control sense finance oracle update restricted onswap rule arbaz kiraak http twitter com arbazkiraak proxy storage collision audius proxy declares state var may override storage slot implementation uniswap callback protected generic uniswap callback protected beta basic arithmetic underflow umbrella network remittance token possible arithmetic underflow greppable incident ' come rule following incident fantasm description http twitter com rugdocio status 1501629678993518599 contract http ftmscan com address 0x880672ab1d46d987e5d663fc7476cd8df3c9f937 paraluni description http slowmist medium com paraluni incident analysis 58be442a4f99 contract http www contract diff xyz address 0xa386f30853a7eb7e6a25ec8389337a5c6973421d chain 1 flurry finance description http twitter com certiktech status 1496298929599746048 contract http bscscan com address 0x5085c49828b0b8e69bae99d96a8e0fcf0a033369
/aave/aave-v3-core,TypeScript,build pas http github com aave aave v3 core action workflow node j yml badge svg http github com aave aave v3 core action workflow node j yml codecov http codecov io gh aave aave v3 core branch master graph badge svg token u50kn38g67 http codecov io gh aave aave v3 core aave protocol v3 repository contains smart contract source code market configuration aave protocol v3 repository us docker compose hardhat development environment compilation testing deployment task aave aave decentralized non custodial liquidity market protocol user participate supplier borrower supplier provide liquidity market earn passive income borrower able borrow overcollateralized perpetually undercollateralized one block liquidity fashion documentation see link technical paper visit aave developer doc technical paper techpaper aave v3 technical paper pdf developer documentation http doc aave com developer audit formal verification find audit report audit folder round 1 october 2021 abdk audit 27 01 2022 abdk aavev3 pdf openzeppelin audit 01 11 2021 openzeppelin aavev3 pdf trail bit audit 07 01 2022 trailofbits aavev3 pdf peckshield audit 14 01 2022 peckshield aavev3 pdf round 2 december 2021 sigmaprime audit 27 01 2022 sigmaprime aavev3 pdf formal verification certora certora certora verification report pdf connect community join discord http aave com discord channel governance forum http governance aave com asking question protocol talk aave peer getting started install aave core v3 npm package hardhat truffle project import contract interface npm install aave core v3 import solidity file import ipool aave core v3 contract interface ipool sol contract misc function supply address pool address token address user uint256 amount public ipool pool supply token amount user 0 json artifact abi bytecode also included bundled npm package artifact directory import json file via node j require const poolv3artifact require ' aave core v3 artifact contract protocol pool pool sol pool json ' log abi console console log poolv3artifact abi setup repository us docker compose manage sensitive key load configuration prior action like test deploy must run docker compose start contract env container connect container console via docker compose exec contract env bash follow next step setup repository install docker docker compose create enviroment file named env fill next enviroment variable add alchemy infura provider key alchemy take preference config level alchemy key infura key optional plan use tenderly script tenderly project tenderly username test run full test suite following command one terminal docker compose open another tab terminal docker compose exec contract env bash new bash terminal prompted connected container npm run test
/yieldfarming/yieldfarming,JavaScript,longer maintained repo longer maintained due difficulty upkeep newest farm different chain please checkout unofficial fork repo http github com vfat tool vfat tool yieldfarming info ' much ' honest work app http yieldfarming info use load app http yieldfarming info metamask enabled also append url addr parameter like specify address http yieldfarming info synthetix susd addr 0xfadafce89ea2221fa33005640acf2c923312f2b9 supported yield pool synthetix ' curve susd pool token staking pool http yieldfarming info synthetix susd yield snx crv synthetix ' curve sbtc pool token staking pool http yieldfarming info synthetix sbtc yield snx ren bal crv synthetix ' ieth token staking pool http yieldfarming info synthetix ieth yield snx synthetix ' ibtc token staking pool http yieldfarming info synthetix ibtc yield snx yearn finance ' curve pool token staking pool http yieldfarming info yearn ycrv yield crv yfi yearn finance ' balancer 2 yfi 98 dai token staking pool http yieldfarming info yearn yfi dai yield bal yfi yearn finance ' balancer 2 yfi 98 curve pool token token staking pool http yieldfarming info yearn yfi ycrv yield bal crv yfi ycrv mstable ' balancer 50 musd 50 usdc pool http yieldfarming info mstable usdc yield bal mta mstable ' balancer 50 musd 50 weth pool http yieldfarming info mstable weth yield bal mta mstable ' balancer 20 musd 80 mta pool http yieldfarming info mstable mta yield bal mta mstable ' balancer 95 musd 5 mta pool http yieldfarming info mstable mta 5 yield bal mta mstable ' uniswap 50 mta 50 weth pool http yieldfarming info mstable weth uniswap yield mta uma project ' balancer 50 yusdsep20 50 usdc pool http yieldfarming info uma yusd yield bal uma yfii finance ' curve pool token staking pool http yieldfarming info yfii ycrv yield crv yfii yfii finance ' balancer 2 yfii 98 dai token staking pool http yieldfarming info yfii yfii dai yield bal yfii yffi finance ' curve pool token staking pool http yieldfarming info yffi pool1 yield crv yffi yffi finance ' balancer 2 yffi 98 dai token staking pool http yieldfarming info yffi pool2 yield bal yffi yffi finance ' balancer 2 yffi 98 curve pool token token staking pool http yieldfarming info yffi pool 3 yield bal crv yffi ycrv troubleshooting try opening page incognito see work doe probably browser caching old file donation ' like support project feel free send scrap token http gitcoin co grant 1005 yieldfarminginfo 0x4bc821fef2ff947b57585a5fdbc73690db288a49
/enzymefinance/protocol,TypeScript,enzyme protocol build status workflow ci badge svg enzyme ethereum based protocol decentralized chain asset management protocol people entity manage wealth wealth others within customizable safe environment enzyme empowers anyone set manage invest customized chain investment vehicle install prerequisite node http www nodejs org pnpm http pnpm io sh git clone git repository url cd protocol pnpm install compile contract sh pnpm compile test first create env file copying env example input ethereum node endpoint info needed generally setting ethereum node mainnet fine run test full test suite run sh pnpm test note test might fail first run building cache fork block due timeout continue run test needed build cache contribute see contributing instruction contributing md please note repository hosted organization follow code conduct code conduct md make sure review follow security issue find vulnerability may affect live testnet deployment please send report privately security enzyme finance mailto security enzyme finance please file public issue
/marcinguy/betterscan-ce,Python,img src http img shield io discord 953265912302141460 label discord 20chat http discord gg 3pvz7tx9zz github star http badgen net github star marcinguy scanmycode ce github fork http badgen net github fork marcinguy scanmycode ce github watcher http badgen net github watcher marcinguy scanmycode ce github issue http badgen net github issue marcinguy scanmycode ce docker pull http badgen net docker pull scanmycode scanmycode3 ce icon docker label pull want scan code infrastructure install docker engine instruction ubuntu http doc docker com engine install ubuntu ' already run git code directory html output result current directory report html file sh curl http betterscan io cli html sh cli output sh curl http betterscan io cli sh need ci cd web interface need docker compose instruction ubuntu http doc docker com compose install installed well ' already run git clone http github com marcinguy betterscan ce git cd betterscan ce dockerhub start sh ' click triangle read github gitlab integration pr scanning github action etc detail summary infomation summary doe scanmycode called betterscan reference work code infrastructure iac cloudnative scanning sast static analysis linting solution using many tool scanner one report also add tool currently support many language tech stack similar sonarqube different scanmycoode concept http user image githubusercontent com 20355405 155940853 04cb916d 658b 48e1 bae9 959af96fd2ba png fig 1 betterscan concept diagram betterscan different sonarqube betterscan different sonarqube like please give github star fork watch contribute ensure continous development star sponsor project would possible without generous support sponsor table tr td logo td td logo td td logo td td logo td tr table also want support project head github sponsor page http github com sponsor marcinguy patreon http www patreon com marcinguy preferred due better tax handling tl dr run command code directory checkout git git folder need work normal directory make git repo git init git add git commit etc sh curl http raw githubusercontent com marcinguy betterscan ce master cli sh html report sh curl http raw githubusercontent com marcinguy betterscan ce master cli html sh ' checked code 1 700 check defect vulnerability best practice secret 166 secret type including gitleaks sample cli report betterscan result cli http user image githubusercontent com 20355405 184548807 a13f5943 96ed 4c64 bf73 c4afdabd86d5 png sample html report image http user image githubusercontent com 20355405 173091087 1edf7609 5006 4724 b46b bab2502bc251 png fig 2 sample report using cli html output fyi maintain state via checkmate folder new commits checked want use platform follow local h4 install first h4 install docker docker compose h5 h5 strong 2 option strong 1 fastest method use dockerhub built image unsure use git clone http github com marcinguy betterscan ce git cd betterscan ce dockerhub start sh 2 slower method build everything git clone http github com marcinguy betterscan ce git cd betterscan ce docker start sh open browser http localhost 5000 sign locally login needed cloud cloud kubernetes scaling installation connection fast server installation time ca 1 minute check installation kubernetes free thanks okteto com http github com marcinguy betterscan ce blob master okteto readme md github action wip work progress add workflow github repo github workflow betterscan yml content name betterscan scan push job betterscan run ubuntu latest step us action checkout v3 fetch depth 0 name betterscan scan us topcodersonline betterscan v3 name upload sarif file us github codeql action upload sarif v2 sarif file report sarif result printed job action output plan add sarif output integrate github code scanning interface tab possibly pro version see sample integration image http user image githubusercontent com 20355405 180461548 8fbb6c47 0314 4f37 90f1 4292f788caf3 png fig 3 sample integration github action code scanning tab want scan pr main use name betterscan scan pull request type opened edited reopened review requested synchronize branch ' main ' job betterscan run ubuntu latest step us action checkout v3 fetch depth 0 name betterscan scan us topcodersonline betterscancustom v1 branch github head ref github ref name name upload sarif file us github codeql action upload sarif v2 sarif file report sarif action source http github com topcodersonline betterscancustom feel free adjust flow 1 make pr 2 scan 3 make git pull get state checkmate folder pr 4 make change commits push pr 5 repeat 2 cannot afford github enterprise code scannint use github team cli output gitlab integration possible integrate result also gitlab ' security compliance dashboad convert sarif gitlab format gitlab ultimate required platform ' e platform independent python checker also mostly available different platform master branch linux x86 64 however also macos branch dockerfiles arm64 including arm64 checker m1 mac ha arm64 architecture 30 cheaper 30 faster alternative linux amd64 yes default macos intel arm64 macos branch window amd64 install window 10 version 1903 higher window 11 http doc docker com desktop window wsl linux image work usage info wiki http github com marcinguy betterscan ce wiki advanced usage cli mode plug anywhere ci cd pipeline command smc one command add 1 700 check using different scanner smc meta scanner sense supporting smart snapshot goody running tool always full code smc support also cli mode web interface worker etc run binary docker ci cd pipeline whatever quality gate output line line scanner finding checkout code git folder photo 2022 05 10 19 16 07 http user image githubusercontent com 20355405 167685447 84ba2b50 26fc 4143 9bb2 987ccd5e3a92 jpg fig 4 sample ci cd pipeline photo courtesy viking thc telegram channel put quality gate quick install plain cli output run command take care everything sh curl http raw githubusercontent com marcinguy betterscan ce master cli sh corresponds running export code dir pwd cd code dir docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate init ' docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate git init ' docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate git analyze branch git rev parse abbrev ref head ' docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate issue ' html cli output run command take care everything sh curl http raw githubusercontent com marcinguy betterscan ce master cli html sh report directory report html corresponds running export code dir pwd cd code dir docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate init ' docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate git init ' docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate git analyze branch git rev parse abbrev ref head ' docker run e code dir v pwd pwd ti scanmycode scanmycode3 ce worker cli bin sh c ' cd code dir checkmate issue html ' detailed explanation build docker image worker cli run checkmate sample flow cli mode 1 clone repo e tmp test 2 set env var code dir e export code dir tmp test env var point git cloned repo dir 3 cd important 4 run checkmate init 5 run checkmate git init 6 run checkmate git analyze run checkmate issue shown root tmp test tmp test loading plugin git loading plugin trufflehog3 loading plugin trojansource loading plugin metric loading plugin bandit loading plugin brakeman loading plugin phpanalyzer loading plugin gosec loading plugin confused loading plugin pmd loading plugin semgrep loading plugin semgrepdefi loading plugin semgrepjs loading plugin checkov loading plugin kubescape loading plugin insidersecswift loading plugin insiderseckotlin loading plugin insiderseccsharp loading plugin pmdapex loading plugin semgrepccpp loading plugin semgrepjava loading plugin semgrepeslint semgrepjs &#9; expresslfrwarning &#9; semgrepjs &#9; cookiesessionnodomain &#9; semgrepjs &#9; cookiesessionnopath &#9; semgrepjs &#9; cookiesessionnosecure &#9; semgrepjs &#9; cookiesessiondefault &#9; semgrepjs &#9; cookiesessionnosamesite dockerhub image also ready docker pull scanmycode scanmycode3 ce worker cli run command docker docker run ti scanmycode scanmycode3 ce worker cli checkmate root root loading plugin git loading plugin trufflehog3 loading plugin trojansource loading plugin metric loading plugin bandit loading plugin brakeman loading plugin phpanalyzer loading plugin gosec loading plugin confused loading plugin pmd loading plugin semgrep loading plugin semgrepdefi loading plugin semgrepjs loading plugin checkov loading plugin kubescape loading plugin insidersecswift loading plugin insiderseckotlin loading plugin insiderseccsharp loading plugin pmdapex loading plugin semgrepccpp loading plugin semgrepjava loading plugin semgrepeslint usage checkmate command command args type checkmate help help workflow using docker binary export code dir tmp test cd tmp test docker run e code dir v tmp test tmp test ti scanmycode scanmycode3 ce worker cli bin sh c ' cd tmp test checkmate init ' docker run e code dir v tmp test tmp test ti scanmycode scanmycode3 ce worker cli bin sh c ' cd tmp test checkmate git init ' docker run e code dir v tmp test tmp test ti scanmycode scanmycode3 ce worker cli bin sh c ' cd tmp test checkmate git analyze ' docker run e code dir v tmp test tmp test ti scanmycode scanmycode3 ce worker cli bin sh c ' cd tmp test checkmate issue ' hood progpilot pmd bandit brakeman gosec confused semgrep trufflehog3 jshint log4shell via custom semgrep rule checkov kubescape modified recorded demo community edition doe github support plugins rest betterscan demo http user image githubusercontent com 20355405 152678316 04fdcd54 73e8 42f8 9bf2 fb9a69618ff9 gif check live demo http app betterscan io explore betterscan different sonarqube use static analysis find bug defect difference betterscan support cloudnative infrastructure scanning betterscan support secret scanning 166 secret type including gitleaks betterscan extended tool producing json output binary technology language product biggest difference betterscan open source sonarqube also offer open source version missing feature example 12 supported language available open source offering powerful dataflow feature available paid version betterscan support scanning changed file differential analysis sonarqube doe betterscan us many tool adding 1 700 check also semgrep one tool without semgrep community rule betterscan ' custom rule even screenshots scanning real project image http user image githubusercontent com 20355405 154044790 a07ef065 9881 4ab6 ba05 ddf5be84e19a png image http user image githubusercontent com 20355405 154044817 92d3ebde 45b6 4b63 a0ee 414001effbe0 png image http user image githubusercontent com 20355405 154044857 f53f1922 7e0c 4ede ad96 b1d21075dad3 png image http user image githubusercontent com 20355405 154044887 4d69d551 9cb3 4892 85e0 1383eeab8332 png image http user image githubusercontent com 20355405 154044929 74ea5e0f 550e 4833 bd33 8d285e2195dd png image http user image githubusercontent com 20355405 154044957 3ace283a bb76 4f15 9f49 520d6f21e7d3 png smc defi sample http user image githubusercontent com 20355405 169240036 1d6652fa 0724 42cf ac41 2bbcf7398def png smc iac http user image githubusercontent com 20355405 169240091 2171b1c6 9931 46be ae97 a9f827c0120c png terra http user image githubusercontent com 20355405 169240143 3d590a0a bd39 4652 9556 12ccdd4563d7 png image http user image githubusercontent com 20355405 169540378 22deb07c 1665 4614 915c 511f24689438 png welcome betterscan ce community edition betterscan based quantifedcode quantifiedcode code analysis automation platform help keep track issue metric software project easily extended support new type analysis application consists several part frontend realized react j app backend realized flask app expose rest api consumed frontend background worker realized using celery performs code analysis currently support php java scala python ruby net full framework c c c swift kotlin apex salesforce javascript typescript go solidity defi security defi exploit infractructure code iac security best practice docker kubernetes k8s terraform aws gcp azure secret scanning 166 secret type dependency confusion trojan source open source proprietary check total ca 1 700 check advantage many tool one report unification dismiss collaborate finding mark false positive enable disable individual check checker ca 1 700 check linters static code analysis code scanning tool outputting json added fast check new code recheck git support http tl ssh private repository ssh rest api callable ci cd integrateable swiss army knife tool siem code scanning 100 code transparency full control code cloud version http www betterscan io cloud version ha also many plugins also plugins commercially available licensing github github organization slack contribute looking contributing individual organization feel free contact marcinguy gmail com todo update dependency backend frontend done update latest react update python3 see scanmycode3 branch done update add new checker wish licensing betterscan ' quantifiedcode part remain released bsd 3 clause license however modification released lgpl 2 1 commonsclause use software cannot sell also base service saas software service setup commonsclause would like please contact first permission marcinguy gmail com installation provide several option installing betterscan one right one depends use case manual installation best want modify change betterscan docker based installation probably easiest way try betterscan without much work ansible based installation suitable way want run betterscan professional infrastructure possibly multiple server following section discus manual installation process option please check corresponding repository manual installation installation consists three part install dependency required run betterscan download required source code set configuration installing dependency betterscan requires following external dependency message broker required background task message queue recommend either rabbitmq redis database required core application recommend postgresql sqlite supported well database system might work e g mysql currently officially supported need run betterscan non supported database please get touch u ' happy provide guidance download betterscan ce source code dependency installed go ahead download betterscan git clone http github com marcinguy betterscan ce git install required python package betterscan ce manages dependency via python package manager pip edit setting betterscan get configured via yaml setting file starting application incrementally load setting several file recursively updating setting object first load default setting quantifiedcode setting default yml check qc setting environment variable defined point valid file load setting possibly overwriting default setting look setting yml file current working directory load setting additionally check qc secret environment variable defined point valid file also load setting useful sensitive setting kept separate rest e g check version control sample setting yml file root repository start running setup editing setting run setup command via run root directory repository python manage py setup setup assistant iteratively walk setup finished working instance betterscan running web application run web application simply run python manage py runserver running background worker run background worker simply run python manage py runworker docker based installation see docker folder spin everything using one command ansible based installation coming soon detail
/mstable/mStable-contracts,TypeScript,br img src http mstable org asset img email mstable logo horizontal black png width 420 ci http github com mstable mstable contract workflow test badge svg coverage status http coverall io repos github mstable mstable contract badge svg branch master bvkh5s http coverall io github mstable mstable contract branch master discord http img shield io discord 525087739801239552 color 7289da label discord 20 http discordapp com channel 525087739801239552 npm version http badge fury io j 40mstable 2fprotocol svg http badge fury io j 40mstable 2fprotocol br repo contains contract test relevant core mstable protocol mstable protocol built make stablecoins easy robust profitable mstable asset massets contract masset masset sol token allow minting redemption underlying basket asset basset peg e usd btc gold invariantvalidator applies min max weight basset enforces penalty bonus minting asset provide low slippage swap invariant applies progressive penalty bonus either end weight scale result large area low slippage basset integrated lending protocol initially aave compound generate interest accrued masset term massets deposited earn native interest respective saving contract like would saving account basset within masset also swapped low slippage provided remain within validator contract masset invariantvalidator sol limit swapfee credited additionally saver core masset contract utilise openzeppelin ' initializableadminupgradeabilityproxy http github com openzeppelin openzeppelin sdk blob master package lib contract upgradeability initializableadminupgradeabilityproxy sol facilitate future upgrade fix feature addition upgrade proposed mstable governor current governor address stored nexus contract nexus nexus sol system kernel executed via delayedproxyadmin contract upgradability delayedproxyadmin sol change governor contract upgrade one week delay built execution allows mstable user one week opt window agree given change mstable reward contribute utility growth information see mta http doc mstable org mstable asset function br http mstable org http app mstable org http doc mstable org br bug bounty found bug claim reward open bug bounty http doc mstable org protocol security mstable bug bounty reporting mstable following responsible disclosure http doc mstable org protocol security mstable bug bounty responsible disclosure policy br br branch master contains complete tested audited contract code generally mainnet beta pre release code generally ropsten br artifact publish contract artifact npm package called mstable protocol http www npmjs com package mstable protocol browse via unpkg com http unpkg com browse mstable protocol latest br dev note prerequisite node j v14 16 1 may wish use nvm 1 ganache cli 2 installing dependency yarn testing test written hardhat ether waffle typescript using typechain http github com ethereum typechain generate typing contract test executed using hardhat hardhats evm yarn test suite key folder contract z mock mock used throughout test suite security script used run static analysis tool like slither securify task hardhat task run operational report transaction test unit test folder corresponding contract xx test utils core util file used throughout test framework machine mock contract machine creating configurable instance contract type type used throughout suite generated output typechain strongly typed ether flavoured contract interface coverage solidity coverage http github com sc fork solidity coverage used run coverage analysis test suite produce report visible coverage folder navigatable uploadable ultimately used reference sort adequate cover although source truth robust test framework report publically available coverall http coverall io github mstable mstable contract nb solidity coverage run solc optimizer false see discussion http github com sc fork solidity coverage issue 417 ci codebase rule enforced passing github action http github com feature action workflow configs github workflow rule linting contract solium file eslint passing unit test suite maintaining high unit testing coverage code formatting solidity import deconstructed import xxx xxx sol solidity commented per natspec format http solidity readthedocs io en v0 5 0 layout source file html comment internal function ordering high low order br 1 http github com nvm sh nvm 2 http github com trufflesuite ganache cli command line interface hardhat task http hardhat org guide create task html used command line interaction mstable contract task found task task folder separate hardhat config file task config task config used task config inherits main hardhat config file hardhat config hardhat config avoids circular dependency repository need compiled typechain artifact generated mean config task config hardhat option need used run mstable task config network using readonly task like mbtc snap ' need signer ether default hardhat test account ok use safety mainnet config committed repository avoid accidentally running task mainnet mainnet url process env node url account mnemonic test test test test test test test test test test test junk never commit mainnet private key mnemonic provider url repository example using hardhat task zsh list hardhat task hh config task config set provider url export node url http mainnet infura io v3 yourapikey run mbtc snap task mainnet yarn task mbtc snap network mainnet
/ConsenSys/defi-score,Python,contributor http img shield io badge contributor 6 orange svg style flat square contributor img src asset image banner png alt defi score banner defi score framework assessing risk permissionless lending platform ' single consistently comparable value measuring protocol risk based factor including smart contract risk collateralization liquidity encourage ethereum community evolve methodology making effective easier use see live score defiscore io http defiscore io read detailed whitepaper whitepaper md join discussion telegram http defiscore table content example score example score implementation implementation component component reading reading contributor contributor example score ' provided example score breakdown component although underlying methodology complex simple user understand img src asset image defiscore example png alt defi score example implementation want run number check implementation instruction implementation component defi score methodology organized smart contract risk financial risk consideration img src asset image defiscore component png alt defi score banner component smart contract risk smart contract security 45 error bug unexpected outcome smart contract cause real financial harm risk minimized proactive code audit formal verification reputable security firm model ass code security looking three piece chain public data 1 time mainnet normalized time since protocol first launched mainnet 2 critical vulnerability vulnerability exploited 3 four engineer week 4 engineer week dedicated auditing protocol 4 public audit ha audit report made public 5 recent audit ha audit last 12 month code change made 6 bounty program doe development team offer public bug bounty program ii financial risk collateral 20 current platform use conservative collateral factor highly volatile nature crypto asset mean high collateral factor may still insufficient collateral risk assessed looking two piece data derivable chain data first data point utilization rate second data point analysis collateral portfolio using cvar conditional value risk model also known expected shortfall model liquidity 10 currently scoped platform attempt incentive liquidity using dynamic interest rate model produce varying rate depending level liquidity asset pool however incentivized liquidity doe mean guaranteed liquidity absolute level liquidity used iii centralization risk protocol administration 12 5 one biggest contributor centralization risk defi protocol use admin key admin key allow protocol developer change different parameter smart contract system like oracle interest rate potentially protocol developer ability alter contract parameter allows cause financial loss user measure like timelocks multi signature wallet help mitigate risk financial loss due centralized element mult signature wallet help mitigate risk distributing control larger number developer meaning loss compromise single private key cannot compromise entire system timelocks help mitigate risk allowing protocol user exit position change take place oracle 12 5 another large element centralization risk protocol oracle centralization many different flavor oracle system used power protocol protocol use fully self operated oracle system others use externally operated oracle like uniswap kyber samczsuns writeup http samczsun com taking undercollateralized loan fun profit oracle ability cause financial loss provides good background information oracle centralization score focused whether price feed manipulatable whether single entity manipulate ease self operated model take oracle owner manipulate data decentralized oracle cant manipulated way may always represent fair market value asset developer building top decentralized oracle opt use price volatility bound defend type attack disclaimer current defi score algorithm us min max normalization certain metric utilization index liquidity index anyone fork code add support new pool however add pool introduces new lower upper bound utilization liquidity material effect score pool defi score team regularly add support new pool meet requirement read http github com consensys defi score blob master pool support threshold md reading defi score assessing risk permissionless lending protocol whitepaper md contributor contributor list start remove modify section prettier ignore start markdownlint disable table tr td align center href http github com jclancy93 img src http avatars2 githubusercontent com u 7850202 v 4 width 100px alt br sub b jack clancy b sub br href http github com consensys defi score commits author jclancy93 title code href http github com consensys defi score commits author jclancy93 title documentation href talk jclancy93 title talk td td align center href http twitter com jordanlyall img src http avatars0 githubusercontent com u 999289 v 4 width 100px alt br sub b jordan lyall b sub br href projectmanagement jordanlyall title project management href http github com consensys defi score commits author jordanlyall title documentation href design jordanlyall title design td td align center href http github com flamingyawn img src http avatars3 githubusercontent com u 11626601 v 4 width 100px alt br sub b tlip b sub br href design flamingyawn title design href content flamingyawn title content td td align center href http github com ispytodd img src http avatars2 githubusercontent com u 29828992 v 4 width 100px alt br sub b ispytodd b sub br href content ispytodd title content href blog ispytodd title blogposts td td align center href http github com anthonyhuanggr img src http avatars0 githubusercontent com u 7041796 v 4 width 100px alt br sub b anthony h b sub br href translation anthonyhuanggr title translation td td align center href http github com antonina cherednichenko img src http avatars0 githubusercontent com u 1220854 v 4 width 100px alt br sub b antonina norair b sub br href http github com consensys defi score commits author antonina cherednichenko title documentation td td align center href http github com tomafrench img src http avatars3 githubusercontent com u 15848336 v 4 width 100px alt br sub b tom french b sub br href http github com consensys defi score commits author tomafrench title documentation td tr tr td align center href http github com karbica img src http avatars3 githubusercontent com u 8563742 v 4 width 100px alt br sub b kevin arbi b sub br href http github com consensys defi score commits author karbica title code td tr table markdownlint enable prettier ignore end contributor list end community join defi score community telegram http defiscore license rel license href http creativecommons org license sa 2 0 img alt creative common license style border width 0 src http creativecommons org l sa 2 0 80x15 png br work licensed rel license href http creativecommons org license sa 2 0 creative common attribution sharealike 2 0 generic license
/yearn/iearn-finance,JavaScript,iearn finance project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console npm test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information npm run build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify
/bmresearch/Solnet,C#,p align center img src http raw githubusercontent com bmresearch solnet master asset icon png margin auto height 175 p p align center href http github com bmresearch solnet action workflow dotnet yml img src http github com bmresearch solnet action workflow dotnet yml badge svg alt build href http github com bmresearch solnet action workflow publish yml img src http github com bmresearch solnet action workflow publish yml badge svg alt release href http coverall io github bmresearch solnet branch master img src http coverall io repos github bmresearch solnet badge svg branch master alt coverage status br href img src http img shield io github license bmresearch solnet style flat square alt code license href http twitter com intent follow screen name blockmountainio img src http img shield io twitter follow blockmountainio style flat square logo twitter alt follow twitter href http discord gg crexabrezt img alt discord src http img shield io discord 849407317761064961 style flat square alt join discussion p div style text align center p introduction solnet solana ' net sdk integrate net ecosystem wherever developing web desktop help learn provided sample documentation integrating sdk app http blockmountain io solnet p div feature full json rpc api coverage full streaming json rpc api coverage wallet account sollet solana keygen compatible keystore sollet solana keygen compatible transaction decoding base64 wire format encoding back wire format message decoding base64 wire format encoding back wire format instruction decompilation tokenwallet object send spl token jit provisioning associated token account http spl solana com associated token account program native program system program stake program solana program library spl memo program token program token swap program associated token account program name service program shared memory program sake maintainability sometimes due size complexity program repository contain solana ' native program program part spl list commonly needed program see serum http github com bmresearch solnet serum mango http github com bmresearch solnet mango pyth http github com bmresearch solnet pyth metaplex http github com bmresearch solnet metaplex requirement net 5 0 dependency chaos nacl standard portable bouncycastle example solnet example http github com bmresearch solnet tree master src solnet example project contains code example essentially ' trying hard make intuitive easy use library trying run example might lead error case create new account case response rpc contains transaction simulation log state account address already use need increment value used derive account seed used e wallet getaccount value 1 wallet solnet wallet http github com bmresearch solnet tree master src solnet wallet project implement wallet key generation feature made compatible key generated using solana keygen key generated using popular browser wallet sollet io http www sollet io initializing wallet compatible sollet c initialize wallet access key generated sollet default var sollet new wallet mnemonic word wordlist english retrieve account derivation path index var account sollet getaccount 10 initializing wallet compatible solana keygen c initialize wallet access key generated solana keygen var wallet new wallet mnemonic word wordlist english passphrase seedmode bip39 retrieve account var account wallet account solana keygen mechanism doe allow account retrieval derivation path index generating new wallet c generate new mnemonic var newmnemonic new mnemonic wordlist english wordcount twelve var wallet new wallet newmnemonic keystore solnet keystore http github com bmresearch solnet tree master src solnet keystore project implement functionality able securely store key seed mnemonic whatever desire contains implementation web3 secret storage definition http github com ethereum wiki wiki web3 secret storage definition well solanakeystoreservice used read key generated solana keygen secret keystore service c initialize keystore var secretkeystoreservice new secretkeystoreservice encrypt private key seed mnemonic associated certain address var jsonstring secretkeystoreservice encryptandgeneratedefaultkeystoreasjson password data address decrypt web3 secret storage encrypted json data byte data null try data keystore decryptkeystorefromjson password jsonstring catch exception console writeline invalid password solana keystore service c initialize keystore var secretkeystoreservice new solanakeystoreservice restore wallet json file generated solana keygen passphrase used generating key var wallet secretkeystoreservice restorekeystore filepath passphrase rpc streaming rpc solnet rpc http github com bmresearch solnet tree master src solnet rpc project contains full fidelity implementation solana json rpc http doc solana com developing client jsonrpc api implementation compatible method expected removed v1 8 http doc solana com developing client jsonrpc api json rpc api deprecated method method added v1 7 replace clientfactory pattern client factory allows pas logger implement microsoft extension logging ilogger interface c var rpcclient clientfactory getclient cluster mainnet logger var streamingrpcclient clientfactory getstreamingclient cluster mainnet logger using rpc c get certain account ' info var accountinfo rpcclient getaccountinfo 5omqjtduha3gmfdheqg1zzsvcbuvzey5wakwyrmqf1vj get token account owned certain account var tokenaccounts rpcclient gettokenaccountsbyowner 5omqjtduha3gmfdheqg1zzsvcbuvzey5wakwyrmqf1vj even filter token account token ' mint var wrappedsolaccounts rpcclient gettokenaccountsbyowner 5omqjtduha3gmfdheqg1zzsvcbuvzey5wakwyrmqf1vj so11111111111111111111111111111111111111112 following address represents serum ' address used number thing var serumaddress 9xqewvg816bux9epjhmat23yvvm2zwbrrpzb9pusvfin query account owned certain program filter based account data var programaccounts rpcclient getprogramaccounts serumaddress var filter new list memcmp new memcmp offset 45 byte owneraddress var filteredprogramaccounts rpcclient getprogramaccounts serumaddress memcmplist filter using streaming rpc c sent transaction var txsig rpcclient sendtransaction tx subscribe transaction ' signature finalized var subscription streaminrpcclient subscribesignature txsig result subscriptionstate response something commitment finalized sending transaction c initialize rpc client wallet var rpcclient clientfactory getclient cluster mainnet var wallet new wallet get source account var fromaccount wallet getaccount 0 get destination account var toaccount wallet getaccount 1 get recent block hash include transaction var blockhash rpcclient getrecentblockhash initialize transaction builder chain many instruction want building message var tx new transactionbuilder setrecentblockhash blockhash result value blockhash setfeepayer fromaccount addinstruction memoprogram newmemo fromaccount hello sol net addinstruction systemprogram transfer fromaccount toaccount getpublickey 100000 build fromaccount var firstsig rpcclient sendtransaction tx create initialize mint c var wallet new wallet wallet mnemonicwords var blockhash rpcclient getrecentblockhash var minbalanceforexemptionacc rpcclient getminimumbalanceforrentexemption tokenprogram tokenaccountdatasize result var minbalanceforexemptionmint rpcclient getminimumbalanceforrentexemption tokenprogram mintaccountdatasize result var mintaccount wallet getaccount 21 var owneraccount wallet getaccount 10 var initialaccount wallet getaccount 22 var tx new transactionbuilder setrecentblockhash blockhash result value blockhash setfeepayer owneraccount addinstruction systemprogram createaccount owneraccount mintaccount minbalanceforexemptionmint tokenprogram mintaccountdatasize tokenprogram programidkey addinstruction tokenprogram initializemint mintaccount publickey 2 owneraccount publickey owneraccount publickey addinstruction systemprogram createaccount owneraccount initialaccount minbalanceforexemptionacc tokenprogram tokenaccountdatasize tokenprogram programidkey addinstruction tokenprogram initializeaccount initialaccount publickey mintaccount publickey owneraccount publickey addinstruction tokenprogram mintto mintaccount publickey initialaccount publickey 25000 owneraccount addinstruction memoprogram newmemo initialaccount hello sol net build new list account owneraccount mintaccount initialaccount transfer token new token account c initialize rpc client wallet var rpcclient clientfactory getclient cluster mainnet var wallet new wallet var blockhash rpcclient getrecentblockhash var minbalanceforexemptionacc rpcclient getminimumbalanceforrentexemption tokenprogram tokenaccountdatasize result var mintaccount wallet getaccount 21 var owneraccount wallet getaccount 10 var initialaccount wallet getaccount 22 var newaccount wallet getaccount 23 var tx new transactionbuilder setrecentblockhash blockhash result value blockhash setfeepayer owneraccount addinstruction systemprogram createaccount owneraccount newaccount minbalanceforexemptionacc tokenprogram tokenaccountdatasize tokenprogram programidkey addinstruction tokenprogram initializeaccount newaccount publickey mintaccount publickey owneraccount publickey addinstruction tokenprogram transfer initialaccount publickey newaccount publickey 25000 owneraccount addinstruction memoprogram newmemo initialaccount hello sol net build new list account owneraccount newaccount transaction message decoding c given message transaction encoded base64 byte array decode structure var tx transaction deserialize txdata var msg message deserialize msgdata allows sign message crafted component using solnet var signedtx transaction populate msg new list byte account sign msgdata program solnet program http github com bmresearch solnet tree master src solnet program project contains implementation several native spl program brevity exemplified depth check solnet example http github com bmresearch solnet tree master src solnet example contains numerous example multi signature operation hello solana world c var memoinstruction memoprogram newmemo wallet account hello solana world using solnet var recenthash rpcclient getrecentblockhash var tx new transactionbuilder setfeepayer wallet account addinstruction memoinstruction setrecentblockhash recenthash result value blockhash build wallet account creating sending token associated token account c var recenthash rpcclient getrecentblockhash taking someone ' address derive associated token account address corresponding mint note check person already ha associated token account mint publickey associatedtokenaccountowner new 65eows57dkmewbk4tjkpdm76rnbumq7r3fizjnxggj2g publickey associatedtokenaccount associatedtokenaccountprogram deriveassociatedtokenaccount associatedtokenaccountowner mintaccount byte txbytes new transactionbuilder setrecentblockhash recenthash result value blockhash setfeepayer owneraccount addinstruction associatedtokenaccountprogram createassociatedtokenaccount owneraccount associatedtokenaccountowner mintaccount addinstruction tokenprogram transfer initialaccount associatedtokenaccount 25000 owneraccount owneraccount wa set mint authority addinstruction memoprogram newmemo owneraccount hello sol net build new list account owneraccount string signature rpcclient sendtransaction txbytes instruction decoding c advanced usage package also ha instruction decoder deserialize transaction ' message similar would using web3 j var msg message deserialize msgbase64 decode instruction message friendly structure hold program name instruction name parameter relevant instruction var decodedinstructions instructiondecoder decodeinstructions msg display token balance wallet c load solana token list get rpc client var token tokenmintresolver load var client clientfactory getclient cluster mainnet load snapshot wallet sub account tokenwallet tokenwallet tokenwallet load client token owneraccount var balance tokenwallet balance show individual token account var maxsym balance max x x symbol length var maxname balance max x x tokenname length console writeline individual account foreach var account tokenwallet tokenaccounts console writeline account symbol padright maxsym account balancedecimal 14 account tokenname padright maxname account publickey account isassociatedtokenaccount ata console writeline sending spl token c var wallet new wallet mnemonicwords var owneraccount wallet getaccount 10 fee payer load wallet token account var client clientfactory getclient cluster mainnet logger var tokendefs new tokenmintresolver var tokenwallet tokenwallet load client tokendefs owneraccount find source fund var source tokenwallet tokenaccounts fortoken wellknowntokens serum withatleast 12 75m firstordefault single line spl send sends 12 75 srm target wallet ata required ata created funded owneraccount transaction signed txbuilder callback avoid passing private key scope var sig tokenwallet send source 12 75m target txbuilder txbuilder build owneraccount console writeline tx sig support consider supporting u sol address oaksgkfwkfzwcniycf35zvxhdpexq3kexntila7rcsp mango ref link http trade mango market ref mangosharp contribution encourage everyone contribute submit issue pr discus every kind help welcome maintainer hugo murlokito http github com murlokito tiago tiago http github com tiago18c see also list contributor http github com bmresearch solnet contributor participated project license project licensed mit license see license http github com bmresearch solnet blob master license file detail
/messari/subgraphs,TypeScript,subgraphs repo contains subgraphs defined using set standardized schema subgraphs used extract raw blockchain data transform meaningful metric product analytics goal build subgraph every defi protocol space contribution guideline decide protocol want build subgraph fork repository add folder subgraphs name protocol want work copy corresponding schema root folder example working yield aggregator copy schema yield graphql folder rename schema graphql note schema common graphql used schema design reference never used implementation build subgraph within folder feel free use reference subgraph subgraphs reference reference submit pr pull request repo done make sure submit pr draft ' work progress include link deployment pr description recommended development workflow start understanding protocol easy start could interacting protocol ui testnets check transaction detail etherscan pay attention key event emitted go smart contract identify one need pull data usually protocol ha factory contract ' responsible tracking contract e g uniswap ' factory contract aave ' lending pool registry yearn ' registry also pool vault contract ' responsible pool level bookkeeping transaction e g uniswap ' pair contract yearn ' vault contract aave ' lending pool contract go schema think data needed smart contract event call map field entity ' easiest start granular entity build aggregated data example usually ' easier start writing mapping transaction usage metric go document doc folder answer lot question may implement mapping deploy test data using either hosted service graph studio metric calculation e g revenue fee tvl please refer readme md protocol ' subgraph folder methodology also broader explanation different field defined schema doc schema md feel free reach anything ' clear ' built handy debugging validation dashboard quickly visualize data subgraph ' deployed subgraphs xyz http subgraphs xyz source code dashboard want spin locally verify subgraph source include specific link source readme common source project ' official analytics dashboard defi llama http defillama com tvl dune analytics http dune xyz tokenterminal http www tokenterminal com terminal contributing guideline please refer contributing md doc contributing md resource introductory learn basic graphql http graphql org learn http graphql org learn query subgraphs using graphql http thegraph com doc en developer graphql api get familiar graph http thegraph academy developer http thegraph academy developer defining subgraph http thegraph academy developer defining subgraph http thegraph academy developer defining subgraph creating subgraph http thegraph com doc en developer create subgraph hosted deploying subgraph using graph studio http thegraph com doc en studio deploy subgraph studio http thegraph com doc en studio deploy subgraph studio intermediate assemblyscript api http thegraph com doc en developer assemblyscript api unit test using matchstick http thegraph com doc en developer matchstick building subgraph sushiswap http doc simplefi finance subgraph development documentation sushiswap subgraph development building subgraph loopring http www youtube com watch v snmzhwlqqgu using template dynamic data source indexing proxy advanced building ambitious subgraphs part http www youtube com watch v 4v2o5yjooom schema design error handling interface union type building ambitious subgraphs part ii http www youtube com watch v 1 8aw lvfra performance tip trick mapping query documentation graph node http github com graphprotocol graph node tree master doc development status progress feature complete additional testing required production ready protocol status version deployment dex amm apeswap http apeswap finance 1 3 0 1 1 6 1 0 0 apeswap bsc doc image chain bsc png http thegraph com hosted service subgraph messari apeswap bsc apeswap polygon doc image chain matic png http thegraph com hosted service subgraph messari apeswap polygon balancer v2 http balancer fi 1 3 0 1 1 3 1 0 0 balancer v2 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari balancer v2 ethereum balancer v2 arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari balancer v2 arbitrum balancer v2 polygon doc image chain matic png http thegraph com hosted service subgraph messari balancer v2 polygon bancor v3 http try bancor network 1 3 0 1 0 0 1 0 0 bancor v3 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari bancor v3 ethereum beethoven x http beet fi 1 3 0 1 1 3 1 0 0 beethoven x fantom doc image chain fantom png http thegraph com hosted service subgraph messari beethoven x fantom beethoven x optimism doc image chain optimism png http thegraph com hosted service subgraph messari beethoven x optimism curve http curve fi 1 2 1 1 0 0 1 0 0 curve finance gnosis doc image chain xdai png http thegraph com hosted service subgraph messari curve finance gnosis curve finance polygon doc image chain matic png http thegraph com hosted service subgraph messari curve finance polygon curve finance arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari curve finance arbitrum curve finance optimism doc image chain optimism png http thegraph com hosted service subgraph messari curve finance optimism curve finance fantom doc image chain fantom png http thegraph com hosted service subgraph messari curve finance fantom curve finance avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari curve finance avalanche curve finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari curve finance ethereum ellipsis finance http ellipsis finance 1 2 1 1 0 0 1 0 0 ellipsis finance bsc doc image chain bsc png http thegraph com hosted service subgraph messari ellipsis finance bsc dodo v2 honeyswap http honeyswap org 1 3 0 1 0 3 1 0 1 honeyswap gnosis doc image chain xdai png http thegraph com hosted service subgraph messari honeyswap gnosis mm finance http mm finance 1 3 0 1 0 2 1 0 0 mm finance cronos doc image chain cronos png http graph cronoslabs com subgraphs name messari mm finance mm finance polygon doc image chain matic png http thegraph com hosted service subgraph messari mm finance polygon platypus finance http platypus finance 1 3 0 1 3 0 1 0 0 platypus avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari platypus finance avalanche quickswap http quickswap exchange swap 1 3 0 1 0 3 1 0 0 quickswap polygon doc image chain matic png http thegraph com hosted service subgraph messari quickswap polygon saddle finance http saddle finance 1 3 0 1 1 0 1 0 0 saddle finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari saddle finance ethereum saddle finance arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari saddle finance arbitrum saddle finance fantom doc image chain fantom png http thegraph com hosted service subgraph messari saddle finance fantom saddle finance optimism doc image chain optimism png http thegraph com hosted service subgraph messari saddle finance optimism solarbeam http solarbeam io 1 3 0 1 1 4 1 0 0 solarbeam moonriver doc image chain moonriver png http thegraph com hosted service subgraph messari solarbeam moonriver spiritswap http www spiritswap finance 1 3 0 1 1 4 1 0 0 spiritswap fantom doc image chain fantom png http thegraph com hosted service subgraph messari spiritswap fantom spookyswap http spooky fi 1 3 0 1 1 5 1 0 0 spookyswap fantom doc image chain fantom png http thegraph com hosted service subgraph messari spookyswap fantom sushiswap http www sushi com 1 3 0 1 1 8 1 0 0 sushiswap ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari sushiswap ethereum sushiswap celo doc image chain celo png http thegraph com hosted service subgraph messari sushiswap celo sushiswap fuse doc image chain fuse png http thegraph com hosted service subgraph messari sushiswap fuse sushiswap moonriver doc image chain moonriver png http thegraph com hosted service subgraph messari sushiswap moonriver sushiswap moonbeam doc image chain moonbeam png http thegraph com hosted service subgraph messari sushiswap moonbeam sushiswap avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari sushiswap avalanche sushiswap bsc doc image chain bsc png http thegraph com hosted service subgraph messari sushiswap bsc sushiswap arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari sushiswap arbitrum sushiswap fantom doc image chain fantom png http thegraph com hosted service subgraph messari sushiswap fantom sushiswap polygon doc image chain matic png http thegraph com hosted service subgraph messari sushiswap polygon sushiswap gnosis doc image chain xdai png http thegraph com hosted service subgraph messari sushiswap gnosis sushiswap harmony doc image chain harmony png http thegraph com hosted service subgraph messari sushiswap harmony trader joe http traderjoexyz com home 1 3 0 1 1 5 1 0 0 trader joe avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari trader joe avalanche ubeswap http ubeswap org 1 3 0 1 1 6 1 0 0 ubeswap celo doc image chain celo png http thegraph com hosted service subgraph messari ubeswap celo uniswap v2 http uniswap org 1 3 0 1 1 6 1 0 0 uniswap v2 doc image chain ethereum png http thegraph com hosted service subgraph messari uniswap v2 ethereum uniswap v3 http uniswap org 1 3 0 1 1 1 1 0 0 uniswap v3 doc image chain ethereum png http thegraph com hosted service subgraph messari uniswap v3 ethereum uniswap v3 polygon doc image chain matic png http thegraph com hosted service subgraph messari uniswap v3 polygon uniswap v3 optimism doc image chain optimism png http thegraph com hosted service subgraph messari uniswap v3 optimism uniswap v3 arbtitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari uniswap v3 arbitrum uniswap v3 celo doc image chain celo png http thegraph com hosted service subgraph messari uniswap v3 celo velodrome http velodrome finance vvs finance http vvs finance 1 3 0 1 1 7 1 0 0 vvs finance cronos doc image chain cronos png http graph cronoslabs com subgraphs name messari vvs finance lending protocol aave v2 http aave com 2 0 1 1 2 13 1 0 0 aave v2 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari aave v2 ethereum aave v2 ethereum arc doc image chain ethereum png http thegraph com hosted service subgraph messari aave arc ethereum aave v2 ethereum rwa doc image chain ethereum png http thegraph com hosted service subgraph messari aave rwa ethereum aave v2 ethereum amm doc image chain ethereum png http thegraph com hosted service subgraph messari aave amm ethereum aave v2 avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari aave v2 avalanche aave v2 polygon doc image chain matic png http thegraph com hosted service subgraph messari aave v2 polygon aave v3 http aave com 2 0 1 1 0 3 1 0 0 aave v3 optimism doc image chain optimism png http thegraph com hosted service subgraph messari aave v3 optimism aave v3 polygon doc image chain matic png http thegraph com hosted service subgraph messari aave v3 polygon aave v3 harmony doc image chain harmony png http thegraph com hosted service subgraph messari aave v3 harmony aave v3 fantom doc image chain fantom png http thegraph com hosted service subgraph messari aave v3 fantom aave v3 avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari aave v3 avalanche aave v3 arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari aave v3 arbitrum aurigami http www aurigami finance 2 0 1 1 1 3 1 0 0 aurigami aurora doc image chain aurora png http thegraph com hosted service subgraph messari aurigami aurora alpaca finance lend http app alpacafinance org lend bastion protocol http bastionprotocol com 2 0 1 1 1 3 1 0 0 bastion protocol aurora doc image chain aurora png http thegraph com hosted service subgraph messari bastion protocol aurora banker joe http traderjoexyz com lending 2 0 1 1 1 4 1 0 0 banker joe avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari banker joe avalanche benqi http benqi fi 2 0 1 1 1 3 1 0 0 benqi avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari benqi avalanche compound http compound finance 2 0 1 1 7 3 1 0 0 compund ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari compound v2 ethereum cream finance http cream finance 2 0 1 1 1 3 1 0 0 cream finance arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari cream finance arbitrum cream finance polygon doc image chain matic png http thegraph com hosted service subgraph messari cream finance polygon cream finance bsc doc image chain bsc png http thegraph com hosted service subgraph messari cream finance bsc cream finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari cream finance ethereum dforce http dforce network 2 0 1 1 1 3 1 0 0 dforce arbitrum doc image chain arbitrum png dforce avalanche doc image chain avalanche png dforce bsc doc image chain bsc png dforce ethereum doc image chain ethereum png dforce optimism doc image chain optimism png dforce polygon doc image chain matic png euler finance http www euler finance 1 3 0 1 1 0 1 0 0 euler finance doc image chain ethereum png http thegraph com hosted service subgraph messari euler finance ethereum geist finance http geist finance market 2 0 1 1 0 9 1 0 0 geist protocol doc image chain fantom png http thegraph com hosted service subgraph messari geist fantom iron bank http app ib xyz 2 0 1 1 1 1 1 0 0 iron bank fantom doc image chain fantom png http thegraph com hosted service subgraph messari iron bank fantom iron bank avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari iron bank avalanche iron bank ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari iron bank ethereum maple finance http www maple finance 1 3 0 1 1 0 1 0 0 maple finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari maple finance ethereum moonwell finance http moonwell fi 2 0 1 1 1 1 1 0 0 moonwell moonriver doc image chain moonriver png http thegraph com hosted service subgraph messari moonwell moonriver moonwell moonbeam doc image chain moonbeam png http thegraph com hosted service subgraph messari moonwell moonbeam notional finance radiant rari fuse http app rari capital fuse 2 0 1 1 1 3 1 0 0 rari fuse ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari rari fuse ethereum rari fuse arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari rari fuse arbitrum scream http scream sh 2 0 1 1 1 3 1 0 0 scream fantom doc image chain fantom png http thegraph com hosted service subgraph messari scream fantom truefi tectonic http tectonic finance 2 0 1 1 1 4 1 0 0 tectonic cronos doc image chain cronos png http graph cronoslabs com subgraphs name messari tectonic graphql venus protocol http venus io 2 0 1 1 1 4 1 0 0 venus protocol bsc doc image chain bsc png http thegraph com hosted service subgraph messari venus protocol bsc yeti finance http yeti finance cdps abracadabra http abracadabra money 2 0 1 1 2 8 1 0 0 abracadabra money doc image chain ethereum png http thegraph com hosted service subgraph messari abracadabra money ethereum abracadabra money doc image chain bsc png http thegraph com hosted service subgraph messari abracadabra money bsc abracadabra money doc image chain arbitrum png http thegraph com hosted service subgraph messari abracadabra money arbitrum abracadabra money doc image chain fantom png http thegraph com hosted service subgraph messari abracadabra money fantom abracadabra money doc image chain avalanche png http thegraph com hosted service subgraph messari abracadabra money avalanche inverse finance http www inverse finance 1 3 0 1 2 2 1 0 0 inverse finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari inverse finance ethereum liquity http www liquity org 2 0 1 1 2 0 1 0 1 liquity ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari liquity ethereum makerdao http makerdao com en 1 3 0 1 2 0 1 0 1 makerdao ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari makerdao ethereum qidao http app mai finance 1 3 0 1 1 0 1 0 0 qidao arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari qidao arbitrum qidao avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari qidao avalanche qidao bsc doc image chain bsc png http thegraph com hosted service subgraph messari qidao bsc qidao fantom doc image chain fantom png http thegraph com hosted service subgraph messari qidao fantom qidao polygon doc image chain matic png http thegraph com hosted service subgraph messari qidao polygon qidao moonriver doc image chain moonriver png http thegraph com hosted service subgraph messari qidao moonriver qidao optimism doc image chain optimism png http thegraph com hosted service subgraph messari qidao optimism qidao gnosis doc image chain xdai png http thegraph com hosted service subgraph messari qidao gnosis synthetix vesta finance http vestafinance xyz yield aggregator alchemix aura arrakis finance http www arrakis finance 1 3 0 1 0 1 1 0 0 arrakis ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari arrakis finance ethereum badgerdao http badger com 1 3 0 1 0 0 1 0 0 badgerdao ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari badgerdao ethereum beefy finance http beefy finance 1 2 1 1 0 2 1 1 0 beefy finance harmony doc image chain harmony png http thegraph com hosted service subgraph messari beefy finance harmony beefy finance moonbeam doc image chain moonbeam png http thegraph com hosted service subgraph messari beefy finance moonbeam beefy finance celo doc image chain celo png http thegraph com hosted service subgraph messari beefy finance celo beefy finance aurora doc image chain aurora png http thegraph com hosted service subgraph messari beefy finance aurora beefy finance fuse doc image chain fuse png http thegraph com hosted service subgraph messari beefy finance fuse beefy finance moonriver doc image chain moonriver png http thegraph com hosted service subgraph messari beefy finance moonriver beefy finance arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari beefy finance arbitrum beefy finance avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari beefy finance avalanche beefy finance polygon doc image chain matic png http thegraph com hosted service subgraph messari beefy finance polygon beefy finance bsc doc image chain bsc png http thegraph com hosted service subgraph messari beefy finance bsc beefy finance fantom doc image chain fantom png http thegraph com hosted service subgraph messari beefy finance fantom belt finance http belt fi landing 1 2 1 1 0 0 1 0 0 belt bsc doc image chain bsc png http thegraph com hosted service subgraph messari belt finance bsc convex finance http www convexfinance com 1 3 0 1 2 0 1 0 0 convex finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari convex finance ethereum gamma strategy http www gamma xyz 1 3 0 1 1 2 1 0 0 gamma ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari gamma ethereum gamma polygon doc image chain matic png http thegraph com hosted service subgraph messari gamma polygon harvest finance liquid driver rari vault http rari capital 1 3 0 1 4 1 1 0 0 rari vault ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari rari vault ethereum stake dao http stakedao org 1 3 0 1 3 0 1 0 0 stake dao doc image chain ethereum png http thegraph com hosted service subgraph messari stake dao ethereum tokemak http www tokemak xyz 1 2 1 1 0 0 1 0 0 tokemak doc image chain ethereum png http thegraph com hosted service subgraph messari tokemak ethereum vesper finance http vesper finance 1 3 0 1 0 0 1 0 0 vesper finance ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari vesper ethereum yield yak yearn v2 http yearn fi 1 3 0 1 2 0 1 0 0 yearn v2 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari yearn v2 ethereum yearn v2 arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari yearn v2 arbitrum yearn v2 fantom doc image chain fantom png http thegraph com hosted service subgraph messari yearn v2 fantom others lido http lido fi 1 3 0 1 0 0 1 0 0 lido ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari lido ethereum rocket pool tornado cash graph governance fei governor 1 0 0 1 0 0 1 0 0 fei governor doc image chain ethereum png http thegraph com hosted service subgraph messari fei governance en governor 1 0 0 1 0 0 1 0 0 en governor doc image chain ethereum png http thegraph com hosted service subgraph messari en governance hop governor 1 0 0 1 0 0 1 0 0 hop governor doc image chain ethereum png http thegraph com hosted service subgraph messari hop governance truefi governor 1 0 0 1 0 0 1 0 0 truefi governor doc image chain ethereum png http thegraph com hosted service subgraph messari truefi governance euler governor 1 0 0 1 0 0 1 0 0 euler governor doc image chain ethereum png http thegraph com hosted service subgraph messari euler governance silo governor 1 0 0 1 0 0 1 0 0 silo governor doc image chain ethereum png http thegraph com hosted service subgraph messari silo governance unlock governor 1 0 0 1 0 0 1 0 0 unlock governor doc image chain ethereum png http thegraph com hosted service subgraph messari unlock governance angle governor 1 0 0 1 0 0 1 0 0 angle governor doc image chain ethereum png http thegraph com hosted service subgraph messari angle governance code4rena governor 1 0 0 1 0 0 1 0 0 code4rena governor doc image chain matic png http thegraph com hosted service subgraph messari code4rena governance network subgraph evm 1 1 1 1 1 2 1 0 0 network ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari network ethereum network arbitrum doc image chain arbitrum png http thegraph com hosted service subgraph messari network arbitrum network aurora doc image chain aurora png http thegraph com hosted service subgraph messari network aurora network avalanche doc image chain avalanche png http thegraph com hosted service subgraph messari network avalanche network boba doc image chain boba png http thegraph com hosted service subgraph messari network boba network bsc doc image chain bsc png http thegraph com hosted service subgraph messari network bsc network celo doc image chain celo png http thegraph com hosted service subgraph messari network celo network clover doc image chain clover png http thegraph com hosted service subgraph messari network clover network fantom doc image chain fantom png http thegraph com hosted service subgraph messari network fantom network fuse doc image chain fuse png http thegraph com hosted service subgraph messari network fuse network gnosis doc image chain xdai png http thegraph com hosted service subgraph messari network gnosis network harmony doc image chain harmony png http thegraph com hosted service subgraph messari network harmony network moonbeam doc image chain moonbeam png http thegraph com hosted service subgraph messari network moonbeam network moonriver doc image chain moonriver png http thegraph com hosted service subgraph messari network moonriver network optimism doc image chain optimism png http thegraph com hosted service subgraph messari network optimism network polygon doc image chain matic png http thegraph com hosted service subgraph messari network polygon network cronos doc image chain cronos png http graph cronoslabs com subgraphs name messari network cronos cosmos 1 1 1 1 1 2 1 0 0 network cosmos doc image chain cosmos png http thegraph com hosted service subgraph messari network cosmos network osmosis doc image chain osmosis png http thegraph com hosted service subgraph messari network osmosis network juno doc image chain juno png http thegraph com hosted service subgraph messari network juno near 1 1 1 1 1 2 1 0 0 network near doc image chain near png http thegraph com hosted service subgraph messari network near arweave 1 1 1 1 1 2 1 0 0 network arweave doc image chain arweave png http thegraph com hosted service subgraph messari network arweave mainnet erc20 subgraphs erc20 token 2017 1 0 0 1 0 0 1 0 0 erc20 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari erc20 holder 2017 erc20 token 2018 1 0 0 1 0 0 1 0 0 erc20 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari erc20 holder 2018 erc20 token 2019 1 0 0 1 0 0 1 0 0 erc20 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari erc20 holder 2019 erc20 token 2020 1 0 0 1 0 0 1 0 0 erc20 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari erc20 holder 2020 erc20 token 2021 1 0 0 1 0 0 1 0 0 erc20 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari erc20 holder 2021 erc20 token 2022 1 0 0 1 0 0 1 0 0 erc20 ethereum doc image chain ethereum png http thegraph com hosted service subgraph messari erc20 holder 2022 erc721 subgraphs erc721 holder 1 0 0 1 0 0 1 0 0 erc721 holder doc image chain ethereum png http thegraph com hosted service subgraph messari erc721 holder erc721 metadata 1 0 0 1 0 0 1 0 0 erc721 metadata doc image chain ethereum png http thegraph com hosted service subgraph messari erc721 metadata nft marketplace subgraphs opensea v1 wyvern exchange 1 0 0 1 0 0 1 0 0 opensea v1 doc image chain ethereum png http thegraph com hosted service subgraph messari opensea v1 ethereum opensea v2 wyvern exchange 1 0 0 1 0 0 1 0 0 opensea v2 doc image chain ethereum png http thegraph com hosted service subgraph messari opensea v2 ethereum opensea seaport 1 0 0 1 0 0 1 0 0 opensea seaport doc image chain ethereum png http thegraph com hosted service subgraph messari opensea seaport ethereum looksrare 1 0 0 1 0 0 1 0 0 looksrare doc image chain ethereum png http thegraph com hosted service subgraph messari looksrare ethereum sudoswap 1 0 0 1 0 0 1 0 0 x2y2 1 0 0 1 0 0 1 0 0 x2y2 doc image chain ethereum png http thegraph com hosted service subgraph messari x2y2 ethereum version schema version subgraph version methodology version respectively
/manifoldfinance/defi-threat,JavaScript,decentralized finance threat matrix v3 0 3 current release v2022 08 23 303 http github com manifoldfinance defi threat blob secret size attack v3 0 3 md v3 0 2 previous release v2022 06 13 302 advisory publishing security advisory http github com manifoldfinance defi threat security advisory http github com manifoldfinance defi threat security advisory link latest published one http github com manifoldfinance defi threat security advisory state published change v3 0 3 new attack secret size attack new category interchain id 006 v3 0 2 new attack br ex post ex ante reorg chain br compiler optimizing error solidity br bgp routing hijacking chain abstract work inspired attack mitre org http attack mitre org please use attack normal infosec dev sys security check listing meant specialized towards unique issue brought blockchain cryptocurrency application e protocol repository structure libtx transaction library example transaction hack uml format src source latest defi threat mapping matrix provided mediawiki tsv format overview threat matrix version v3 0 3 2022 08 001 &#9; 002 &#9; 003 &#9; 004 &#9; 005 &#9; &#9; &#9; &#9; &#9; &#9; market attack &#9; economic attack &#9; chain &#9; chain &#9; solidity &#9; front running &#9; arrears liability &#9; price feed &#9; timestamp dependence &#9; integer overflow underflow &#9; coordinated attack &#9; insufficient gas griefing &#9; quote stuffing &#9; admin key &#9; unexpected revert &#9; liquidity pocket &#9; token inflation &#9; spoofing &#9; timelock &#9; block gas limit &#9; quote stuffing &#9; circulating supply attack &#9; credential access &#9; lateral movement &#9; arithmetic flow &#9; wash trading &#9; gas griefing &#9; reentrancy &#9; multi sig key &#9; forcibly sending ether contract &#9; ramping market &#9; network congestion udos &#9; privilage esclation &#9; miner cartel &#9; delegatecall &#9; cornering market &#9; liquidity squeeze &#9; credential access &#9; finality &#9; entropy illusion &#9; churning &#9; governance cartel &#9; encryption protection &#9; honeypot &#9; short address parameter attack &#9; flash loan &#9; interlocking directorate &#9; phishing &#9; red queen &#9; uninitialised storage pointer &#9; aggregated transaction &#9; governance attack &#9; unicode exploit &#9; sole block synchronization &#9; floating point numerical precision &#9; bulge bracket transaction &#9; slippage exploit &#9; api &#9; transaction pool &#9; right left override control character u 202e &#9; layering &#9; safety check exploit &#9; dns attack &#9; performance fee minting &#9; delegatecall untrusted callee &#9; spoofing &#9; circulating supply dump &#9; transaction pool &#9; front running &#9; requirement violation &#9; order book &#9; flash straddle &#9; checksum address &#9; sandwhiching &#9; shadowing state variable &#9; market index calculation attack &#9; structuring &#9; siphon fund &#9; second system effector &#9; transaction order dependence &#9; flash crash &#9; stalking horse &#9; influencers ' &#9; backrunning &#9; assert violation &#9; repo &#9; like asset price divergance &#9; synthetic mint spread &#9; block producer cartel &#9; uninitialized storage pointer &#9; excessive leverage &#9; reserve asset liquidity manipulation &#9; syscall exploit &#9; unlimited permission token approval &#9; unprotected ether withdrawal &#9; breaking buck &#9; stable reserve asset manipulation &#9; container priv esclation &#9; naked call &#9; floating pragma &#9; fake news &#9; price induced oracle volatility &#9; keyctl missuse syscall &#9; block constructor cartel &#9; outdated compiler version &#9; nested bot &#9; fake token trading pair &#9; supply chain dependency &#9; maliciousairdrop &#9; function default visibility &#9; audience bot &#9; volume manipulation circulating flashloan &#9; compiled output destructuring const value &#9; oracle halt multisig &#9; msg sender &#9; arb exploit &#9; persistant de peg instability &#9; browser browser attack &#9; ex ante reorg &#9; wallet balance &#9; cascading loan failure &#9; unexpected fee transfer &#9; man blotter &#9; ex post reorg &#9; compiler optimizer optimizing &#9; &#9; &#9; bgp routing &#9; nonstandard proxy implementation &#9; math operation differ certain pragmas &#9; &#9; &#9; ip4 ip6 misconfiguration &#9; tyranny majority &#9; uninitialized contract &#9; &#9; &#9; &#9; secret size attack &#9; &#9; v2 matrix reference use protocol interaction based blockchain transaction based non blockchain source blockchain source swc registry solidity exploit market attack economic attack chain chain solidity front running front running price feed timestamp dependence integer overflow underflow coordinated attack insufficient gas griefing quote stuffing admin key unexpected revert liquidity pocket token inflation spoofing timelock block gas limit quote stuffing circulating supply attack credential access lateral movement arithmetic flow wash trading gas griefing reentrancy multi sig key forcibly sending ether contract ramping market network congestion udos privilege escalation miner cartel delegatecall cornering market liquidity squeeze credential access finality entropy illusion churning smurfing encryption protection short address parameter attack flash loan phishing uninitialised storage pointer aggregated transaction unicode exploit floating point numerical precision bulge bracket transaction api right left override control character u 202e layering blockchain transaction based dns attack delegatecall untrusted callee spoofing governance attack transaction pool transaction pool requirement violation order book interlocking directorate checksum address shadowing state variable market index calculation attack governance cartel siphon fund transaction order dependence flash crash assert violation repo stalking horse synthetic mint spread sole block synchronization uninitialized storage pointer excessive leverage syscall exploit unprotected ether withdrawal breaking buck container priv esclation floating pragma fake news keyctl missuse syscall outdated compiler version nested bot function default visibility audience bot influencers ' arb exploit slippage exploit safety check exploit circulating supply dump governance cartel flash straddle structuring back running uml diagram real world attack example fake trading volume uniswapv2 http pr 5vsxd4 jpeg contribution acknowledgement ali atiia br john mardlin br raul jack br samczsun br sam bacha br james zaki br v1 sheet defi sec matrix sheet http doc google com spreadsheet 1st4bxwpezdcdah5z4nnodrerfaxfdz4ouhofi ebkgc edit usp sharing v2 sheet defi sec page http doc google com spreadsheet e 2pacx 1vr5unbx4m9sg43fo76ewetena1l 4zo82lqsjumr3uuzpe7lurnakg8jzpg0ybnsdtuoy5nvgsdwpc1 pubhtml update sheet found ' legend ' section license software component mozilla public license 2 0 br cve swc licensed respective author ' license br everything else cc 2 5 nc nd would like exemption license pleasae contact sam manifoldfinance com
/smartcontractkit/defi-minimal,JavaScript,defi minimal repo dedicated making minimal repos existing defi primatives exclamation warning none contract audited completed unreviewed minimal contract lending sol based aave http aave com staking sol based synthetix http synthetix io rewardtoken sol based synthetix http synthetix io exchange sol factory sol token sol based uniswap v1 http doc uniswap org protocol v1 introduction used pricing formula documented doc uniswap v1 decentralizedstablecoin based dai centralizedstablecoin based usdc uncompleted option sol based nothing minimal contract swap sol based uniswap http uniswap org show smart contract integrate uniswap like dex table content defi minimal defi minimal completed unreviewed minimal contract completed unreviewed minimal contract uncompleted uncompleted minimal contract minimal contract table content table content getting started getting started requirement requirement quickstart quickstart usage usage deploying contract deploying contract run local network run local network using testnet live network like mainnet polygon using testnet live network like mainnet polygon rinkeby ethereum testnet setup rinkeby ethereum testnet setup code formating code formating slither static analysis slither static analysis contributing contributing thank thank resource resource getting started ' recommended ' gone hardhat getting started documentation http hardhat org getting started proceeding requirement git http git scm com book en v2 getting started installing git ' know right run git version see response like git version x x x nodejs http nodejs org en ' know ' installed nodejs right run node version get ouput like vx x x yarn http classic yarnpkg com lang en doc install instead npm ' know ' installed yarn right run yarn version get output like x x x might need install npm ' familiar npx npm instead yarn use npx execution npm installing dependency quickstart 1 clone install dependency installing requirement run following bash git clone http github com smartcontractkit defi minimal cd defi minimal yarn npm 2 stuff yarn hardhat test npx hardhat test usage run yarn hardhat help ' get output task run deploying contract yarn hardhat deploy deploy contract local network additionally local network deploy mock chainlink contract interact ' like interact deployed contract skip interacting deployed contract interacting deployed contract run local network one best way test interact smart contract local network run local network contract run following yarn hardhat node ' get local blockchain private key contract deployed deploy folder script endpoint potentially add evm wallet using testnet live network like mainnet polygon hardhat config j ' see section like module export defaultnetwork hardhat network section file define network want interact read whole file hardhat documentation http hardhat org config interact live test network ' need 1 rpc url 2 private key 3 eth link token either testnet real let ' look example setting using rinkeby testnet rinkeby ethereum testnet setup first need set environment variable setting env file create ' also read environment variable http www twilio com blog 2017 01 set environment variable html linked twilio blog ' find sample file look like env example important make sure ' dont expose key put env file mean ' push public repo please try keep key use development associated real fund 1 set rinkeby rpc url environment variable http www twilio com blog 2017 01 set environment variable html get one free alchmey http www alchemy com infura http infura io moralis http moralis io speedy node connection blockchain 2 set private key environment variable private key wallet ie metamask http metamask io needed deploying contract public network optionally set mnemonic environment variable instead change hardhat config j warning http via placeholder com 15 f03c15 000000 text warning warning http via placeholder com 15 f03c15 000000 text developing ' best practice use metamask ' associated real money good way make new browser profile chrome brave firefox etc install metamask brower never send wallet money ' commit push change env file may contain sensitive information private key information reach public github repository someone use check mainnet fund wallet address steal env example rinkeby rpc url ' www infura io asdfadsfafdadf ' private key ' abcdef ' bash example export rinkeby rpc url ' www infura io asdfadsfafdadf ' export private key ' abcdef ' also use mnemonic instead private key environment variable uncommenting section hardhat config j commenting private key line however recommended network like mainnet polygon use different environment variable rpc url private key see hardhat config j learn 3 get rinkeby testnet eth link head chainlink faucet http faucet chain link get eth link please follow chainlink documentation http doc chain link doc acquire link unfamiliar code formating format javascript solidity look nicer yarn format slither static analysis ' need python http www python org downloads slither http github com crytic slither installed yarn slither contributing contribution always welcome open pr issue thank resource chainlink documentation http doc chain link hardhat documentation http hardhat org getting started solidity example http solidity example org
/sablierhq/sablier,JavaScript,sablier circleci http circleci com gh sablierhq sablier svg style svg http circleci com gh sablierhq sablier coverage status http coverall io repos github sablierhq sablier badge svg branch develop http coverall io github sablierhq sablier branch develop styled prettier http img shield io badge code style prettier ff69b4 svg http prettier io commitizen friendly http img shield io badge commitizen friendly brightgreen svg http commitizen github io cz cli license lgpl3 0 http img shield io badge license lgpl 20v3 008033 svg http opensource org license lgpl 3 0 source code sablier token streaming protocol start faq http doc sablier finance protocol faq basic get high level understanding sablier work see doc http doc sablier finance want integrate project package description sablier dev utils package dev utils dev utils shared across sablier project package sablier protocol package protocol core token streaming protocol sablier shared contract package shared contract smart contract shared across sablier project package usage hammer pick compile smart contract bootstrap monorepo open package ' like work example instruction sablier protocol bash yarn run bootstrap cd package protocol truffle compile truffle migrate reset network development alternatively simply want use apps head pay sablier finance http pay sablier finance create stream app sablier finance http app sablier finance withdraw stream ' need ethereum wallet erc20 token contributing raising hand woman highly encourage participation community help shape development sablier interested contributing question ping u discord http discord gg kxajcxc use yarn http yarnpkg com dependency manager truffle http github com trufflesuite truffle development environment compiling testing deploying contract contract written solidity http github com ethereum solidity requirement yarn 1 17 3 truffle 5 0 35 solidity 0 5 17 pre requisite make sure using yarn 1 17 3 install using homebrew bash brew install yarn install dependency bash yarn install watch build package change bash yarn watch clean clean package bash yarn clean clean specific package bash pkg sablier protocol yarn clean lint lint package bash yarn lint lint specific package bash pkg sablier protocol yarn lint prettier run prettier package bash yarn prettier prettier cannot run individual package test run test bash yarn test run test specific package bash pkg sablier protocol yarn test
/fintechees/Expert-Advisor-Studio,JavaScript,h1 align center expert advisor studio h1 div align center sophisticated github repository creating expert advisor trading robot making automated trading doable web browser div br div align center href http www fintechee com feature fix api img src http img shield io badge fix api fintechee red alt fintechee fintech trading platform fix api expert advisor studio white label href http www fintechee com web trader img src http img shield io badge web trader fintechee yellow alt fintechee fintech trading platform web trader expert advisor studio white label href http twitter com fintechee1 img alt fintechee expert advisor studio twitter src http img shield io badge social twitter steelblue div div align center href http www linkedin com marksea img src http img shield io badge founder fintechee red alt fintechee founder expert advisor studio creator href http www angelinvestmentnetwork org img src http img shield io badge investor fintech angel orange alt fintechee angel investment network fintech industry div br div align center sub created href http www fintechee com fintechee sub div div align center img src http raw githubusercontent com fintechee expert advisor studio master c cpp compiler gif alt expert advisor studio fintechee ' c mql compiler align center img src http raw githubusercontent com fintechee expert advisor studio master architecture png alt expert advisor studio fintechee ' architecture align center div br news fintechee io http fintechee io new marketplace ea developer c c mql based ea indicator sold digital product sold via fintechee io copyright protected digital signature tech download link expire several minute order created today aug 12th 2022 ' released listed ea simplescalping production 10 algo based martingale ' stable patient enough use bigger time frame currently payment gateway connected paypal ' sandbox replace sandbox version live payment gateway end sep 2022 paypal test developer account get ea free month fix bridge individual version web trader ' backend created new version fix bridge individual trader ' free forever download link http www fintechee com asset fix api fintecheefixbridge 7z campaign 2022 started new campaign 2022 everyone get free license use fix api trading platform individual version match one condition license expire end 2022 partner ' client b github user c youtuber coupon updated campaign page http www fintechee com marketing campaign update necessary file fix api trading platform individual version regularly github repository http github com fintechee fix api pro community trading signal built forum sharing trading signal trading skill http www fintechee org http www fintechee com shared html feature table tr td strong web based strong td td javascript sdk td tr tr td strong compatibility strong td td compatible c c mql td tr tr td strong data strong td td import data historical streaming long data source td tr tr td strong auto market maker strong td td send transaction blockchains ' swap smart contract via market maker bot td tr tr td strong crypto payment gateway strong td td integration crypto wallet scatter metamask td tr tr td strong ai enabled strong td td integration artificial intelligence ai td tr tr td strong dex strong td td integration dex clearing house td tr tr td strong technical strong td td custom indicator create compound indicator make indicator calculated based another indicator td tr tr td strong trading option strong td td analyze bitcoin ether ' option using plugins td tr tr td strong fix api strong td td fix api individual version browser local java package fix api straightforward td tr tr td strong white label enabled strong td td offer fix api institutional version dashboard broker ' manager td tr tr td strong mfa enabled strong td td multiple factor authentication make trading secure td tr tr td strong app supported strong td td app android already listed website published google play td tr tr td strong ea code generator strong td td offer toolkits generating expert advisor source code td tr tr td strong trading instrument strong td td fix api based backend support spread betting td tr tr td strong price aggregator strong td td 20 liquidity provider backend support automated order router make trade via cheapest trading channel td tr tr td strong mam based frontend strong td td multiple account management frontend useful trading arbitrage td tr tr td strong mam based backend strong td td fix api support mam make platform operable individual td tr tr td strong multiple chart management strong td td web trader terminal trader room designed responsive ui layout td tr tr td strong investor mode strong td td investor mode guest mode read allowed td tr tr td strong binance api strong td td integration binance api backend td tr tr td strong trading chaos strong td td ea based trading chaos bill williams ' book td tr tr td strong many feature strong td td many feature explore td tr table usage received lot question asked use javasacript file repository actually usage different nodejs ' need use node xxx j run ' much easier run browser based need open web trader fintechee copy paste source code console panel web trader click run button everything done file repo indepenedent use respectively ea indicator stored local browser never uploaded server side use web localstorage secret trading strategy protected simple manual http github com fintechees expert advisor studio blob master simple manual txt web trader http www fintechee com web trader plugins ' usage http www fintechee com plugins compile c c mql http www fintechee com expert advisor cpp compiler live stream started live stream youtube please access video stream page see trade arbitrage real time fix api quote v oanda recommendation http twitter com fintechee1 expert advisor studio trading arbitrage fix api v oanda via fintechee http github com fintechee expert advisor studio blob master arbitrageyoutube png expert advisor studio trading arbitrage fix api v oanda via fintechee http github com fintechee expert advisor studio blob master arbitragechance png alternative http www fintechee com videostreaming please access demo run ea http www fintechee com ' know use ea please check youtube channel tutorial http www youtube com channel ucjbs l6ruxhtzlfrhduvgsg find source code tutorial http github com fintechee tutorial please check github wiki http github com fintechee expert advisor studio wiki know detail apis please check tutorial http www fintechee com expert advisor cpp compiler learn use nodejs package http github com fintechee expert advisor cpp compiler compile c c mql based program expert advisor studio fintechee screenshot http www fintechee com vpimages service newscreenshot1 png expert advisor studio fintechee ' ecosystem http raw githubusercontent com fintechee expert advisor studio master ecosystem png expert advisor studio expert advisor c c mql compiler http raw githubusercontent com fintechee expert advisor studio master cppcompiler png expert advisor studio fintechee custom indicator http raw githubusercontent com fintechee expert advisor studio master analyzestructure png expert advisor studio fintechee app screenshot1 http raw githubusercontent com fintechee expert advisor studio master mobile1 png expert advisor studio fintechee app screenshot2 http raw githubusercontent com fintechee expert advisor studio master mobile2 png expert advisor studio fintechee app screenshot3 http raw githubusercontent com fintechee expert advisor studio master mobile3 png expert advisor studio fintechee app screenshot4 http raw githubusercontent com fintechee expert advisor studio master mobile4 png expert advisor studio fintechee app screenshot0 http raw githubusercontent com fintechee expert advisor studio master mobile0 png expert advisor studio fintechee app screenshot5 http raw githubusercontent com fintechee expert advisor studio master mobile5 png expert advisor studio fintechee app screenshot6 http raw githubusercontent com fintechee expert advisor studio master mobile6 png expert advisor studio fintechee app screenshot7 http raw githubusercontent com fintechee expert advisor studio master mobile7 png expert advisor studio fintechee app screenshot8 http raw githubusercontent com fintechee expert advisor studio master mobile8 png release note 2020 7 7 three apis modified added parameter 1 sendorder 2 modifyorder 3 closetrade 2021 2 22 added one api improve performance 1 getcurrenttick 2021 3 3 two apis modified 1 registerindicator added three parameter api callback function oninit ondeinit onrender added extend function fintechee make indicator much easier manage monitor add indicator chart oninit callback function would called remove indicator chart ondeinit function would called main callback function called onrender function would triggered onrender function useful add renderer platform platform ' renderer based d3js familiar use alternative j chart system chartjs callback function new feature platform parameter fortunately api compatible older version ' need modify old indicator 2 registerea added one parameter api ' callback function receive message transaction wa triggered example send order backend ' need block process everything platform async continue analysis make callback function available wait notification backend order filled new trade opened get notified callback function new feature platform parameter fortunately api compatible older version ' need modify old ea 2021 9 18 added three apis useful ontransaction event triggered 1 getlatesttransbrokername 2 getlatesttransaccountid 3 getlatesttrans javascript var broker name &#9; demo cc demo var time frame &#9; m1 m1 &#9; m5 m5 &#9; m15 m15 &#9; m30 m30 &#9; h1 h1 &#9; h4 h4 &#9; &#9; w w &#9; var order type &#9; op buy buy &#9; op sell sell &#9; op buylimit buy limit &#9; op selllimit sell limit &#9; op buystop buy stop &#9; op sellstop sell stop var render &#9; chart window chart window &#9; separate window separate window var data name &#9; time time &#9; open open &#9; high high &#9; low low &#9; close close &#9; hl2 hl2 &#9; hlc3 hlc3 &#9; hlcc4 hlcc4 var render type &#9; histogram histogram &#9; line line &#9; round round &#9; dasharray dasharray var parameter type &#9; integer integer &#9; number number &#9; boolean boolean &#9; string string common function javascript function sma datainput dataoutput calculatedlength period &#9; var calculatedlength &#9; calculatedlength 0 &#9; &#9; &#9; else &#9; &#9; var j 0 j period 1 j &#9; &#9; &#9; dataoutput j 0 &#9; &#9; &#9; &#9; period 1 &#9; &#9; var sum 0 &#9; var j period 1 j j &#9; &#9; sum datainput j &#9; &#9; var j j datainput length j &#9; &#9; sum datainput j &#9; &#9; dataoutput j sum period &#9; &#9; sum datainput j period 1 &#9; function ema datainput dataoutput calculatedlength period &#9; var calculatedlength &#9; var smthfctr 2 0 period 1 &#9; 0 &#9; &#9; dataoutput 0 datainput 0 &#9; &#9; &#9; else 1 &#9; else &#9; &#9; &#9; &#9; datainput length &#9; &#9; dataoutput datainput smthfctr dataoutput 1 1 smthfctr &#9; &#9; &#9; function smma datainput dataoutput calculatedlength period &#9; var calculatedlength &#9; var sum 0 &#9; 0 &#9; &#9; &#9; else &#9; &#9; period 1 &#9; &#9; var j 1 j period j &#9; &#9; &#9; dataoutput j 0 &#9; &#9; &#9; sum datainput j &#9; &#9; &#9; &#9; sum datainput &#9; &#9; dataoutput sum period &#9; &#9; &#9; &#9; datainput length &#9; &#9; sum dataoutput 1 period dataoutput 1 datainput &#9; &#9; dataoutput sum period &#9; &#9; &#9; function lwma datainput dataoutput calculatedlength period &#9; var calculatedlength &#9; 0 &#9; &#9; &#9; else &#9; &#9; var j 0 j period 1 j &#9; &#9; &#9; dataoutput j 0 &#9; &#9; &#9; &#9; period 1 &#9; &#9; var sum 0 &#9; var diffsum 0 &#9; var weight 0 &#9; var j 1 j period j &#9; &#9; sum datainput j period j &#9; &#9; diffsum datainput j &#9; &#9; weight j &#9; &#9; weight period &#9; datainput length &#9; &#9; sum datainput period &#9; &#9; dataoutput sum weight &#9; &#9; diffsum datainput &#9; &#9; sum diffsum &#9; &#9; diffsum datainput period 1 &#9; &#9; &#9; please check site detail fintechee http www fintechee com sdk trading mit license http github com fintechee transferred repo http github com fintechees aug 25th 2021
/ConcourseOpen/DeFi-Pulse-Adapters,JavaScript,defi pulse project template welcome defipulse project template repository purpose repo allow 3rd party developer build validate update project adapter defi pulse order allow higher volume project added maintained time get listed defi pulse first must successfully apply listed defi list please follow instruction blog post listed defi list http defipulse com blog join defi pulse leaderboard project ha added defi list please follow step 4 blog post link code adapter described work u testing make sure adapter stay date dapp get upgraded time outdated adapter may delisted documentation link sdk reference http github com concourseopen defi pulse adapter blob master doc sdk md br token adapter reference http github com concourseopen defi pulse adapter blob master token readme md getting started adapter repo cloned locally install dependency running npm install next ' need create env file example file env example provided use starting point defipulse key ' sdk key ' ' obtain sdk key course listing process described project using sdk requires individual sdk key keep tab web3 call volume adapter creates back end limit number web3 call adapter make ask project optimize call volume whenever possible verify access everything working try running npm run test project template test complete successfully github collaboration please fork repository http help github com en github collaborating issue pull request creating pull request fork staging branch start building adapter work topic branch within forked repo adapter complete create pull request upstream repo staging branch help u merge adapter quickly please grant u right make commits topic branch apply minor fix without back forth create separate pull request include name project pull request ideally branch name ask question front tvl calculation methodology discord channel writing json configurable adapter note try best reduce dependency third party apis graph project tvl endpoint etc please utilize defi pulse sdk writing adapter let ' take look existing loopring http github com concourseopen defi pulse adapter blob master v2 project loopring balancer http github com concourseopen defi pulse adapter blob master v2 project balancer aave polygon http github com concourseopen defi pulse adapter blob master chain polygon project aave adapter see minimal example write test json configurable adapter token adapter ethereum mainnet get subdirectory v2 project index j file containing main json configuration setting project multichain get adapter folder chain chain name project example project multichain ethereum polygon want place ethereum adapter v2 polygon adapter chain polygon project v2 project loopring index j feel free add additional file folder within project adapter directly needed help organize code json configurable adapter simple please keep code within token adapter directory pr ' modification addition outside scope project usually ' allowed case needed need discussed defi pulse team advance project metadata j module export metadata name ' loopring ' token project name symbol ' lrc ' protocol token symbol exists category ' dexes ' allowed value ' derivative ' ' dexes ' ' lending ' ' payment ' ' asset ' chain ' ethereum ' start 1514764800 unix timestamp utc 0 specifying project began live data begin main tokenholdermap configuration main tokenholdermap part adapter add custom configuration adapter defi pulse tokenholdermap configuration used every hour unix timestamp automatically fetch token balance locked protocol please note project adapter need able run successfully point back project starting time recent point necessary allow collection historical data may exist prior release newly added project repairing catching project data history event error item tokenholdermap consists 2 main part token configuration token property tokenholdermap single token list token executable function return single list token json configuration used pull token information pool smart contract holder configuration holder property tokenholdermap single holder vault pool address list address executable function return single list address json configuration used pull pool address pool smart contract loopring adapter tokenholdermap configuration j module export required indexing token balance tokenholdermap token ' 0xbbbbca6a901c926f240b89eacb641d8aec7aeafd ' lrc ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' usdt ' 0x6b175474e89094c44da98b954eedeac495271d0f ' dai ' 0x514910771af9ca656af840dff83e8264ecf986ca ' link ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' usdc ' 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599 ' wbtc ' 0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2 ' mkr holder ' 0x674bdf20a0f284d710bc40872100128e2d66bd3f ' ' 0x944644ea989ec64c2ab9ef341d383cef586a5777 ' checkethbalance true add checkethbalance true code snippet case adapter need track eth balance well polygon chain add checknativebalance true instead get chain ' native gas token e g matic polygon xdai adapter tokenholdermap configuration j module export required indexing token balance tokenholdermap token ' 0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359 ' sai ' 0x6b175474e89094c44da98b954eedeac495271d0f ' dai ' 0x06af07097c9eeb7fd685c692751d5c66db49c215 ' chai holder ' 0x4aa42145aa6ebf72e164c9bbc74fbd3788045016 ' token async const alltokens await sdk api util tokenlist return alltokens map token token contract holder ' 0x88ad09518695c6c3712ac10a214be5109a655671 ' case need flexibility add function instead return token holder address balancer adapter tokenholdermap configuration j module export required indexing token balance tokenholdermap holder pullfromlogs true logconfig target ' 0x9424b1412450d0f8fc2255faf6046b98213b76bd ' topic ' log new pool address address ' key ' topic ' fromblock 9562480 transform null token pullfrompools true abi constant true input name ' getcurrenttokens ' output internaltype ' address ' name ' token ' type ' address ' payable false statemutability ' view ' type ' function ' case protocol follows factory pattern based amm model add log configs pull holder address smart contract event default use poollog 0x poollog 2 slice 26 code snippet log transform function pas different custom function need n b transform function doe create closure ' creation context executed able access ' local variable one scope function wa created testing writing project adapter ' need run code check error check output etc testing command provided purpose project ethereum npm run validate metadata project projectname npm run test tvl project projectname project polygon npm run validate metadata project projectname chain polygon npm run test tvl project projectname chain polygon run validate metadata command check project metadata setup correctly sample command npm run validate metadata project loopring sample output checking loopring project adapter metadata ha valid name ha valid start time category match one defined category ha valid tokenholdermap configuration tokenholdermap array tokenholdermap ha valid token configuration tokenholdermap ha valid holder vault pool configuration 6 passing 11ms test command validate metadata pass successfully run test tvl command run adapter series point spread ' lifespan sample command npm run test tvl project loopring sample output loopring project adapter running output format run variety point different time return valid tvl data hour 0 4532ms return valid tvl data hour 12 2647ms return valid tvl data hour 36 2226ms return valid tvl data hour 72 2335ms return valid tvl data 2021 02 26t00 00 00z 2350ms return valid tvl data 2021 01 10t00 00 00z 3563ms return valid tvl data 2020 11 25t00 00 00z 2582ms return valid tvl data 2020 10 09t00 00 00z 2243ms return valid tvl data 2020 08 24t00 00 00z 3284ms return valid tvl data 2020 07 09t00 00 00z 2628ms return valid tvl data 2020 05 23t00 00 00z 2918ms return valid tvl data 2020 04 07t00 00 00z 2514ms return valid tvl data 2020 02 20t00 00 00z 2396ms return valid tvl data 2020 01 05t00 00 00z 2631ms return valid tvl data 2019 11 21t00 00 00z 2265ms 15 passing 41s output test stored json file output chain name project name tvl named based time run fetch data example output saved output ethereum loopring tvl 2021 03 08t13 00 00z json since project loopring data test script retrieved tvl ' output shown timestamp 1615208400 block 11998012 tvl contract 0xbbbbca6a901c926f240b89eacb641d8aec7aeafd symbol lrc balance 153583047 41121337 price 0 558486958432916 contract 0xdac17f958d2ee523a2206206994597c13d831ec7 symbol usdt balance 6885571 564996 price 1 0033342002521268 contract 0x6b175474e89094c44da98b954eedeac495271d0f symbol dai balance 1798873 4626126941 price 1 0036468119444584 contract 0x514910771af9ca656af840dff83e8264ecf986ca symbol link balance 8898 471084705028 price 29 133499595872404 contract 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 symbol usdc balance 2385051 730462 price 1 0014661516590568 contract 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599 symbol wbtc balance 139 03476935 price 50165 125085588836 contract 0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2 symbol mkr balance 68 35973257054415 price 2100 3439239324593 contract 0x0000000000000000000000000000000000000000 symbol eth balance 48299 2822487816 price 1713 3933935097111 test suite log verbose result adapter output event problem test pas successfully project appear defipulse staging http test defipulse com leaderboard see project leaderboard click project review project tvl chart case adapter need customizations please follow instruction writing tvl function let ' take look template project see minimal example adapter project get ' subdirectory project index j file containing main code setting project template index j feel free add additional file folder within project adapter directly needed help organize code project ' large please keep code within project adapter directory pr ' modification addition outside scope project usually ' allowed case needed need discussed defi pulse team advance tvl function main tvl function project adapter token balance fetched defi pulse function run every hour unix timestamp block number passed function please note project adapter need able run successfully point back project starting time recent point necessary allow collection historical data may exist prior release newly added project repairing catching project data history event error j async function tvl timestamp block let balance ' 0x0000000000000000000000000000000000000000 ' 1000000000000000000 eth ' 0x6b175474e89094c44da98b954eedeac495271d0f ' 2000000000000000000 dai return balance case template ' adapter ' using hard coded value token balance illustrate minimal implementation consistency treat balance associated token address raw wei value decimal conversion balance associated token symbol decimal converted value due method commonly available core contract project already defi pulse lack broad standardization ' found effective solution project adapter work internally token address symbol conversion done automatically adapter run important thing adapter expected output object token address raw non decimal converted balance template adapter output look like j eth 1 dai 2 sdk adapter course need actually fetch real value unlike template example let ' look bancor adapter real world example j async function run timestamp block let getbalance await sdk api eth getbalance target ' 0xc0829421c1d260bd3cb3e0f06cfe2d52db2ce315 ' block let balance ' 0x0000000000000000000000000000000000000000 ' getbalance output let call await generatecalllist timestamp let balanceofresults await sdk api abi multicall block call abi ' erc20 balanceof ' await sdk util summultibalanceof balance balanceofresults return balance retrieve ' locked balance bancor adapter need check main address ' eth balance well check list token adapter specific token balance sdk provides standardized method querying contract value common interaction wherever possible preferred method retrieving data j const sdk require ' sdk ' 2 method utilized bancor adapter j let getbalance await sdk api eth getbalance target ' 0xc0829421c1d260bd3cb3e0f06cfe2d52db2ce315 ' block j let balanceofresults await sdk api abi multicall block call abi ' erc20 balanceof ' illustrate common sdk interaction adapter running one view function single token address running batch given view function multiple token address different parameter full documentation available function sdk http github com concourseopen defi pulse adapter blob master doc sdk md sdk ' provide required method implement project adapter please contact member defi pulse team add necessary support applicable collaborate find suitable alternative solution case necessary data obtained chain sdk bancor adapter example hit proprietary api retrieve list token address need tracked since information ' available chain understand sometimes necessary unavoidable case chain data source need used wherever possible chain transparent data source prioritized alternative unavoidable use chain data source discussed prior implementation defi pulse team metadata project adapter need export main run function addition important metadata data outlined template adapter accompanying description j module export name ' template project ' project name token null null token symbol project ha custom token category ' asset ' allowed value shown defipulse ' derivative ' ' dexes ' ' lending ' ' payment ' ' asset ' start 1514764800 unix timestamp utc 0 specifying project began live data begin tvl tvl adapter ' look bancor adapter practical example j module export name ' bancor ' token ' bnt ' category ' dexes ' start 1501632000 08 02 2017 12 00am utc tvl see effect setting defi pulse http defipulse com project ' name protocol token simple value shown ui api data category influence project classified section ' tvl contributes aggregate result main page finally start time defines limit far back data need fetched retrieve project full historical data testing writing adapter ' need run code check error check output etc testing command provided purpose historical csv view running test suite historical csv generated containing tracked token balance beginning project start date use folder gain better insight output adapter verify accuracy timestamp date block eth 1538006400 wed sep 26 2018 20 00 00 6405884 22 64 1549324800 mon feb 04 2019 19 00 00 7175712 25452 34 1554940800 wed apr 10 2019 20 00 00 7543456 53152 81 check csv folder npm run test project template npm run validate project yearn test command run project adapter latest hourly point perform basic check ' output log result template project running output format run specified time latest hour return valid tvl data hour 0 1172ms 1 passing 1 output test stored json file output chain name project name adapter type named based time run fetch data example output saved output ethereum template tvl 2020 04 16t17 00 00z json since project template adapter provided tvl ' output shown json ethcallcount 0 timestamp 1587481200 block 9916481 output eth 1 dai 2 test output many ethereum network call used run confirm timestamp block test wa run provide output generated adapter also provide optional timestamp parameter test order reproduce troubleshoot previous result npm run test project template timestamp 1581026400 think project ready validate command used final thorough check command run adapter series point spread ' lifespan also check valid metadata exported adapter well npm run validate project template template project export format ha valid name category match one defined option ha valid start time run method template project running output format run variety point different time return valid data point hour 0 789ms return valid data point hour 6 686ms return valid data point hour 12 1165ms return valid data point hour 36 1267ms return valid data point hour 72 1391ms return valid data 2020 01 27t00 00 00z 1644ms return valid data 2019 11 12t00 00 00z 1288ms return valid data 2019 08 28t00 00 00z 1672ms return valid data 2019 06 14t00 00 00z 1208ms return valid data 2019 03 30t00 00 00z 1564ms return valid data 2019 01 14t00 00 00z 1193ms return valid data 2018 10 30t00 00 00z 1160ms return valid data 2018 08 15t00 00 00z 1342ms return valid data 2018 06 01t00 00 00z 1120ms return valid data 2018 03 17t00 00 00z 1264ms return valid data 2018 01 01t00 00 00z 1621ms 20 passing 20 test suite log verbose result adapter output event problem
/panacloud-modern-global-apps/defi-dapps-solidity-smart-contracts,TypeScript,solidity smart contract building defi dapps protocol ethereum blockchain companion dapp learning repo http github com panacloud modern global apps dapps nextjs repo part certified web 3 0 metaverse developer training program http www panaverse co repository provide latest updated learning resource solidity developer digital asset replace fiat ten year deloitte survey http www cryptopolitan com digital asset replace fiat 10 year defi 100 time larger today 5 year http cointelegraph com news defi 100 time larger today 5 year defi hope disrupt traditional finance http www wsj com video series wsj glossary defi hope disrupt traditional finance 1bb73865 57ad 4791 9a36 adae3193da2c crypto job posting jumped 395 2021 linkedin http www coindesk com business 2022 01 14 crypto job posting jumped 395 2021 linkedin defi nft scaled new height 2021 coingecko report http cryptopotato com defi nft scaled new height 2021 coingecko report 5 promising blockchain project leading way forward decentralized technology 2022 http www newsbtc com news company 5 promising blockchain project leading way forward decentralized technology 2022 defi reflection 2021 road ahead http novonews io indiv news id 82268 class video class 1 step 00 01 blockchain ethereum smart contract hardhat intro english facebook http www facebook com fb anees ahmed video 611810023268930 class 1 step 00 01 blockchain ethereum smart contract hardhat intro english youtube http youtu 24nl4fvgh6g class 1 step 00 01 blockchain ethereum smart contract hardhat intro urdu facebook http www facebook com ai sirqasim video 394282572468467 class 1 step 00 01 blockchain ethereum smart contract hardhat intro urdu youtube http youtu wxfi1wkn 5o class 2 step 03 part 1 solidity tutorial english facebook http web facebook com trouble maker121 video 448321510117377 class 2 step 03 part 1 solidity tutorial english youtube http youtu nczmdsjj oa class 2 step 03 part 1 solidity tutorial urdu facebook http web facebook com ai sirqasim video 322455473108467 class 2 step 03 part 1 solidity tutorial urdu youtube http youtu rfnasgnh14e class 3 step 03 part 2 solidity tutorial english facebook http web facebook com fb anees ahmed video 7151001034909886 class 3 step 03 part 2 solidity tutorial english youtube http youtu mxuy7sp5jmw class 3 step 03 part 2 solidity tutorial urdu facebook http web facebook com ai sirqasim video 2126325780860897 class 3 step 03 part 2 solidity tutorial urdu youtube http youtu nhlchb7mij4 class 3 part 2 step 03 part 2b solidity tutorial urdu youtube http youtu j3c9kgg61pa class 4 step 03 part 3 solidity tutorial english facebook http www facebook com fb anees ahmed video 319111146832336 class 4 step 03 part 3 solidity tutorial english youtube http youtu 8fhupbjb8 class 4 step 03 part 3 solidity tutorial urdu facebook http www facebook com ai sirqasim video 1812389385622735 class 4 step 03 part 3 solidity tutorial urdu youtube http youtu nbg fhocloe class 5 step 03 part 4 solidity tutorial english facebook http www facebook com zeeshanhanif video 1378858009232147 class 5 step 03 part 4 solidity tutorial english youtube http youtu scga3cy nfq class 5 step 03 part 4 solidity tutorial urdu facebook http www facebook com ai sirqasim video 495841945575417 class 5 step 03 part 4 solidity tutorial urdu youtube http youtu rq7q8ztrs70 class 6 step 03 part 5 solidity tutorial english facebook http www facebook com zeeshanhanif video 352545383194950 class 6 step 03 part 5 solidity tutorial english youtube http youtu 56stwx7v4vm class 6 step 03 part 5 solidity tutorial urdu facebook http www facebook com ai sirqasim video 2210008845814579 class 6 step 03 part 5 solidity tutorial urdu youtube http youtu lyqub7vuvpy class 7 step 03 part 6 solidity tutorial english facebook http www facebook com zeeshanhanif video 474397740982913 class 7 step 03 part 6 solidity tutorial english youtube http youtu dnel 1j7wao class 7 step 03 part 6 solidity tutorial urdu facebook http www facebook com ai sirqasim video 1114838999266069 class 7 step 03 part 6 solidity tutorial urdu youtube http youtu ynrjq88pjqo class 8 step 04 chapter 02 textbook english facebook http www facebook com zeeshanhanif video 480580873784502 class 8 step 04 chapter 02 textbook english youtube http youtu elxmxhfez9g class 8 step 04 chapter 02 textbook urdu facebook http www facebook com ai sirqasim video 647528262963595 class 8 step 04 chapter 02 textbook urdu youtube http youtu hygh3nix7jq class 9 step 04 05 chapter 02 03 textbook english facebook http www facebook com zeeshanhanif video 7014356888634818 class 9 step 04 05 chapter 02 03 textbook english youtube http youtu zgvmre6rflu class 9 step 04 05 chapter 02 03 textbook urdu facebook http www facebook com ai sirqasim video 1050761768987494 class 9 step 04 05 chapter 02 03 textbook urdu youtube http youtu 1dmqdvvv0wg class 10 step 6a chapter 07 textbook english facebook http www facebook com zeeshanhanif video 1248604509216381 class 10 sstep 6a chapter 07 textbook english youtube http youtu rgebkqhr 2g class 10 step 6a chapter 07 textbook urdu facebook http www facebook com ai sirqasim video 703398320695153 class 10 step 6a chapter 07 textbook urdu youtube http youtu vfiitvwffoy class 11 step 6b vacation project assignment english facebook http www facebook com inampaki video 717989595995770 class 11 sstep 6b vacation project assignment english youtube http youtu mxinu6llc2a class 11 step 6b vacation project assignment urdu facebook http www facebook com ai sirqasim video 274105618254173 class 11 step 6b vacation project assignment urdu youtube http youtu hlvxr 1seaa take 1 month ramdan summer vacation following project vacation project due eid class also continue eid project 1 create token launch ico ieo ido probably know ico initial coin offering industry ha booming ' completely reinventing way new startup kickstart fact go look wikipedia ' list highest crowdfunding project http en wikipedia org wiki list highest funded crowdfunding project ' notice blockchain project absolutely dominate list understand difference ido v ieo v ico http phemex com blog dex ido also check link latest listing ico list ico drop http icodrops com ico list best new initial coin offering http topicolist com top rated crypto token sale list new icos stos ieos idostop rated crypto token sale list new icos stos ieos ido http cryptototem com ico list ico list online http www icolistingonline com binance ieo list http coincodex com ieo list binance binance launchpad http www coinspeaker com ieo platform binance launchpad ieo list http icomarks com ieo polkastarter http polkastarter com project part 1 launch ieo binance lauchpad read lauch ieo http appinventiv com blog launch ieo first task project make google slide presentation start ieo binance launch pad http www binance com en support faq 94ed108ce89d44ab8602aa3c476dfb04 note also document alternative binance launchpad project part 2 launch ido polkastarter review list top fundraising platform http cryptorank io fundraising platform second task project make google slide presentation start ido polkastarter http polkastarter com project part 3 create pako token creating token related contract ' also learn handle money sent contract come handy want create kind paid decentralised service future therefore sake chapter let ' imagine pako dapp us coin pako token create two contract one token one token crowd sale ico create pako erc20 token deploy testnet token use openzeppelin contract use harkhat development envirnoment also write least 20 automated test using solidity typescript dvelopment project part 4 develop crowd sale contract next decision make get token user usually done one three way owned crowdsale crowdsale contract owns token simply transfer token ownership user purchase minted crowdsale crowdsale mint token purchase made allowance crowdsale crowdsale granted allowance another wallet like multisig already owns token sold crowdsale option let exchange handle process part project implement owned crowdsale strategy contract responsible allow user exchange eth pako token order need set price token 1 eth 100 pako token implement payable http codedamn com news solidity payable function solidity example use buytoken function also may also see payable example http solidity example org payable emit buytokens event log buyer amount eth sent amount token bought transfer 75 token crowd sale contract deployment time e right contract deployed want token contract send 75 token supply 25 remain personal owner account transfer ownership crowd sale contract deploy time frontend address able withdraw eth use openzeppelin crowd sale contract http doc openzeppelin com contract 4 x crowdsales however update code latest solidity version also write exentisive test example simply send transaction 1 eth random account contract transaction expect account received pako contract ' balance reduced note get started writing token contract suggest review access control http doc openzeppelin com contract 4 x access control project part 5 trying metamask ' always good test code ' often satisfying see result work wrapped nice ui let ' see deploy contract get pako token metamask wallet start running deployment script test network new token contract uploaded deployed ' done take note address contract wa uploaded copy head metamask send transaction 1 eth crowd sale contract address metamask wallet ' ether remember use faucet transaction ha confirmed might confused ' see token wallet turn need manually add token address metamask order register many token ' way metamask could list default open side menu click add token button get started ' token page click add custom token paste token contract ' address address field confirming want add token able see pako balance right next eth balance wallet cool project part 6 trying multisignature wallet read http www coindesk com tech 2020 11 10 multisignature wallet keep coin safer use right use gnosis safe http gnosis safe io multi sigs last part project part 7 sending token using ether j write typescript program send pako token friend ' address using ether j may follow tutorial http ethereum org en developer tutorial send token etherjs project part 8 advance create deploy mint sell nft read nft tutorial series http ethereum org en developer tutorial write deploy nft create nft contract using openzepplen erc721 nft standard http doc openzeppelin com contract 4 x erc721 may use preset erc721 contract http doc openzeppelin com contract 4 x erc721 presets deploy nft contract testnet mint view metamask wallet list opensea marketplace http opensea io sale implement erc721 market http ethereum org en developer tutorial implement erc721 market internet ' value layer video image png http www youtube com watch v lnpjkznsdfi internet ' value layer world finance software development fusing defi serverless ai iot merged plan create quintessential unicorn developer new age unique rare skillset basically individual one hand develop software mint money expert serverless cloud computing technology also ninja new token economy decentralised finance know develop ai iot apis create economic system everyone participate repo focus learning defi text book mastering blockchain programming solidity http www oreilly com library view mastering blockchain programming 9781839218262 book code http github com packtpublishing mastering blockchain programming solidity get started zero hero web3 0 solidity development roadmap 2021 http javascript plainenglish io zero hero web3 0 solidity development roadmap 2021 926e759a366b read book wisdom finance discovering humanity world risk return http pdfroom com book wisdom finance discovering humanity world risk return qjb5qerr5xq download watch big short movie http youtu vgqg3itmv1q complete detail course visit operation unicorn website http www operationunicorn org training blockchain serverless blockchain serverless processing impacting event driven architecture http acloudguru com blog engineering blockchain serverless processing similarity difference fit together blockchain ultimate serverless platform http www informit com article article aspx p 3006828 serverless nature blockchains smart contract http arxiv org pdf 2011 12729 pdf defi defi beginner http landing coingecko com defi defi advanced http landing coingecko com defi defi future finance http paper ssrn com sol3 paper cfm abstract id 3711777 ethereum book http github com ethereumbook ethereumbook become defi developer http defiweekly substack com p become defi developer defi developer road map http github com offciercia defi developer road map ultimate defi blockchain research base http github com offciercia ultimate defi research base comparing centralized decentralized finance http arxiv org pdf 2106 08157 pdf finding alpha defi http www coindesk com finding alpha defi 6 reason defi stay inefficient profitable http www coindesk com 6 reason defi stay inefficient profitable fbclid iwar1g9sjt6w0wjxq9o hejqstswebwfnsaojy0qljxzaxrzhwjzrmaplhrau metamask build blockchain app ethereum web3 j solidity smart contract http www dappuniversity com article build blockchain app build ethereum dapp react j complete step step guide http www dappuniversity com article ethereum dapp react tutorial send eth payment using react j metamask http www youtube com watch v qjzuitasdfg web3 react connect user metamask wallet frontend http www youtube com watch v dca53go5on8 metamask wallet frontend http medium com coinmonks web3 react connect user metamask wallet frontend 241fd538ed39 token semi fungible crypto token http www coindesk com semi fungible crypto token defi 2 0 ' defi 2 0 full explanation http www youtube com watch v up3ctb5afs4 defi 2 0 invest http blockworks co investor guide defi 2 0 defi 2 0 doe matter http academy binance com en article defi 2 0 doe matter defi 2 0 beginner ' guide second generation defi protocol http cointelegraph com defi 101 defi2 0 beginner guide second generation defi protocol
/bobalice7/PCS-Prediction,JavaScript,pc prediction v1 0 pancakeswap logo img logo jpg raw true bot us signal tradingview predict price bnb pancakeswap please consider giving star installation download install node http nodejs org en download run following command terminal 1 git clone http github com bobalice7 pc prediction git 2 cd pc prediction git 3 npm enter image description img setup jpg raw true setup 1 open env file code text editor add private key like private key private key 3 open bot j file setup following variable bet amount 5 amount bet usd daily goal 20 total profit aiming earn usd 4 start bot using npm start yarn start 5 enjoy convert seed phrase private key lot wallet ' provide private key seed phrase 12 word learn convert private key 1 enter http youtu eaxdlezfbiw follow instruction website used one http iancoleman io bip39 winning rate img rate jpg raw true strategy bot take series recomendations given trading view proccess together tendency rest people betting algorithm complete choose bet testing aprox 300 round wa able achieve 70 win rate course depends lot variable ' ensure reproduce behavior tell make 20 70 daily 3 bet every round bot check enough balance wallet reached daily goal also save daily history history directory aware consecutive loss statistically chance win next one inside bot j threshold property global config variable configure minimum certainty bot bet default ' set 50 mean 50 certainty bot bet raise 50 100 bet bot sure prediction recomendable x10 x50 amount bet average round check history round claim reward http pancakeswap finance prediction x usd based bet x show real time profit x show real time win rate x daily goal profit x improved algorithm v1 1 x ai driven bot x stop loss simplify setting auto collect winning disclaimer please aware clone use risk going bet please money willing lose please try bet low amount gradually generate profit
/diadata-org/diadata,Go,cover gitbook asset 1 dzqpeo 3 ilzsrz j9x7xw png covery 0 get started dia x20 dia decentralised information asset multi chain end end open source data oracle platform web3 dia platform enables sourcing validation sharing transparent verified data feed traditional digital financial application dia institutional grade data feed cover asset price metaverse data lending rate dia data directly sourced broad array chain chain source individual trade level allows dia feed fully customised regard mix source methodology resulting tailor made high resilience feed setting new paradigm oracle link homepage http diadata org medium blog http medium com dia insight github http github com diadata org twitter http twitter com diadata org discord http discord gg zfmxtpfgqj telegram http diadata org api status http badgen net uptime robot status m784441379 1bdbacd4cd81bf46c13bdb1f label api http doc diadata org api doc api pull request http badgen net github pr diadata org diadata label pull 20requests http github com diadata org diadata pull dia ecosystem dia open source ecosystem financial data aim dia make transparent accurate verifiable data accessible web3 bringing together data provider user dao community member gitbook asset architecture svg mark style color blue data source mark every second thousand trade level data point multiple chain chain source cexs dexs defi nft metaverse etc aggregated dia platform mark style color blue dia open source platform mark open contributor collect data open community developer build scraper connect new data source dia open source platform governor validators community token holder discus vote improve platform crowd approve validate feature govern dia association chain computation ingested raw data computed sanitised based fully transparent methodology avoid temporary data outlier x20 mark style color blue blockchains mark mark style color blue mark new data point shipped via api dedicated oracle smart contract made available developer 25 layer 1 layer 2 blockchain network mark style color blue dapps mark dia oracle easy integrate smart contract power broad range defi tradfi metaverse use case lending lending staking stablecoins dia ' data offering mark style color blue data category mark dia ' crowd sourcing approach data sourcing uniquely position dia utilise broadest possible set source ensure maximum coverage asset price data data feed publicly accessible sourced regardless whether listed exchange trading volume dependency third party data provider x20 high level overview dia ' data offering gitbook asset data category svg mark style color blue data source mark leveraging community developer distributed network node dia scrape collect aggregate data directly multiple chain source centralised exchange apis individual trade level x20 high level overview data source dia leverage seel data source visit data source section gitbook asset data source svg mark style color blue delivery method mark dia enables user select ingest data using multiple delivery method present constantly growing l1 l2 ecosystem powered network strong industry partner chain delivery dia xnode oracle customised trigger update based request update triggered via dedicated smart contract api call time update triggered predefined time interval deviation update triggered deviation last reported value chain delivery dia xbase x20 data delivered chain via rest api delivers data feed predefined standardised format update frequency 120 methodology mair documentation methodology digital asset exchangeprices mair moving average interquartile range filter md source available documentation data source natively sourced data md graphql enables flexibility direct adjustment feed attribution update frequency custom methodology custom source custom contribute dia dao operation working towards building biggest open source data platform web3 reach goal dia leverage power community decentralisation many level scale product developmet growth x20 contribute dao two vertical content ref url contribute product development md product development md contribute product development md endcontent ref content ref url contribute ecosystem growth md ecosystem growth md contribute ecosystem growth md endcontent ref support content ref url support discord md discord md support discord md endcontent ref content ref url support request custom oracle md request custom oracle md support request custom oracle md endcontent ref
/opynfinance/GammaProtocol,TypeScript,gamma protocol circleci http circleci com gh opynfinance gammaprotocol svg style svg http circleci com gh opynfinance gammaprotocol tree master coverage status http coverall io repos github opynfinance gammaprotocol badge svg branch master http coverall io github opynfinance gammaprotocol branch master gamma decentralized capital efficient option protocol enables seller create spread gamma protocol enables user create arbitrary option token represent right buy sell certain asset predefined price strike price expiry option seller gamma reduce amount capital locked system creating spread e g instead putting 100 usdc mint 1 eth usdc 100 put buy eth usdc 50 put deposit 50 usdc collateral otokens created gamma cash settled european option mean option automatically exercised expiry holder redeem proceeds sending otokens back system pay holder cash value based strike price underlying spot price expiry instead actually exchanging underlying asset strike asset documentation doc site http opyn gitbook io opyn getting started introduction contains tutorial explainers smart contract documentation ' like view doc github instead check doc folder doc doc repo smart contract documentation summary md uml diagram doc uml control flow diagram doc control flow local development setup local development recommended use ganache run local development chain using ganache simulator full ethereum node required pre requisite need node j v10 18 0 npm clone project install dependency sh git clone http github com opynfinance gammaprotocol git cd gammaprotocol install project dependency npm compile contract sh npm run build new terminal launch ethereum rpc client use default ganache cli command configure run local development ganache sh npm run ganache switch back terminal deploy contract make sure add infura key infurakey file add wallet mnemonic secret file setup deployment parameter migration deployment config json file sh local deployment npm run deploy development mainnet deployment npm run deploy mainnet running test run unit test sh npm run test unit run integration test sh npm run test integration linting clean code best code ' provided tool automatically lint project lint smart contract sh npm run lint sol lint test file sh npm run lint test automatically fixing linting issue ' also provided tool make possible automatically fix linting issue ' much easier trying fix issue manually fix smart contract sh npm run lint sol prettier fix fix test file sh npm run lint test prettier fix coverage use solidity coverage http github com sc fork solidity coverage package generate coverage report find coverage report coverall http coverall io github opynfinance gammaprotocol branch master otherwise generate locally running sh npm run coverage full report viewed opening coverage index html file browser security bug bounty program security opyn protocol highest priority team ha created protocol believe safe dependable ha audited openzeppelin smart contract code publicly verifiable bug bounty undiscovered vulnerability encourage user mindful risk use fund afford lose option complex instrument understood correctly powerful hedge smart contract still new experimental technology want remind user optimistic innovation remaining cautious put money please see http opyn gitbook io opyn security detail security audit bug bounty program
/PancakeBunny-finance/Bunny,Solidity,pancake bunny http pancakebunny finance dapp http pancakebunny finance project overview pancakebunny overview http img youtube com vi xpui9eku4pe default jpg http youtu xpui9eku4pe roadmap http bit ly bunny roadmap pancakebunny finance contract bunnytoken 0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51 http bscscan com address 0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51 bunnyminterv2 0x8cb88701790f650f273c8bb2cc4c5f439cd65219 http bscscan com address 0x8cb88701790f650f273c8bb2cc4c5f439cd65219 timelock 0x85c9162a51e03078bdcd08d4232bab13ed414cc3 http bscscan com address 0x85c9162a51e03078bdcd08d4232bab13ed414cc3 proxyadmin 0x9cee40fe28fc9de2195dc611291ae810c6b265a8 http bscscan com address 0x9cee40fe28fc9de2195dc611291ae810c6b265a8 bunny loss jackpot contract stake earn contract address bunny bunny 0x60d8a581d519397e870c5376228cd7e7abbc243b http bscscan com address 0x60d8a581d519397e870c5376228cd7e7abbc243b bunny premium bunny 0xe0d17b4695862b0a2590730762ec25ee562b2ca4 http bscscan com address 0xe0d17b4695862b0a2590730762ec25ee562b2ca4 cake cake 0xa9b005d891414e0d6e0353490e099d0ca4c778fc http bscscan com address 0xa9b005d891414e0d6e0353490e099d0ca4c778fc cake premium cake 0xd601966588e812218a45f3ec06d3a89602348183 http bscscan com address 0xd601966588e812218a45f3ec06d3a89602348183 bunny pool contract bunny maximizer earn bunny 0xc004a3b5af216e9c2c59a9ea8bc3ee07af667329 http bscscan com address 0xc004a3b5af216e9c2c59a9ea8bc3ee07af667329 bunny pool v2 earn fee distribution 0x4fd0143a3da1e4ba762d42ff53be5fab633e014d http bscscan com address 0x4fd0143a3da1e4ba762d42ff53be5fab633e014d bunny bnb pool earn bunny 0xa6c29a422d1612293669156a34f2793526783622 http bscscan com address 0xa6c29a422d1612293669156a34f2793526783622 cake maximizer deposit flip earn cake stake earn contract address cake cake 0xedfcb78e73f7ba6ad2d829bf5d462a0924da28ed http bscscan com address 0xedfcb78e73f7ba6ad2d829bf5d462a0924da28ed cake bnb cake 0x203ee29ba85bbdfa23bfae5d77620aefdaf92cb1 http bscscan com address 0x203ee29ba85bbdfa23bfae5d77620aefdaf92cb1 btcb bnb cake 0xac20925e6615ad6871987e199783fa80bf24eb39 http bscscan com address 0xac20925e6615ad6871987e199783fa80bf24eb39 eth bnb cake 0x7d52a1697f2df08e6fb2b5a88e0e8e4d7c11a921 http bscscan com address 0x7d52a1697f2df08e6fb2b5a88e0e8e4d7c11a921 busd bnb cake 0x81fa6f9f4599c5316cc53b782de7c01eff4f9551 http bscscan com address 0x81fa6f9f4599c5316cc53b782de7c01eff4f9551 usdt bnb cake 0xac7d40638271d349cb2dedfdc6268a77738403fa http bscscan com address 0xac7d40638271d349cb2dedfdc6268a77738403fa vai busd cake 0x7f0320cef62c88ce1db7d77c1849082c053e2344 http bscscan com address 0x7f0320cef62c88ce1db7d77c1849082c053e2344 usdt busd cake 0x74fdc215f8309ec58fd34455bf3fee95fb3416dd http bscscan com address 0x74fdc215f8309ec58fd34455bf3fee95fb3416dd dot bnb cake 0xc1d9ead28fc4cb9658c62594a695a53bfd306f77 http bscscan com address 0xc1d9ead28fc4cb9658c62594a695a53bfd306f77 btcb busd cake 0xd2220455e760fb27ed8aaa6f9c7e143a687bb0ad http bscscan com address 0xd2220455e760fb27ed8aaa6f9c7e143a687bb0ad dai busd cake 0xf92f12b505594eedf65cb8b973819dfa242c61d7 http bscscan com address 0xf92f12b505594eedf65cb8b973819dfa242c61d7 usdc busd cake 0xfeed0bb79035c61cf6519795a02a6a2a69a11aac http bscscan com address 0xfeed0bb79035c61cf6519795a02a6a2a69a11aac auto compounding flip deposit flip earn flip stake earn contract address cake bnb cake bnb 0xa599d6b81ec4a5ddd8eca85e3aac31e006af00aa http bscscan com address 0xa599d6b81ec4a5ddd8eca85e3aac31e006af00aa btcb bnb btcb bnb 0x285f793ce97079d4a5712e616afbbb971dbf1f1f http bscscan com address 0x285f793ce97079d4a5712e616afbbb971dbf1f1f eth bnb eth bnb 0x0d17e7b77c678c79c3ab5176e164ff0bcceb8eaa http bscscan com address 0x0d17e7b77c678c79c3ab5176e164ff0bcceb8eaa busd bnb busd bnb 0xe0aca387c6600b455ccfc32b253e2db13b71ca62 http bscscan com address 0xe0aca387c6600b455ccfc32b253e2db13b71ca62 usdt bnb usdt bnb 0x633e538ecf0bee1a18c2edfe10c4da0d6e71e77b http bscscan com address 0x633e538ecf0bee1a18c2edfe10c4da0d6e71e77b vai busd vai busd 0xfdb7d4abd0109b36667946726df943e83570286c http bscscan com address 0xfdb7d4abd0109b36667946726df943e83570286c usdt busd usdt busd 0xc341c6a006cab105e8cd2518e25aab311cb22ff6 http bscscan com address 0xc341c6a006cab105e8cd2518e25aab311cb22ff6 qbt bnb flip deposit flip vault stake earn contract address qbt bnb cake 0xbdd478cf8313240efdc54108a2ed389d450cd702 http bscscan com address 0xbdd478cf8313240efdc54108a2ed389d450cd702 bqbt bnb qbt 0xe6b3fb8e6c7b9d7fbf3bfd1a50ac8201c2fa5a8f http bscscan com address 0xe6b3fb8e6c7b9d7fbf3bfd1a50ac8201c2fa5a8f single asset vault stake contract address bnb 0x67c42b3dac9526efcbfeeb2fc1c56cf77f494e46 http bscscan com address 0x67c42b3dac9526efcbfeeb2fc1c56cf77f494e46 btcb 0xb9cf0d36e82c2a1b46ed51e44dc0a4b0100d6d74 http bscscan com address 0xb9cf0d36e82c2a1b46ed51e44dc0a4b0100d6d74 eth 0x4b107b794c9bbfd83e5ac9e8dd59f918510c5729 http bscscan com address 0x4b107b794c9bbfd83e5ac9e8dd59f918510c5729 busd 0x4fc359e39a99acfdf44c794ef702fab93067b2a6 http bscscan com address 0x4fc359e39a99acfdf44c794ef702fab93067b2a6 usdt 0x53fd20bc5d4d222764b70817810494f1d06f3403 http bscscan com address 0x53fd20bc5d4d222764b70817810494f1d06f3403 cake 0xde80ce223c9f1d1db0bc8d5bdd88e03f6882eea3 http bscscan com address 0xde80ce223c9f1d1db0bc8d5bdd88e03f6882eea3 dai 0x401c22395200caaae87f8ab9f9446636dde38c9a http bscscan com address 0x401c22395200caaae87f8ab9f9446636dde38c9a usdc 0xee3ee0beb7919edd31a4506d7d4c93940f2aced6 http bscscan com address 0xee3ee0beb7919edd31a4506d7d4c93940f2aced6 bqbt 0x33f93897e914a7482a262ef10a94319840eb8d05 http bscscan com address 0x33f93897e914a7482a262ef10a94319840eb8d05 leveraged farming vault stake leverage level contract address cake bnb x2 0xfb8358f34133c275b0393e3883bdd8764cb610de http bscscan com address 0xfb8358f34133c275b0393e3883bdd8764cb610de usdt busd x3 0xd75f3e4e8ed51ec98ed57386cb47df457308ad08 http bscscan com address 0xd75f3e4e8ed51ec98ed57386cb47df457308ad08 eth bnb x3 0xb04d1a8266ff97ee9f48d48ad2f2868b77f1c668 http bscscan com address 0xb04d1a8266ff97ee9f48d48ad2f2868b77f1c668 contact u twitter pancakebunnyfin http twitter com pancakebunnyfin discord http discord gg huyu6ujszy http discord gg huyu6ujszy telegram http pancakebunny fin http pancakebunny fin email hello pancakebunny finance mailto hello pancakebunny finance
/smartcontractkit/documentation,Solidity,open source project chainlink documentation developing yarn serve building deploying site hosted static site cdn file super portable build end site yarn deploy make sure use yarn recent version node see package json specific version requirement doc architecture doc markdown stored doc navigation json data navigation page processed readme com markdown syntax highlight applied client side custom client side code power en page contributing see contributing md
/James-Sangalli/learn-solidity-with-examples,Solidity,learn solidity example repo full smart contract written solidity important repo educational purpose use risk getting started install dependency npm run dapp tool test npm run test run hardhat test npm run hardhat test explore contract contract sample test dapp tool solidity hardhat j included educational purpose choose framework work best
/bifrost-finance/bifrost,Rust,href http bifrost finance img align center src doc readme bifrost banner svg alt bifrost banner href http bifrost finance img align right width 100 src doc readme bifrost black logo svg alt bifrost logo h1 align left href http bifrost finance homepage h1 welcome bifrost web3 derivative protocol provides decentralized cross chain liquidity staked asset leveraging cross consensus message xcm provide cross chain liquid staking service polkadot relay chain parachains heterogeneous chain bridged polkadot discover bifrost project bifrost finance http bifrost finance learn use bifrost network wiki http wiki bifrost finance network h4 supported h4 p align left href http web3 foundation grant img src doc readme web3 foundation grant svg width 200 alt web3 foundation grant href http www substrate io builder program img src doc readme substrate builder svg width 200 alt substrate builder program href http bootcamp web3 foundation img src doc readme web3 bootcamp svg width 200 alt web3 bootcamp p master build http img shield io github workflow status bifrost finance bifrost master build master http github com bifrost finance bifrost action codacy badge http app codacy com project badge grade acec53276777415593c2b02b2200f62e http www codacy com gh bifrost finance bifrost utm source github com amp utm medium referral amp utm content bifrost finance bifrost amp utm campaign badge grade substrate version http img shield io badge substrate 3 0 0 brightgreen logo parity 20substrate http github com paritytech substrate docker http img shield io badge docker v0 4 0 brightgreen logo docker http hub docker com repository docker bifrostnetwork bifrost license http img shield io github license bifrost finance bifrost color blue http github com bifrost finance bifrost blob master license discord http img shield io badge discord 5c5c5c logo discord http discord gg bifrost finance twitter http img shield io badge twitter 5c5c5c logo twitter http twitter com bifrost finance medium http img shield io badge medium 5c5c5c logo medium http medium com bifrost finance get build help sh make help install rust required tool bash curl http sh rustup r ssf sh make init build binary bash make build release format code sh make format lint code sh make clippy testing bash make test generate runtime weight runtime logic change may benchmarking regenerate weightinfo dispatch call bash make generate weight testing runtime migration modify storage test data migration production upgrade bash make try bifrost runtime upgrade run development chain bash make run dev run local testnet polkadot launch install polkadot launch bash yarn global add polkadot launch cd build polkadot bash git clone n http github com paritytech polkadot git tmp polkadot cd tmp polkadot git checkout release v0 9 22 cargo build release cd launch polkadot parachain bash cd polkadot launch script bifrost launch json take 1 2 minute parachain start producing block run local testnet parachain launch install parachain launch sh yarn global add open web3 parachain launch generate docker file sh parachain launch generate config script bifrost docker launch yml yes pull image generate required docker file folder called output current working directory start relaychain parachain start node navigate output folder generated docker script start container sh cd output docker compose build run full node create bifrost fullnode directory generate node key get bifrost json sh mkdir p node key subkey generate node key file node key bifrost key start full node replace fullnode name sh docker pull bifrostnetwork bifrost latest docker run v node key node key p 9944 9944 p 9933 9933 p 30333 30333 bifrostnetwork bifrost latest name fullnode name base path data node key file node key bifrost key chain spec bifrost json pruning archive rpc external w external rpc cors state cache size 0 execution wasm
/balancer-labs/balancer-v2-monorepo,TypeScript,img src logo svg alt balancer height 128px balancer v2 monorepo doc http img shield io badge doc f0 9f 93 84 blue http doc balancer fi ci status http github com balancer lab balancer v2 monorepo workflow ci badge svg http github com balancer lab balancer v2 monorepo action license http img shield io badge license gplv3 green svg http www gnu org license gpl 3 0 repository contains balancer protocol v2 core smart contract including vault standard pool along test configuration deployment information high level introduction balancer v2 see introducing balancer v2 generalized amms http medium com balancer protocol balancer v2 generalizing amms 16343c4563ff structure yarn 2 monorepo package meant published pkg pkg directory newly developed package may published yet active development occurs repository mean contract might production ready proceed caution package v2 deployment pkg deployment address abis balancer v2 deployed contract mainnet various test network v2 interface pkg interface solidity interface contract v2 vault pkg vault vault pkg vault contract vault sol contract core interface including ivault pkg vault contract interface ivault sol pool interface ibasepool pkg vault contract interface ibasepool sol igeneralpool pkg vault contract interface igeneralpool sol iminimalswapinfopool pkg vault contract interface iminimalswapinfopool sol v2 pool weighted pkg pool weighted weightedpool pkg pool weighted contract weightedpool sol weightedpool2tokens pkg pool weighted contract weightedpool2tokens sol liquiditybootstrappingpool pkg pool weighted contract smart liquiditybootstrappingpool sol contract along associated factory v2 pool linear pkg pool linear aavelinearpool pkg pool linear contract aave aavelinearpool sol erc4626linearpool pkg pool linear contract erc4626 erc4626linearpool sol contract along associated factory v2 pool utils pkg pool utils solidity utility used develop pool contract v2 solidity utils pkg solidity utils miscellaneous solidity helper utility used many different contract v2 standalone utils pkg standalone utils miscellaneous standalone utility contract v2 liquidity mining pkg liquidity mining contract compose liquidity mining vebal system v2 governance script pkg governance script contract execute complex governance action build test test run repository need prepared bash yarn install dependency yarn build compile contract test standalone simply require installation dependency compilation package however extra requirement notably v2 deployment pkg deployment package must access mainnet archive node order perform fork test detail head readme file pkg deployment readme md order run test including extra dependency run bash yarn test run test instead run single package ' test run bash cd pkg package e g cd pkg v2 vault yarn test see sample report test run audit test report md security multiple independent review audit performed certora http www certora com openzeppelin http openzeppelin com trail bit http www trailofbits com latest report engagement located audit audit directory bug bounty apply smart contract hosted repository head balancer v2 bug bounty http doc balancer fi core concept security bug bounty learn core smart contract immutable cannot upgraded see page 6 trail bit audit http github com balancer lab balancer v2 monorepo blob master audit trail bit 2021 04 05 pdf upgradeability applicable system cannot upgraded licensing solidity source code licensed gnu general public license version 3 gpl v3 see license license exception file openzeppelin directory v2 solidity utils pkg solidity utils package based openzeppelin contract http github com openzeppelin openzeppelin contract library licensed mit license see license pkg solidity utils contract openzeppelin license logexpmath contract v2 solidity utils pkg solidity utils package licensed mit license file including test pvt pvt directory unlicensed
/ScopeLift/umbra-protocol,TypeScript,div align center &#9; img width 400 src readme umbra logo word png alt umbra logo &#9; br &#9; br div p align center &#9; b privacy preserving stealth payment evm blockchain network b p p align center &#9; href http app umbra cash app umbra cash &#9; href http twitter com umbracash umbracash &#9; href http discord com invite uw4y5j2p7c discord &#9; href http gitcoin co grant 821 umbra privacy preserving stealth payment gitcoin &#9; href http twitter com scopelift scopelift p div align center &#9; img width 150 src readme ethereum badge light png alt umbra logo &#9; br div umbra protocol stealth payment evm blockchain network enables privacy preserving transaction receiver ' identity known sender receiver div align center &#9; br &#9; img width 650 src readme umbra diagram png alt diagram showing umbra provides privacy div faq umbra umbra stealth address protocol evm network mean allows payer send fund fresh address address controlled intended receiver payer receiver know one way think umbra anyone sent fund sent brand new never used address sender would know control address add layer privacy payment payment via umbra work similarly non interactiveyou dont need give someone fresh address sender generate one know able access walk example alice owns business hire bob subcontract agrees pay bob 1 000 dai week work bob owns en address bob eth alice sent fund week bob eth anyone looking chain could trivially know alice paying bob 1 000 dai week instead bob alice use umbra private payment first time bob visit umbra app set account enabling anyone privately pay via umbra using name bob eth normal ethereum address alice us umbra send 1 000 dai bob week need know en name chain see alice pay 1 000 dai new empty address week behind scene bob control key address via umbra nobody except alice bob know bob us umbra withdraw 1 000 dai week need provide address send best use address thats tied identity usually chooses send straight exchange sell fiat needed importantly mean bob ' exchange know payment went casual chain observer one without access proprietary centralized exchange data fact alice ' payment went bob obscured consider another example liza run website asks donation everyone donated directly sending fund everyone would know much liza received donation donation sent umbra instead donation would sent different address liza would know total amount donation received doe work 1 setting umbra account user sign message hash message used generate two private keysa spending key viewing key 2 corresponding public key published chain record associated address 3 payer us address en cns name look two public key separately payer generates random number 4 random number used spending public key generate stealth address send fund viewing public key used encrypt random number 5 using umbra contract payer sends fund stealth address stealth address encrypted random number emitted announcement event 6 receiver scan announcement event umbra contract use viewing private key decrypt random number multiply number spending private key generate stealth private key stealth private key control stealth address emitted annoucement payment wa receiver 7 receiver use spending private key either directly send transaction required withdraw fund another address sign meta transaction withdrawal request processed relayer see technical detail doe work http app umbra cash faq doe work technical detail private umbra umbra offer limited set privacy guarantee important understand using protocol umbra doe offer full privacy like aztec zcash simply make impossible outside observer e anyone sender receiver know sender paid looking receiving address important understand poor hygiene receiver example sending fund directly publicly known address reduces privacy benefit sender receiver privacy property umbra also diminished observer narrow set potential recipient given transaction valid public key used recipient anyone ha sent transaction ethereum ha publicly available public key therefore default anonymity set set potential recipient transactionis anyone ha ever sent ethereum transaction practice isnt necessarily case observer may able narrow list recipient way 1 user use en name send fund recipient likely ha published key en name 2 poor hygiene withdrawing fund stealth address reduce entirely remove privacy property provided umbra see address safe withdrawing fund http app umbra cash faq address safe withdrawing fund detail always use caution withdrawing umbra mixer umbra mixer doe use zero knowledge proof instead umbra based ordinary elliptic curve cryptography meant payment two entity come different set privacy tradeoff rather breaking link sending receiving address like mixer umbra make link meaningless everyone see sent fund everyone see address fund sent receiving address ha never seen chain impossible outside observer know control learn check full faq http app umbra cash faq get detail umbra development repository us yarn http yarnpkg com package management volta http volta sh dev tool version management prerequisite setting development environment repository also requires foundry http github com gakonst foundry development periphery smart contract component umbra monorepo consisting 4 package frontend frontend frontend web3 app setting using umbra deployed app umbra cash http app umbra cash contract core contract core solidity contract used umbra protocol contract periphery contract periphery solidity contract used umbra frontend add feature improve ux umbra j umbra j typescript library building umbra enabled web3 apps node j browser monorepo structure simplifies development workflow instruction get started clone repo follow instruction sh run command workspace root cp contract core env example contract core env please edit env environment variable value cp frontend env example frontend env please edit env environment variable value cp umbra j env example umbra j env please edit env environment variable value curl l http foundry paradigm xyz bash install foundryup binary foundryup install foundry yarn install installs dependency 3 package also build umbra j yarn test run test suite package additional command also available workspace root yarn build build 3 package yarn clean remove build artifact 3 package yarn lint lint 3 package yarn prettier run formatting 3 package yarn test run test 3 package note want precise command e g building cleaning testing 1 package simply run command package directory example working contract code might sh cd contract core move contract core sub directory yarn build build contract yarn clean remove contract build artifact yarn test run contract test contribution contribution umbra welcome fork project create new branch master open pr ensure project fast forward merged rebasing necessary license umbra available mit license txt license copyright c 2022 scopelift
/Jeiwan/flash-loans-comparison,Solidity,comparison flash loan solution ethereum result obtained via shell forge test fork url eth rpc url gas report optimize optimizer run 10 aave 0 09 fee weth src aave sol aave contract deployment cost deployment size 290331 1482 function name min avg median max call executeoperation 24562 24772 24562 26662 10 flashloan 69708 81912 69708 191757 10 balancer free src balancer sol balancer contract deployment cost deployment size 247087 1266 function name min avg median max call flashloan 24407 25727 24407 37608 10 receiveflashloan 4150 4150 4150 4150 10 euler free src euler sol euler contract deployment cost deployment size 187632 969 function name min avg median max call flashloan 18570 20594 18570 38812 10 onflashloan 3627 3627 3627 3627 10 uniswapv2 0 3009027 fee src uniswapv2 sol uniswapv2 contract deployment cost deployment size 173220 897 function name min avg median max call flashloan 20154 24835 20154 66970 10 uniswapv2call 4502 4502 4502 4502 10 uniswapv3 0 05 0 3 1 fee depending pool src uniswapv3 sol uniswapv3 contract deployment cost deployment size 171014 886 function name min avg median max call flashloan 22899 26339 22899 57299 10 uniswapv3flashcallback 4348 4348 4348 4348 10
/interlay/interbtc,Rust,p align center href http github com interlay interbtc img alt interbtc src doc img banner jpg h2 align center interbtc h2 p align center trust minimized bridge bitcoin polkadot br href http spec interlay io strong explore specification strong br br href http github com interlay interbtc issue report bug href http github com interlay interbtc issue request feature p p repository hosted github http github com interlay interbtc http github com interlay interbtc mirror gitlab http gitlab com interlay btc parachain radicle rad git hnrkxrw3axafn8n5fwo8pspjgtbt6jj6qe6mo table content project project built built roadmap roadmap getting started getting started prerequisite prerequisite installation installation contributing contributing license license contact contact acknowledgement acknowledgement project interbtc runtime allows creation interbtc fungible token represents bitcoin polkadot ecosystem interbtc backed bitcoin 1 1 allows redeeming equivalent amount bitcoins relying collateralized third party project us concept cryptocurrency backed asset http xclaim io lock bitcoin bitcoin blockchain issue btc backed token btc parachain implementation based interbtc specification http spec interlay io built interbtc project built rust http www rust lang org substrate http substrate dev img src http spec interlay io image overview png alt logo width 500 development progress substrate runtime make use various custom pallet found crate crate folder annuity crate annuity block reward stake vote vault bitcoin crate bitcoin library bitcoin type parsing verification function btc relay crate btc relay stateful spv client bitcoin store bitcoin main chain track fork verifies merkle proof validates specific transaction format currency crate currency handle currency used backing collateral e g dot ksm issued token e g interbtc democracy crate democracy optimistic governance fork pallet democracy escrow crate escrow rust implementation curve ' voting escrow contract fee crate fee participant reward calculation distribution issue crate issue handle issuing interbtc btc bitcoin nomination crate nomination interface vault nomination oracle crate oracle trusted provider use set exchange rate bitcoin fee estimate redeem crate redeem handle redeeming interbtc btc bitcoin refund crate refund handle refund vault receives btc cover replace crate replace handle replacing vault reward crate reward scalable reward distribution security crate security handle status error change staking crate staking core logic vault nomination slashing supply crate supply token minting inflation vault registry crate vault registry handle registration collateral liquidation vault getting started prerequisite curl http sh rustup r ssf sh please also install following dependency cmake clang 10 0 0 clang dev libc6 dev libssl dev installation building requires specific rust toolchain nightly compiler version requirement specified rust toolchain toml rust toolchain toml override file running rustup show root directory repo enough set toolchain inspect output verify match version specified override file build run cargo build detailed development instruction see doc readme md override file http rust lang github io rustup override html toolchain file testing cargo test feature runtime benchmark run coverage using cargo cov http github com kennytm cov cargo install cargo cov clean previous coverage result cargo cov clean test code cargo cov test open coverage report cargo cov report open running standalone run local development node use dev chain spec shell cargo run release bin interbtc standalone dev clear database using purge chain command shell cargo run release bin interbtc standalone purge chain dev additional cli usage option available may shown running cargo run bin interbtc standalone help running parachain run local development node use dev chain spec shell cargo run release bin interbtc parachain dev connect local relay chain follow instruction doc rococo md test coverage test coverage report available doc testcoverage html http github com interlay interbtc blob master doc testcoverage html substrate chain configuration substrate runtime configuration parachain parachain folder javascript typescript interacting via polkadot j need use custom type http github com interlay interbtc type please also checkout interbtc j http github com interlay interbtc j complete strongly typed library contributing would like contribute please file issue github reach u discord http discord gg c8tjmbgvxh telegram http joinchat g9fayhnbjk9v 6dn3iyhjw hiring http interlay recruitee com license c copyright 2021 interlay http www interlay io ltd interbtc currently licensed term apache license version 2 0 see license contact website interlay io http www interlay io twitter interlayhq http twitter com interlayhq email contact interlay io acknowledgement project supported web3 foundation grant http web3 foundation grant would also like thank following team continuous support parity technology http www parity io p align center href http web3 foundation grant img src doc img web3grantsbadge png p
/madfish-solutions/templewallet-extension,TypeScript,temple tezos wallet cryptocurrency wallet tezos blockchain http tezos com web extension browser br providing ability manage nft tez token interact dapps temple wallet http user image githubusercontent com 11996139 108867944 64e7fc00 75fe 11eb 975e 87c0fda9bfbe png hr install install temple wallet right http templewallet com download browser support chrome http raw github com alrra browser logo master src chrome chrome 48x48 png http chrome google com webstore detail temple tezos wallet ex th ookjlbkiijinhpmnjffcofjonbfbgaoc firefox http raw github com alrra browser logo master src firefox firefox 48x48 png http addons mozilla org en u firefox addon temple wallet brave http raw github com alrra browser logo master src brave brave 48x48 png http chrome google com webstore detail temple tezos wallet ex th ookjlbkiijinhpmnjffcofjonbfbgaoc opera http raw github com alrra browser logo master src opera opera 48x48 png http chrome google com webstore detail temple tezos wallet ex th ookjlbkiijinhpmnjffcofjonbfbgaoc edge http raw github com alrra browser logo master src edge edge 48x48 png http chrome google com webstore detail temple tezos wallet ex th ookjlbkiijinhpmnjffcofjonbfbgaoc 49 later 52 later latest 36 later 79 later quick start ensure node j http nodejs org 10 later installed yarn http yarnpkg com v1 v2 installed run following 1 clone repository bash git clone http github com madfish solution templewallet extension cd templewallet extension 2 install dependency bash yarn 3 build build extension production dist folder br correctly bundle production mode optimizes build best performance bash chrome default yarn build optional different browser bash chrome directly yarn build chrome firefox directly yarn build firefox opera directly yarn build opera yarn build 4 load extension browser templewallet load http user image githubusercontent com 11996139 73763346 f8435a80 4779 11ea 9e9d 4c1db9560f64 gif development bash yarn start run extension development mode chrome target br ' recommended use chrome developing
/ogwurujohnson/arbitrage-bot,Solidity,arbitrage bot arbitrage bot detects arbitrage opportunity pancake bakery swap manages flash swap call flash swap contract
/TP-Lab/tp-js-sdk,JavaScript,tp j sdk tokenpocket http tokenpocket gz bcebos com tokenpocket logo h 300 png name ' javascript sdk tokenpocket dapp ' javascript sdk tokenpocket dapp tokenpocket scatter eos metamask eth tronlink tron iwallet iost phantom solana scatter metamask tronlink iwallet phantom dappdapp sdk sdk sdk tokenpocket tokenpocket already compatible scatter metamask tronlink phantom iwallet input url dapp browser inside tp wallet without additional development sdk mobile tokenpocket github http github com tp lab tp j sdk tokenpocket website http www tokenpocket pro dapp http www tokenpocket pro zh submit dapp submit dapp http www tokenpocket pro en submit dapp android io sdk http github com tp lab mobile sdk action also android io sdk http github com tp lab mobile sdk interact tokenpocket add vconsole http www npmjs com package vconsole debug tokenpocket wallet name ' installation ' installation bash npm install tp j sdk name ' usage ' usage tokenpocketsdk dapp open site tokenpocket dapp develope test discover dappbrowser npm javascript var tp require ' tp j sdk ' console log tp isconnected browser html script src dist tp j script script console log tp isconnected script name ' content ' content vscode markdown toc javascript sdk tokenpocket dapp javascript sdk tokenpocket dapp installation installation usage usage content content 1 common 1 common 1 0 enum blockchains 1 0 enum blockchains 1 1 tp getappinfo 1 1 tp getappinfo 1 2 tp getwalletlist deprecated 1 2 tp getwalletlist deprecated 1 3 tp getdeviceid 1 3 tp getdeviceid 1 4 tp sharenewstosns 1 4 tp sharenewstosns 1 5 tp invokeqrscanner 1 5 tp invokeqrscanner 1 6 tp getcurrentwallet 1 6 tp getcurrentwallet 1 7 tp getwallet 1 7 tp getwallet 1 9 tp back 1 9 tp back 1 10 tp close 1 10 tp close 1 11 tp fullscreen 1 11 tp fullscreen 1 12 tp importwallet 1 12 tp importwallet 1 13 tp setmenubar 1 13 tp setmenubar 1 14 tp startchat removed 1 14 tp startchat removed 1 15 tp saveimage 1 15 tp saveimage 1 16 tp rollhorizontal 1 16 tp rollhorizontal 1 17 tp popgesturerecognizerenable 1 17 tp popgesturerecognizerenable 1 18 tp forwardnavigationgesturesenable 1 18 tp forwardnavigationgesturesenable 1 19 tp getnodeurl 1 19 tp getnodeurl 1 20 tp isdarkmode 1 20 tp isdarkmode 2 eos 2 eos 2 0 scatter compatible scatter 2 0 scatter compatible scatter 2 1 tp eostokentransfer 2 1 tp eostokentransfer 2 2 tp pusheosaction 2 2 tp pusheosaction 2 3 tp geteosbalance 2 3 tp geteosbalance 2 4 tp gettablerows deprecated 2 4 tp gettablerows deprecated 2 5 tp geteostablerows 2 5 tp geteostablerows 2 6 tp geteosaccountinfo 2 6 tp geteosaccountinfo 2 7 tp geteostransactionrecord 2 7 tp geteostransactionrecord 3 eth 3 eth 3 0 metamask compatible metamask 3 0 metamask compatible metamask 4 enu 4 enu 4 0 ironman compatible ironman 4 0 ironman compatible ironman 4 1 tp enutokentransfer 4 1 tp enutokentransfer 4 2 tp pushenuaction 4 2 tp pushenuaction 4 3 tp getenubalance 4 3 tp getenubalance 4 4 tp getenutablerows 4 4 tp getenutablerows 4 5 tp getenuaccountinfo 4 5 tp getenuaccountinfo 4 6 tp getenutransactionrecord 4 6 tp getenutransactionrecord 5 cosmos 5 cosmos 5 1 tp signcosmostransaction 5 1 tp signcosmostransaction 5 2 tp cosmosarbitrarysignature 5 2 tp cosmosarbitrarysignature 6 iost 6 iost 6 0 iwalletjs compatible iwalletjs 6 0 iwalletjs compatible iwalletjs 7 tron 7 tron 7 0 tronlink compatible tronlink 7 0 tronlink compatible tronlink 8 moac 8 moac 8 1 tp sendmoactransaction 8 1 tp sendmoactransaction 8 2 tp signmoactransaction 8 2 tp signmoactransaction 8 3 tp moactokentransfer 8 3 tp moactokentransfer 9 jingtum 9 jingtum 9 1 tp signjingtumtransaction 9 1 tp signjingtumtransaction 10 okexchain 10 okexchain 10 1 tp signokexchaintransaction 10 1 tp signokexchaintransaction 11 polkadot kusama etc 11 polkadot kusama etc 12 heco bsc okt 12 heco bsc okt 13 solana 13 solana 13 1 connect 13 1 connect 13 2 signtransaction 13 2 signtransaction 13 3 signmessage 13 3 signmessage 14 btc 14 btc 14 1 getcurrentbalance 14 1 getcurrentbalance 14 2 btctokentransfer 14 2 btctokentransfer 14 3 usdttokentransfer 14 3 usdttokentransfer vscode markdown toc config &#9; numbering false &#9; autosave true &#9; vscode markdown toc config vscode markdown toc name ' 1 common ' 1 common name ' 1 0 enum blockchains ' 1 0 enum blockchains eth jingtum moac eos enu bos iost cosmos binance tron btc bsc dot kusama heco okexchain oktest matic hsc oec subgame klaytn name ' 1 1 tp getappinfo ' 1 1 tp getappinfo javascript tp getappinfo return object result boolean data object name string system string version string sys version string msg string example javascript tp getappinfo console log result true data name ' tokenpocket ' system ' android ' version ' 0 3 4 ' sys version ' 26 ' msg ' success ' name ' 1 2 tp getwalletlist deprecated ' 1 2 tp getwalletlist deprecated name ' 1 3 tp getdeviceid ' 1 3 tp getdeviceid javascript tp getdeviceid return object device id string example javascript tp getdeviceid console log device id ' dexa23333 ' name ' 1 4 tp sharenewstosns ' 1 4 tp sharenewstosns share sn javascript tp sharenewstosns params parameter params object title string desc string url string previewimage string example javascript tp sharenewstosns title ' tokenpocket ' desc ' universal wallet ' url ' http www mytokenpocket vip ' previewimage ' http www mytokenpocket vip image index logo png ' name ' 1 5 tp invokeqrscanner ' 1 5 tp invokeqrscanner scan qrcode javascript tp invokeqrscanner return string example javascript tp invokeqrscanner console log abcdefg name ' 1 6 tp getcurrentwallet ' 1 6 tp getcurrentwallet get user ' current wallet info javascript tp getcurrentwallet return object result boolean data object name string address string blockchain string msg string example javascript tp getcurrentwallet console log result true data name ' itokenpocket ' address ' eosaaaaaaaaabbbbbbbb ' blockchain ' eos ' msg ' success ' name ' 1 7 tp getwallet ' 1 7 tp getwallet get switch user ' wallet javascript tp getwallet params parameter params object wallettypes array ' eth ' ' btc ' enum blockchains switch boolean switch current wallet return object result boolean data object name string address string blockchain string msg string example javascript tp getwallet wallettypes ' eth ' ' bsc ' ' dot ' switch false console log result true data name ' ethwallet11 ' address ' 0x40e5a542087fa4b966209707177b103d158fd3a4 ' blockchain ' eth ' msg ' success ' name ' 1 9 tp back ' 1 9 tp back javascript tp back example javascript tp back name ' 1 10 tp close ' 1 10 tp close close page javascript tp close example javascript tp close name ' 1 11 tp fullscreen ' 1 11 tp fullscreen fullscreen page javascript tp fullscreen params parameter params object fullscreen number 1 fullscreen 0 cancel example javascript tp fullscreen fullscreen 0 name ' 1 12 tp importwallet ' 1 12 tp importwallet invoke wallet importing window javascript tp importwallet blockchain parameter blockchain string ' eos ' ' eth ' ' enu ' ' moac ' example javascript tp importwallet ' eos ' name ' 1 13 tp setmenubar ' 1 13 tp setmenubar dapp fullscreen set dapp browser ' navbar visiblity javascript tp setmenubar params parameter params object flag number 1 open 0 close default example javascript tp setmenubar flag 1 name ' 1 14 tp startchat removed ' 1 14 tp startchat removed tp open tp im removed javascript tp startchat params parameter params object sessiontype number 0 1 account string eos iost eth moac id blockchain number eth jingtum moac eos enu bos iost example javascript tp startchat account ' itokenpocket ' sessiontype 0 blockchain ' eos ' name ' 1 15 tp saveimage ' 1 15 tp saveimage save image javascript tp saveimage params parameter params object url string image ' url example javascript tp saveimage url ' http dapp mytokenpocket vip tokenpocket logo png ' name ' 1 16 tp rollhorizontal ' 1 16 tp rollhorizontal rotate screen horizontal javascript tp rollhorizontal params parameter params object horizontal boolean example javascript tp rollhorizontal horizontal true name ' 1 17 tp popgesturerecognizerenable ' 1 17 tp popgesturerecognizerenable io disable io ' left sliding gesture return effect android javascript tp popgesturerecognizerenable params parameter params object enable boolean default true example javascript tp popgesturerecognizerenable enable false name ' 1 18 tp forwardnavigationgesturesenable ' 1 18 tp forwardnavigationgesturesenable webviewgoback disable left sliding gesture webview trigger goback javascript tp forwardnavigationgesturesenable params parameter params object enable boolean default true example javascript tp forwardnavigationgesturesenable enable false name ' 1 19 tp getnodeurl ' 1 19 tp getnodeurl get information node selected user javascript tp getnodeurl params parameter params object blockchain string eos eth iost return object result boolean data object nodeurl stirng blockchain string eos eth iost msg string example javascript tp getnodeurl blockchain ' eos ' console log result true data nodeurl ' http api eosbeijing one ' blockchain ' eos ' msg ' success ' name ' 1 20 tp isdarkmode ' 1 20 tp isdarkmode get whether user dark mode javascript tp isdarkmode return object result boolean data boolean msg string example javascript tp isdarkmode console log result true data true msg ' success ' name ' 2 eos ' 2 eos name ' 2 0 scatter compatible scatter ' 2 0 scatter compatible scatter tokenpocket compatible scatter j 1 0 2 0 tokenpocket scatter j 1 0 2 0 scatter api scatter j http github com getscatter scatter j check scatter demo scatter demo scatter j demo http github com tp lab scatter demo scatter js2 demo http github com tp lab scatter demo eosjs2 name ' 2 1 tp eostokentransfer ' 2 1 tp eostokentransfer javascript tp eostokentransfer params parameter params object string string amount string number tokenname string precision number string contract string memo string optional address string public key current account return object result boolean data object transactionid stirng example javascript tp eostokentransfer ' abcabcabcabc ' ' itokenpocket ' amount ' 0 0100 ' tokenname ' eos ' precision 4 contract ' eosio token ' memo ' test ' address ' eos7ds9a9fgdskrdymq4ynkbmgbcvaaaaaaaaaaa ' console log result true data transactionid ' b428357c7xxxxxxxxxxxxxx ' name ' 2 2 tp pusheosaction ' 2 2 tp pusheosaction javascript tp pusheosaction params parameter params object action array standard eos action account string current account address string public key current account return object result boolean data object transactionid stirng example javascript tp pusheosaction action account ' eosio token ' name ' transfer ' authorization actor ' aaaabbbbcccc ' permission ' active ' data ' aaaabbbbcccc ' ' itokenpocket ' quantity ' 1 3000 eos ' memo ' something say ' account eosio name delegatebw authorization actor ' aaaabbbbcccc ' permission active data ' aaaabbbbcccc ' receiver ' itokenpocket ' stake net quantity 0 0100 eos stake cpu quantity 0 0100 eos transfer 0 address ' eos7ds9a9fgdskrdymq4ynkbmgbcvaaaaaaaaaaa ' account ' aaaabbbbcccc ' console log result true data transactionid ' b428357c7xxxxxxxxxxxxxx ' name ' 2 3 tp geteosbalance ' 2 3 tp geteosbalance javascript tp geteosbalance params parameter params object account string contract string symbol string return object result boolean data object symbol string balance string contract string account string msg string example javascript tp geteosbalance account ' itokenpocket ' contract ' eosio token ' symbol ' eos ' console log result true data symbol eos balance 142 2648 eos contract eosio token account itokenpocket msg ' success ' name ' 2 4 tp gettablerows deprecated ' 2 4 tp gettablerows deprecated name ' 2 5 tp geteostablerows ' 2 5 tp geteostablerows table javascript tp geteostablerows params parameter params object json boolean code string scope string table string table key stirng lower bound string upper bound string limit number return object result boolean data object row array msg string example javascript tp gettablerows json true code ' abcabcabcabc ' scope ' abcabcabcabc ' table ' table1 ' lower bound ' 10 ' limit 20 console log result true data row 1 b ' name ' msg ' success ' name ' 2 6 tp geteosaccountinfo ' 2 6 tp geteosaccountinfo javascript tp geteosaccountinfo params parameter params object account string return object result boolean data object standard account object msg string example javascript tp geteosaccountinfo account ' itokenpocket ' console log result true data account name itokenpocket proxy 0 msg ' success ' name ' 2 7 tp geteostransactionrecord ' 2 7 tp geteostransactionrecord javascript tp geteostransactionrecord params parameter params object account string start number default 0 count number default 10 sort string ' desc asc ' default desc token string optional contract string optional return object result boolean data object standard account object msg string example javascript tp geteostransactionrecord start 10 count 20 account ' itokenpocket ' token ' eos ' sort ' desc ' contract ' eosio token ' console log result true data title comment hid 4bd63a191a1e3e00f13fe6df55d0c08803800a5e7cd0d0b15c92d52b3c42285e producer bp4 timestamp 1531578890 action index 2 account eosio name delegatebw tokenpocket1 clementtes43 blocknum 4390980 quantity 0 2000000000 eos count 0 2000000000 symbol eos memo maximum upply ram price byte status 1 data real value 0 2000000000 msg ' success ' name ' 3 eth ' 3 eth name ' 3 0 metamask compatible metamask ' 3 0 metamask compatible metamask tokenpocket compatible metamask tokenpocket metamask metamask http metamask io demo http github com metamask test dapp webview ethereum webview injected ethereum object name ' 4 enu ' 4 enu name ' 4 0 ironman compatible ironman ' 4 0 ironman compatible ironman ironman http enuironman com name ' 4 1 tp enutokentransfer ' 4 1 tp enutokentransfer javascript tp enutokentransfer params parameter params object string string amount string number tokenname string precision number string contract string memo string optional address string public key current account return object result boolean data object transactionid stirng example javascript tp enutokentransfer ' abcabcabcabc ' ' itokenpocket ' amount ' 0 0100 ' tokenname ' enu ' precision 4 contract ' enu token ' memo ' test ' address ' e7ds9a9fgdskrdymq4ynkbmgbcvaaaaaaaaaaa ' console log result true data transactionid ' b428357c7xxxxxxxxxxxxxx ' name ' 4 2 tp pushenuaction ' 4 2 tp pushenuaction javascript tp pushenuaction params parameter params object action array standard enu action account string current account address string public key current account return object result boolean data object transactionid stirng example javascript tp pushenuaction action account ' enu token ' name ' transfer ' authorization actor ' aaaabbbbcccc ' permission ' active ' data ' aaaabbbbcccc ' ' itokenpocket ' quantity ' 1 3000 enu ' memo ' something say ' account enumivo name delegatebw authorization actor ' aaaabbbbcccc ' permission active data ' aaaabbbbcccc ' receiver ' itokenpocket ' stake net quantity 0 0100 enu stake cpu quantity 0 0100 enu transfer 0 address ' e7ds9a9fgdskrdymq4ynkbmgbcvaaaaaaaaaaa ' account ' aaaabbbbcccc ' console log result true data transactionid ' b428357c7xxxxxxxxxxxxxx ' name ' 4 3 tp getenubalance ' 4 3 tp getenubalance javascript tp getenubalance params parameter params object account string contract string symbol string return object result boolean data object symbol string balance string contract string account string msg string example javascript tp getenubalance account ' itokenpocket ' contract ' enu token ' tokenname ' enu ' console log result true data symbol enu balance 142 2648 enu contract enu token account itokenpocket msg ' success ' name ' 4 4 tp getenutablerows ' 4 4 tp getenutablerows table javascript tp getenutablerows params parameter params object json boolean code string scope string table string table key stirng lower bound string upper bound string limit number return object result boolean data object row array msg string example javascript tp gettablerows json true code ' abcabcabcabc ' scope ' abcabcabcabc ' table ' table1 ' lower bound ' 10 ' limit 20 console log result true data row 1 b ' name ' msg ' success ' name ' 4 5 tp getenuaccountinfo ' 4 5 tp getenuaccountinfo javascript tp getenuaccountinfo params parameter params object account string return object result boolean data object standard account object msg string example javascript tp getenuaccountinfo account ' itokenpocket ' console log result true data account name itokenpocket proxy 0 msg ' success ' name ' 4 6 tp getenutransactionrecord ' 4 6 tp getenutransactionrecord javascript tp getenutransactionrecord params parameter params object account string start number default 0 count number default 10 sort string ' desc asc ' default desc token string optional contract string optional return object result boolean data object standard account object msg string example javascript tp getenutransactionrecord start 10 count 20 account ' itokenpocket ' token ' enu ' sort ' desc ' contract ' enu token ' console log result true data title comment hid 4bd63a191a1e3e00f13fe6df55d0c08803800a5e7cd0d0b15c92d52b3c42285e producer bp4 timestamp 1531578890 action index 2 account enumivo name delegatebw tokenpocket1 clementtes43 blocknum 4390980 quantity 0 2000000000 enu count 0 2000000000 symbol enu memo maximum upply ram price byte status 1 data real value 0 2000000000 msg ' success ' name ' 5 cosmos ' 5 cosmos name ' 5 1 tp signcosmostransaction ' 5 1 tp signcosmostransaction javascript tp signcosmostransaction stdtx parameter stdtx object string chain id string account number string number sequence string number fee object gas string memo string type string msg object return object result boolean data object msg string example javascript tp signcosmostransaction &#9; cosmos1njg8uq4ek9y9yourfromaddress &#9; chain id cosmoshub 2 &#9; account number 1756 &#9; sequence 3 &#9; fee &#9; &#9; denom uatom &#9; &#9; amount 500 &#9; &#9; gas 20000 &#9; memo &#9; type transfer &#9; msg &#9; &#9; cosmos1njg8uq4ek9y9yourfromaddress &#9; &#9; coin &#9; &#9; &#9; denom uatom &#9; &#9; &#9; amount 100000 &#9; &#9; &#9; console log &#9; result true &#9; data &#9; &#9; tx &#9; &#9; &#9; signature &#9; &#9; &#9; &#9; pub key &#9; &#9; &#9; &#9; &#9; type tendermint pubkeysecp256k1 &#9; &#9; &#9; &#9; &#9; value akg3bco5p9mo8a1abgytys8ed4azubkey &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; signature k7xcuz ucesbznqs94uohznjcubfuwh2x659 3o04ihzazt99cx aaaaaaaaaaa &#9; &#9; &#9; &#9; &#9; &#9; memo &#9; &#9; &#9; msg &#9; &#9; &#9; &#9; type cosmos sdk msgsend &#9; &#9; &#9; &#9; value &#9; &#9; &#9; &#9; &#9; amount &#9; &#9; &#9; &#9; &#9; &#9; amount 100000 &#9; &#9; &#9; &#9; &#9; &#9; denom uatom &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; address cosmos1njg8uq4ek9y9yourfromaddress &#9; &#9; &#9; &#9; &#9; address cosmos1njg8uq4ek9y9yourtoaddress &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; fee &#9; &#9; &#9; &#9; amount &#9; &#9; &#9; &#9; &#9; denom uatom &#9; &#9; &#9; &#9; &#9; amount 500 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; gas 20000 &#9; &#9; &#9; &#9; &#9; &#9; &#9; mode sync &#9; &#9; msg success name ' 5 2 tp cosmosarbitrarysignature ' 5 2 tp cosmosarbitrarysignature javascript tp cosmosarbitrarysignature stdtx parameter string address stdtx string stdtx string return object result boolean data object msg string example javascript var stdtx &#9; account number 0 &#9; chain id testing &#9; fee &#9; &#9; amount &#9; &#9; &#9; amount 0 &#9; &#9; &#9; denom stake &#9; &#9; &#9; &#9; gas 500000 &#9; &#9; memo &#9; msg &#9; &#9; amount &#9; &#9; &#9; amount 50000000 &#9; &#9; &#9; denom stake &#9; &#9; &#9; &#9; address cosmos1gw8w l48gl5 &#9; &#9; type normal &#9; &#9; sequence 0 tp cosmosarbitrarysignature ' cosmos1gw8w l48gl5 ' json stringify stdtx console log &#9; result true &#9; data &#9; &#9; pub key 235 90 233 135 33 2 65 183 108 35 185 167 211 14 241 173 64 4 102 45 201 47 30 119 134 153 184 26 4 32 123 216 219 95 19 140 84 254 &#9; &#9; signature 19 225 27 122 188 73 69 101 136 152 100 35 2 205 66 220 20 237 160 171 36 178 195 45 161 14 86 41 21 143 222 27 40 139 233 48 48 117 251 105 144 119 187 181 124 113 167 138 15 201 98 71 116 184 114 98 240 140 224 4 251 93 60 15 &#9; &#9; msg success name ' 6 iost ' 6 iost name ' 6 0 iwalletjs compatible iwalletjs ' 6 0 iwalletjs compatible iwalletjs tokenpocket compatible iwalletjs tokenpocket iwalletjs iwalletjs api iwalletjs http github com tp lab iost j api name ' 7 tron ' 7 tron name ' 7 0 tronlink compatible tronlink ' 7 0 tronlink compatible tronlink tokenpocket compatible tronlink tokenpocket tronlink webview tronweb webview injected tronweb object tronweb http developer tron network doc tron web intro name ' 8 moac ' 8 moac name ' 8 1 tp sendmoactransaction ' 8 1 tp sendmoactransaction javascript tp sendmoactransaction params parameter params object string string gasprice string number gaslimit string number data string value string number optional chainid number optional via string optional shardingflag number optional return object result boolean data string txhash example javascript tp sendmoactransaction ' 0xaaaaaaa ' ' 0xaaaaaab ' gasprice 100000000 gaslimit 60000 data ' 0xaawefwefwefwefwefef ' value 1000000000 chainid 99 via ' ' shardingflag 0 console log result true data ' 0xe1063e225d4365b79c30132077e82777c0966844f545ddecc017965c0b551f7e ' name ' 8 2 tp signmoactransaction ' 8 2 tp signmoactransaction javascript tp signmoactransaction params parameter params object string string gasprice string number gaslimit string number data string value string number optional chainid number optional via string optional shardingflag number optional return object result boolean data string signed data example javascript tp signmoactransaction ' 0xaaaaaaa ' ' 0xaaaaaab ' gasprice 100000000 gaslimit 60000 data ' 0xaawefwefwefwefwefef ' value 1000000000 chainid 99 via ' ' shardingflag 0 console log result true data ' 0xf8ef8201598504a817c800830298109490cb7b42a9cb3accbe665e7d6cdde4ab346eca1483030d40b88402ef9b6b0000000000000000 ' name ' 8 3 tp moactokentransfer ' 8 3 tp moactokentransfer javascript tp moactokentransfer params parameter params object string string amount string number gaslimit string number tokenname string decimal string number contract string return object result boolean data object transactionid stirng example javascript tp moactokentransfer ' 0xaaaaaaa ' ' 0xaaaaaab ' amount ' 100 ' gaslimit 60000 tokenname ' moac ' decimal 18 contract ' ' console log result true data transactionid ' b428357c7xxxxxxxxxxxxxx ' name ' 9 jingtum ' 9 jingtum name ' 9 1 tp signjingtumtransaction ' 9 1 tp signjingtumtransaction javascript tp signjingtumtransaction params parameter params object tx object account string fee float takergets string object takerpays string object transactiontype string sequence number offersequence number amount string destination string return object result boolean data string signeddata msg string example javascript tp signjingtumtransaction account j47j1uriyxxxxxxxxxxxx fee 0 00001 flag 524288 takergets 111 takerpays currency cny issuer jga9j9tkqtbcuohe2zqhvffbguved6o9or value 1 2321 transactiontype offercreate sequence 4368 console log result true data ' e1063e225d43650000000111 ' msg ' ' name ' 10 okexchanin ' 10 okexchanin name ' 10 1 tp signokexchaintransaction ' 10 1 tp signokexchaintransaction javascript tp signokexchaintransaction tx address parameter tx object chain id string account number string number sequence string number fee object memo string msg array address string address return object result boolean data object msg string example javascript tp signokexchaintransaction account number 222 chain id okexchain 65 fee amount amount 0 020000000000000000 denom okt gas 200000 memo ahah msg type okexchain token msgtransfer value amount amount 1 000000000000000000 denom okt address okexchainxxxxxxxxfrom address okexchainxxxxxxxxto sequence 15 ' okexchainxxxxxxxxfrom ' console log &#9; result true &#9; data signature pub key type tendermint pubkeysecp256k1 value buffer signature buffer &#9; &#9; msg success name ' 11 polkadot kusama etc ' 11 polkadot kusama etc tokenpocket compatible polkadot j extension please check offical doc http polkadot j org doc extension http github com polkadot j apps name ' 12 heco bsc okt ' 12 heco bsc okt tokenpocket compatible metamask please check offiacl doc http doc metamask io guide http github com metamask test dapp name ' 13 solana ' 13 solana check http github com solana lab wallet adapter using solana wallet including tokenpocket using window solana object directly webview name ' 13 1 connect ' 13 1 connect javascript await window solana connect const publickey window solana publickey tobase58 name ' 13 2 signtransaction ' 13 2 signtransaction javascript const network network url const connection new connection network const transaction new transaction const signedtransaction await window solana signtransaction transaction const signature await connection sendrawtransaction signedtransaction serialize name ' 13 3 signmessage ' 13 3 signmessage javascript const encodedmessage new textencoder encode ' message ' const signedmessage await window solana signmessage encodedmessage utf8 name ' 14 btc ' 14 btc name ' 14 1 getcurrentbalance ' 14 1 getcurrentbalance javascript tp getcurrentbalance name ' return ' return object result boolean data object balance string msg string example javascript tp getcurrentbalance console log result true data balance ' 0 013 ' msg ' success ' name ' 14 2 btctokentransfer ' 14 2 btctokentransfer javascript tp btctokentransfer params parameter params object string string amount string return object result boolean data string msg string example javascript tp btctokentransfer ' 3fybry1gtfmxxxxxxxxxxx ' ' 1nvy7gdng4ti3bwm1tipxxxxxxxxx ' amount ' 0 0001 ' console log result true data ' 5420a8f77594e9114c2d97dxxxxxxxxxxxxxxxxxxx ' android msg ' 5420a8f77594e9114c2d97dxxxxxxxxxxxxxxxxxxx ' io name ' 14 3 usdttokentransfer ' 14 3 usdttokentransfer omni usdt javascript tp usdttokentransfer params parameter params object string string amount string return object result boolean data string msg string example javascript tp usdttokentransfer ' 3fybry1gtfmxxxxxxxxxxx ' ' 1nvy7gdng4ti3bwm1tipxxxxxxxxx ' amount ' 10 02 ' console log result true data ' 5420a8f77594e9114c2d97dxxxxxxxxxxxxxxxxxxx ' android msg ' 5420a8f77594e9114c2d97dxxxxxxxxxxxxxxxxxxx ' io
/sszczep/UniswapSniperBot,C++,diff project maintained anymore feel free contact directly case question project logo http github com sszczep uniswapsniperbot blob main img logo png raw true optimized fast unsafe uniswap sniping bot buying new listing buy coffee http www buymeacoffee com asset img custom image orange img png http www buymeacoffee com sszczep table content doe work http github com sszczep uniswapsniperbot doe work pregeneration http github com sszczep uniswapsniperbot pregeneration used library http github com sszczep uniswapsniperbot used library project structure http github com sszczep uniswapsniperbot project structure directory structure http github com sszczep uniswapsniperbot directory structure header http github com sszczep uniswapsniperbot header configuration http github com sszczep uniswapsniperbot configuration installation guide http github com sszczep uniswapsniperbot installation guide installing required package debian http github com sszczep uniswapsniperbot installing required package debian cloning repository http github com sszczep uniswapsniperbot cloning repository building running main executable http github com sszczep uniswapsniperbot building running main executable building running test http github com sszczep uniswapsniperbot building running test building running benchmark http github com sszczep uniswapsniperbot building running benchmark generating documentation http github com sszczep uniswapsniperbot generating documentation documentation http sszczep github io uniswapsniperbot doe work use bloxroute ' stream http doc bloxroute com stream newtxs pendingtxs listen liquidity add transaction call swapexactethfortokens uniswap v2 router 02 contract sending transaction gas price high chance close original transaction block hence buying token liquidity add price significantly rise pregeneration pregen diagram http github com sszczep uniswapsniperbot blob main img pregen diagram png raw true pregenerate transaction probable gas price send instantly hence skip signing process rather slow solution turned around 2 5x faster testing machine used library zaphoyd websocketpp http github com zaphoyd websocketpp bitcoin core secp256k1 http github com bitcoin core secp256k1 xkcp xkcp http github com xkcp xkcp google googletest http github com google googletest google benchmark http github com google benchmark doxygen doxygen http github com doxygen doxygen kcwongjoe doxygen theme flat design http github com kcwongjoe doxygen theme flat design project structure directory structure libs contains external library see used library http github com sszczep uniswapsniperbot used library includes contains header test contains code testing benchmark contains code benchmarking doxygen contains doxygen configuration img contains image libs build contains built library build contains built executables doc contains generated documentation header includes utils hpp converter utility includes rlp hpp recursive length prefix encoding used serialize object ethereum includes transaction hpp creating signing ethereum transaction includes bot hpp tool parse bloxroute message build transaction data etc includes config hpp configuration file see configuration http github com sszczep uniswapsniperbot configuration configuration configuration saved includes config hpp config config transaction transaction field config transaction nonce transaction nonce hexadecimal config transaction value transaction value hexadecimal wei config transaction receiver transaction mostly uniswap v2 router 02 address config transaction gaslimit transaction gas limit hexadecimal config transaction privatekey private key sending wallet config transaction swapexactethfortokens value construct transaction data call swapexactethfortokens method config transaction swapexactethfortokens amountoutmin minimum amount token receive swap hexadecimal config transaction swapexactethfortokens tokenaddress token ' address want buy address config transaction swapexactethfortokens receiveraddress address receiving wallet address config bloxroute config bloxroute connection bloxroute cloud api connection credential config bloxroute connection address address server config bloxroute connection authtoken authorization token config bloxroute filter newtxs stream filter config bloxroute filter maxgasprice maximum gas price transaction want lose million gas decimal wei config bloxroute filter minvalue minimum transaction value skip fake liquidity add token small liquidity decimal wei config bloxroute filter tokenaddress alias config swapexactethfortokens tokenaddress left consistency change config transactionpregen configuration transaction pregeneration explanation see pregeneration http github com sszczep uniswapsniperbot pregeneration config transactionpregen gaspricegweifrom gwei config transactionpregen gaspricegweito gwei config transactionpregen gaspricegweidecimals gwei decimal eg 1000 mean generating transaction gas price step 0 001 gwei config transactionpregen arraysize precalculated based value change config size config size transactionquantitybuffer size transaction quantity buffer change config size transactionaddressbuffer size transaction address buffer change config size transactiondatabuffer size transaction data buffer change necessary eg calling different method requiring argument config size transactionrawbuffer size raw signed transaction change necessary see config size bloxroutetransactionmessagestring size incoming outcoming message cloud api installation guide installing required package debian sudo apt update sudo apt install git make build essential cmake autoconf libtool xsltproc libasio dev use macos might manually link openssl ln usr local opt openssl lib dylib usr local lib ln usr local opt openssl lib usr local lib cloning repository git clone recurse submodules j8 http github com sszczep uniswapsniperbot git cd uniswapsniperbot building running main executable make main build main building running test make test build test building running benchmark make benchmark build benchmark generating documentation make doc documentation available http sszczep github io uniswapsniperbot
/opynfinance/squeeth-monorepo,TypeScript,squeeth monorepo p align center img src http imgur com iyulvqq png width 400 p p align center squeethiest p p align center href http discord gg zteuhjyabf img alt discord src http img shield io discord 590664003815211058 style badge height 20 href http twitter com opyn img alt twitter follow src http img shield io twitter follow opyn style badge height 20 p squeeth squeeth contract designed user long short special index eth2 implementation power perpetual p align center img height 150 src http imgur com bgue31m png img p monorepo contains source code frontend app well contract spin environment locally run test play around code detail use contract frontend go package choose hardhat contract frontend detailed explanation sub folder learn read gitbook http opyn gitbook io squeeth documentation visit official medium page http medium com opyn ton great post original paper power perpetual http www paradigm xyz 2021 08 power perpetuals join discord http tiny cc opyndiscord chat derivative big brain security bug bounty program security one highest priority team ha created protocol believe safe dependable audited trail bit akira insured sherlock smart contract code publicly verifiable bug bounty undiscovered vulnerability encourage user mindful risk use fund afford lose smart contract still new experimental technology want remind user optimistic innovation remaining cautious put money please see detail security audit http opyn gitbook io squeeth security audit insurance bug bounty program http opyn gitbook io squeeth security bug bounty quick start prerequisite 1 install node http nodejs org en download lts 1 install yarn http classic yarnpkg com en doc install step install start hardhat chain bash cd package hardhat yarn install yarn chain second terminal window start frontend bash cd package frontend yarn install yarn dev third terminal window deploy contract bash cd package hardhat yarn deploy open http localhost 3000 see app
/Rari-Capital/rari-dApp,TypeScript,rari dapp middot test http github com rari capital rari dapp workflow test badge svg middot coverage status http coverall io repos github rari capital rari dapp badge svg branch master http coverall io github rari capital rari dapp branch master rari capital ' web3 portal requirement node v14 17 0 npm v7 21 0 note detail summary compiled folder src static summary src static compiled folder ha misc file auto generated script like rari token generator http github com rari capital rari token generator generate file using npm install file gitignored worry trying commit detail
/nicholashc/uniswap-skim,JavaScript,uniswap skim script scan uniswapv2 http uniswap org contract ethereum network search mismatched balance reserve uniswapv2 ha interesting function called skim address http github com uniswap uniswap v2 core blob master contract uniswapv2pair sol l190 l195 let anyone claim positive discrepancy actual token balance contract reserve number stored pair contract script scan univ2 contract look opportunity usually handful token changing supply like atokens rebase token like ampl create chaos skim balance small ' worth gas call sometimes profitable try call skim eoa expect frontrun increasing number bot searching opportunity may want use something like forwarder sol contract example even something sophisticated install 1 clone repo 2 cd repo 3 run npm install dependency web3 axios usage 1 two main script unimarkets j scan newly deployed market since last known pair appends log event j new market skim j check every market log event j look skim opportunity attempt use coingecko api find price value skim able token 2 root repo directory npm run update run unimarket j update log latest block 3 root repo directory npm run skim search skim able opportunity usage note 1 script hardcoded use local node port 8546 websockets connection using different port infura change code 2 token blacklist array includes token self destructed actually contract totally non standard erc20 reduces overall error 3 whitelist correctly name token ' follow erc 20 standard return byte32 name looking mkr probably smarter way deal edge case hardcoding 4 run problem updating event j try hardcode path directory f writefile unimarkets j b define block range eth getlogs narrowly updating long time period 5 skim j default return skim able value greater 0 01 see result change altering variable mindollarval skim j skim able value also returned coingecko doe price token 6 event j repo current block 11057149 15 230 univ2 pair 7 skim j take minute run 15 000 pair search 8 unimarkets j return result ' possible new pair deployed since last time called function 9 script ignores case reserve higher balance since skim able happens rebase coin sometimes example output terminal roughly look like running npm run update uniswap skim npm run update uniswap skim 1 0 0 update yourdirectory uniswap skim node script unimarkets j pair 9786 deployed block 10898080 pair 9787 deployed block 10898182 pair 9788 deployed block 10898201 pair 9789 deployed block 10898327 pair 9790 deployed block 10898366 pair 9791 deployed block 10898390 terminal roughly look like running npm run skim uniswap skim npm run skim uniswap skim 1 0 0 skim yourdirectory uniswap skim node script skim j pairaddress 0x321d87e1757c8c9b57e7af5aa3fe13d2ae774445 pairindex 9355 token0 address 0x29e240cfd7946ba20895a7a02edb25c210f9f324 name yearn aave interest bearing link decimal 18 balance 252 858 663596952206854028 reserve 252 858 663596952206854028 imbalance false token1 address 0xa64bd6c70cb9051f6a9ba1f163fdc07e0dfb5f84 name aave interest bearing link decimal 18 balance 267 963 012522435165106136 reserve 267 962 996672942810947153 imbalance diff 0 015849492360200192 usdprice 10 35 value 0 16 disclaimer take responsibility use misuse mistake fund lost received related use code use modify ignore see fit also benevolent way correct univ2 balance reserve discrepancy calling sync http github com uniswap uniswap v2 core blob master contract uniswapv2pair sol l198 l200 choice
/alpaca-finance/bsc-alpaca-contract,TypeScript,alpaca contract leveraged yield farming bnb chain fantom chain local development following assumes use node 14 install dependency 1 copy env example file change name env project folder 2 run yarn install dependency compile contract yarn compile note new folder called typechain generated project workspace need navigate typechain index delete duplicated line inside file order proceed run test hardhat yarn test testing forge install forge curl l http foundry paradigm xyz bash install foundryup foundryup install forge cast test forge test licensing primary license alpaca protocol mit license see mit license http github com alpaca finance bsc alpaca contract blob main license exception single asset lyf solidity contract 6 protocol worker cakemaxiworker sol file solidity contract 6 protocol strategy pancakeswapv2 restricted single asset licensed business source license 1 1 busl 1 1 indicated spdx header see busl 1 1 http github com alpaca finance bsc alpaca contract blob main license busl 1 1 delta neutral vault file match deltaneutral sol solidity contract 8 13 protocol automatedvaultcontroller sol solidity contract 8 13 protocol xalpacacreditor sol licensed business source license 1 1 busl 1 1 indicated spdx header see busl 1 1 http github com alpaca finance bsc alpaca contract blob main license busl 1 1 file test remain unlicensed
/PatrickAlphaC/chainlink_defi,JavaScript,chainlink defi repo allows stake fau link dapp accepted erc20 receive dapp token reward yeild farming get kovan price feed erc eth calculate value get started clone repo quickstart set mnemonic rpc url export mnemonic apple cheese etc export kovan rpc url http kovan infura io v3 adfdsfasdfadsfasdfadfadfadf need truffle installed run yarn truffle migrate reset network live yarn start stake unstake mdai staked issue token issue token run truffle exec script issue token j
/kevinheavey/anchorpy,Python,anchorpy div align center img src http raw githubusercontent com kevinheavey anchorpy main doc img logo png width 40 height 40 div discord chat http img shield io discord 889577356681945098 color blueviolet http discord gg sxy4zxbckh anchorpy gateway interacting anchor http github com project serum anchor program python provides static client generator dynamic client similar anchor pytest plugin cli various utility anchor python development read documentation http kevinheavey github io anchorpy installation requires python 3 9 sh pip install anchorpy cli ' using cli feature anchorpy run pip install anchorpy development setup want contribute anchorpy follow step get set 1 install poetry http python poetry org doc installation 2 install dev dependency sh poetry install 3 install nox poetry http github com cjolowicz nox poetry note use poetry install see http medium com cjolowicz nox part global developer environment like poetry pre commit pyenv pipx 1cdeba9198bd 4 activate poetry shell sh poetry shell
/reef-defi/reef-chain,Rust,reef chain reef chain written rust http www rust lang org basic familiarity rust tooling required learn reef chain please refer documentation http doc reef io clone clone repo submodules run bash git clone recursive http github com reef defi reef chain rust setup dont rust already install bash curl proto ' http ' tlsv1 2 ssf http sh rustup r sh install developer tool ubuntu 20 04 bash sudo apt install make clang pkg config libssl dev build essential install latest rust toolchain bash make init start development node make run command launch temporary node state discarded terminate process bash make run run persistent single node chain use following command build node without launching bash make build command start single node development chain persistent state bash target release reef node dev purge development chain ' state bash target release reef node purge chain dev start development chain detailed logging bash rust log debug rust backtrace 1 target release reef node lruntime debug dev run test bash make test run benchmark run runtime benchmark test bash make bench run module benchmark test bash cargo test p module poc feature run module benchmark generate weight file target release reef node benchmark chain dev step 50 repeat 20 pallet module poc extrinsic ' ' execution wasm wasm execution compiled heap page 4096 output module poc src weight r run debugger bash make debug embedded doc project ha built following command used explore parameter subcommands bash target release reef node h release build list available release build run bash git tag create corresponding production build first checkout tag bash git checkout testnet 1 run command install appropriate compiler version produce binary bash make release chain upgrade build build wasm runtime bash make wasm fork reef chain create fork live chain testnet mainnet development purpose 1 build binary sync target chain localhost default need use unsafe rpc 2 execute make command ensuring specify chain name testnet mainnet bash make chain testnet fork 3 run forked chain bash cd fork data binary chain fork json alice
/oceanprotocol/market,TypeScript,banner http raw githubusercontent com oceanprotocol art master github repo banner 402x png http oceanprotocol com h1 align center ocean marketplace h1 build status http github com oceanprotocol market workflow ci badge svg http github com oceanprotocol market action netlify status http api netlify com api v1 badge c85f4d8b 95e1 4010 95a4 2bacd8b90981 deploy status http app netlify com site market oceanprotocol deploys maintainability http api codeclimate com v1 badge d114f94f75e6efd2ee71 maintainability http codeclimate com repos 5e3933869a31771fd800011c maintainability test coverage http api codeclimate com v1 badge da71759866eb8313d7c2 test coverage http codeclimate com github oceanprotocol market test coverage j oceanprotocol http img shield io badge j oceanprotocol 7b1173 svg http github com oceanprotocol eslint config oceanprotocol table content get started get started local component barge local component barge environment variable environment variable data source data source aquarius aquarius ocean protocol subgraph ocean protocol subgraph 3box 3box purgatory purgatory network metadata network metadata storybook storybook testing testing code style code style production production deployment deployment contributing contributing forking forking pricing option pricing option fixed pricing fixed pricing free pricing free pricing gdpr compliance gdpr compliance multi language privacy policy multi language privacy policy privacy preference center privacy preference center privacy preference center styling privacy preference center styling license license get started app react app built next j http nextjs org typescript cs module connect ocean remote component default start local development bash git clone git github com oceanprotocol market git cd market using nvm manage node j version nvm use npm install case dependency error rather use npm install legacy peer deps npm start start development server http localhost 8000 local component barge prefer connect locally running component instead remote connection spin barge http github com oceanprotocol barge use local ganache network another terminal running npm start bash git clone git github com oceanprotocol barge git cd barge startup local ganache node start ocean sh barge deploy contract local ganache node take time end compiled artifact need copied project node module oceanprotocol contract artifact script bash script copy contract sh finally set environment variable use local connection env app bash modify env variable cp env example env npm start use app together metamask importing one account auto generated ganache container easiest way test eth available 100 eth default upon start ocean ganache 1 container print private key multiple account log pick one import metamask fully test graph http thegraph com integration run local graph node ocean subgraph http github com oceanprotocol ocean subgraph deployed barge doe include local subgraph default subgraphuri hardcoded rinkeby subgraph getdevelopmentconfig function http github com oceanprotocol market blob d0b1534d105e5dcb3790c65d4bb04ff1d2dbc575 src utils ocean l31 cleaning docker image fetched freshly often good idea make sure issue caused old stale image docker system prune volume environment variable app config j file setup prioritize environment variable setting ocean component endpoint setting environment variable easily switch ocean network app connects without directly modifying app config j local development use env file bash modify env variable rinkeby enabled default using file cp env example env data source displayed data app presented around concept one asset combination metadata asset actual asset file nft represents asset datatokens representing access right asset file financial data connected datatokens either fixed rate exchange contract dispenser free asset calculation conversion based financial data metadata publisher account data come multiple source aquarius initial asset metadata ddo retrieved client side run time aquarius http github com oceanprotocol aquarius instance defined app config j app call aquarius done 2 internal method mimic method ocean j allow u cancel request component get unmounted combination axios http github com axios axios hit aquarius early possible without relying ocean j initialization aquarius run elasticsearch hood stored metadata queried elasticsearch query http www elastic co guide en elasticsearch reference current full text query html like tsx import queryresult ' oceanprotocol lib dist node metadatacache metadatacache ' import querymetadata ' utils aquarius ' const querylatest query http www elastic co guide en elasticsearch reference current query dsl query string query html query string query isinpurgatory true sort created ' desc ' function component const appconfig usemarketmetadata const result setresult usestate queryresult useeffect appconfig metadatacacheuri return const source axios canceltoken source async function init const result await querymetadata query source token setresult result init return source cancel appconfig metadatacacheuri query return div result div component within single asset view useasset hook used background get respective metadata aquarius tsx import useasset ' context asset ' function component const ddo useasset return div ddo div ocean protocol subgraph financial data market retrieved graphql subgraph http github com oceanprotocol ocean subgraph rendered top initial data coming aquarius app ha urql client http formidable com open source urql doc basic react preact setup query respective subgraph based network component client used like tsx import gql usequery ' urql ' const query gql query topsalesquery user first 20 orderby totalsales orderdirection desc id totalsales function component const data usequery query pollinterval 5000 return div data div 3box publisher create profile 3box hub http www 3box io hub found displayed app 3box proxy http github com oceanprotocol 3box proxy used within app utility method get3boxprofile used get info tsx import get3boxprofile ' utils profile ' function component const profile setprofile usestate profile useeffect account return const source axios canceltoken source async function get3box const profile await get3boxprofile account source token profile return setprofile profile get3box return source cancel account return div profile emoji profile name div purgatory based list purgatory http github com oceanprotocol list purgatory asset get additional data within component done internal useasset hook fetch data market purgatory http github com oceanprotocol market purgatory endpoint background asset purgatory tsx import useasset ' context asset ' function component const isinpurgatory purgatorydata useasset return isinpurgatory div purgatorydata reason div null account purgatory tsx import useweb3 ' context web3 ' import useaccountpurgatory ' hook useaccountpurgatory ' function component const accountid useweb3 const isinpurgatory purgatorydata useaccountpurgatory accountid return isinpurgatory div purgatorydata reason div null network metadata displayed chain network metadata retrieved http chainid network build time integrated next ' graphql layer data source community maintained github repository ethereum list chain http github com ethereum list chain within component metadata queried allnetworksmetadatajson useweb3 hook doe background expose final networkdisplayname use component tsx export default function networkname reactelement const networkid istestnet useweb3 const networkslist usenetworkmetadata const networkdata getnetworkdatabyid networkslist networkid const networkname getnetworkdisplayname networkdata networkid return networkname istestnet test storybook storybook help u build ui component isolation app ' business logic data context make easy develop hard reach state save ui state story revisit development testing qa start adding story create index story tsx inside component ' folder pre src component shared component index tsx index module cs b index story tsx b index test tsx pre starting storybook server command make accessible http localhost 6006 bash npm run storybook want build portable static version storybook static bash npm run storybook build testing test run utilize jest http jestjs io test runner testing library http testing library com doc react testing library intro writing test created storybook story automatically run individual test using storyshots addon http storybook j org addons storybook addon storyshots creating storybook story component provide good coverage component many case additional test dedicated component functionality ' done storybook created usual testing library http testing library com doc react testing library intro test also import exisiting storybook story http storybook j org doc react writing test importing story test example testing library test executing linting type checking full test run bash npm test combination multiple script also run individually bash npm run lint npm run type check npm run jest coverage report automatically shown console whenever npm run jest called generated report sent codeclimate ci run local development continously get coverage report feedback console running jest watch mode bash npm run jest watch code style code style automatically enforced eslint http eslint org prettier http prettier io rule git pre commit hook run prettier staged file setup husky http typicode github io husky v code suggested extension setting auto formatting file save ci run linting typescript typing check part npm test fails error found running linting auto formatting manually use root project bash linting check npm run lint auto format file project prettier taking configs account npm run format production create production build run root project bash npm run build serve production build npm run serve deployment every branch pull request automatically deployed multiple host redundancy emergency reason netlify http netlify com vercel http vercel com s3 http aws amazon com s3 link preview deployment appear pull request latest deployment main branch automatically aliased market oceanprotocol com deployment netlify current live deployment contributing welcome contribution form bug report feature request code change documentation improvement look contribution documentation instruction workflow way contribute http doc oceanprotocol com concept contributing code conduct http doc oceanprotocol com concept code conduct reporting vulnerability http doc oceanprotocol com concept vulnerability forking encourage fork repository create data marketplace publish forked version market element required change copyright reason typeface copyright protected need changed unless purchase license ocean protocol logo trademark ocean protocol foundation must removed forked version market name ocean market also copyright protected changed name market additionally would also advise retain text saying powered ocean protocol forked version marketplace order give credit development work done ocean protocol team everything else made open according apache2 license look forward seeing data marketplace looking fork ocean market create marketplace find following guide useful doc forking ocean market http doc oceanprotocol com building ocean build marketplace forking ocean market customising market http doc oceanprotocol com building ocean build marketplace customising market deploying market http doc oceanprotocol com building ocean build marketplace deploying market pricing option fixed pricing allow publisher set pricing fixed need add following environmental variable env file next public allow fixed pricing true default free pricing allow publisher set pricing free need add following environmental variable env file next public allow free pricing true default allocates datatokens dispenser contract http github com oceanprotocol contract blob main contract dispenser dispenser sol dispenses data token user free publisher market able offer asset user free excluding gas cost gdpr compliance ocean market come prebuilt component customize cover gdpr requirement find additional information use multi language privacy policy feel free adopt provided privacy policy need per default cover four different language english german spanish french please advised need adjust paragraph policy depending market setup e g use cooky easily add remove policy providing markdown file content page privacy directory guideline format markdown file refer provided policy pre linked content table file automatically generated privacy preference center additionally ocean market provides privacy preference center use feature disabled per default since use cooky requiring consent deployment market however need add functionality depending cooky simply enable feature changing value next public privacy preference center environmental variable true env file enable customizable cookie banner stating use individual cooky content banner adjusted within content gdpr json file optionalcookies provided privacy preference center set simpler version displaying title text close button used inform user use essential cooky consent needed privacy preference center support two different styling option ' small ' ' default ' setting style propertie ' small ' display smaller cookie banner user first showing default styled privacy preference center upon user ' customization request market user provided additional option toggle use configured cookie consent category always retrieve current consent status per category provided useconsent hook see set custom cooky depending market user ' consent feel free adjust provided utility function cookie usage provided src utils cooky file need tsx import cookieconsentstatus useconsent ' context cookieconsent ' import deletecookie setcookie ' utils cooky ' const cooky cookieconsentstatus useconsent cooky map cookie const consent cookieconsentstatus cookie cookiename switch consent case cookieconsentstatus approved example logic setcookie cookie name ' value ' break case cookieconsentstatus rejected case cookieconsentstatus available default example logic deletecookie cookie name break privacy preference center styling privacy preference centre ha two styling option default small default view show customization option full height side banner small setting used much smaller banner shown reveals customization option user click customize style changed altering style prop privacypreferencecenter component src component app tsx example typescript privacypreferencecenter style small license text copyright 2022 ocean protocol foundation ltd licensed apache license version 2 0 license may use file except compliance license may obtain copy license http www apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
/compound-developers/compound-supply-examples,JavaScript,quick start supplying asset compound protocol example supplying ethereum asset compound protocol http compound finance ref github user ajb413 repo compound supply example full quick start tutorial compound medium blog http medium com compound finance supplying asset compound protocol ec2cf5df5aa want supply asset directly protocol ethereum wallet using json rpc see example j folder example popular web3 library like web3 j ether j compound j json rpc utilized web browser node j programming language web3 library want supply asset protocol ethereum smart contract see example solidity folder compound protocol compound open source decentralized autonomous protocol built developer unlock universe new financial application user earn interest crypto asset borrow crypto asset learn website href http compound finance ref github user ajb413 repo compound supply example img alt compound finance src http raw githubusercontent com ajb413 compound interest alert master compound finance logo png width 260 height 60 setup code repository used supply asset compound mainnet public test net localhost hardhat http hardhat org getting started ' already install node j http nodejs org lts clone repository cd root directory project run bash git clone git github com compound developer compound supply example git cd compound supply example npm install ' need npx project ' npx install using command bash npm install g npx want use j example web browser ' need first import web3 library choice html web3 j ether j compound j step necessary running example node j running local ethereum testnet hardhat get localhost testnet running use following command second command line window command run local hardhat node fork ethereum mainnet machine running ethereum node make infura http infura io account http infura io http infura io alchemy com http alchemy com account free get project id supplant environment variable setting http www twilio com blog 2017 01 set environment variable html like bash cd compound supply example set environment variable script use export mainnet provider url http mainnet infura io v3 infura api key export dev eth mnemonic clutch captain shoe salt awake harvest setup primary inmate ugly among become run hardhat node locally also seed first mnemonic account test ether erc20s node script run localhost fork j supplying asset directly via json rpc code example run web browser node j want use web browser ' need import library html j file running script give wallet ceth cdai erc20 token used redeem ever increasing amount underlying asset ctoken exchange rate increase every ethereum block transferred used redeem want test locally different supported asset besides dai see minting localhost test erc20s section localhost testnet run local testnet second command line window using command node example j web3 j supply eth j supply eth node example j web3 j supply erc20 j supply dai code used erc20 token compound support http compound finance market ref github user ajb413 repo compound supply example check example ether j compound j example j folder thing public testnet mainnet make sure wallet eth ethereum network plan interface main ropsten kovan etc insert private key wallet script noted ' best practice insert private key using environment variable instead revealing code string literal replace http provider constructor script example j replace using string provided endpoint selector infura project dashboard local testnet provider http localhost 8545 next replace contract address script recent one find compound ' ctoken contract address network page http compound finance doc network http compound finance doc network supplying asset solidity smart contract example send eth dai smart contract mint ceth cdai contract also redeem ctokens corresponding underlying localhost testnet run local testnet second command line window using command compile smart contract contract running npx hardhat compile next deploy smart contract localhost blockchain npx hardhat run script deploy j network localhost contract deployed copy address logged deploy script paste example script know direct transaction j file example solidity directory variable called mycontractaddress mycontract address supplanted run following example supply via smart contract node example solidity web3 j supply eth j supply eth node example solidity web3 j supply erc20 j supply dai public testnet mainnet see hardhat doc information deploying public ethereum network http hardhat org guide deploying html script output example supply eth via web3 j json rpc detail summary output example summary p node example j web3 j supply eth j wallet ' eth balance 10000 supplying eth compound protocol ceth mint operation successful eth supplied compound protocol 0 999999999922754 wallet ' ceth token balance 49 86379983 current exchange rate ceth eth 0 020054628875698224 redeeming ceth eth exchanging ceth based ctoken amount wallet ' ceth token balance 0 wallet ' eth balance 9999 993847840284 p detail supply erc20 via web3 j json rpc detail summary output example summary p node example j web3 j supply erc20 j dai contract approve operation successful supplying dai compound protocol cdai mint operation successful dai supplied compound protocol 9 999999999941178 wallet ' cdai token balance 482 50451639 wallet ' dai token balance 41 current exchange rate cdai dai 0 02072519460493164 redeeming cdai dai exchanging cdai based ctoken amount wallet ' cdai token balance 0 wallet ' dai token balance 51 0000001323868 p detail supply eth via solidity detail summary output example summary p node example solidity web3 j supply eth j supplied eth compound via mycontract eth supplied compound protocol 0 999999999985654072 mycontract ' ceth token balance 49 93244867 redeeming ceth eth mycontract ' ceth token balance 0 mycontract ' eth balance 1 000000000648673 p detail supply erc20 token via solidity detail summary output example summary p node example solidity web3 j supply erc20 j transferring dai wallet mycontract mycontract ha dai supply compound protocol mycontract minting cdai supplied dai compound via mycontract dai supplied compound protocol 9 999999999942267983 mycontract ' cdai token balance 482 50440136 redeeming cdai dai mycontract ' cdai token balance 0 p detail minting localhost test erc20s asset supported compound protocol seeded first account localhost testing see amount object top script script run localhost fork j add asset amount object localhost fork script run hardhat move token whale ctoken contract first wallet selected mnemonic environment variable use asset freely localhost fork ether j compound j example several code example ether j http ether org compound j http github com compound finance compound j sdks used instead web3 j instance version script doe operation try code example run script folder bash ether j example node example solidity ether j supply erc20 j node example solidity ether j supply eth j node example j ether j supply erc20 j node example j ether j supply eth j compound j example node example solidity compound j supply erc20 j node example solidity compound j supply eth j node example j compound j supply erc20 j node example j compound j supply eth j web3 j node example solidity web3 j supply erc20 j node example solidity web3 j supply eth j node example j web3 j supply erc20 j node example j web3 j supply eth j
/orca-so/typescript-sdk,TypeScript,orca typescript sdk orca sdk contains set simple use apis allow developer integrate orca platform learn orca http doc orca orca token swap v2 orca token swap v2 program http solscan io account 9w959dqeetigzocywcqpaj6sbmuzgfxxfqgetedp3aqp us following commit hash spl token swap program 3613cea3 http github com solana lab solana program library tree 3613cea3cabbb5f7e4445d6203b7292d413732da token swap trading orca liquidity pool get detailed quote make swap trading pair orca pool check orca pool lp token balance total supply supported orca pool sdk support pool currently listed orca http www orca pool provide liquidity orca pool deposit liquidity supported orca pool deposit trading pair receive lp token withdraw liquidity supported orca pool withdraw trading pair exchange lp token aquafarm support depositing liquidtiy pool lp token deposited corresponding farm receive equivalent amount farm token remember withdraw lp token exchange farm token withdrawing liquidity orca pool doubledip support farm double dip aquafarm token deposited double dip farm receive double dip reward feature coming soon trader information apy volume installation use environment ' package manager install orca sdk related package project bash yarn add orca sdk solana web3 j decimal j bash npm install orca sdk solana web3 j decimal j usage typescript import readfile mz f import connection keypair solana web3 j import getorca orcafarmconfig orcapoolconfig orca sdk import decimal decimal j const main async setup 1 read secret key file get owner keypair const secretkeystring await readfile user scuba wallet keypair json encoding utf8 const secretkey uint8array json parse secretkeystring const owner keypair fromsecretkey secretkey 2 initialzie orca object mainnet connection const connection new connection http api mainnet beta solana com singlegossip const orca getorca connection try swap 3 swapping 0 1 sol orca const orcasolpool orca getpool orcapoolconfig orca sol const soltoken orcasolpool gettokenb const solamount new decimal 0 1 const quote await orcasolpool getquote soltoken solamount const orcaamount quote getminoutputamount console log swap solamount tostring sol least orcaamount tonumber orca const swappayload await orcasolpool swap owner soltoken solamount orcaamount const swaptxid await swappayload execute console log swapped swaptxid n pool deposit 4 deposit sol orca lp token const maxtokenain maxtokenbin minpooltokenamountout await orcasolpool getdepositquote orcaamount solamount console log deposit maxtokenbin tonumber sol maxtokenain tonumber orca least minpooltokenamountout tonumber lp token const pooldepositpayload await orcasolpool deposit owner maxtokenain maxtokenbin minpooltokenamountout const pooldeposittxid await pooldepositpayload execute console log pool deposited pooldeposittxid n farm deposit 5 deposit orca sol lp token farm token const lpbalance await orcasolpool getlpbalance owner publickey const orcasolfarm orca getfarm orcafarmconfig orca sol aq const farmdepositpayload await orcasolfarm deposit owner lpbalance const farmdeposittxid await farmdepositpayload execute console log farm deposited farmdeposittxid n note 1 double dip repeat step 5 double dip farm note 2 harvest reward orcasolfarm harvest owner note 3 get harvestable reward amount orcasolfarm getharvestableamount owner publickey farm withdraw 6 withdraw orca sol lp token exchange farm token const farmbalance await orcasolfarm getfarmbalance owner publickey withdraw entire balance const farmwithdrawpayload await orcasolfarm withdraw owner farmbalance const farmwithdrawtxid await farmwithdrawpayload execute console log farm withdrawn farmwithdrawtxid n pool withdraw 6 withdraw sol orca exchange orca sol lp token const withdrawtokenamount await orcasolpool getlpbalance owner publickey const withdrawtokenmint orcasolpool getpooltokenmint const maxpooltokenamountin mintokenaout mintokenbout await orcasolpool getwithdrawquote withdrawtokenamount withdrawtokenmint console log withdraw maxpooltokenamountin tonumber orca sol lp token least mintokenaout tonumber orca mintokenbout tonumber sol const poolwithdrawpayload await orcasolpool withdraw owner maxpooltokenamountin mintokenaout mintokenbout const poolwithdrawtxid await poolwithdrawpayload execute console log pool withdrawn poolwithdrawtxid n catch err console warn err main console log done catch e console error e devnet testing example code run devnet updating import statement typescript import getorca orcafarmconfig orcapoolconfig network orca sdk changing two line code like typescript const connection new connection http api devnet solana com singlegossip const orca getorca connection network devnet one caveat note devnet pool available try access pool available mainnet code throw error example code us orca sol exists devnet technical note decimal orcau64 sdk relies use decimal http github com mikemcl decimal j number input decimal orcau64 http github com orca typescript sdk blob main src public utils orca u64 token value input decimal instance provided token value input automatically transformed token ' scale stability public util function hope find tool used build api useful public utils folder due going development orca platform cannot guarrantee stability util apis trading apis upgraded major version update support integration question problem integrating sdk pop discord http discord gg nswgwn5ksg integration channel chat one engineer issue bug found bug open issue github prefix issue help u effective resolving problem specific step took reproduce problem ex issue occur code sample debug log etc feedback got idea improve system open issue github prefix feedback let ' brainstorm together license mit http choosealicense com license mit
/dapphub/chai,Solidity,1 chai 1 dai pot chi chai erc20 token representing claim deposit dsr freely converted dai amount dai claimed one chai always increasing dai saving rate like well behaved token user ' chai balance ' change unexpectedly chai ' value grows day day chai simple contract apart standard erc20 functionality also implement permit chain approval dai also call dai address usr check many dai given user ' chai balance claim token ha owner authority ' mainnet deployment chai live mainnet since december 1st 0x06af07097c9eeb7fd685c692751d5c66db49c215 http etherscan io token 0x06af07097c9eeb7fd685c692751d5c66db49c215 interact chai contract chai money http chai money source ui hosted http github com lucasvo chui audit deployed chai contract underwent two day audit trail bit beginning february finding security related issue summary found tob letter attestation chai pdf building testing contract built using dapptools http dapp tool follows standard dapptools procedure building testing compile sh make run test sh make test documentation erc20 function chai sol implement standard erc20 function balanceof allowance approve transfer transferfrom similar token like weth mkr dai allowance uint 1 treated infinity transferfrom call address ha given allowance uint 1 cause allowance decrease join chai contract erc20 token minting happens function called join convert user dai balance chai sol function join address dst uint wad external uint chi pot rho pot drip pot chi uint pie rdiv wad chi balanceof dst add balanceof dst pie totalsupply add totalsupply pie daitoken transferfrom msg sender address wad daijoin join address wad pot join pie emit transfer address 0 dst pie calling function transfer wad dai pot contract msg sender granting dst address chai balance representing claim dai pot contract exit chai burned converted dai function called exit sol function exit address src uint wad public require balanceof src wad chai insufficient balance src msg sender allowance src msg sender uint 1 require allowance src msg sender wad chai insufficient allowance allowance src msg sender sub allowance src msg sender wad balanceof src sub balanceof src wad totalsupply sub totalsupply wad uint chi pot rho pot drip pot chi pot exit wad daijoin exit msg sender rmul chi wad emit transfer src address 0 wad msg sender sufficient approval address src call function decrease chai balance wad transfer underlying dai value msg sender draw since wad argument exit function denominated chai exact dai transferred determined time transaction included block want ensure specific dai amount must transfered use draw function instead take dai denominated argument sol wad denominated dai function draw address src uint wad external uint chi pot rho pot drip pot chi rounding ensures usr get least wad dai exit src rdivup wad chi move similarly draw transferfrom function dai denominated argument ensuring receiving address receive chai worth least wad dai sol like transferfrom dai denominated function move address src address dst uint wad external return bool uint chi pot rho pot drip pot chi rounding ensures dst get least wad dai return transferfrom src dst rdivup wad chi permit permit method let user approve address spend behalf signing erc712 typed message called permit permit consists following component holder address granting permission signer message spender address permission granted denied nonce replay attack protection allowed whether spender permission granted revoked message signed using procedure described erc712 http eips ethereum org eips eip 712 using permit typehash domain separator constant sol bytes32 public constant domain separator 0x0b50407de9fa158c2cba01a99633329490dfd22989a150c20e8c7b4c1fb0fcc3 keccak256 permit address holder address spender uint256 nonce uint256 expiry bool allowed bytes32 public constant permit typehash 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb permit processed calling permit method increment holder nonce approves spender spend behalf holder allowed true revoke otherwise sol approve signature function permit address holder address spender uint256 nonce uint256 expiry bool allowed uint8 v bytes32 r bytes32 external bytes32 digest keccak256 abi encodepacked x19 x01 domain separator keccak256 abi encode permit typehash holder spender nonce expiry allowed require holder address 0 chai invalid holder require holder ecrecover digest v r chai invalid permit require expiry 0 expiry chai permit expired require nonce nonce holder chai invalid nonce uint allowed uint 1 0 allowance holder spender emit approval holder spender
/IPILabs/shorter-v1,Solidity,shorter finance v1 shorter finance truly 100 decentralized infrastructure ipi lab comprises venue token lending derivative trading foolproof liquidation bringing margin trading physical delivery defi landscape ethos open source shorters prominent feature full fledged token pool direct lending pattern flexible position holding duration constant liquidity driven amm protect trader away dramatic spike physical delivery cross chain asset transparent position lifecycle management negative trading slippage reduction autonomous chain debt collection liquidation refer doc shorter finance http doc shorter finance learn exhaustive detail higher level integration check repo shorter v1 periphery http github com ipilabs shorter v1 periphery shorters core contract poolguardian provider committee pool trading hub trader auction hall ruler tanto katana vault naginata farming pool reward governance reward trading reward voting reward pre requisite running command make sure install dependency bash yarn build bash yarn build test run test bash yarn test clean delete smart contract artifact coverage report hardhat cache bash yarn clean
/defiprime/defiprime,SCSS,git date 2019 04 13t21 06 27 07 00 href http defiprime com img src http defiprime com image og png div align center p align center href reposize img src http img shield io github repo size sneg55 defiprime svg href http twitter com intent follow screen name defiprime alt follow u twitter img src http img shield io twitter follow defiprime svg label follow style social logo twitter alt follow u twitter href http app netlify com site vigorous pasteur b56317 deploys alt netlify status img src http api netlify com api v1 badge cf5973b6 5ffd 496f 92ac 4503e60446aa deploy status alt netlify status p div visit http defiprime com follow http twitter com defiprime defiprime com digital medium analytical service provider defi community mandate inform educate connect community definitive source news dedicated decentralized finance space product listing 101 definition best defi product feel comfortable recommend product irl friend live product running mainnet coming soon testnet please take look whitepaper visible product traction empty marketplace empty order book etc decentralized first label ' region supported ' ' spit face defi check recent twitter poll http twitter com defiprime status 1130890433821724672 community sentiment matter crypto tribalism bias ethereum tron eos bitcoin rest blockchains equal long defi product built top useful reiterate well give two example bad pitch listing defiprime going change world super duper ai based smart contract platform whitepaper 10000 user strong community telegram also struck deal century big brand one ha heard brand anyway ' related finance blockchain still working product launch play thing testnet good pitch listing defiprime launched mainnet three month ago two respectable auditor independently audited smart contract since launch achieved milestone xxxx user using app regularly also integrated well known defi protocol ' like submit project please fill product listing form http sneg55 typeform com wrfw02
/Synthetixio/synthetix-exchange,TypeScript,circleci http circleci com gh synthetixio synthetix exchange svg style svg circle token fd3dc3a4369c1e281e05262f695d59f94cf5340f http circleci com gh synthetixio synthetix exchange netlify status http api netlify com api v1 badge 36a95f47 4d7c 4fd2 be00 fc28fa5822e9 deploy status http app netlify com site synthetix deploys discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io synthetix exchange code synthetix exchange http synthetix exchange dapp br powered synthetix data http github com synthetixio synthetix data synthetix j http github com synthetixio synthetix j available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser npm test run test npm run build build app production build folder npm run storybook run storybook br open http localhost 6006 http localhost 6006 view browser
/nicholashc/AtomicArbBot,JavaScript,update sept 19 2020 deployed used code bot likely eligible claim uni http uniswap org blog uni send message need help claiming atomicarbbot ' open sourcing atomic arbitrage dex bot ' use anymore eventually document completely basic concept controller script would scan pending transaction would find guarenteed profitiable arbitrage opportunity uniswap oasis eth2dai bancor kyber longer time keep optimizing increasing competition turned sharing general interest two main part 1 arbbot sol fairly well written contract would revert oppportunity wa profitiable clever enough use gastoken reduce cost 2 controller j somewhat bloated jankily written script connected local node would scan opportunitites dispatch arbbot got job done could use major refactor consistently written modern javascript way le code duplication
/usmfum/USM,Solidity,usm minimalist usd stablecoin usm attempt answer question ' simplest possible decentralized stablecoin resulting project decentralized ownerless immutable tightly pegged open source profit minimalist erc 20 stablecoin system combining stablecoin 1 usm 1 vol coin fum four operation mint eth usm burn usm eth fund eth fum defund fum eth read new faq faq md suggest addition original series 2020 medium post sketched design http jacob eliosoff medium com whats simplest possible decentralized stablecoin 4a25262cf5e8 usmfum http twitter com usmfum twitter network address usm v1 rc1 mainnet v1 release candidate oct 10 2021 v1 launched v1 rc1 first uncapped mainnet usm release exciting release candidate v1 rc1 may still replaced v1 rc2 significant problem found keep eye twitter http twitter com usmfum news development see initial launch thread http twitter com usmfum status 1447437647727763456 give poke oracle 0x7f360c88cabdcc2f2874ec4eb05c3d47bd0726c5 http etherscan io address 0x7f360c88cabdcc2f2874ec4eb05c3d47bd0726c5 usm 0x2a7fff44c19f39468064ab5e5c304de01d591675 http etherscan io address 0x2a7fff44c19f39468064ab5e5c304de01d591675 fum 0x86729873e3b88de2ab85ca292d6d6d69d548edf3 http etherscan io address 0x86729873e3b88de2ab85ca292d6d6d69d548edf3 usmview 0x0aebfe42154deae7e35afa9727469e7f4a192b9d http etherscan io address 0x0aebfe42154deae7e35afa9727469e7f4a192b9d usmwethproxy 0x19d4465ea18d31fc113df522994b68ba9a10a184 http etherscan io address 0x19d4465ea18d31fc113df522994b68ba9a10a184 live v1 stats dashboard webpage http usmfum github io usm stats usm v0 5 mainnet pre v1 temporary test deployment v0 5 test release mainnet full featured except becomes withdrawal oct 13 see twitter thread http twitter com usmfum status 1445245294187274240 feel free play report issue soon depending v0 5 looking long awaited v1 release candidate could come soon oracle 0xe0924c0ab6bf613d0472093606074ba8243ba56a http etherscan io address 0xe0924c0ab6bf613d0472093606074ba8243ba56a usm 0x7816f1ac2a8b8a2ead4bf5fe0b946a343c3282d6 http etherscan io address 0x7816f1ac2a8b8a2ead4bf5fe0b946a343c3282d6 fum 0x1d87cbd8df28729ac12f5afd0464eb54c2870f95 http etherscan io address 0x1d87cbd8df28729ac12f5afd0464eb54c2870f95 usm v0 4 kovan testnet oracle 0x8e91d25324833d62fb3ec67adee26048696c8909 http kovan etherscan io address 0x8e91d25324833d62fb3ec67adee26048696c8909 usm 0x7dbc406e09c876c77949a45bbe4173aa6cdf9470 http kovan etherscan io address 0x7dbc406e09c876c77949a45bbe4173aa6cdf9470 fum 0x6ee47863a96a488a53053dea290ccf7f8979d6a9 http kovan etherscan io address 0x6ee47863a96a488a53053dea290ccf7f8979d6a9 usmview 0x14e1657013b721b341ea27fca47538c3b7416e4c http kovan etherscan io address 0x14e1657013b721b341ea27fca47538c3b7416e4c proxy 0x4096dacc67bae0f5b762d5df98b343b0aabac1c0 http kovan etherscan io address 0x4096dacc67bae0f5b762d5df98b343b0aabac1c0 usm v0 1 baby usm mainnet baby usm beta version usm baby usm expires 15th january 2021 becomes withdraw read point fum usm redeemable eth minting either occur baby usm baby fum redeemable usm fum test research purpose usm 0x03eb7ce2907e202bb70bae3d7b0c588573d3cecc http etherscan io address 0x03eb7ce2907e202bb70bae3d7b0c588573d3cecc fum 0xf04a5d82ff8a801f7d45e9c14cdcf73deff1a394 http etherscan io address 0xf04a5d82ff8a801f7d45e9c14cdcf73deff1a394 work usm pegged united state dollar maintains stable value minting usm exchange eth using price eth time minting eth worth 200 deposit 1 eth get 200 usm return minus small minting fee go burning opposite direction ' known cdp collateralised debt position problem cdps asset used collateral drop value case highly probable time due volatility eth contract could become undercollateralised concept minimalist funding token fum come information fum de risk usm read jacob ' original article http jacob eliosoff medium com whats simplest possible decentralized stablecoin 4a25262cf5e8
/defisaver/defisaver-v3-contracts,JavaScript,defisaver v3 contract contract related defi saver ecosystem detailed overview code found http doc defisaver com install run npm install yarn repo folder also need create env file env example fill appropriate api key run test test ran forked state mainnet hardhat config change block number fork start start old state test might work 1 compile contract start npx hardhat compile 2 need start hardhat node forked mainnet following command npx hardhat node max memory 8192 fork ethereum node url 3 run test example npm run test local mcd mcd supply j running strategy core test npm run test local run core test j running test latest fork block ' necessary update price used integration test node script utils price tracker j deploy tenderly fork 1 env file add tenderly fork id want deploy 2 script deploy fork j add contract want deploy using redeploy function make sure specify reg address second parameter 3 deploy fork run following command npm run deploy fork deploy fork common command npm run compile compile contract npm run deploy network deploy script deploy specified network calling script script folder npm run test network test file run test specified network calling script test folder npm run verify network contract name verify contract based address argument deployment folder custom hardhat task npx hardhat changereponetwork current network name new network name change contract helper contract import extend npx hardhat customflatten contract name flatten contract ready deployment put contract flattened folder npx hardhat customverify contract address contract name network hardhat setting network name verify etherscan contract wa deployed using single file customflatten task npx hardhat fladepver contract name gas gwei nonce optional network hardhat setting network name flatten single file save contract flattened deploy verify etherscan npx hardhat encryptprivatekey encrypt key secretword put output env encrypted key later deployment process ask secret word decrypt key deployment use
/nalinbhardwaj/shiit-coin,JavaScript,shiitcoin putting blockchain google sheet div align center target blank href http www youtube com watch v dzprryiuq0 img width 800 src http user image githubusercontent com 6984346 134828618 cd13a36c a9b7 4184 a23b d654004847e5 png alt shiitcoin video introduction div check google sheet http doc google com spreadsheet 1iiltymgnzvowxsnka4ebkzsee4ewy7i3lj9fobhlmkk edit usp sharing idea bad sometimes idea bad actually go back around genius think ' come across one yes end end blockchain working entirely google sheet transaction broadcasting mining wallet gossip shiitcoin obviously troll project meant real money strike hoping farm internet point strike educational value exploring barebones blockchain well share first let ' talk adventure starting bet slack chat masterpiece defi subjecting madness origin project humble started fictional garage coworkers startup faced practical problem made kitkat bet random thing wanted secure way maintain ledger used put ledger slack chat committed current chain state sha mechanism kinda sucked message slack editable version history clean way look chain understand owe adhyyan 3 kitkats today used owe 1 yesterday p align center img width 850 alt original shiitcoin src http user image githubusercontent com 6984346 134825698 a85785f1 5950 481b a414 b5cafa86c1ea png p poor afford eth gas btc fee put barter chain came genius idea making blockchain completely google sheet p align center img width 400 alt adhyyans best idea time align center src http user image githubusercontent com 6984346 134825707 1aae4ae5 55ff 4627 aa3a 1ad85514b111 png p even possible http user image githubusercontent com 6984346 134824485 848a1838 7229 4baf 8fe6 c2784a0de078 mov system work creating one page every client everyone run miner gossip client script someone want make transaction use private key sign transaction put public transaction pool sheet mining script read sheet figure want include transaction block people often rave great programming environment excel spreadsheet honestly google sheet next level daddy google make much possible ' surprised someone figure run entire company google orksuite apps shiitcoin particular feature clutch google apps script let write real j code interact google sheet google auth user pretty much everything else google sheet ha concept protected sheet lock sheet make allowed write restrict everyone else read access err except sheet creator let ' ignore property center piece support client single google sheet instance still support gossip decentralised form apps script support time trigger allows script run regular schedule allows client run miner gossip script hand free ok im sold give nitty gritty ' lot going traditional blockchain wallet mining node syncing transaction broadcasting etc came spec strip minimal complexity based ' possible context google sheet main thing figure crypto generate verify signature transaction block handle cryptographic primitive needed blockchain gossip propagate communication node sync chain resolve consensus disagreement etc mining new block created since decided go simple proof work mine using google apps script wallet handle public private key pair environment securely sign transaction without introducing replay attack let ' break one crypto struggling figure use external library google apps script ' v8 runtime due compatibility issue es5 6 google apps script runtime http developer google com apps script guide v8 runtime ended modifying paul miller ' noble secp256k1 library http github com paulmillr noble secp256k1 make work google apps script runtime fork secp256k1 g http github com nalinbhardwaj shiit coin blob main sheet secp256k1 g main change around bigint handling sha256 digest computation http github com nalinbhardwaj shiit coin blob main sheet secp256k1 g l858 use inbuilt google apps script utility library hmac sha256 computation http github com nalinbhardwaj shiit coin blob main sheet secp256k1 g l593 support different syntactic sugar v8 runtimes library set able support primitive crypto operation needed use case signing message verifying signature generating private public key pair etc gossip shiitcoin gossip traditional sense word much simpler regular chain client peer simply discovered via google sheet sad centralisation noise ' need kademlia http en wikipedia org wiki kademlia complicated discovery mechanism transaction pool shared everyone already complicated question figure consensus implement something similar idea nakamoto consensus using longest chain rule settle disagreement every node look chain 7 random node pick longest chain settling tie using heuristic similarity chain node currently belief notice due google sheet centralisation much pull process usual back forth gossip node every node publishes current belief real time mining block generation went simple proof work scheme based idea bitcoin run sha random nonce create block meeting certain difficulty threshold implement google apps script depend client using time trigger feature allows run script every n minute running attempt mine new block set chain allow 3 transaction block simplifies transaction selection mining software besides simplifying user interface sheet miner simply go picking three transaction highest offered fee maximize reward note diverges significantly btc eth notion weight transaction turning block creation knapsack problem http en wikipedia org wiki knapsack problem miner also worth noting way set difficulty coinbase reward quite imperfect fixed constant difficulty hardcoded opposed adjusting difficulty mechanism like coin total mining hash rate increase block generated faster faster similarly coinbase reward fixed constant 500 shiitcoin per block mined ' adjust time wallet transaction shiitcoin much simpler typical btc eth transaction ' simply record address paying address b without capability store arbitrary data implement complicated scheme chose use model similar ethereum ' account wallet opposed bitcoin ' utxo proof concept understanding tracing account model much cleaner exchange slight added complexity account sequence number handling public private key pair concluded would unwise try put private key related computation google sheet given shared data model ' hard inadvertently leak step instead decided implement simple browser frontend handle transaction signing private key management http shiit coin vercel app made dealing account sequence nonce number bit cumbersome simplifies aspect wallet management first load allows generate paste new private key armed sequence use sign transaction ' also used magic local storage make private key persist browser storage refresh come back later private key always read sign transaction pattern inspired darkforest handle transaction game take inspiration austin griffith ' work http twitter com gubsheep status 1441448775873007620 sequence ' put user spreadsheet top row auto updated google apps script every tick user copy paste sheet website ' folk piece place make blockchain google sheet ' interested setting sheet client check client setup guide setup md lot emergent idea came along way curious explore ' interested hit u since chain entirely spreadsheet cool interactive otherwise data analysis visualisation non trivial otherwise ' equivalent putting eth btc spreadsheet nicety spreadsheet like query interface real chain spreadsheet poor man ' dune http dune xyz home thing dune learn trivial idea make smart contract primitive scripting setup thinking way could sandbox j code enough eval keyword j execute smart contract j apps script obvious point centralisation google sheet admin cryptocurrency seems like nice project blockchain 101 course whacky idea blockchain deployment smart fridge mine using extra cooling generates tie proof work physical activity calorie burnt using apple watch surely ' least one good idea hypothetical hit u thought
/protontypes/LibreSelery,Python,img align center src doc logo libreselery 04 png width 400 project deprecated without replacement interested fully automated transparent distribution funding within open source please contact main developer continuous funding libreselery command line tool distribute funding free open source project new funding model offer transparent automated adaptable compensation contributor aim replace middleman donation distribution far possible free transparent algorithm unlike donation system libreselery offer decentralized tool platform href http asciinema org x0eonfhrtpaevnlpueyz5tamq target blank p align center img src http asciinema org x0eonfhrtpaevnlpueyz5tamq svg width 500 p join chat http gitter im protontypes libreselery http badge gitter im protontypes libreselery svg http gitter im protontypes community utm source badge utm medium badge utm campaign pr badge utm content badge docker pull http img shield io docker pull protontypes libreselery http hub docker com r protontypes libreselery tag stability experimental http img shield io badge stability experimental orange svg http github com emersion stability badge experimental project funded libreselery actively contribute repository receive small amount cryptocurrency donation pool public email address github action status http github com protontypes libreselery workflow seleryaction badge svg http github com protontypes libreselery action query workflow 3aseleryaction balance btc http img shield io endpoint url http raw githubusercontent com wiki protontypes libreselery libreselery balance badge json style flat logo bitcoin balance eur http img shield io endpoint url http raw githubusercontent com wiki protontypes libreselery libreselery native balance badge json style flat logo bitcoin donate bitcoin http badgen net badge donate 3pvdiylpr7mgaefrjlw9mfueszs2aapx9w orange icon bitcoin http github com protontypes libreselery wiki donation transaction history http badgen net badge icon transaction 20history icon bitcoin label http github com protontypes libreselery wiki transaction history benfits project attract new developer sharing donation dependency tree strengthen bond existing developer reward contributor keeping project date attract new donor distributing donation people actually working project concept libreselery simple command line tool run upon github hosted project manually automated continuous integration work donation pool containing cryptocurrency wallet run small amount taken donation pool distributed project ' contributor dependency project owner ha freedom customize distribution done openly front community designed run continuous integration pipeline like github action donation transaction automatically handled transaction detail published transparency wiki repository even donation website automatically created wiki donation divided contributor based public transparent metric metric configured per repository based following weight uniform weight everyone contributed minimum number commits main branch considered activity weight everyone contributed last x commits service weight everyone contributed successful pull request based issue last x commits implemented yet 132 http github com protontypes libreselery issue 132 amount distributed contributor calculated accumulation weight sent via cryptocurrency market api public email address git platform user profile even configure compensation contributor dependency therefore donating money back open source platform play integral role project weight calculation active development extended future cooperation community always listen concern actively seek option fair appropriate measure payout weight goal system fair recognizes contribution made without susceptible abuse furthermore issue ' morality ' still open issue concern idea regarding following question always welcome metric give contribution weight others design metric represent reward helpful contributor feedback improve metric p align center img src doc concept png p implementation libreselery 1 configured based selery yml file run github action project 2 triggered every push main branch github action worflow file part project repository 3 gather contributor information target project via github library io api 4 filter contributor hidden email address github profile minimum contribution limit libreselery send email git commit email address order avoid spam 5 creates custom funding distribution weight based contribution rating various project minimum contribution activity 6 add weight combined weight used different distribution splitting behavior 7 distributes funding contributor based selected split behavior 8 pay cryptocurrency selected contributor ' email address via coinbase api contributor without coinbase account receive email claim donation 9 automatically generates donation transaction visualization website github wiki feature transparent payout github project contributor every push make main master branch minimal change github project shown seleryaction http github com protontypes seleryaction adapt libreselery step detailed transaction history http github com protontypes libreselery wiki transaction history regenerated github wiki every time run libreselery user defined payout configuration selery yml http github com protontypes libreselery blob master selery yml dependency scanning language include developer dependency using library io http library io funding distributed via coinbase payment method like uphold currently work progress donators see transparent payout log github action http github com protontypes libreselery action query workflow 3aseleryaction self hosted donation website http github com protontypes libreselery wiki donation secure donation automatically stored wiki repository simulate funding distribution repository without actually transferring payout see distribution would look like automated plot generation much wa paid developer add additional dependency runtime development environment tooling repos yml http github com protontypes seleryaction blob master tooling repos yml like docker linux libreselery able find based repository information splitting strategy full split contributor receive payout according weight random split x contributor randomly picked using weight probability p align center img src http raw githubusercontent com wiki protontypes libreselery libreselery transaction per user png width 500 p getting started since project early stage amount funding wallet therefore limited github action integration use template seleryaction http github com protontypes seleryaction integrate libreselery github project starting github action integration easiest way newcomer people without linux knowledge command line usage running docker 1 install docker http www digitalocean com community tutorial install use docker ubuntu 20 04 2 clone libreselery build container bash cd git clone http github com protontypes libreselery git cd libreselery docker build libreselery 3 clone target repository bash cd git clone target repository 4 create token file user store api key secret scope github token include additional permission beyond standard minimum scope find create github token http doc github com en github authenticating github creating personal access token bash mkdir p libreselery secret libreselery result public touch libreselery secret token env 5 copy selery yml http github com protontypes seleryexample target repository 6 libreselery currently support coinbase enable valid payouts using coinbase create dedicated coinbase account limited amount coinbase doe support sending email ' use dedicated email address owner coinbase account contributor project otherwise libreselery skip payouts buy cryptocurrency see price list http help coinbase com en coinbase trading funding pricing fee fee html transferring money coinbase account configure access control setting http github com protontypes libreselery wiki coinbase token api permission libreselery automated coinbase wallet never transfer store large value automated cryptocurrency wallet use recurring automated buy http blog coinbase com easier recurring buy sell coinbase 9a3cd7ea934e recharge wallet regular base avoid financial security risk coinbase doe charge transferring cryptocurrency one coinbase wallet another add coinbase api key secret newly created file libreselery token env never store token public repository replace xxxxx coinbase library io http library io api token get started without creating actual account apis bash coinbase token coinbase token coinbase secret coinbase secret github token github token library api key libaries io token 7 ' coinbase account payouts simulated enable simulation mode set simulation true include dependency false selery yml target repository adjust test different configuration selery yml according requirement libreselery need api token github http github com setting token simulation mode edit libreselery token env follows bash coinbase token xxxxx coinbase secret xxxxx github token github token library api key xxxxx 8 make token file read bash chmod 400 libreselery secret token env 9 send cryptocurrency weighted random product contributor valid visible email address github bash env cat libreselery secret token env run sh target repository run directly host machine 1 install python ruby dependency machine bash sudo apt update sudo apt install git ruby ruby dev curl python3 pip 2 install libreselery python dependency bash cd git clone http github com protontypes libreselery git cd libreselery pip3 install 3 ensure home local bin path check output echo path doe contain local bin add following line dotfile example bashrc bash export path home local bin path 4 follow step 3 9 running docker running docker instruction differ step 5 run libreselery target project enjoy fresh selery bash env cat libreselery secret token env selery run target repository r libreselery result roadmap p align center img src http github com protontypes libreselery wiki roadmap png width 600 p libreselery going support multiple apis asset near future like x github gitlab savannah x library io x coinbase uphold gnu taler http taler net frequently asked question goodhart ' law http en wikipedia org wiki goodhart 27 law measure becomes metric cease useful measure solving problem one core challenge libreselery combine multiple weight calculated based different project data via github api even create weight based project activity like merging code review issue creation etc accumulation weight try avoid rewarding one behavior one important metric much pull request x solved based issue also minimum contribution limit adjust project making payment transparent everyone involved see distribution looked like past principle every company ha metric distribution fund unfortunately often non transparent contrast try solve whole thing community architecture allows add weight weight balanced depending project community never one ideal metric determine performance totally different people even simulator roadmap fine tune weight find information discussion issue board 159 http github com protontypes libreselery issue 159 132 http github com protontypes libreselery issue 132 transaction fee since libreselery tool platform cannot charge fee buying selling cryptocurrency coinbase ha fee http help coinbase com en coinbase trading funding pricing fee fee transaction coinbase wallet fee micro transaction yes please try avoid spamming people email every payout result email disable notification email set send email notification false user without coinbase account github profile email address still receive email sending cryptocurrency coinbase wallet free coinbase api allows send minimum 0 000001 btc coinbase help http help coinbase com en coinbase trading funding pricing fee fee charge transferring cryptocurrency one coinbase wallet another use random split strategy let ' assume small donation want distribute within larger project full split could cause transaction fall allowed limit 0 000001 btc many people project may coinbase account people would open account 10 cent random distribution individual donor randomly selected based weight receive larger donation longer period time distribution emerge would full split distribution doe credit expire coinbase open account coinbase help http help coinbase com en coinbase trading funding sending receiving cryptocurrency sent fund wrong address get back html 30 day cryptocurrency sent via email ha claimed recipient returned sender country supported coinbase withdraw donation coinbase officially supported country http www coinbase com place always use paypal transaction bridge find information paypal integration coinbase http help coinbase com en coinbase getting started adding payment method paypal faq part coinbase referral program coinbase help http help coinbase com en coinbase topic coinbase referral program coinbase referral program let earn bonus successful referral registered account friend visit coinbase com trade initiate buy sell 100 usd 100 usd equivalent domestic currency within 180 day opening account receive 10 usd 10 usd equivalent domestic currency referral bonus order completes order take 4 business day complete also send fund email address register referral well libreselery working way make even referral income transparent sending account doe work legal side context people partly funded third party source employed academic people working industry libreselery send donation public email address github account case email address business academic address need talk organization donation entered private e mail address accept donation discretion consider project contribution privately done ha already rewarded support libreselery donation certainly funded libreselery donation website http github com protontypes libreselery wiki donation usage development libreselery always free without charge want support u using libreselery regular base need add u tooling repos yml http github com protontypes seleryexample blob master selery yml project donation distributed among developer libreselery else contribution contributed master branch receive email cryptocurrency coinbase git profile email github profile page considered find contribution guide http github com protontypes libreselery wiki contribution guide look good first issue http github com protontypes libreselery label good 20first 20issue label get project first simple task contact feedback information please contact u team protontypes eu join gitter chat http gitter im protontypes libreselery check wiki http github com protontypes libreselery wiki organisation behind libreselery protontypes building open accelerator free sustainable innovation based libreselery find http protontypes eu p align center img src doc selery workflow png width 500 p artwork miriam winter undraw http undraw co
/compound-developers/compound-borrow-examples,JavaScript,quick start borrowing asset compound protocol example borrowing ethereum asset compound protocol http compound finance ref github user ajb413 repo compound borrow example full quick start tutorial compound medium blog http medium com compound finance borrowing asset compound quick start guide f5e69af4b8f4 want borrow asset directly protocol ethereum wallet using json rpc web3 j see example j folder example popular web3 library like web3 j ether j compound j json rpc utilized web browser node j programming language web3 library want borrow asset protocol ethereum smart contract see example solidity folder compound compound open source autonomous protocol built developer unlock universe new financial application interest borrowing open financial system learn website href http compound finance ref github user ajb413 repo compound supply example img alt compound finance src http raw githubusercontent com ajb413 compound interest alert master compound finance logo png width 260 height 60 setup code repository used borrow asset compound ethereum mainnet public test net localhost hardhat http hardhat org getting started ' already install node j http nodejs org lts clone repository cd root directory project run bash git clone git github com compound developer compound borrow example git cd compound borrow example npm install ' need npx project ' npx install using command bash npm install g npx want use j example web browser ' need first import web3 library choice html web3 j ether j compound j step necessary running example node j running local ethereum testnet hardhat get localhost testnet running use following command second command line window command run local hardhat node fork ethereum mainnet machine running ethereum node make infura http infura io account http infura io http infura io alchemy com http alchemy com account free get project id supplant environment variable setting http www twilio com blog 2017 01 set environment variable html like bash cd compound supply example set environment variable script use export mainnet provider url http mainnet infura io v3 infura api key export dev eth mnemonic clutch captain shoe salt awake harvest setup primary inmate ugly among become run hardhat node locally also seed first mnemonic account test ether erc20s node script run localhost fork j borrowing asset directly via web3 json rpc code example run web browser node j want use web browser ' need import library html j file running script give wallet borrowed eth dai ctokens erc20 token used redeem ever increasing amount underlying asset ctoken exchange rate increase every ethereum block transferred used redeem time long underlying collateral doe support open borrow localhost test net run local testnet second command line window using command seed account erc20 token look script file find erc20 token seeded account node example j web3 j borrow erc20 eth collateral j borrow dai eth collateral node example j web3 j borrow eth erc20 collateral j borrow eth dai collateral check example ether j compound j example j folder thing public test net main net make sure wallet eth ethereum network plan interface main ropsten kovan etc insert private key wallet script noted ' best practice insert private key using environment variable instead revealing code string literal replace http provider web3 constructor j script web3 j example replace using string provided endpoint selector infura project dashboard localhost test net provider http 127 0 0 1 8545 next replace contract address json file recent one find compound ' ctoken contract address network page http compound finance doc network http compound finance doc network borrowing asset solidity smart contract example send eth dai smart contract mint ceth cdai contract also mark asset collateral borrowing next asset borrowed protocol localhost testnet run local testnet second command line window using command seed account erc20 token look script file find erc20 token seeded account compile smart contract contract running npx hardhat compile next deploy smart contract localhost blockchain npx hardhat run script deploy j network localhost contract deployed copy address logged deploy script paste example script know direct transaction j file example solidity directory variable called mycontractaddress mycontract address supplanted run following example supply via smart contract node example solidity web3 j borrow erc20 via solidity j supply eth collateral borrow dai node example solidity web3 j borrow eth via solidity j supply dai collateral borrow eth public testnet mainnet see hardhat doc information deploying public ethereum network http hardhat org guide deploying html output example borrow erc20 via web3 javascript detail summary output example summary p node example j web3 j borrow erc20 eth collateral j wallet ' eth balance 10000 wallet ' ceth balance 0 wallet ' dai balance 100 supplying eth protocol collateral get ceth return wallet ' eth balance 9998 999600295 wallet ' ceth balance 49 86112032 wallet ' dai balance 100 entering market via comptroller contract eth collateral calculating liquid asset protocol fetching ceth collateral factor fetching dai price price feed fetching borrow rate per block dai borrowing 3384 441740171433 liquid asset worth usd pooled protocol borrow 75 total collateral supplied protocol dai 1 dai 1 000000 usd borrow 3384 441740171433 dai protocol never borrow near maximum amount account instantly liquidated borrowed amount increase 2 2076358156e 8 borrowed amount dai per block based current borrow rate attempting borrow 50 dai wallet ' eth balance 9998 998558725 wallet ' ceth balance 49 86112032 wallet ' dai balance 150 fetching dai borrow balance cdai contract borrow balance 50 dai part something borrowed asset repaying borrow approving dai transferred wallet cdai contract borrow repaid wallet ' eth balance 9998 99801022 wallet ' ceth balance 49 86112032 wallet ' dai balance 100 p detail borrow eth via web3 javascript detail summary output example summary p node example j web3 j borrow eth erc20 collateral j wallet ' eth balance 10000 wallet ' cdai balance 0 wallet ' dai balance 100 approving dai transferred wallet cdai contract supplying dai protocol collateral get cdai return wallet ' eth balance 9999 99525988 wallet ' cdai balance 691 40915384 wallet ' dai balance 85 entering market via comptroller contract eth collateral calculating liquid asset protocol fetching protocol ' dai collateral factor fetching dai price price feed fetching borrow rate per block eth borrowing 11 249999999912092756 liquid asset worth usd pooled protocol borrow 75 total asset supplied protocol eth 1 dai 1 000000 usd borrow 11 249999999912092756 usd worth asset protocol never borrow near maximum amount account instantly liquidated borrowed amount increase 1 1208317598e 8 borrowed amount eth per block based current borrow rate attempting borrow 0 002 eth eth borrow successful wallet ' eth balance 9999 98912288 wallet ' cdai balance 691 40915384 wallet ' dai balance 85 fetching eth borrow balance ceth contract borrow balance 0 002 eth part something borrowed asset repaying borrow borrow repaid wallet ' eth balance 9999 98426352 wallet ' cdai balance 691 40915384 wallet ' dai balance 85 p detail borrow erc20 via solidity detail summary output example summary p node example solidity web3 j borrow erc20 via solidity j wallet ' eth balance 10000 mycontract ' eth balance 0 mycontract ' ceth balance 0 mycontract ' dai balance 0 calling mycontract borrowerc20example 1 eth collateral wallet ' eth balance 9998 98883272 mycontract ' eth balance 0 mycontract ' ceth balance 49 86111985 mycontract ' dai balance 10 repaying borrow wallet ' eth balance 9998 9852758 mycontract ' eth balance 0 mycontract ' ceth balance 49 86111985 mycontract ' dai balance 0 p detail borrow eth token via solidity detail summary output example summary p node example solidity web3 j borrow eth via solidity j wallet ' dai balance 100 mycontract ' eth balance 0 mycontract ' ceth balance 0 mycontract ' dai balance 0 mycontract ' cdai balance 0 sending 25 dai mycontract provide collateral wallet ' dai balance 75 mycontract ' eth balance 0 mycontract ' ceth balance 0 mycontract ' dai balance 25 mycontract ' cdai balance 0 calling mycontract borrowethexample 25 dai collateral wallet ' dai balance 75 mycontract ' eth balance 0 002 mycontract ' ceth balance 0 mycontract ' dai balance 0 mycontract ' cdai balance 1152 34787526 repaying borrow wallet ' dai balance 75 mycontract ' eth balance 0 mycontract ' ceth balance 0 mycontract ' dai balance 0 mycontract ' cdai balance 1152 34787526 p detail minting localhost test erc20s asset supported compound protocol seeded first account localhost testing see amount object top script script run localhost fork j add asset amount object localhost fork script run hardhat move token whale ctoken contract first wallet selected mnemonic environment variable use asset freely localhost fork ether j compound j example several code example ether j http ether org compound j http github com compound finance compound j sdks used instead web3 j instance version script doe operation try code example run script folder bash ether j example node example solidity ether j borrow erc20 via solidity j node example solidity ether j borrow eth via solidity j node example j ether j borrow erc20 eth collateral j node example j ether j borrow eth erc20 collateral j compound j example node example solidity compound j borrow erc20 via solidity j node example solidity compound j borrow eth via solidity j node example j compound j borrow erc20 eth collateral j node example j compound j borrow eth erc20 collateral j web3 j node example solidity web3 j borrow erc20 via solidity j node example solidity web3 j borrow eth via solidity j node example j web3 j borrow erc20 eth collateral j node example j web3 j borrow eth erc20 collateral j
/atiselsts/uniswap-v3-liquidity-math,Python,overview see technical note liquidity math uniswap v3 http atiselsts github io pdfs uniswap v3 liquidity math pdf uniswap v3 whitepaper http uniswap org whitepaper v3 pdf description purpose code juperter notebook version code see yj ' http github com uniyj work http github com uniyj uni v3 peri tree main atiselsts uniswap v3 liquidity math question feel free contact via email atis elsts gmail com dm http twitter com atiselsts http atiselsts ' also offering paid consultation topic content uniswap v3 liquidity math py uniswap v3 liquidity math py implementation equation example liquidity math uniswap v3 paper subgraph liquidity query example py subgraph liquidity query example py query uniswap v3 subgraph information show amount locked current tick range usdc weth 0 3 pool subgraph liquidity range example py subgraph liquidity range example py show amount locked tick nonzero liquiditynet usdc weth 0 3 pool subgraph liquidity position example py subgraph liquidity position example py show amount locked active position usdc weth 0 3 pool installation usage script need gql python module install dependency pip install r requirement txt execute command line example subgraph liquidity range example py example output example output uniswap v3 liquidity math py example 1 much usdc need providing 2 eth price range amount usdc 5076 10 p 1500 00 75 00 p p b 2500 00 125 00 p example 2 2 eth 4000 usdc range top set 3000 usdc ' bottom range lower bound price p 1333 33 example 3 using position created example 2 asset balance 2500 usdc per eth amount eth x 0 85 amount usdc 6572 89 delta x 1 15 delta 2572 89 amount eth x 0 85 amount usdc 6572 89 example output subgraph liquidity query example py l 22510401004259913887 tick 195879 current price 0 000321 weth 1 usdc 3115 361406 usdc 1 weth amount current tick range 1318490 67 usdc 785 63 weth example output subgraph liquidity range example py tick 195660 price 3184 336897 usdc weth 1193 68 weth locked potentially worth 3789699 28 usdc tick 195720 price 3165 289029 usdc weth 1199 90 weth locked potentially worth 3786639 86 usdc tick 195780 price 3146 355100 usdc weth 1218 77 weth locked potentially worth 3823192 07 usdc tick 195840 price 3127 534429 usdc weth current tick asset present 1332170 50 usdc 781 24 weth remaining current tick range potentially 3770791 99 usdc 1209 30 weth total current tick range tick 195900 price 3108 826338 usdc weth 3748424 25 usdc locked potentially worth 1209 36 weth tick 195960 price 3090 230154 usdc weth 3782324 42 usdc locked potentially worth 1227 64 weth tick 196020 price 3071 745208 usdc weth 3762895 47 usdc locked potentially worth 1228 68 weth tick 196080 price 3053 370833 usdc weth 3740185 70 usdc locked potentially worth 1228 62 weth
/saddle-finance/saddle-contract,TypeScript,saddle contract codecov http codecov io gh saddle finance saddle contract branch master graph badge svg token ci26sd9sge http codecov io gh saddle finance saddle contract ci http github com saddle finance saddle contract workflow ci badge svg http github com saddle finance saddle contract action query workflow 3aci smart contract behind saddle finance http saddle finance contract compiled hardhat http hardhat org getting started tested using waffle http hardhat org guide waffle testing html testing ether j waffle typescript http hardhat org guide typescript html typescript support installation bash npm ci legacy peer deps usage build bash npm run build test bash npm test coverage bash npm run coverage deploying contract localhost hardhat evm bash npx hardhat node connect rpc server via http localhost 8545 chain id 31337 deploying contract local fork network order successfully fork network network defined hardhat config valid rpc url case mainnet alchemy api must set valid url env file alchemy api http eth mainnet alchemyapi io v2 xxxxxxxxxxxx bash npm run fork network mainnet connect rpc server via http localhost 8545 chain id network additionally choose block number fork setting fork block number env variable deploying contract ropsten order successfully deploy ropsten alchemy api ropsten must set valid url env file mnemonic test account must set account must reth successful deployment alchemy api http eth ropsten alchemyapi io v2 xxxxxxxxxxxx mnemonic test account seed phrase generating gitbook doc bash npx solidity docgen template template output doc folder copied appropriate folder saddle doc repo http github com saddle finance saddle doc tree master solidity doc running slither slither http github com crytic slither solidity static analysis framework run locally bash pip3 install slither analyzer slither slither configured run github action error high finding
/sambacha/dune-snippets,PLpgSQL,img src http imgur com rurn3pa png align center width 350 dune snippet br autoformat sql http github com sambacha dune snippet workflow autoformat 20sql badge svg snippet dune user submission query linted github action ci workflow br source dune analytics hackmd http hackmd io k71zustxqvkgqocvr6oxnw content documentation documentation top link top link need help getting started query need help getting started query dune analytics tldr dune analytics tldr 1 query human readable smart contract data postgresql 1 query human readable smart contract data postgresql 2 visualize finding 2 visualize finding 3 create dashboard share public link 3 create dashboard share public link 4 explore analysis created community member fork query click button 4 explore analysis created community member fork query click button create user free duneanalytics com http www duneanalytics com create user free duneanalyticscom http wwwduneanalyticscom table content table content data table data table decoded smart contract data decoded smart contract data abstraction table view abstraction table view raw ethereum data raw ethereum data centralised exchange trading data centralised exchange trading data tip querying data tip querying data use view abstraction table use view abstraction table using inline ethereum address using inline ethereum address quote camel case column table name quote camel case column table name remove decimal remove decimal use date trunc get time use date trunc get time get usd price get usd price token symbol token symbol address label address label label label label look like label look like address label example address label example adding label adding label 1 directly address via label page http duneanalytics com hagaetc label 1 directly address via label page http duneanalyticscom hagaetc label 2 via dune query 2 via dune query label table label table using label using label usecase want display label list address usecase want display label list address usecase want filter query label exist usecase want filter query label exist understanding data decoding dune analytics understanding data decoding dune analytics contract decoded data contract decoded data decoded data decoded data abstraction view abstraction view handy query explore decoded table handy query explore decoded table scalable decoding across contract scalable decoding across contract contract bytecode contract bytecode interface interface dune handle proxy contract dune handle proxy contract get smart contract decoded get smart contract decoded decoded data popular smart contract project head duneanalytics com decode request decoding data decoded data popular smart contract project head duneanalyticscom decode request decoding data change log change log august 2020 http hackmd io yop3yigaraejtpe190sojw view usd price asset token decimal price usd table august 2020 http hackmdio yop3yigaraejtpe190sojw view usd price asset token decimal pricesusd table march 2020 http hackmd io yop3yigaraejtpe190sojw view march 2020 block time denormalization trace success march 2020 http hackmdio yop3yigaraejtpe190sojw view march 2020 block time denormalization tracessuccess january 2020 http hackmd io yop3yigaraejtpe190sojw view erc20 transfer table fallback decoding january 2020 http hackmdio yop3yigaraejtpe190sojw view erc20 transfer table fallback decoding october 2019 http hackmd io yop3yigaraejtpe190sojw view october 2019 new data structure october 2019 http hackmdio yop3yigaraejtpe190sojw view october 2019 new data structure sample query sample query growth rate growth rate user amount trailing period user amount trailing period filter query address interface filter query address interface circulating supply time token mint burn function circulating supply time token mint burn function circulating supply time mint burn 0x000 address circulating supply time mint burn 0x000 address usd value token utilised event usd value token utilised event usd trading volume per token time usd trading volume per token time usd price token uniswap usd price token uniswap token usd value per token time address token usd value per token time address known issue known issue function overloading function overloading source dune analytics hackmd http hackmd io k71zustxqvkgqocvr6oxnw dune documentation tip trick get started data interface top link create user free duneanalytics com http www duneanalytics com submit contract decoding duneanalytics com decode http www duneanalytics com decode browse curated dashboard query data table top project duneanalytics com project duneanalytics com project add project http github com duneanalytics project via simple markdown file find create data abstraction via public github http github com duneanalytics ' find ' looking ask community discord server http discord gg errzwbz email u support duneanalytics com need help getting started query see 20 min intro video http www youtube com watch v awlwo9t8dky create query dune ' good getting started article http duneanalytics com blog get started guide even ' know sql many non technical user mastered dune prior codeing experience dune powered common database postgresql find ton resource searching online getting started sql udemy codecademy etc query specific question dune analytics tldr 1 query human readable smart contract data postgresql 2 visualize finding 3 create dashboard share public link 4 explore analysis created community member fork query click button create user free duneanalytics com http www duneanalytics com table content toc data table currently query data ethereum mainnet xdai query xdai data change data source dropdown list data table list query page decoded smart contract data decoded data abstraction table view abstraction table view centralised exchange trading data centralised exchange trading data raw ethereum data raw ethereum data commonly used table event call data project typically get action occured smart contract simply search project name find relevant table abstraction view table containing abstraction make various data straight forward query example dex trade lending borrow lending collateral change lending repay stablecoin transfer stablecoin mint stablecoin burn see full list add via github http github com duneanalytics abstraction price usd give usd price various asset per minute typically joined minute event data multiplied chain value trade transfer etc erc20 token give contract address symbol number decimal popular token token value transfer divided 10 power decimal table ethereum transaction get eth transfer typically join event ethereum transaction hash evt tx hash decoded smart contract data instead working trace log receipt dune decodes smart contract activity nice human readable table see section info understanding data decoding dune analytics submit contract decoding duneanalytics com decode duneanalytics com decode abstraction table view cleanest easiest use table dune abstraction dex trade dex trade table also search view table list find various view together various team community member ' created table view make blockchain data even easier work typically entail removing decimal eth token transfer adding human readable symbol joining relevant table together adding usd value event always see underlying table derived directly blockchain need detail curious view created check github http github com duneanalytics abstraction even pull request create abstraction raw ethereum data block log transaction receipt trace probably ' use much analysis dune see decoded data decoded data ' always nice case click http ethereum stackexchange com question 268 ethereum block architecture learn ethereum ' data structure ' really needed using dune centralised exchange trading data token volume great often want know usd value smart contract activity easily get join information onchain data using data pull coincap api see use price usd asset ethereum contract address price minute symbol ticker note weth used eth price price layer 1usd native layer 1 asset price minute symbol ticker price volume weighted price based real time market data every minute translated usd data fetched coinpaprika api http coinpaprika com api tip querying data interact data table data table interface duneanalytics com http www duneanalytics com create new query simply click create query http imgur com fvlbpef png left select database want use dropdown list see data table window search project interested working use view abstraction table easiest way great analysis dune analytics use prepared view named namespace view abstraction table like dex trade view table cleaned contains data metadata like human readable token symbol make straight forward query using inline ethereum address dune ethereum address stored postgres bytearrays encoded x prefix differs customary 0x prefix ' like use inline address say filter given token would sql token ' x6b175474e89094c44da98b954eedeac495271d0f ' simply short sql token ' x6b175474e89094c44da98b954eedeac495271d0f ' bytea quote camel case column table name column table name mostly taken directly smart contract abis modification since smart contract written solidity written camelcased naming convention many dune ' table column name postgres requires quote column tablenames case sensitive sql select columnname projectname contractname evt eventname limit 10 postgres double quote reserved table column whereas single quote reserved value sql select columnname projectname contratname evt eventname contract address ' x6b175474e89094c44da98b954eedeac495271d0f ' limit 10 schema always lowercase dune remove decimal ether transfer erc 20 token 18 decimal place get human readable number need remove decimal table erc20 token give contract address symbol number decimal popular token token value transfer divided 10 power decimal table transfer value 10 erc20 token decimal use date trunc get time ' added evt block time decoded event table convenience neat way use date trunc function like sql select date trunc ' week ' evt block time time use minute day week month get usd price get usd volume onchain activity typically want join smart contract event looking usd price join minute also make sure asset match asset sql left join price usd p p minute date trunc ' minute ' evt block time event asset p contract address simply multiply value amount smart contract event usd price select statement p price token symbol often want group result token address instance want see volume dex grouped token however big list token address abstract hard digest therefore often want use token symbol instead simply join table erc20 token event table asset token address select symbol select statement instead token address nb erc20 token table cointains selection popular token working obscure token careful joining table token coincap table might excluded result address label ever made query dune get list address stop wonder ' behind beautiful random hexadecimal encoded string address label new feature dune user add update query label address free label label piece metadata address tag metadata come form key value pair key label type value label name browse address label label page http duneanalytics com label label look like check dashboard http duneanalytics com hagaetc label example created label address label example address 0xd551234ae421e3bcba99a0da6d736074f22192ff http duneanalytics com ethereum address 0xd551234ae421e3bcba99a0da6d736074f22192ff labeled type name owner binance wallet type exchange address controlled exchange binance address 0xe65040f61701940b62e18da7a53126a58525588b http duneanalytics com ethereum address 0xe65040f61701940b62e18da7a53126a58525588b labeled type name dapp usage uniswap user activity dex trader address past interacted uniswap free come new type label name label dune open ended crowdsourced adding label two way add label 1 directly address via label page http duneanalytics com hagaetc label good specific label like binance wallet 2 via dune query use dune query label address powerful scalable way add label like address used uniswap much much please see github http github com duneanalytics abstraction tree master label example label created query pr example label address used certain dapp label address hold certain amount token label address use dapp x time per month label address sent money binance could also novel involved thing around user pattern like arbitrage trade profited flash loan much note might minute delay adding label duneanalytics com query sql label table label stored new label label table ha following schema sql create table exists label label id label incrementing integer useful querying id integer primary key address label describes address bytea null actual label name text null label type type text null username dune user created label author text null source label autopopulated dune source text null last time label wa changed updated timestamptz null using label note table hold multiple row per address therefore join tricky get right reason ' made convenient function label get address bytea type text default null return text anticipate primary way use label see example typically query return address use label get address get label address independent label type want see label type owner label get address ' owner ' also pas function several label type want included like label get address ' owner ' ' project ' ' also added function label url address bytea pas function address query result table contain clickable link instance http duneanalytics com ethereum address 0xd551234ae421e3bcba99a0da6d736074f22192ff http duneanalytics com ethereum address 0xd551234ae421e3bcba99a0da6d736074f22192ff usecase want display label list address encourage run query dune read say ' looking top 10 trader dai across dexes last 24 hour sql select trader sum token amount dex trade token symbol ' dai ' block time interval ' 24 hour ' group 1 order 3 desc limit 10 want label address simply alter trader column label get trader note example represents line removed line added sql select trader sum token amount select label get trader sum token amount dex trade token symbol ' dai ' block time interval ' 24 hour ' group 1 order 3 desc limit 10 ' replaced address list label trader sometimes ' interested subset label label get accepts optional list type name filter type label get say ' interested ' activity ' label sql select label get trader sum token amount select label get trader ' activity ' sum token amount dex trade token symbol ' dai ' block time interval ' 24 hour ' group 1 order 3 desc limit 10 course also show address filter multiple label type sql select label get trader ' activity ' sum token amount select trader label get trader ' activity ' ' project ' ' contract name ' label sum token amount dex trade token symbol ' dai ' block time interval ' 24 hour ' group 1 group 1 2 order 3 desc limit 10 also use label url make address clickable sql select trader label get trader ' activity ' label sum token amount select label url trader label get trader ' activity ' label sum token amount dex trade token symbol ' dai ' block time interval ' 24 hour ' group 1 group 1 2 order 3 desc limit 10 way people look dashboard easily contribute even better label usecase want filter query label exist usecase ' want use label get slow operate instead ' use fantastic exists function sql example ' querying uniswap interested behavior user traded previously 1inch ' ' go sql select uniswap v2 pair evt swap exists select label label address type ' dapp usage ' name ' 1inch user ' limit 10 query give 10 address ha swapped uniswap traded 1inch course use two pattern conjunction interested label address go ahead use label get addition exists pattern sql select select label get uniswap v2 pair evt swap exists select label label address type ' dapp usage ' name ' 1inch user ' limit 10 see address traded uniswap 1inch associated address label understanding data decoding dune analytics section contains quick primer explore decoded data method use decode data dune table event function defined smart contract abi subsequently every event function call contract decoded inserted row table table named accordingly event projectname contractname evt eventname function call projectname contractname call eventname example decoded data addliquidity event addliquidity function uniswap exchange contract found table uniswap exchange evt addliquidity uniswap exchange call addliquidity using event table usually sufficient case want use call table instance maker dao ' give many event use table like maker saitub call draw contract decoded data decoded data querying ethereum contract get overview contract tracked dune backend column sql namespace project product name name contract name abi abi populate relevant table address contract address dynamic true contract bytecode decoded automatically bytecode bytecode decoded contract abstraction view top decoded table growing number view make even easier work data view named namespace view event instance general search view table list find view handy query explore decoded table see project decoded data sql select distinct namespace ethereum contract decoded data specific contract sql select ethereum contract address ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' contract interface decoded sql select ethereum contract address null working event call table directly see several instance contract sql select distinct contract address projectname contractname evt eventname scalable decoding across contract many dapps numerous smart contract le similar two main way handling scalable way contract bytecode dune dynamically add contract track comparing bytecode deployed contract known bytecodes known contract dynamic event call newly deployed contract matching bytecode find ' way table defined base contract essentially cover factory pattern contract architecture result select ing single table might yield data multiple contract decoded table column contract address tell smart contract event call want look single contract filter address example sql select distinct contract address uniswap exchange evt tokenpurchase give unique uniswap exchange token purchase event interface ' interested subset event fired regardless origin contract dune us interface decoding notable example include erc20 erc721 transfer event method reserved special case dune handle proxy contract sometimes user interact dapps proxy contract proxy contract throw event ' underlying contract contains performs action case apply abi proxied contract sometimes called master copy proxy contract address also usually apply name proxied contract relevant table get smart contract decoded decoded data popular smart contract project head duneanalytics com decode request decoding data change log august 2020 http hackmd io yop3yigaraejtpe190sojw view usd price asset token decimal price usd table march 2020 http hackmd io yop3yigaraejtpe190sojw view march 2020 block time denormalization trace success january 2020 http hackmd io yop3yigaraejtpe190sojw view erc20 transfer table fallback decoding october 2019 http hackmd io yop3yigaraejtpe190sojw view october 2019 new data structure sample query growth rate assuming query count event grouped time month instance add snippet select statement get growth rate sql count distinct event lag count distinct event 1 order date trunc ' month ' evt block time lag count distinct action 1 order date trunc ' month ' evt block time growth rate multiply number 100 get percentage user amount trailing period sql select date trunc ' day ' evt block time count distinct buyer sum eth bought 1e18 uniswap exchange evt ethpurchase p evt block time interval ' 7 day ' group 1 order 1 filter query address interface use query input field ui appear anyone looking query easily input info field go query useful filtering custom atributes like ethereum address token address query dune use x people commonly use 0x see detail http hackmd io k71zustxqvkgqocvr6oxnw view using inline ethereum address using snippet allow user past address regular 0x format convert x work query sql contract address concat ' x ' substring ' address ' 3 bytea ' http explore duneanalytics com query 10505 source p address 0x37236cd05b34cc79d3715af2383e96dd7443dcf1 20880 example applied query circulating supply time token mint burn function sql select week sum transfer order week select date trunc ' week ' evt block time week sum amount 1e18 transfer ptokens pbtc evt minted tr group 1 union select date trunc ' week ' evt block time week sum amount 1e18 transfer ptokens pbtc evt burned tr group 1 net circulating supply time mint burn 0x000 address sql select week sum transfer order week select date trunc ' week ' evt block time week sum value 1e8 transfer divide relevant decimal number erc20 erc20 evt transfer contract address ' x2260fac5e5542a773aa44fbcfedf7c193bc2c599 ' token contract address ' x0000000000000000000000000000000000000000 ' group 1 union select date trunc ' week ' evt block time week sum value 1e8 transfer divide relevant decimal number erc20 erc20 evt transfer contract address ' x2260fac5e5542a773aa44fbcfedf7c193bc2c599 ' token contract address ' x0000000000000000000000000000000000000000 ' group 1 net usd value token utilised event sql select date trunc ' week ' evt block time sum amount 1e18 p price staked numerai simplegriefing evt stakeadded replace relevant event left join price usd p p minute date trunc ' minute ' evt block time p symbol ' nmr ' replace relevant token p contract address token address case different token group 1 usd trading volume per token time sql select price symbol date trunc ' week ' evt block time time sum filledamount 10 erc decimal price price usd value table fill event filled left join price usd price date trunc ' minute ' evt block time price minute tokenaddress price contract address left join erc20 token erc erc contract address takerasset evt block time date trunc ' week ' current date date group 1 2 usd price token uniswap common easiest way get token usd price dune analytics price usd table however data fetched centralised exchange long tail token best approach get price uniswap query us weth pair used map usd price query modified work token ha price price usd find query dune http explore duneanalytics com query 11050 source p token 20address 0xeb4c2781e4eba804ce9a9803c67d0893436bb27d sql weth pair get exchange contract address token weth select cr pair contract case cr token0 ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0 ' else ' 1 ' end eth token case cr token1 ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' cr token0 else cr token1 end token uniswap v2 factory evt paircreated cr token0 ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' token1 ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' swap get trade pair last 14 day select case eth token ' 0 ' sw amount0in sw amount0out else sw amount1in sw amount1out end 1e18 eth amt case eth token ' 1 ' sw amount0in sw amount0out else sw amount1in sw amount1out end power 10 tok decimal amt token erc20 token list manually divide 10 decimal tok symbol tok contract address date trunc ' hour ' sw evt block time hour uniswap v2 pair evt swap sw join weth pair sw contract address weth pair contract join erc20 token tok weth pair token tok contract address token ' xeb4c2781e4eba804ce9a9803c67d0893436bb27d ' renbtc example allow user submit token address dune ui use line token concat ' x ' substring ' token address ' 3 bytea allow user input 0x format convert x format sw evt block time interval ' 14 day ' eth prc select avg price eth prc date trunc ' hour ' minute hour price layer1 usd eth minute interval ' 14 day ' group 2 select avg eth amt amt eth prc usd price swap symbol symbol swap contract address contract address eth prc hour hour swap join eth prc swap hour eth prc hour group 2 3 4 token usd value per token time address note query get heavy many token transfer long period time sql transfer select day address token address sum amount amount net inflow outflow per day select date trunc ' day ' evt block time day address tr contract address token address value amount erc20 erc20 evt transfer tr ' x70c730465dff5447a12bae37090446745c9edccc ' filter holding address contract address ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' filter token address want see specific token union select date trunc ' day ' evt block time day address tr contract address token address value amount erc20 erc20 evt transfer tr ' x70c730465dff5447a12bae37090446745c9edccc ' filter holding address contract address ' xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' filter token address want see specific token group 1 2 3 balance gap day select day address token address sum amount partition token address address order day balance balance per day transfer lead day 1 partition token address address order day next day day day transfer transfer day select generate series ' 2020 07 01 ' timestamp date trunc ' day ' ' 1 day ' day generate day since first contract balance day select day address erc symbol b token address sum balance 10 decimal balance balance gap day b inner join day b day day day b next day yield observation every day first transfer next day transfer inner join erc20 token erc b token address erc contract address group 1 2 3 4 order 1 2 3 4 select b day b symbol b token address sum balance token balance sum balance p price balance usd value balance day b left join select date trunc ' day ' p minute day contract address symbol decimal avg p price price price usd p group 1 2 3 4 p b day p day b token address p contract address group 1 2 3 order 1 2 3 known issue function overloading known issue function overloading case smart contract developer use function overloading e specify two function name different parameter case currently one implementation database working fix one known case two approve implementation sai contract
/aave/governance-crosschain-bridges,TypeScript,aave governance cross chain bridge repository contains smart contract related code aave cross chain bridge executor intended extend aave governance ethereum network repository currently contains contract support bridging polygon arbitrum optimism core contract bridgeexecutorbase abstract contract contains logic facilitate queueing delay execution set action downstream network base contract need extended functionality required cross chain transaction specific downstream network bridgeexecutorbase contract implemented facilitate execution arbitrary action governance approval ethereum ethereum proposal executed cross chain transaction queue set action execution downstream chain queued action cannot executed certain delay ha passed though specified potentially zero guardian address ha power cancel execution action delay period pass action cancelled action executed grace period time window anyone downstream chain bridgeexecutorbase abstract intentionally leaf queue function internal requires another contract extend bridgeexecutorbase handle network specific logic cross chain transaction validation permissioning prior calling internal queue function l2bridgeexecutor abstract contract extends bridgeexecutorbase order make ready layer 2 network store address ethereum governance executor ethereum network inheriting l2 implementation aware address accept transaction audit mixbytes 12 08 21 audit 12 08 2021 mixbytes aavegovernancecrosschainbridges pdf getting started setup clone repository run npm install follow next step setup repository install docker docker compose create environment file named env fill environment variable per example env running docker terminal window 1 docker compose terminal window 1 loaded separate terminal window terminal window 2 docker compose exec contract env bash terminal window 2 run desired script npm package file e npm run compile compile npm run compile compile available smart contract test npm run test run full suite unit test npm run test fork run end end test contract ethereum mainnet fork make assumption contract ethereum inaccurate assumption help testing smart contract functionality one script coverage npm run coverage get coverage report polygon governance bridge polygon governance bridge architecture aave polygon governance bridge architecture doc polygonbridgearch png additional documentation around polygon bridging setup found link polygon doc l1 l2 communication http doc polygon technology doc develop l1 l2 communication fx portal fxportal http github com fx portal fx portal bridge contract functionality proposal encoded function call function sendmessagetochild fxroot calldata proposal contains two encoded variable first variable address contract decode process message polygon chain case receiver polygonbridgeexecutor contract address second variable data decoded polygon chain field contains encoded byte following field target value signature calldatas withdelegatecall proposal executed sendmessagetochild fxroot trigger syncstate statesender contract emits statesync event validators listening statesync event trigger onstatereceived fxchild contract polygon onstatereceived encoded data passed along contract implement function processmessagefromroot case polygonbridgeexecutor contract processmessagefromroot polygonbridgeexecutor call queue bridgeexecutorbase contract queue proposed action appropriate execution time deploying polygonbridgeexecutor fxrootsender address send message polygonbridgeexecutor fxportal aave governance executor fxchild fxchild contract fxportal delay time required pas actionsset queued execution graceperiod execution time pass execute grace period end minimumdelay minimum allowed delay maximumdelay maximum allowed delay guardian admin address contract permission cancel actionssets polygonbridge fxportal repository us fxportal http github com fx portal contract developed designed polygon team support bridging ethereum polygon intent fxportal help user avoid step registering sender receiver contract within polygon ' statesender contract fxportal contains two contract fxroot fxchild fxroot contract ha deployed ethereum fxchild contract ha deployed polygon fxroot contract mapped fxchild contract via polygon ' statesender contract ethereum calling sendmessagetochild address receiver byte calldata data function fxroot msg sender encoded along provided receiver data encoded message sent statesender contract statesynced event emitted data polygon validators listen statesynced event statesender upon identifying one event fxroot call function onstatereceive uint256 stateid byte calldata data fxchild encoded data message decoded fxchild forwarded receiver contract via function processmessagefromroot stateid rootmessagesender data rootmessagesender passed along original msg sender called fxroot case aave governance executor contract polygonbridgeexecutor implement function processmessagefromroot stateid rootmessagesender data function requiring msg sender fxchild ensure legitimate transaction stemming ethereum bridge confirming rootmessagesender aave governance executor contract polygonbridgeexecutor conclude bridge transaction wa triggered aave governance process fact queued execution example upgradability polygon protocol ownership change order change ownership aave polygon market current owner must call transferownership address ownable contract within protocol address parameter provided transferownership address address deployed polygonbridgeexecutor contract polygon ownership aave polygon market contract transferred polygonbridgeexecutor polygonbridgeexecutor authorization make update aave polygon market update possible completed end end cross chain governance process passing aave governance ethereum going timelock polygon without cancelled future change needed polygonbridgeexecutor contract new version deployed transferownership address called ownable contract within aave polygon market original version polygonbridgeexecutor contract order pas ownership new polygonbridgeexecutor version aave governance executor update aave ' governance contract ethereum upgradable polygonbridgeexecutor dependent knowing address aave governance executor contract ethereum polygonbridgeexecutor also updated part upgrade order update polygonbridgeexecutor function updatefxrootsender address called polygonbridgeexecutor function executed via cross chain governance process using original aave governance executor proposal created ethereum based aave governance passed executed transaction sent polygonbridgeexecutor contract queued executed polygonbridgeexecutor call updatefxrootsender address update expected aave governance executor address transaction executes polygonbridgeexecutor queue actionssets originate new aave governance executor arbitrum governance bridge arbitrum governance bridge architecture aave arbitrum governance bridge architecture doc arbitrumbridgearch png additional documentation around arbitrum bridging setup found link arbitrum doc messaging layer http developer offchainlabs com doc l1 l2 message inside arbitrum bridging http developer offchainlabs com doc inside arbitrum bridging arbitrum bridge contract functionality going aave governance proposal payload call following function arbitrum inbox contract ethereum notice put message l2 inbox reexecuted fixed amount time reverts dev msg value deposited callvaluerefundaddress l2 param destaddr destination l2 contract address param l2callvalue call value retryable l2 message param maxsubmissioncost max gas deducted user ' l2 balance cover base submission fee param excessfeerefundaddress maxgas x gasprice execution cost get credited l2 balance param callvaluerefundaddress l2callvalue get credited l2 retryable txn time get cancelled param maxgas max gas deducted user ' l2 balance cover l2 execution param gaspricebid price bid l2 execution param data abi encoded data l2 message return unique id retryable transaction keccak256 requestid uint 0 function createretryableticket address destaddr uint256 l2callvalue uint256 maxsubmissioncost address excessfeerefundaddress address callvaluerefundaddress uint256 maxgas uint256 gaspricebid byte calldata data external payable return uint256 function key non gas related bridging field destaddr data l2callvalue destaddr contract called arbitrum case arbitrumbridgeexecutor contract data encoded data cross chain transaction case data encoded data queue target value signature calldatas withdelegatecalls l2callvalue sent msg value l2 rest field pertain gas management arbitrum defined per arbitrum documentation transaction sent cross chain msg sender send message arbitrum inbox aliased mean called l2 alias aave governance executor contract msg sender arbitrumbridgeexecutor called arbitrum reason aave governance executor contract address provided arbitrumbridgeexecutor contract constructor address saved transformed alias used permit queue function call address successfully queue actionsset bridgeexecutorbase deploying arbitrumbridgeexecutor ethereumgovernanceexecutor address permission queue actionsets aave governance executor delay time required pas actionsset queued execution graceperiod execution time pass execute grace period end minimumdelay minimum allowed delay maximumdelay maximum allowed delay guardian admin address contract permission cancel actionssets optimism governance bridge optimism governance bridge architecture aave optimism governance bridge architecture doc optimismbridgearch png additional documentation around optimism bridging setup found link optimism doc sending data l1 l2 http community optimism io doc developer bridge messaging inside optimism bridging asset layer http community optimism io doc optimism work bridging asset layer optimism bridge contract functionality going aave governance proposal payload call following function ovm l1 cross domain messenger contract ethereum sends cross domain message target messenger param target target contract address param message message send target param gaslimit gas limit provided message function sendmessage address target byte memory message uint32 gaslimit public function target contract called optimism case optimismbridgeexecutor contract message encoded data cross chain transaction encoded data queue target value signature calldatas withdelegatecalls gaslimit field pertain gas management optimism defined per optimism documentation transaction sent cross chain msg sender sends message optimism messenger stored ovm l2 cross domain messenger queryable using following function function xdomainmessagesender external view return address therefore msg sender cross chain transaction optimism ovm l2 cross domain messenger contract l1 sender aave governance executor contract reason aave governance executor contract address provided optimismbridgeexecutor contract constructor address saved used permit queue function call address successfully queue actionsset bridgeexecutorbase deploying optimismbridgeexecutor ovml2crossdomainmessenger address ovm l2 cross domain messenger contract ethereumgovernanceexecutor address permission queue actionsets aave governance executor delay time required pas actionsset queued execution graceperiod execution time pass execute grace period end minimumdelay minimum allowed delay maximumdelay maximum allowed delay guardian admin address contract permission cancel actionssets license bsd 3 clause license md
/ScopeLift/zeneth,TypeScript,div align center &#9; img width 300 src readme zeneth logo text png alt zeneth logo &#9; br &#9; br div p align center &#9; b gasless ethereum account abstraction flashbots b p p align center &#9; href http zeneth app zeneth app &#9; href http twitter com scopelift scopelift p div align center &#9; img width 150 src readme ethereum badge light png alt ethereum badge &#9; br div flashbots user send transaction directly miner transaction may included block without ever seen mempool miner typically include transaction block earn revenue gas fee flashbots include transaction gas price zero long also include transaction pay miner eth way commonly used protect bot example making large uniswap trade executing arbitrage via flashbots bot cannot see transaction frontrun zeneth us flashbots different reasonimproving ux major ux problem ethereum wallet contract wallet externally owned account eoas metamask eoas always need eth gas unless happen interacting contract support meta transaction problematic user facing application new user need acquire eth often token user application example ' need eth transaction fee zksync ' layer 2 network http zksync io ' new user trying get dai zksync need first find eth use pay gas enter zksync never use eth add lot friction user onboarding zeneth fix bundle sequence transaction send zero gas end use swapbriber contract swap token eth pay miner demo video see following sequence transaction 1 user sign zero gas price transaction http etherscan io tx 0x5bcf4ce03c6c1ec442f5572d857c37991143a481d7be52c5400231f8587a4e17 approving zksync contract spend dai 2 user sign zero gas price transaction http etherscan io tx 0x3df79d261af35c6b9bf7a69c3ee1be9a5f7d558cd19595acac761e0bd10cb629 depositing dai zksync 3 user sign zero gas price transaction http etherscan io tx 0x29f2507ca6bd010cbafbc863078d90ce8e79ad2d2288b44927125c50454c8d07 approving swapbriber contract spend dai 4 user sign zero gas price transaction http etherscan io tx 0x90f16b53efde82ad4cb3eed92c43bb8bf234b6009d1d24a8ec51c4be5052dd7f transferring token swapbriber contract swap token eth transfer eth miner four transaction sent bundle miner includes block status zeneth wa built ethglobal http ethglobal co hackathon learn watching hackathon submission video http www youtube com watch v ltivzbhqlty project work mainnet currently deployed public use stay tuned learn zeneth ' public launch development project monorepo three package contract contains smart contract zeneth j typescript library containing core zeneth logic frontend simple frontend app interacting flashbots dependency ensure everyone using version nodejs project volta http volta sh recommended develop sh yarn yarn dev test sh yarn test serve sh yarn build yarn start
/MoralisWeb3/web3-unity-sdk,C#,web3 unity sdk moralis unity sdk provides full wallet blockchain integration unity game full cross chain l2 support feel free fork contribute star u unity sdk help build game faster please star project every star make u happy need help need help setting boilerplate question ' hesitate write community forum check asap forum link http forum moralis io best thing sdk super active community ready help time help
/DeFiCh/wallet,TypeScript,ci http github com defich wallet action workflow ci yml badge svg http github com defich wallet action workflow ci yml wallet http img shield io endpoint url http dashboard cypress io badge count oqk3fk main style flat logo cypress http dashboard cypress io project oqk3fk run codecov http codecov io gh defich wallet branch main graph badge svg token 83scbqbevj http codecov io gh defich wallet maintainability http api codeclimate com v1 badge 30297425fadcab8fbba4 maintainability http codeclimate com github defich wallet maintainability div href http apps apple com u app defichain wallet id1572472820 img width 130 height 50 src github image app store svg alt app store href ' http play google com store apps detail id com defichain app ' img width 130 height 50 alt ' get google play ' src ' github image play store svg ' div defichain wallet defi blockchain light wallet io android web release defichain wallet ha 3 release channel unique environment channel shared environment shared environment carry environment state release channel detail summary b production b summary created expo application service configured ea json ea json creates native build release publish yml github workflow ea publish yml workflow type published build triggered defichain engineer automatically uploaded native app store distribution production environment mainnet available debugging enabled detail detail summary b preview b summary preview build created 2 workflow first pull request via expo preview yml github workflow expo preview yml workflow release prefixed pr preview secondly release publish yml github workflow ea publish yml workflow type prereleased preview environment network available debugging enabled detail detail summary b development b summary development build created local machine triggered ci workflow development environment playground network available debugging enabled detail developing contributing thanks contributing appreciate help get feel free make pull request guide along way make mergeable documented contributing guideline contributing md use npm 7 project ' required set npm workspace http doc npmjs com cli v7 using npm workspace shell npm install project structure txt mobile app github app component context hook middleware screen navigator main tsx cypress shared asset store translation language defichain wallet project structured 3 core directory pull request likely carry significant change directory directory description github github workflow shift left automation app api api middlewares logic application non ui logic shared asset asset project loaded startup app component top level component atomic shared design language app context shared context application non ui logic app hook shared hook application ui logic app screen screen hierarchy tree matching directory hierarchy tree shared store global state used least screen ui logic shared translation various language translation cypress e2e tested facilitated web testing technology testing 2 type test defichain wallet unit testing unit testing created test individual unit component software unit test closely co located together unit follow naming semantic test placed together directory code testing unit test written app context app api app component app screen app store code coverage collected end end testing top unit test end end provides additional testing test entire lifecycle defichain wallet component screen integrated together expected real use case test written real usage narrative normal consumer would placed cypress directory use cypress http github com cypress io cypress facilitate testing cypress modern end end testing framework web us sequential jest like approach testing automatic wait retrofitted many utility great testing quality life utility customized defichain wallet construct cypress web testing set web environment run end end testing together local playground http github com defich playground react native platform agnostic allow u test high confidence expected logic follow flow native facilitate fast ephemeral testing culture use defi playground http github com defich playground defi playground specialized testing blockchain isolated mainnet testing defi application us regtest hood npm run playground local playground environment let default remote asset real minted anyone block generated every 3 second chain reset daily remote playground app screen playgroundnavigator contains various end user cypress included testing screen debugging setup purpose accessed development preview environment code coverage collected intellij idea intellij idea ide choice writing maintaining library intellij ' file included convenience basic toolchain setup use intellij totally optional security issue discover security vulnerability defichain wallet please see submit privately http github com defich github blob main security md license disclaimer using defichain wallet repo user agree bound term license license fossa status http app fossa com api project git 2bgithub com 2fdefich 2fwallet svg type large http app fossa com project git 2bgithub com 2fdefich 2fwallet ref badge large
/bugout-dev/moonstream,JavaScript,moonstream live http moonstream http moonstream join u discord http discord gg pye65funsz moonstream moonstream make tool help people build manage maintain blockchain economy order provide functionality build lot technology crawl blockchains make sense crawled transaction event repository contains code us moonstream game designer economist data scientist smart contract developer backend engineer team managing loyalty program blockchain project prominents customer 1 laguna game http laguna game maker crypto unicorn http cryptounicorns fun 2 realtybits http realtybits com free software proprietary technology inclusive technology believe inclusion technology open source repository contains code power http moonstream code licensed apache license version 2 0 http www apache org license license 2 0 always free host instance moonstream architecture monorepo contains following component 1 frontend frontend web frontend moonstream allows user create dashboard monitor activity account smart contract multiple blockchains built react http reactjs org 2 backend ' backend moonstream api allows user programmatically consume data transaction event taking place blockchains crawled moonstream built python http www python org using fast api http fastapi tiangolo com 3 crawler crawler part code base contains worker extract data blockchains transaction pool source many crawler crawler utilize different tech stack 4 db db moonstream store blockchain data postgres http www postgresql org directory contains code use manage schema postgres database source send higher volume data use separate postgres database interface using bugout http bugout dev installation setup run server docker compose want deploy moonstream isolation live service docker compose choice run script backend configs docker generate env bash prepare backend configs docker moonstreamapi env environment variable run script db configs docker generate env bash prepare db configs alembic moonstreamdb ini postgresql uri bash backend configs docker generate env bash db configs docker generate env bash run local setup bash docker compose build contributing would like contribute moonstream please reach zomglings moonstream discord http discord gg pye65funsz
/ConcealNetwork/conceal-core,C++,image http github com concealnetwork conceal imagery blob master logo splash png conceal core cli github release latest date http img shield io github v release concealnetwork conceal core http github com concealnetwork conceal core release latest ubuntu 20 04 http github com concealnetwork conceal core action workflow ubuntu20 yml badge svg http github com concealnetwork conceal core action workflow ubuntu20 yml ubuntu 18 04 http github com concealnetwork conceal core action workflow ubuntu18 yml badge svg http github com concealnetwork conceal core action workflow ubuntu18 yml window http github com concealnetwork conceal core action workflow window yml badge svg http github com concealnetwork conceal core action workflow window yml macos http github com concealnetwork conceal core action workflow macos yml badge svg http github com concealnetwork conceal core action workflow macos yml maintained conceal developer overseen conceal team driven conceal community ' conceal network conceal network peer peer privacy preserving network made private defi encrypted communication conceal offer protocol level private transaction blockchain deposit chain encrypted message unique functionality make effortless everyday user manage finance communicate securely privately conceal provides ability individual communicate financially interact totally anonymous manner two person may exchange message conduct business transact fund without ever knowing true name legal identity interaction network untraceable via cryptographic protocol nearly perfect assurance tampering ccx mimic property cash nobody know spend folding cash go atm take money buy ice cream pretty old chair neighborhood yard sale record anywhere unlike credit card powerful privacy preserving ability act critical bulwark inevitable rise panopticon digital money may hope end cash mean end free choice thats conceal come picture lot people say killer app crypto theyre wrong weve figured mimic cash environment entirely focused privacy biggest feature cash really hard track word anonymity main feature cash two party conducted business know happened conceal ccx death blockchain analysis conceal brings back true anonymity cash conceal open source community driven truly decentralized one owns everyone take part resource web http conceal network github http github com concealnetwork wiki http conceal network wiki explorer http explorer conceal network discord http discord gg ybphvsd twitter http twitter com concealnetwork telegram official news feed http concealnetwork telegram user group chat group http concealnetworkusers medium http medium com concealnetwork reddit http www reddit com r concealnetwork bitcoin talk http bitcointalk org index php topic 4515873 paperwallet http conceal network paperwallet compiling conceal source system memory build process consume upto 13gb memory may fail enough resource available build scenario may necessary increase size swap compensate le ram example 8gb ram swap size 5gb ubuntu linux bash sudo fallocate l 5g swapfile sudo chmod 600 swapfile sudo mkswap swapfile sudo swapon swapfile rasberry pi bash sudo dphys swapfile swapoff sudo nano etc dphys swapfile conf swapsize 5120 sudo nano sbin dphys swapfile conf maxswap 2048 sudo dphys swapfile setup sudo dphys swapfile swapon linux ubuntu debian prerequisite need following dependency build conceal cli boost cmake git gcc g python make bash sudo apt update sudo apt get install build essential python dev gcc g git cmake libboost dev building ubuntu bash git clone http github com concealnetwork conceal core cd conceal core mkdir build cd build cmake make build successful binary src folder arm raspberry pi tested raspberry pi 4 raspberry pi 32 64bit image arm cpu combination possible cpu support neon aes follow linux ubuntu procedure build window 10 prerequisite install visual studio 2019 community edition http visualstudio microsoft com thank downloading visual studio sku community rel 16 installing visual studio need install desktop development c msvc v142 v 2019 c x64 x86 build tool component option install v142 build tool found expanding desktop development c node right need project build correctly install cmake http cmake org download install boost http sourceforge net project boost file boost binary 1 78 0 boost 1 78 0 msvc 14 2 64 exe download ensuring download installer msvc 14 2 instruction given boost 1 78 0 using different version supported change version required building start menu open ' x64 native tool command prompt vs2019 ' run c program file x86 microsoft visual studio 2019 community common7 tool vsmsbuildcmd bat command prompt p git clone http github com concealnetwork conceal core cd conceal core mkdir build cd build cmake g visual studio 16 2019 x64 dboost root c local boost 1 78 0 msbuild concealx sln p configuration release build successful binary src release folder macos prerequisite order install prerequisite xcode http developer apple com xcode homebrew http brew sh need installed ready open terminal app run following command install additional tool bash xcode select install newer macos version v10 14 higher step done software update system preference proceed installing dependency bash brew install git cmake boost building dependency installed build conceal core binary bash git clone http github com concealnetwork conceal core cd conceal core mkdir build cd build cmake make build successful binary located src folder special thanks special thanks go developer cryptonote bytecoin ryo monero forknote turtlecoin karbo masari
/beefyfinance/beefy-api,TypeScript,beefy api api power beefy finance http app beefy finance find repo frontend http github com beefyfinance beefy app run yarn install yarn start note start api take minute two fetch apys currently log getapys console data available optional enviroment var bsc rpc custom rpc endpoint want use heco rpc custom rpc endpoint heco leave default one otherwise fortube api token token fortube use api ' token get console warning fortube apys slightly smaller production everything work fine otherwise endpoint http localhost 3000 consumed app http app beefy finance apy main endpoint used frontend return apy vault following format &#9; bifi maxi 0 22448469479728606 22 &#9; cake cake 2 8002377054263174 280 &#9; cake smart 2 8002377054263174 280 &#9; cake swingby bnb 21 85102752680053 2185 nb legacy format new endpoint created apy breakdown staggered migration apy breakdown new version apy endpoint broken component part available endpoint move new format consistent whether breakdown stats possible display ha following structure json bifi maxi totalapy 0 07598675804818633 cometh must eth vaultapr 1 186973388240745 compoundingsperyear 2190 beefyperformancefee 0 045 vaultapy 2 1057844292858614 lpfee 0 005 tradingapr 0 22324214039526927 totalapy 2 8825691266420788 note endpoint expose element needed total apy calculation possible show legacy total apy note legacy total apy totalapy doe include trading fee field within structure vaultapr yearly reward usd divided total staked usd compoundingsperyear estimated compounding event internal field reference value used within calculation project beefyperformancefee flat beefy performance fee included calculation internal field reference vaultapy vaultapr compounded using compoundingsperyear beefyperformancefee calculation lpfee liquidity provider lp fee per trade internal field reference tradingapr annual interest trading fee compounded totalapy known total apy field available calculate total apy including trading fee calculated final calculation totalapy 1 vaultapr 1 compounded tradingapr 1 price token price endpoint crosschain lp liqudity pair price single endpoint crosschain vault tbd consumed dashboard http dashboard beefy finance earnings used display total daily earnings platform holder used display total number holder calc take account user 0 bifi wallet bifi staked reward pool consumed third party platform cmc custom endpoint required coinmarketcap http coinmarketcap com display vault yield farming section supply used coingecko http coingecko com display bifi ' total supply circulating supply contribute beefy finance exists thanks contributor many way participate help build high quality software check contribution guide contributing md license mit license
/avral/alcor-ui,HTML,project hiring full stack nodejs vuejs dev good payment cryptocurrency hourly mounthly contact avral http avral first listing free decentralized exchange documentation doc alcor exchange http doc alcor exchange alcor exchange http imgur com brvzfdi png alcor exchange trade eos io token system eos token atomically without participation third party token ' contract comply eosio token http github com eosio eosio contract tree master contract eosio token standard simple asset http github com cryptolions simpleassets fungible token prop 1 fully onchain 2 free cpu program 3 open source join telegram http alcorexchange chain 1 eos mainnet 2 wax 3 telos 4 proton technology 1 hyperion http github com eosrio hyperion history api 2 eosio light api http github com cc32d9 eosio light api 3 blok io http blok io 4 greymass full history node api http greymass com instruction manual use open new market send 3 0000 eos eostokensdex memo new market 0 token precision token symbol token contract example memo new market 0 00000000 weed weedcashnt submit order send amount want sell specify amount want get memo price market automatically determined contract memo format ask token token amount token symbol token contract example transfer 0 7000 eos eostokensdex memo 1000 0000 tkt eossanguotkt order cancelation call action cancelsell cancelbuy parameter executor order owner market id order id example executor avral pro market id 32 order id 3 cancelbuy http blok io account eostokensdex loadcontract true tab action table market account eostokensdex scope eostokensdex limit 100 action cancelbuy cancelsell http blok io account eostokensdex loadcontract true tab action table market account eostokensdex scope eostokensdex limit 100 action buyreceipt order market possible see contact table http blok io account eostokensdex loadcontract true tab table table market account eostokensdex scope eostokensdex limit 100 build setup bash install dependency yarn install serve hot reload localhost 3000 network wax disable db true yarn dev run using production api wax chain build production launch server network eos jungle local yarn run build yarn start generate static project yarn run generate docker run docker run restart unless stopped p 127 0 0 1 27017 27017 name mongo 3g mongo 4 4 bind ip 0 0 0 0 docker run p 7002 7000 restart unless stopped label com centurylinklabs watchtower lifecycle post check rm rf data nginx cache eostokens service nginx reload label com centurylinklabs watchtower enable true name alcor ui add host host docker internal 172 17 0 9 avral alcor ui created avral ' digital lab http avral pro
/coingrig/coingrig-wallet,TypeScript,coingrig mobile wallet next gen crypto wallet powerful crypto wallet everyone unique feature granted limited non exclusive license inspect study code repository may use code commercial scope please read license building locally code built using react native install node j http nodejs org using nvm http github com creationix nvm installation recommended running nvm use automatically choose right node version install shared react native dependency http reactnative dev doc environment setup installing dependency react native cli expo cli install cocoapods http guide cocoapods org using getting started html running bash sudo gem install cocoapods clone repo install dependency bash git clone http github com coingrig coingrig wallet cd coingrig wallet yarn install dependecies cd io pod install cd install pod io android install android sdk via android studio http developer android com studio install correct emulator follow instruction react native getting started android http reactnative dev doc environment setup installing dependency react native cli quickstart android detail found android developer site http developer android com studio run emulator finally start emulator android studio run bash npx react native run android io install io dependency react native getting started io http reactnative dev doc environment setup installing dependency react native cli quickstart io install correct simulator bash npx react native run io code conduct library ha adopted code conduct expect project participant adhere please read full text code conduct md understand action tolerated license coingrig wallet licensed license license interested commercial starter kit please contact u follow u twitter http twitter com coingrig website coingrig com http coingrig com
/JellyfishSDK/jellyfish,TypeScript,ci http github com jellyfishsdk jellyfish action workflow ci yml badge svg http github com jellyfishsdk jellyfish action workflow ci yml codecov http codecov io gh jellyfishsdk jellyfish branch main graph badge svg token m22thsgyqo http codecov io gh jellyfishsdk jellyfish npm http img shield io npm v defichain jellyfish network http www npmjs com package defichain jellyfish network netlify status http api netlify com api v1 badge c5b7a65e aeec 4e12 a7b7 300cbc1a8069 deploy status http app netlify com site cranky franklin 5e59ef deploys jellyfish sdk http jellyfishsdk com http jellyfishsdk com defichain jellyfish sdk collection typescript javascript tool library build native defi product package defi jellyfish follows monorepo methodology maintained package repo published version tag developing contributing thanks contributing appreciate help get feel free make pull request guide along way make merge able documented contributing guideline contributing md security issue discover security vulnerability jellyfishsdk jellyfish please see submit privately http github com jellyfishsdk github blob main security md license disclaimer using jellyfishsdk jellyfish repo user agree bound term license license fossa status http app fossa com api project git 2bgithub com 2fdefich 2fjellyfish svg type large http app fossa com project git 2bgithub com 2fdefich 2fjellyfish ref badge large
/Jeiwan/zuniswapv2,Solidity,zuniswapv2 clone uniswapv2 made educational purpose using repo 1 git clone git github com jeiwan zuniswapv2 git 1 ensure installed rust cargo install rust http www rust lang org tool install 1 install foundry cargo install git http github com gakonst foundry bin forge locked 1 install dependency contract git submodule update init recursive 1 run test forge test blog post 1 part 1 http jeiwan net post programming defi uniswapv2 1 architecture uniswapv2 adding liquidity first test solidity removing liquidity 1 part 2 http jeiwan net post programming defi uniswapv2 2 token swapping entrancy attack protection price oracle integer overflow underflow safe transfer 1 part 3 http jeiwan net post programming defi uniswapv2 3 factory contract create2 opcode router contract library contract 1 part 4 http jeiwan net post programming defi uniswapv2 4 lp token burning bug liquidity removal output amount calculation swapexacttokensfortokens swaptokensforexacttokens fixing swap fee bug flash loan fixing entrancy vulnerability protocol fee
/laminar-protocol/laminar-chain,Rust,table content toc introduction introduction overview overview liquidity pool liquidity pool collateralized synthetic asset protocol collateralized synthetic asset protocol synthetic asset liquidity pool synthetic asset liquidity pool collateral collateral liquidation incentive liquidation incentive ftoken ftoken deposit mint depositmint withdraw withdraw liquidation liquidation exchange rate exchange rate collateralized margin trading protocol collateralized margin trading protocol margin trading liquidity pool margin trading liquidity pool margin protocol margin protocol trader ' risk profile trader risk profile financing fee swap financing fee swap equity margin held free margin margin level equity margin held free margin margin level margin call unsafe trader margin call unsafe trader stop trader liquidation stop trader liquidation money market protocol money market protocol itoken itoken interest allocation interest allocation interest share interest share allocation liquidity provider allocation liquidity provider allocation ftoken depositor allocation ftoken depositor implementation implementation ethereum implementation ethereum implementation substrate implementation laminarchain substrate implementation laminarchain oracle implementation oracle implementation oracle server oracle server building running laminarchain building running laminarchain prerequisite prerequisite building building run run development development toc introduction laminar aim create open finance platform along financial asset serve trader crypto mainstream finance world forex market alone ha average daily trading volume 5 trillion active defi project mostly ethereum 500 million fund locked smart contract laminar ' goal provide people better access trading instrument introduce new competitive business model mainstream financial service provider flow protocol laminar ' flagship product help solve challenge opaque pricing price manipulation current financial market bridge chain participant ultimately boost chain trading liquidity exposure variety document serf general overview flow protocol generalized synthetic asset margin trading money market protocol brief introduction reference implementation ethereum smart contract polkadot parachain add detail developer build top protocol evolves overview flow protocol generalized type synthetic asset trading first version focus synthesizing eur jpy crypto asset forex margin trading market due market demand validation trader liquidity provider flow protocol following property instant liquidity trader trade smart contract runtime module polkadot substrate term instead order book hence ' instant infinite liquidity provided collateral ratio ' fall preset liquidation threshold asset efficiency trader position collateralized trader need put collateral value position rest risk taken liquidity provider return liquidity provider earn transaction fee e g form bid ask spread forex case savvy liquidity provider would initiative hedge risk chain depending asset type risk management strategy margin trader also able trade liquidity pool trader risk liability capped margin locked potential profit also secured protocol better trading experience flow protocol enable transparent pricing counter party action governed protocol community providing excellent trading experience comparable chain service collateralized position risk open public liquidation reward ensure soundness safety liquidity pool integrated money market asset deposited protocol trader liquidity provider earn interest increase chain liquidity look work defi partner compound finance ethereum implementation enable service via general interface multiple provider tokenized position user deposit usd stablecoins exchange synthetic stable fiat asset form ftokens flow token e g feur trader also tokenize margin position connected short long leveraged position tokenized position enable fluidity across asset class e g easily tradable ftokens margin token open market building block financial service ' wait programmer community explore use case introduce following protocol collateralized synthetic asset protocol draft white paper http github com laminar protocol flow protocol whitepaper money market protocol draft white paper http github com laminar protocol flow protocol whitepaper blob master flowmoneymarketwhitepaperdraft 21oct2019 pdf collateralized margin trading protocol draft white paper http github com laminar protocol flow protocol whitepaper blob master laminarmargintradingwhitepaperdraft 29jan2020 pdf protocol review financial partner expect change release update progress refer user guide wiki http github com laminar protocol laminar chain wiki detail liquidity pool liquidity pool set liquidity provider funded usd stablecoins collateral support certain type trading namely synthetic asset trading margin trading pool set bid ask spread trading pair essentially fee structure liquidity provider anyone become liquidity provider setting pool efficient market multiple liquidity pool trend towards competitive spread reputable player liquidity pool pseudo interface function getbidspread address ftoken return unit bidspread function getaskspread address ftoken return unit askspread function depositliquidity flowtoken token uint basetokenamount function withdrawliquidity flowtoken token uint flowtokenamount synthetic asset liquidity pool margin trading liquidity pool would separate implementation support specific trading risk management requirement collateralized synthetic asset protocol collateralized synthetic asset protocol allows user mint non usd stable coin ftoken e g feur fjpy using usd stable coin e g dai equivalent collateral number use case ftoken basis margin trading protocol general purpose stable coin currency payment sore value holder deposit money market earn interest synthetic asset liquidity pool synthetic asset liquidity pool voluntarily support certain trading asset currency deemed ftoken e g feur flow eru synthetic eur fund pool usd stablecoin locked serve collateral ftoken minted bid ask spread set ftoken essentially fee pool pool also set higher additional collateral ratio minimum additional collateral ratio e g collateral ratio required 150 additional collateral ratio 50 required ftoken provide extra layer risk protection synthetic asset liquidity pool pseudo interface function getadditionalcollateralratio ftoken return unit bidspread function canmint ftoken collateral position always collateralized risk management purpose additional collateral ratio defined per ftoken 10 additional collateral ratio represents 110 collateral coverage ratio meaning 110 collateral required position mint new ftoken e g fuer trader ' deposit includes usd amount required based exchange rate plus spread paid liquidity provider contributed collateral remaining come liquidity pool make total 110 collateral additional collateral protect position exchange rate fluctuation hence stabilizing ftoken example mint usd 1 001 worth feur exchange rate 1 1 simplicity ask spread 0 001 additional collateral ratio 10 following would happen user deposit usd 1 001 exchange 1 000 feur usd 1 spread paid total collateral required usd 1 100 1 000 110 additional collateral liquidity pool would usd 99 1 100 1 000 1 pseudo formula askprice exchangeprice askspread flowtokenamount basetokenamount askprice totalcollateral flowtokenamount exchangeprice collateralratio 1 collateralfrompool totalcollateral basetokenamount liquidation incentive current collateral ratio calculated every deposit withdraw action exchange rate time current collateral ratio liquidation ratio defined per ftoken liquidity pool open public liquidation incentivized monetary reward liquidator would deposit ftoken back liquidity pool hence free partial full collateral depending deposited amount therefore increase collateral ratio anyone liquidator point reward consists spread earned trade plus portion liquidity ' collateral incentive formula aim reward liquidator proportionally risk pool hence minimizing probability discounting ftoken redeemable value ' also extreme liquidation ratio available collateral liquidity provider plus spread earned trade rewarded liquidator extra layer protection pseudo formula collateral ratio liquidation ratio extreme liquidation ratio reward liquidationratio currentliquidityprovidercollateralratio liquidationratio extremeliquidationratio collateralfreed theoretical liquidation price point making optimal profit optimal doc optimal png market fluctuation additional collateral ratio extreme liquidation ratio liquidation ratio ftoken ftoken flow token non usd stable coin backed selected trusted usd stable coin deposit mint deposit usd stable coin mint return ftoken e g feur number flow token minted amount underlying asset provided divided ask price selected liquidity pool liquidity provider additional collateral required mint action total collateral required subtract deposited amount detail see 3 2 collateral 32 collateral pseudo deposit function function deposit flowtoken token liquiditypoolinterface pool uint basetokenamount withdraw amount underlying asset withdrawn number flow token multiplied bid price current exchange rate amount withdrawn must le user ' account balance liquidity pool available balance collateral required calculated withdrawn amount collateral required le current collateral liquidity pool refunded deducting withdrawn amount difference current required collateral pseudo formula basetokenamount flowtokenamount bidprice requiredcollaterals collateral collateralstoremove collateral requiredcollaterals refundtopool collateralstoremove withdrawnamount pseudo withdraw function function withdraw flowtoken token liquiditypoolinterface pool uint flowtokenamount liquidation liquidity pool ha negative liquidity e current collateral liquidation threshold subject liquidation anyone bring collateral back required level liquidation happens liquidator deposit minted ftoken behalf liquidity provider return receive reward outstanding collateral collateral extreme liquidation threshold additional reward given liquidator detail refer 3 3 liquidation incentive 33 liquidation incentive pseudo liquidation function function liquidate flowtoken token liquiditypoolinterface pool uint flowtokenamount exchange rate exchange rate forex pair provided price oracle reputable source like bloomberg liquidity provider ha freedom apply spread top price liquidity pool provide trader user bid ask price forex pair bidprice exchangeprice bidspread askprice exchangeprice askspread collateralized margin trading protocol collateralized margin trading protocol allows user trade leveraged long short forex pair eurusd commodity xauusd stock appl cryptoassets btcusd number use case margin trading hedge future price fluctuation e g importer might need pay jpy supplier 2 month time use 10x leverage 10 margin hedging full risk expecting price fluctuating within 10 profit amplifying instrument trader trade price fluctuation doe work protocol support multiple liquidity pool different trading parameter supported trading pair leverage ratio different spread trader free trade liquidity pool trader ' risk reflected margin level managed per liquidity pool basis protocol us usd stablecoins usd hereafter base trading currency ethereum could dai polkadot could ausd acala dollar http acala network trader depositing 30 000 usd protocol long eurusd 10x leverage standard lot size 100 000 ask price 1 1908 position 119 080 required margin 10 would 11 908 trader required maintain margin level equity total position margin call threshold otherwise new position opened margin level drop stop threshold position forced close trader subject swap margin trading involves financing credit debit detail elaborated following section liquidity provider setting liquidity pool subject meet risk management requirement protocol liquidity pool required certain equity net position ratio enp equity longest leg ratio ell ensure pool ha sufficient equity cover closing position worse case scenario e g trader closing winning side maximizing asset efficiency enp enp margin call threshold e g 50 ell ell margin call threshold e g 10 pool margin called restriction operation monetary punishment enp enp force closure threshold e g 20 ell ell force closure threshold e g 2 pool considered insolvent trade closed monetary penalty detail elaborated following section trade protocol essentially trader would limited downside losing deposit enjoying upside entire liquidity pool payout guaranteed protocol since order book trading instant trader choose trade liquidity pool e g long eurusd pool always take side trade e g short eurusd provide liquidity protocol rational liquidity provider sense different broker chain world would hedge risk taking spread reward liquidity provision sophisticated provider would additional revenue source complimenting current business model would enjoy lower cost exposure product offering else protocol doe cannot enforce liquidity provider manage risk however provide reference risk management strategy tokenization margin position partial closing margin position advanced trading technique added future version detail spec released progress margin trading liquidity pool margin trading liquidity pool voluntarily support certain trading pair leverage level spread lot size fund pool used collateral opening margin position margin trading pool required meet set designated risk management criterion different synthetic asset pool margin trading liquidity pool pseudo interface function depositliquidity poolid amount function withdrawliquidity poolid amount function ispositionallowed poolid tradingpair leverage check 5x long eurusd available function getbidspread poolid tradingpair function getaskspread poolid tradingpair function getswaprate poolid tradingpair function getaccumulatedswaprate poolid tradingpair function canopenposition poolid tradingpair leverage amount following two ratio critical judge risk margin trading pool 1 equity net position ratio enp 2 equity longest leg ratio ell equity net position ratio enp equity sum net deposit withdraw realized profit loss unrealized profit loss accumulated swap net position absolute value net value long short position within pool essentially equity net position ratio enp give u aggregated risk indicator protocol requires pool enp ratio higher certain value avoid margin call however practice liquidity pool cannot consider long trade hedged short trade closing individual trader value long short trade close according enp requirement small amount equity required e g total long position valued 1 000 000 short position valued 990 000 net position 10 000 required enp 50 mere 20 000 equity required cover near 2 million worth trade therefore introduce second risk indicator equity longest leg ratio ell equity longest leg ratio ell using example longest leg absolute value total long position valued 1 000 000 equity longest leg ratio ell indicates ability pool cover losing side pool ' perspective winning side trader ' perspective probability losing side would close protocol requires pool ell ratio higher certain value avoid margin call example required ell 20 200 000 equity required considered safe margin call pool deemed risky reach margin call status enp certain value ell certain value pool margin called required deposit fund pool bring enp ell ratio required level otherwise new position opened profit pool closing position contributed laminar treasury penalty example enp 50 ell 20 margin call triggered force closure pool deemed insolvent reach force closure status enp certain value ell certain value pool force closure status open trade closed immediately profit pool closing position contributed laminar treasury penalty example ell 20 ell 2 force closure triggered margin protocol margin protocol management module contract main entry point trader liquidator manages position margin pool overseas risk individual trader liquidity pool execute margin call liquidation trader pool trader free choose liquidity pool trade based preference price available liquidity risk level etc margin protocol pseudo interface todo function openposition tradingpair pair liquiditypool pool leverage leverage uint basetokenamount price price function closeposition margintradingpair pair uint positionid function getprice address tokenaddr function getaskspread liquiditypool pool address token function getbidspread liquiditypool pool address token function addtradingpair address pair function tradermargincall account account function traderliquidate account account function liquiditypoolmargincall liquiditypool pool function liquiditypoolliquidate liquiditypool pool trading pair trading pair e g eurusd consists base currency asset eur quote currency asset usd indicates much quote currency e g usd needed purchase one unit base currency trader ' risk profile trader ' risk profile established liquidity pool trading trader required deposit fund pool initial balance trading trader open position margin trade taken deposited balance locked protocol margin held price moved trader may make unrealized profit loss would increase decrease current equity example trader deposit 30 000 pool decides long eurusd 100 000 20x leverage bid ask price 1 1808 1 1908 5 000 100 000 20 margin held say eur appreciates 1 2008 1 2108 bid ask price trader ' unrealized profit 1 000 100 000 1 2008 1 1908 trader ' current equity becomes 31 000 30 000 1 000 financing fee swap trade currency hold trade one trading period another referred cutoff time rollover time ' either earn pay interest carrying trade period forex cfd trading general cutoff time 5pm new york time cryptocurrencies cutoff time 4 00 utc 12 00 utc 20 00 utc day carry trade passing cutoff time charged paid interest depending interest rate currency ' ' also called carry carry trade interest rate holding currency higher borrowing currency swap rate positive meaning earn interest otherwise negative pay interest swap rate fed system via oracle liquidity pool set additional swap rate top within protocol ' allowed range maxswap cater variance real life swap income expense value margin position x swap rate example swap rate long eurusd holding eur 0 00009 max additional swap rate 10 trader ha standard lot 100 000 long eurusd trade financing fee 9 9 100 000 x 0 00009 x 110 trader would need pay interest 9 9 one carry period equity margin held free margin margin level equity reflects trader ' ability open trade trader ' total deposit minus total withdraws reflected balance plus unrealized profit loss accumulated swap equity balance unrealized profit loss accumulated swap margin held margin used locked opened position free margin amount used opening additional position free margin equity margin held margin level key risk indicator trader reflecting equity available cover outstanding position margin level equity total leveraged position margin call unsafe trader trading liquidity pool trader considered unsafe margin call status margin level equal margin call threshold trader required deposit fund pool close existing position margin level margin call threshold otherwise new position open stop trader liquidation trader ' margin level equal stop threshold open position liquidation ethereum implementation trader longer trade trade closed anyone liquidation fee substrate chain worker used automate liquidation trade biggest loss closed first trader long liquidation position closed money market protocol money market protocol serf synthetic asset margin trading protocol increase liquidity chain connects chosen money market e g compound finance maximize return guaranteeing liquidity asset trading protocol liquidity provider would earn interest fund liquidity pool collateral user would earn interest deposited ftokens fund managed money market would earn interest certain amount cash required ensure liquidity trading p money market protocol implemented ethereum itoken itoken e g iusd similar concept ctoken compound finance way account interest earned fund managed money market value itoken increase overtime liquidity pool would accept itoken locked fund serve collateral liquidity provider would deposit usd stable coin money market mint iusd transfer iusds liquidity pool trade happens e g trading usd stable coin feur trader ' fund would convert iusd collateral liquidity pool would transfer remaining required iusd collateral achieved one method function mintto address liquiditypooladdress uint basetokenamount money market would invest proportion usd stable coin converted iusd chosen lending platform proportion calculated based minimum liquidity level set protocol utilization fund based total supply total borrowed chosen lending platform rationale behind money invested lending platform like compound fully withdrawn time hence need calculate appropriate amount invest ensure certain amount fund withdrawn time flow protocol initial deposit 100 000 money market minimum liquidity level 40 fund money market 0 100 000 could initial liquidity injection liquidity provider proportion invest 0 1 minimum liquidity level tb 1 minimum liquidity level fund money market 0 85 21 total supply external lending platform 0 34 000 000 tb total borrow platform tb 0 24 000 000 amount invested 0 fund money market 0 proportion invest 0 100 000 85 21 85 213 subsequent deposit money market require rebalance ensure minimum liquidity level maintained fund managed money market subsequent deposit 200 000 money market fund money market 1 200 000 could new position opened proportion invest 1 85 93 1 total supply 34 200 000 tb 1 24 000 000 tb arbitrary obtained external lending platform supply larger relative amount borrowed proportion invest bigger amount invested 1 200 000 85 93 171 859 rebalance formula need calculate adjustment required whether much need invest withdraw lending platform maintain minimum liquidity requirement fund managed money market adjustment difference minimum liquidity amount minus withdraw able amount lending platform minus current liquidity protocol adjustment 1 minimum liquidity level total fund managed 1 total amount invested 1 withdrawable proportion 1 total liquidity 1 40 100 000 200 000 85 213 171 859 30 18 42 928 500 adjustment 1 0 additional amount invested adjustment 1 0 amount need withdrawn otherwise action required withdrawable proportion 1 1 amount invested 1 tb 1 1 amount invested 1 34 200 000 171 859 24 000 000 34 200 000 171 859 30 18 detail please refer white paper interest allocation interest earned fund liquidity pool belongs liquidity provider put capital investment accounted itoken liquidity provider withdrawing say usd liquidity pool interest share interest earned fund collateral shared liquidity provider deposited ftoken money market interest share way account capital contribution distribution return allocation liquidity provider new position added collateral amount would transferred liquidity pool collateral equivalent amount interest share minted account return liquidity provider position closed interest share would burnt example new position 100 usd 99 feur added simplicity sake spread ignored calculation additional collateral ratio 10 10 required liquidity pool additional collateral consequently 10 interest share minted account contribution feur position ' 10 interest share issued liquidity provider receive 100 10 10 total interest earned allocation ftoken depositor ftoken holder deposit ftoken money market equivalent amount interest share accounted underlying usd would minted interest share would burnt ftoken withdrawn following previous example user deposit 9 feur 10 usd 10 interest share would minted accounted contribution user point liquidity provider receive 50 10 20 interest share total interest earned user receive 50 total interest earned implementation r protocol ethereum network highly secure valuable asset basis trading also existing defi community defi building block stablecoin however target protocol participant trader liquidity provider high performance low cost specialized trading blockchain required deliver intended experience instance platform need capable handling large trading volume frequent price fluctuation hence extend r polkadot substrate develop laminarchain parachain ethereum implementation value gateway leverage defi ecosystem example leveraging stablecoin like dai money market like compound meanwhile laminarchain based substrate later launched parachain polkadot ecosystem serve high performance financial service trading chain later two integrated using polkadot ethereum bridge provide full benefit world ethereum implementation see detail http github com laminar protocol flow protocol ethereum substrate implementation laminarchain see detail http github com laminar protocol laminar chain wiki oracle implementation defined oracle interface assume trusted oracle provide price feed protocol pseudo interface function ispriceoracle return bool function getprice symbolid symbol return uint stage simple oracle design serve purpose proofing concept oracle price set price feed administrator watch closely governance standard oracle space gradually improve due sensitivity pricing trading use case two price baseline defined protect sudden dramatic potentially malicious price fluctuation difference new price last price capped delta last limit also take snapshot price certain period difference capped new price snapshot price capped delta snapshot limit pseudo cap function last price cap pricecap delta last limit lastprice oracle last price snapshot price cap pricecap delta snapshot limit lastprice snapshot price oracle server multiple oracle server set feed price oracle contract onchain mainnet reputable price source like bloomberg forex api fetched server feed oracle contract monitoring service set ensure server availability price sanity note compromised oracle server able influence price limited degree due price cap function built oracle contract k ' th largest algorithm able tolerate k compromised server continue watch closely development oracle space open collaboration make resilient trading platform building running laminarchain status badge http github com laminar protocol laminar chain workflow test badge svg http github com laminar protocol laminar chain action workflow test prerequisite ensure llvm clang installed ubuntu bash apt install llvm clang building install rust bash curl http sh rustup r ssf sh make sure submodule recurse set true make life submodule easier bash git config global submodule recurse true install required tool install git hook bash make init build native code bash make build run start development chain bash make run development type check bash make check purge old chain data bash make purge purge old chain data run bash make restart update orml bash make update note build command makefile designed local development purpose hence skip wasm build enabled speed build time use execution native run use native execution mode
/uniflash/uniflash,Python,description uniflash simple decentralized protocol flash loan trying follow design uniswap support eth erc20 token fee go user note uniflash audited yet though enough test case ' currently deployed ropsten network testing discussing contributing next uniflash please join telegram group uniflash http uniflash try one could use smart contract interactor play uniflash e g http justsmartcontracts dev ' able add front end similar uniswap later community like project testing ropsten network 1 switch ropsten network 2 load abi uniflash factory json address 0x689bf4b0e69d113584830958c3a46f40f9b52093 3 get flash loan address eth calling getethflash interest factor 1 10 e g 9 mean 0 09 fee rate 4 load abi uniflash eth json address fetched step 3 5 one could use addliquidity removeliquidity deposit withdraw eth 6 feel free play functionality one create pool erc20 token using uniflash factory following similar step deposit withdraw erc20 token flash loan pool fee mechanism token including eth 10 pool initialized fee rate ranging 0 01 0 02 0 10 user free choose pool matched fee rate dynamic fee rate reason 1 ' done purpose avoid using price oracle quantify volume pool keep protocol simple possible 2 initial fee high nobody would use protocol would stuck cold start phase however current design user able switch pool different fee rate 3 even though discrete fee rate used pool size could change according demand supply author cheng wang polarker http twitter com wachmc thank uniswap pioneering work defi design implementation
/alephium/alephium,Scala,alephium codecov codecov badge codecov link discord discord badge discord link repository contains reference implementation alephium sharded blockchain make programmable money scalable secure information please visit wiki http wiki alephium org overview protocol ' innovation extend battle tested idea bitcoin http bitcoin org bitcoin pdf ethereum http ethereum org en whitepaper blockflow algorithm based utxo model enables sharding scalability today code algorithm paper http github com alephium research blob master alephium pdf first sharding algorithm support single step cross shard transaction offering user experience single chain simple elegant pow based sharding doe rely beacon chain stateful utxo model combine advantage eutxo model account model see code wiki come token first class citizen utxo based owned user directly instead contract offer expressiveness account model dapps easily built top better security support multiple participant single smart contract transaction multiple call packed single transaction novel vm design resolve many critical challenge dapp platform see code wiki come le io intensive flash loan available design eliminate many attack vector evm including unlimited authorization double dip issue reentrancy attack etc utxo style fine grained execution model reduces risk free arbitrage front running mitigation random execution transaction see code wiki come polw algorithm reduces energy consumption pow long term research paper http github com alephium research blob master polw pdf adaptive reward based hashrate timestamp designed implemented internal mining cost burning activated hashrate energy consumption significantly high installation prerequisite following dependency must installed order run jar deliverable java 11 running obtain latest single jar distribution github release start application using following command java jar alephium version jar build source requirement order build project source following dependency must installed system java 11 sbt http doc scala lang org getting started sbt track getting started scala sbt command line html single jar use following command build single runnable jar make assembly resulting assembly file appear app target scala 2 13 directory universal zip distribution use following command build zip distribution including launch script make package resulting package file appear app target scala 2 13 universal directory docker image use following command build docker image make docker configuration define user specific setting file alephium home user conf default alephium home point alephium testing two kind test 1 unit test property based test run make test command 2 integration test run make itest command contribution look contribution guide described contributing md contributing md codecov badge http codecov io gh alephium alephium branch master graph badge svg token 0ck4hq910r codecov link http codecov io gh alephium alephium discord badge http img shield io discord 747741246667227157 logo discord discord link http discord gg jergrbfrsb
/oceanprotocol/ocean.js,TypeScript,banner http raw githubusercontent com oceanprotocol art master github repo banner 402x png http oceanprotocol com h1 align center ocean j h1 javascript library privately securely publish exchange consume data npm http img shield io npm v oceanprotocol lib svg http www npmjs com package oceanprotocol lib build status http github com oceanprotocol ocean j workflow ci badge svg http github com oceanprotocol ocean j action maintainability http api codeclimate com v1 badge 6381c81b8ac568a53537 maintainability http codeclimate com github oceanprotocol ocean j maintainability test coverage http api codeclimate com v1 badge 6381c81b8ac568a53537 test coverage http codeclimate com github oceanprotocol ocean j test coverage code style prettier http img shield io badge code style prettier 7b1173 svg style flat square http github com prettier prettier j oceanprotocol http img shield io badge j oceanprotocol 7b1173 svg http github com oceanprotocol eslint config oceanprotocol ocean j publish data service downloadable file compute data create erc721 data nft service erc20 datatoken access 1 0 datatokens access sell datatokens fixed price sell data nfts transfer data nfts datatokens another owner erc721 erc20 action using web3 j http web3js readthedocs io en v1 2 9 web3 eth contract html etc ocean j part ocean protocol http oceanprotocol com toolset alpha state run problem please open new issue http github com oceanprotocol ocean j issue new assignee label bug template bug report md title prerequisite prerequisite installation usage installation usage development development code style code style testing testing unit test unit test integration test integration test production production release release production production pre release pre release license license prerequisite node j install http nodejs org en download docker managed non root user http doc docker com engine install linux postinstall unix based operating system mac linux installation usage bash npm install oceanprotocol lib checkout code example codeexamples md see use ocean j refer ocean protocol documentation http doc oceanprotocol com guide tutorial visit ocean protocol website http doc oceanprotocol com general information ocean protocol difficulty question use ocean j please reach u discord http discord gg tnxjkr5 notice bug issue ocean j please open issue github http github com oceanprotocol ocean j issue new assignee label bug template bug report md title development project authored typescript compiled tsc start compiler watch mode bash npm install npm start code style linting auto formatting use root project bash lint j eslint npm run lint auto format j cs prettier taking configs account npm run format testing test suite unit integration test setup mocha http mochajs org test runner nyc http github com istanbuljs nyc coverage reporting combined coverage report sent codeclimate via coverage github action job running test requires running ocean protocol component beforehand barge http github com oceanprotocol barge also run ganache cli instance bash git clone http github com oceanprotocol barge cd barge start ocean sh provider2 dashboard proceed run another terminal let ocean j know pickup smart contract address ha written barge location export address file home ocean ocean contract artifact address json build metadata npm run build metadata executing linting type checking unit integration test coverage reporting one go bash npm test unit test execute unit test individually bash npm run test unit thing coverage reporting npm run test unit cover integration test execute integration test individually bash npm run test integration thing coverage reporting npm run test integration cover production create production build run root project bash npm run build release release managed semi automatically always manually triggered developer ' machine release script production clean main branch run release task bumping version accordingly based semantic versioning bash npm run release task doe following bump project version package json package lock json auto generates update changelog md file commit message creates git tag commits push everything creates github release commit message description git tag push trigger github action workflow npm release github release step github personal access token exported github token required setup http github com release release github release pre release pre release required first one like v0 18 0 next 0 bash node module bin release major minor patch prerelease next release afterwards done npm run release selecting appropriate next version case v0 18 0 next 1 license copyright c 2022 ocean protocol foundation licensed apache license version 2 0 license may use file except compliance license may obtain copy license http www apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
/hifi-finance/hifi,TypeScript,hifi coverage status http coverall io repos github hifi finance hifi badge svg branch main http coverall io github hifi finance hifi branch main yarn http img shield io badge maintained 20with yarn 2d8dbb svg http yarnpkg com styled prettier http img shield io badge code style prettier ff69b4 svg http prettier io commitizen friendly http img shield io badge commitizen friendly brightgreen svg http commitizen github io cz cli license busl1 1 http img shield io badge license busl1 1 yellow svg http spdx org license busl 1 1 html monorepo implementing hifi fixed rate fixed term lending protocol depth documentation available doc hifi finance http doc hifi finance package hifi monorepo maintained yarn workspace http yarnpkg com feature workspace check readme associated package detailed usage instruction public package description hifi amm package amm dedicated amm market making htokens hifi flash swap package flash swap flash swap implementation liquidating underwater account hifi protocol package protocol core hifi fixed rate fixed term lending protocol hifi proxy target package proxy target dsproxy target contract stateless script private package description hifi constant package constant constant shared across hifi package hifi helper package helper helper function shared across hifi package contributing feel free dive open http github com hifi finance hifi issue new issue start http github com hifi finance hifi discussion new discussion submit pr concern feedback join u discord http discord gg mhtsrz6 pre requisite need following software machine git http git scm com downloads node j http nodejs org en download yarn http yarnpkg com getting started install addition familiarity solidity http soliditylang org typescript http typescriptlang org hardhat http hardhat org requisite set install dependency bash yarn install create env file follow env example file add requisite environment variable run watcher bash yarn watch start making change security security concern please email security hifi finance mailto security hifi finance repository subject hifi bug bounty program per term defined http doc hifi finance protocol overview security bug bounty license busl v1 1 license md mainframe group inc
/Blocks-Editor/blocks,JavaScript,block public img logo gradient png block online visual smart contract builder internet computer http dfinity org homepage http block editor github io web application http block editor github io block twitter http twitter com blockseditor discord http discord gg jddwtkwwqf simple fungible token example public img example currency v3 png inspired low code editor blender node http doc blender org manual en latest compositing introduction html unreal engine blueprint http doc unrealengine com 4 27 en u programmingandscripting blueprint block editor make possible build motoko smart contract http smartcontracts org doc language guide motoko html using simple drag drop interface getting started tip learning block user interface complete interactive tutorial http block editor github io block menu tutorial learn basic editor workflow browse variety example template http block editor github io block menu load available application select block press ' q ' keyboard view corresponding quick reference http block editor github io block menu reference information try hovering mouse block name connection socket input field view tooltip context open ' compile ' panel press ' build run ' compile deploy test code internet computer ' running issue question feel free ask discord community http discord gg jddwtkwwqf simple fungible token example public img example nft v1 png combine visual logic motoko language syntax using custom expression block advanced usage customize editor view keyboard shortcut common block type option http block editor github io block menu setting menu hold ' ctrl ' ' cmd ' opening right click placement menu view search block available editor quickly remove connection holding ' ctrl ' ' cmd ' key clicking connection socket add github library using package block import file using import block call library function using expression block expression statement convert standard motoko file block smart contract using import member block view dip721 nft template http block editor github io block menu load example add test case ensure smart contract work intended embedded mode customize block editor react application using react block editor http www npmjs com package react block editor npm package contribution pr welcome looking idea contribute please check currently open issue http github com block editor block issue feel free request clarification anything catch interest local environment sh git clone http github com block editor block cd block npm install serve http localhost 3000 bash npm start test bash npm test build bash npm run build support project block 100 open source ic community project please donate help keep application running icp 184d1794cba6d6384e8487c702436eee7614aeb17cbfc94fcfa328b3f7bf7f75 eth 0xe977fa3a79fc45eb7c2c628d7d7de65483cd0751 btc 3qpw3yxlbevbpnn8pp53kvhxrktvkafu4w project wa made possible via dfinity developer grant program http dfinity org grant
/AmbireTech/wallet,JavaScript,ambire wallet documentation smart contract documentation originally intended codearena http github com ambiretech code4rena &#9; latest smart contract source code http github com ambiretech adex protocol eth tree codearena fix security model http gist github com ivshti fe86f13c3adff3404a1f5ce1e364304c deck http docsend com view hqp9xkr2krj6wt8w faq http help ambire com hc en u category 4404980091538 ambire wallet front end repo development plan estimation http doc google com spreadsheet 1pqtrpcnrw98d97gl3nrdoipd3swehz2k7zwclzyk sm original concept http github com adexnetwork aips issue 69 note feature scope date ux decision ux decision running note make sure use wallet v2 branch relayer note 2 test polygon ' cheap enough ' real environment supported protocol sushiswap uniswap aave others ping dev wallet channel slack send matic token first clone run relayer git clone http github com ambiretech relayer git b wallet v2 cd relayer npm node env development npm start run ambire wallet npm npm start relayerless mode order enable relayerless mode ability function without connected relayer need set react app relayer url env variable null follows dotenv react app relayer url testing ledger important make ledger integration work need accessing ambire wallet http easiest way development environment use localtunnel http github com localtunnel localtunnel example lt port 3000 building plugins see build plugins ambire please read plugin doc create plugin md code style recommendation semicolon 2 space identation single quote ' instead double error handling make sure catch error may originate external io expected error display human friendly way addtoast also top level every time spawn async operation make sure catch entire thing catch unexpected error camel case available script project directory run npm start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make edits also see lint error console npm test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information npm run build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready ux decision term signer signer address used sign transaction message ' normally eoa externally owned address trezor address ledger address metamask address double keypair representing email passphrase authentication even another smart wallet address eg gnosis safe use term distinct account actual smart wallet account one signer multi account behavior adding account trezor ledger web3 wallet create one automatically ' exist control multiple add account show toast notification key control n account also auto add account formerly controlled connected signer trying sign transaction message added account signer available show toast notification explaining user connect relevant signer unless ' hw wallet case prompt user connect account added signer signer longer control warn user currently authorized send transaction network please add account key control someone go add account email login given account already added ' attempt warn early reason 1 simplicity 2 cause adding acc change latest used signer eg former quickacc readding trezor controlled 3 cause adding account might reset ' state fix tech issue future internal data format account &#9; id address checksummed account &#9; signer object either address quickaccmanager one two timelock salt identityfactoryaddr baseidentityaddr bytecode hex string account identity deploy data required &#9; email optional case quick account primarykeybackup optional case quick account stringified json keystore format signing request used walletconnect gnosis safe apps hook queue signing request could transaction personal message etc &#9; id numeric unique id request &#9; type type signing request currently set rpc method eg eth sendtransaction &#9; txn set ' eth sendtransaction contains data value gas &#9; chainid chainid request &#9; account account address request resolvemany response &#9; success boolean &#9; message string optional success false &#9; result string object optional success true depending request normally string eg eth sendtransaction would answered hex hash 0x deployment section ha moved http facebook github io create react app doc deployment http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify http facebook github io create react app doc troubleshooting npm run build fails minify maintenance updating contract token info node script generatecontractinfo j src consts humanizerinfo json audit contract used ambire wallet audited certik contract audit certik pdf codearena http code423n4 com report 2021 10 ambire g0 group http github com g0 group audit blob master adexnetwork md audited adex network used identity sol wa carried ambire additionally ' ongoing immunefi bug bounty http immunefi com bounty ambire deployed contract factory 0xbf07a0df119ca234634588fbdb5625594e2a5bca base identity 0x2a2b85eb1054d6f0c6c2e37da05ed3e5fea684ef quickaccmanager 0xff3f6d14df43c112ab98834ee1f82083e07c26bf batcher 0x460fad03099f67391d84c9cc0ea7aa2457969cea wallet token 0x88800092ff476844f74dc2fc427974bbee2794ae xwallet staking 0x47cd7e91c3cbaaf266369fe8518345fc4fc12935 supplycontroller 0xc53af25f831f31ad6256a742b3f0905bc214a430 contract except ethereum specific wallet xwallet supplycontroller deployed cross chain address across ethereum polygon bsc fantom avalanche arbitrum moonbeam moonriver cronos metis gnosis chain formerly xdai near aurora change log first private beta v0 1 0 email password account ledger support trezor support create account web3 wallet multiple account multiple network ethereum polygon avalanche walletconnect v1 walletconnect multi dapp support transaction preview transaction parsed display meaning transaction batching add multiple transaction automatically batch notification pending sign ability click notification go directly tab deposit page deposit ramp transfer page send token dashboard display token value dashboard display nfts plugin system iframe based plugins supported swap ability swap token embedded sushiswap plugin earn ability easily deposit withdraw aave security add remove authorized signer relayerless mode ability function without connected relayer fee payment stablecoins auto detects token left transaction batch transaction list transaction history otp authenticator support extra security email pas account first sprint v0 2 0 ability copy address top left ability remove account transaction cancellation speed fix relayer better gas estimation avoid gas execution reverted ability sign message swap approve token automatically removing need separate transaction batch notification incoming fund advanced transaction parsing type transaction understood displayed human friendly manner welcome email onboarding ux improvement permission clipboard notification requested modal security ability add additional signer remove signer attention grabbing pinned notification bottom right request pending signed ability deploy smart contract address book ability save label address ledger webhid support fixing ledger chrome email verification enforced modal valid email required account recovery binance smart chain support added ability change password ability export backup import account json file styling improvement responsiveness second sprint v0 3 0 ability recover account case losing one key otp google authenticator support security page notification confirmed mined transaction cross chain transfer swap support improved responsiveness mobile friendly ui intended replacement upcoming mobile app yearn integration deposit yearn vault earn page qr code deposit page wallet token distribution modal link help center added top right dropdown helpful link improved parsing uniswap v3 transaction following updated router third sprint v0 4 0 ability add custom token frequent updating balance ability ask confirmation email resent warn walletconnect connection may offline cross chain transfer tracked v0 4 1 cross chain select box easily searched private mode hide number dashboard earn add tesseract yield aggregator polygon nfts show polygon v0 4 2 ability remove custom token redesigned ui sending transaction warn user ' extra transaction cost deploying wallet private mode hide address well v0 4 3 fee improvement ability set custom fee fee improvement ability select lower fee ' sufficient fund higher setting ability replace current transaction ability queue new transaction one pending wallet claiming claim early investor token bugfix fixed parsing aave repay transaction support fantom v0 4 4 wallet ability stake xwallet wallet ability pay transaction fee wallet grid lattice hardware wallet support wallet claiming show apys token icon v0 4 5 improvement wallet staking better stats ability hide token dashboard v0 5 0 support unstoppabledomains transaction address adx staking card improvement kriptomat new ramp provider added hop exchange lp token wallet reward provided token price moonbeam network v0 5 1 gas price modal see current gas price fee selector show fee token one ux improvement top button wallet reward show pending received instead claimable critical walletconnect fix portfolio balance bugfixes v0 5 2 added gnosis chain drag drop ordering token address network unstoppable domain support address book error screen case unexpected crash fix bug sending nfts display balance network supported provider support nft binance smart chain v0 5 3 added kcc kucoin chain attach xwallet metadata transaction current apy shared value price usd added warning notifycation signing message form wallet contract still deployded cached asset price memory implement eip 712 fix non clickable address area fix bug using ud batch transaction added avalanche aave wallet reward v0 5 4 added new option migration asset metamask added arbitrum chain added optimism network implement sign message eip 712 http www npmjs com package valid signature custom banner improvments new token added custom token balance oracle fixed disable fee selector proceed sign step external signer fixed undefined apy earn v0 5 5 xwallet pending unbonds gas fee fix change signer asset migration process added ledger signer asset migration show discount banner eligible support balance custom nfts netwroks without thirdparty balance provider added multiplier cryptotester nft added pagination collectible page changed kriptomat limit 5k per day added new token bsc reward v0 5 6 supported hidden network added andromeda chain improved humanizer custom list eligible token added trezor lattice signer asset migration added transak support moonbeam moonriver optimism chain asset migration improvement migration permit method added chain verification sign message alphabetically sort token transfer page fixed support pancakeswap walletconnect improve replacment transaction interface v0 5 7 added en support improvement sign message page verification deployed contract disable deposit option tesseract earn fixed allow list 8 dapps dapps connection bar fixed notification error chrome browser android mobile
/TP-Lab/Mobile-SDK,JavaScript,mobile sdk tokenpocket app sdk sdkminiwallet android io native sdk developer use sdk pull tokenpocket wallet action token transfer push action login etc miniwallet supported new sdk android doc demo http github com tp lab mobile sdk tree master android sdk http github com tp lab mobile sdk tree master android 20sdk io doc demo http github com tp lab mobile sdk tree master io sdk http github com tp lab mobile sdk tree master io 20sdk
/airswap/airswap-web,TypeScript,airswap web discord http img shield io discord 590643190281928738 svg http chat airswap io twitter follow http img shield io twitter follow airswap style social subreddit subscriber http img shield io reddit subreddit subscriber airswap style social website http www airswap io http airswap io twitter http twitter com airswap discord http chat airswap io first please give u star repo peer peer web frontend airswap airswap open developer community focused decentralized trading system check design http github com airswap airswap web project 2 development http github com airswap airswap web project 1 project status detail designer developer earn contributing check contributing contributing md join discord http chat airswap io server learn let ' build stuff
/Scott-778/coinmarketcap-sniper-bot,JavaScript,p align center href http github com scott 778 coinmarketcap sniperbot img src http user image githubusercontent com 91510798 154884209 769e345f 7e1a 46b5 ae64 1dff8752b564 png alt logo height 100 p h1 align center coinmarketcap sniper bot h1 p align center sniper bot buy new token listed coinmarketcap p getting started coinmarketcap sniper bot buy bsc token recieve telegram notification channel http cmc cg listing alert channel http cmc fastest alert use link join channel bot us smart chain bnb buy token wbnb first ' node j installed go http nodejs org install lastest lts version install git http git scm com downloads download zip file ' want clone repository go http telegram org sign click api developement tool create app get app apiid app apihash use following command either vscode terminal command prompt git clone http github com scott 778 coinmarketcap sniper bot git cd coinmarketcap sniper bot npm install edit env file bsc wallet address mnemonic seed phrase telegram apiid apihash code editor save file start bot run command node cmcbot j bot running ask telephone number log telegram enter telephone number country code ex 15555555555 press enter telegram send code log enter number press enter two step verification bot ask two step password pick buying strategy default low liquidity medium liquidity high liquidity create custom strategy leave bot running recieve notification channel select buy token channel coingecko coinmarketcap listing alert premium http cmc cg listing alert coinmarketcap fastest alert http cmc fastest alert strategy default option ' want enter setting everytime run bot enter setting config j file bot use setting low liquidity strategy strategy buy low liquid token 1 150 bnb choose buy sell tax limit choose either coinmarketcap coingecko high risk ' need change config j file option medium liquidity strategy strategy buy medium liquid token 150 300 bnb choose buy sell tax limit choose either coinmarketcap coingecko medium risk ' need change config j file option high liquidity strategy strategy buy high liquid token 300 700 bnb choose buy sell tax limit choose either coinmarketcap coingecko ' need change config j file option custom strategy strategy buy token within custom setting set liquidity tax limit choose either coinmarketcap coingecko low risk ' need change config j file option screenshots ghss2 http user image githubusercontent com 91510798 154159575 bdebb6cb b81d 4567 8733 3dca4ae743d6 png feature coming soon soon add support different telegram channel social join telegram group talk project token best strategy http coinmarketcapsniperbot disclaimer use risk investing cryptocurrency risky financial advice small 0 7 buying fee per buy help buy cup coffee support project issue please ' post screenshots personal information like seed phrase telephone number telegram code telegram two factor password telegram string session please keep information private supporter stargazer repo roster scott 778 coinmarketcap sniper bot http reporoster com star scott 778 coinmarketcap sniper bot http github com scott 778 coinmarketcap sniper bot stargazer
/Synthetixio/synthetix-mintr,JavaScript,circleci http circleci com gh synthetixio synthetix mintr svg style svg http circleci com gh synthetixio synthetix mintr netlify status http api netlify com api v1 badge 817f3cc2 ba8e 4d03 8375 00cd0cede28c deploy status http app netlify com site synthetix mintr deploys discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io mintr v2 code new synthetix mintr dapp http mintr synthetix io translator instruction go translator instruction dapp communicates synthetix contract http developer synthetix io api doc deployed contract html allowing user perform following action mint aka issue susd locking snx claim reward snx inflation susd exchange fee every week burn susd unlock snx transfer snx account deposit withdrawl susd depot contract go queue exchanging eth current market price mintr v2 support following wallet provider metamask trezor ledger coinbase wallet mintrv2 http user image githubusercontent com 799038 67426237 aa7a5c00 f5a7 11e9 96a6 1d721f3c58ba gif note project wa bootstrapped create react app http github com facebook create react app translator instruction 1 fork repo using fork button top right 2 create language folder using language code http en wikipedia org wiki list iso 639 1 code public locale folder e g public locale e 3 copy public locale en translation json file 4 paste langage folder e g public locale e translation json 5 translate english language 6 submit pr back repo submitting translation please make sure respect following repository architecture public locale lang code translation json lang code language code language translate example public locale fr translation json public locale e translation json please make sure use latest version english en file reference starting translation translation json follows simple key value format ha respected order published &#9; home &#9; &#9; intro &#9; &#9; &#9; title would like &#9; &#9; &#9; subtitle click button view info confirm change amount submitting &#9; &#9; &#9; example new translation look like &#9; home &#9; &#9; intro &#9; &#9; &#9; title translation &#9; &#9; &#9; subtitle translation &#9; &#9; &#9; merged published translation cover every key value available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console npm test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information npm run build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information
/yearn/yearn-exporter,Python,yearn exporter collect realtime chain numeric data yearn product expose multiple format hosted version available http yearn vision installation need erigon querying historical data prometheus pull metric persist make queryable grafana want set custom dashboard alert etherscan api key usage prometheus exporter bash full info brownie run exporter realtime tvl brownie run exporter tvl postgres exporter bash export historical tvl brownie run historical tvl complementary api server uvicorn yearn api app port 8000 reload demand stats bash tvl summary brownie run tvl info live v2 strategy brownie run print strategy docker setup grafana dashboard bash export gf security admin user admin user change want different admin user name default admin export gf security admin password admin password change want different admin password default admin export web3 provider web3 provider set override infura instead custom url used web3 provider export etherscan token etherscan token need set export explorer explorer optional default http api etherscan io api export sleep second sleep second set exporter wait given amount time subsequent invocation web3 provider make dashboard successful startup go directly grafana http localhost 3000 want change dashboard sign lower left admin admin historical tvl bash export web3 provider web3 provider set override infura instead custom url used web3 provider export etherscan token etherscan token need set export explorer explorer optional default http api etherscan io api make tvl successful startup access tvl rest endpoint http localhost 4000 setting github action create access key apy exporter service user user create new environment http github com numan yearn exporter setting environment named production add newly created aws access key id aws secret access key
/web3gamesofficial/web3games-blockchain,Rust,p align center img src http user image githubusercontent com 26602057 163522053 ea3ad06a be06 4453 920b 15db4df3536a png width 500 p div align center github workflow status http img shield io github workflow status web3gamesofficial web3games blockchain rust http github com web3gamesofficial web3games blockchain action license gpl v3 http img shield io badge license gpl 20v3 blue svg http github com web3gamesofficial web3games blockchain blob main license twitter url http img shield io twitter url style social url http 3a 2f 2ftwitter com 2fweb3games http twitter com web3games discord http img shield io badge discord gray logo discord http discord gg web3games medium http img shield io badge medium gray logo medium http blog web3games com div toc 1 introduction 1 introduction 2 building 2 building 3 run 3 run 4 docker 4 run docker toc 1 introduction web3games new generation gaming ecosystem built substrate 2 building install rust bash curl http sh rustup r ssf sh initialize wasm build environment bash script init sh build wasm native code bash cargo build release 3 run single node development chain purge existing developer chain state bash target release web3games node purge chain dev start development chain bash target release web3games node dev detailed log may shown running node following environment variable set rust log debug rust backtrace 1 cargo run dev multi node local testnet want see multi node consensus algorithm action locally create local testnet two validator node alice bob initial authority genesis chain endowed testnet unit optionally give node name expose listed polkadot telemetry site http telemetry polkadot io local 20testnet ' need two terminal window open ' start alice ' substrate node first default tcp port 30333 chain database stored locally tmp alice bootnode id node qmrpheln4jwdany7hgjfwfnbfkqcb6tff4vva6hgjmzkrr generated node key value specify bash cargo run base path tmp alice chain local alice node key 0000000000000000000000000000000000000000000000000000000000000001 telemetry url ' w telemetry polkadot io submit 0 ' validator second terminal ' start bob ' substrate node different tcp port 30334 chain database stored locally tmp bob ' specify value bootnodes option connect node alice ' bootnode id tcp port 30333 bash cargo run base path tmp bob bootnodes ip4 127 0 0 1 tcp 30333 p2p qmrpheln4jwdany7hgjfwfnbfkqcb6tff4vva6hgjmzkrr chain local bob port 30334 telemetry url ' w telemetry polkadot io submit 0 ' validator 4 run docker first install docker http doc docker com get docker docker compose http doc docker com compose install run following command start single node development chain bash script docker run sh command firstly compile code start local development network also replace default command cargo build release target release web3games node dev w external appending useful one follow bash run substrate node without compiling script docker run sh target release web3games node dev w external purge local dev chain script docker run sh target release web3games node purge chain dev check whether code compilable script docker run sh cargo check license web3games released gpl v3 0 license license
/valorem-labs-inc/valorem-core,Solidity,valorem option v1 core repository contains binary smart contract system comprised many library together make valorem option v1 core core contract provide option settlement engine upon complex system built core designed gas efficient minimal provide secure settlement system core consists primarily settlement engine allows user write option exercise option redeem claim asset settle assignment exercise claim written core interface core expose interface user protocol documented codebase additional documentation provided ioptionsettlementengine ioptionsettlementengine erc 1155 multi token http eips ethereum org eips eip 1155 interface extended provide interface valorem protocol option settlement system enums type type enum contains information type given token settlement engine solidity enum type none option claim error tokennotfound tokennotfound error occurs token found engine solidity error tokennotfound event feeswept feeswept event emitted accrued protocol fee given token swept feeto address solidity event feeswept address indexed token address indexed feeto uint256 amount newchain newchain event emitted new unique option chain created solidity event newchain uint256 indexed optionid address indexed exerciseasset address indexed underlyingasset uint96 exerciseamount uint96 underlyingamount uint40 exercisetimestamp uint40 expirytimestamp optionsexercised optionsexercised event emitted successful exercise option solidity event optionsexercised uint256 indexed optionid address indexed exercisee uint112 amount optionswritten optionswritten event emitted write called write new option solidity event optionswritten uint256 indexed optionid address indexed writer uint256 claimid uint112 amount feeaccrued feeaccrued event emitted write exercise solidity event feeaccrued address indexed asset address indexed payor uint256 amount claimredeemed claimredeem event emitted redeem called claim solidity event claimredeemed uint256 indexed claimid uint256 indexed optionid address indexed redeemer address exerciseasset address underlyingasset uint96 exerciseamount uint96 underlyingamount function feebalance feebalance function return balance protocol fee given token swept yet solidity function feebalance address token external view return uint256 feebps return protocol fee basis point charged writer underlying asset exerciser exercise asset solidity function feebps external view return uint8 feeto feeto function return address protocol fee swept solidity function feeto external view return address tokentype return token type enum given tokenid function tokentype uint256 tokenid external view return type option return option struct detail given tokenid token vtoken solidity function option uint256 tokenid external view return option memory optioninfo claim return claim struct detail given tokenid token claim nft solidity function claim uint256 tokenid external view return claim memory claiminfo setfeeto callable present feeto address change feeto address solidity function setfeeto address newfeeto external hashtooptiontoken return optionid hash keccak256 abi encode option memory settlementseed set 0 time hashing exists solidity function hashtooptiontoken bytes32 hash external view return uint256 optionid sweepfees sweep fee balance token greater 1 wei token token solidity function sweepfees address memory token external newchain creates new option chain one ' already exist hash keccak256 abi encode option memory settlementseed set 0 solidity function newchain option memory optioninfo external return uint256 optionid write writes amount optionid option sends caller vtokens claim nft solidity function write uint256 optionid uint112 amount external return uint256 claimid exercise exercise amount optionid transferring exercise asset transferring underlying asset requirement met solidity function exercise uint256 optionid uint112 amount external redeem redeems claimid underlying asset msg sender caller option chain claim ha reached expiry burn claim nft success function redeem uint256 claimid external underlying return underlying struct asset 1 wei given tokenid token exists solidity function underlying uint256 tokenid external view return underlying memory underlyingpositions structs claim claim struct contains information claim generated writer call write every claim linked option token solidity struct claim uint256 option uint112 amountwritten uint112 amountexercised bool claimed option option struct contains data option chain token keyed unique hash keccak256 abi encode option memory settlementseed set 0 time hashing solidity struct option address underlyingasset uint40 exercisetimestamp uint40 expirytimestamp address exerciseasset uint96 underlyingamount uint160 settlementseed uint96 exerciseamount underlying underlying struct contains information underlying asset 1 wei given token id settlement engine solidity struct underlying address underlyingasset int256 underlyingposition address exerciseasset int256 exerciseposition
/Synthetixio/SIPs,Jupyter Notebook,sip discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io synthetix improvement proposal sip describe standard synthetix platform including core protocol specification client apis contract standard contributing 1 review sip 1 content sip sip 1 md 2 fork repository clicking fork top right 3 add sip fork repository template sip sip x md 4 submit pull request synthetix ' sip repository http github com synthetixio sip first pr first draft final sip must meet formatting criterion enforced build largely correct metadata header editor manually review first pr new sip assign number merging make sure include discussion header url new thread research synthetix io http research synthetix io people discus sip whole sip requires image image file included subdirectory asset folder sip follow asset sip x sip x linking image sip use relative link asset sip x image png believe sip mature ready progress past draft phase reach spartan council member discord searching member spartan council role finding within governance channel spartan council schedule call sip author go sip detail assessed sip moved feasibility core contributor assigned core contributor work author conduct feasibility study author core contributor satisfied sip moved sc review pending spartan council ha formally reviewed sip sip presentation either move vote send back feasability vote conducted within spartancouncil eth snapshot space connected staking http staking synthetix io dapp vote spartan council reach super majority sip moved approved otherwise rejected sip ha implemented either protocol dao sip author relevant party sip assigned implemented status 500 susd bounty proposing sip reach implemented phase sip status draft initial state new sip spartan council core contributor assessed feasibility sip assessed feasibility assigned core contributor sc review pending sip awaiting spartan council review author core contributor satisfied feasibility vote pending sip awaiting vote approved sip ha successfully reached super majority spartan council vote favour rejected sip ha failed reach super majority spartan council vote favour implemented sip ha released main net validation sip must pas validation test possible run sip validator locally npm install done already npm run test json api sip sccps data available json format status following url sip http sip synthetix io api sip draft json http sip synthetix io api sip feasibility json http sip synthetix io api sip sc review pending json http sip synthetix io api sip vote pending json http sip synthetix io api sip approved json http sip synthetix io api sip rejected json http sip synthetix io api sip implemented json sccps http sip synthetix io api sccp draft json http sip synthetix io api sccp feasibility json http sip synthetix io api sccp sc review pending json http sip synthetix io api sccp vote pending json http sip synthetix io api sccp approved json http sip synthetix io api sccp rejected json http sip synthetix io api sccp implemented json automerger sip repository contains auto merge feature ease workload sip editor change made via pr draft sip author sip github approve change auto merged sip automerger http github com bakaoh sip automerger bot
/DeGatchi/Blockchain-Alpha,Solidity,blurb collection valuable info curious mind blockchain development crypto law legal advice say token worthless classified security http new fundamental gitbook io 3d frankenpunks term condition 3d frankenpunk nfts getting blockchain development 1 first learn fundamental javascript watch video yt experiment vital understand solidity smart contract testing web3 frontend bot creating language using core concept syntax j 2 ' got solid understanding j ' core concept jump cryptozombies http cryptozombies io solidity example http solidity example org teach fundamental solidity development allowing write evm compatible contract grasp good idea contract written 3 start watching tutorial youtube http www youtube com watch v ztr2jet2 yy need make tbh play around smart contract creation remix remix browser code editor allows easy access deployment function call error recognition 4 make sure get github account github desktop vscode main source code storage portfolio grow 5 start creating contract vscode w forge template made http github com degatchi forge template start ctfs damn vulnerable defi ethernaut etc 6 come idea start building maybe go basic idea first e user deposit ether ether split x amount user ' forget add ether solidity web3 j test 7 read compound comptroller aave flashloans uniswap v2 sushiswap masterchef pancakeswap masterchef contract staple common contract used 8 explore space research enjoy time founding start record advice thing ' learned cofounding working protocol developing protocol note build ship quick working product w basic ui work ' burn take break ' work 24 7 bc taking step back allow take 3 step forward able consistently community product make sure product shipped etc however without community product non existent ' much harder bring back community member get transparent need time ship announce investor want left dark transparent deter investor underpromise overdeliver overpromising overdelivering ' big much much excitement underpromising overpromising think ' promising make sure follow never back corner know ' talking gain confidence investor ' bite chew e roadmap instead making roadmap dev board underdevelopment deadline deadline cause stress delivered possible due unexpected error irl stuff etc investor lose faith think opportunity cost frontend completed contract build new contract capture new wave opportunity e nft craze flexible let holder know plan get holder ' trust able thing get trust delivering keeping word expansion make payroll system get team people better modularize much time fund pool pay audit marketing listing contractor partnership etc give real use case test people interview test capable protocol development biggest killer protocol architect always working ' baby ' never ' giving birth ' order actually progress must make deploy different version e 1 2 3 think idea scratch improve someone else ' idea product innovate ship research repeat fast possible abundance capital cryptosphere need take advantage opportunity release v 0 v 1 v 2 considerable improvement ui ux development tutorial popup toggle hovering button explains whats happening cause effect walkthrough button clicked explains product work use help onboarding new user especially non crypto native increase accessibility easier platform use people onboarded innovate educate without educating innovation wont reach ' full potential guide new platform networking ' afraid message anyone never know opportunity await approach others join twitter space chat ' learn much meet many people make life better 3 developing active community brings attention product ' dismiss marketing 90 marketing problem startup face 1 distribution growing channel exposure 2 driving conversion sale click subscribes 3 developing brand consistent reputable alpha use golang high speed optimization geth written golang keep 1 wei token trading ' need initialize storage token trading something first time cost little bit extra gas hold 1 wei amount look bot ' wallet http etherscan io address 0x000000000035b5e5ad9019092c665357240f594e code see dozen token 0 00 value sandwich attack liquidity providing tx adding ton liquidity front running withdrawing user put lp get fee user providing liquidity effectively making lp limit order need broader perspective market adjust portfolio achieve doe extreme optimization matter e 50ms difference 1 speed matter lot non flashbots market 2 faster simulation mean search broadly mempool pick thing competitor ' 3 compete pgas frontrunning order frontrun need run node access mempool see awaiting tx replicate higher fee executed auditing audit process spearbitdao jakelynch br start set private discord channel ' someone audit team speak figure scope provide quote ' also figure time staffed audit since ' starting ' fairly selective ' auditing atm engage ' take deposit point ' give auditor access codebase ' job notify found vulnerability advising fix vulnerability vulnerability requires extensive fix reserve right ask separate engagement rule thumb 80 week spent audit 20 spent helping fix vulnerability finished provide report note use msg sender authorization another contract call contract msg sender address contract address user called contract ' also worth mentioning using tx origin ' limiting interoperability contract contract us tx origin cannot used another contract contract ' tx origin http ethereum contract security technique tip readthedocs io en latest recommendation avoid using txorigin br common exploit experience ' either access control mishap order operation error leading flashloan entrancy vulns issue two different party like self transfer self liquidation sometimes break accounting operate cached value memory instead always reading latest one storage batch function ' work correctly passing batch array duplicate value trusting user input combination flashloans oracle manipulation entrancy flashloan vulns become pretty advanced require security mindset think devs ' actually experience devs ' create threat model flashloan oracle manipulation vector thats get auditor look see http rekt news leaderboard unaudited get attacked one listed point br q alexander schlindwein fei protocol vulnerability finder q general advice would give aspiring blockchain bug bounty hunter br great way get started learning smart contract exploit practice participating wargames ctfs find good one http github com crytic awesome ethereum security ' repository also get discouraged havent found bug yet even though spent lot time searching often working code ha audited world class security expert put extensive testing doe mean bug though audit guarantee security list audited project exploited long enough fact armorfi fei protocol audited reason immunefi exists first place yet easy get lost fallacy feeling like wasting time spend hour upon hour apparently achieving result moment good remember even period low finding knowledge insight gaining studying trying exploit smart contract long run equip skillset people rewarding br mudit security researcher developer helping sushiswap build next gen amm trident data 16 case study 2020 defi exploit show 1 72 3 hack come financial model e g interplay bonding curve constant product amm balancer hack 29 06 2020 2 27 4 insecure implementation e g entrancy 3 0 3 arbitrage insecure implementation well studied past work many existing auditing tool catch e slither none existing tool check financial model unsoundness look 1 control flow e g return require 2 memory variable created used 3 storage right auditing approach auditing always keep open communication channel developer make sure ask question sure intend something meant write test case fuzzing critical function dev patch fix small able verify change continue otherwise change large change good portion codebase current audit essentially void new auditor used since reviewing new codebase small period time wont effective math complicated beyond comprehension tell devs recommend find someone else suitable informational add gas optimization linting unnecessary code 1 read project get idea smart contract meant glance resource project made available 2 glance smart contract get idea smart contract architecture tool like surya come handy 3 create threat model make list theoretical attack vector thinking would attack try exploit contract including common pitfall e solidity 0 8 0 overflow underflows ' reverted safemath sol wa required past exploit technique entrancy flashloans pool balance manipulation etc 4 look place value exchange also checking missing role requirement allowing review critical functionality within hour especially function like transfer transferfrom send call delegatecall selfdestruct walk backward ensure secured properly useful viewing large codebases thousand line review brain storm new attack smart contract usually day contract creating proof concept attack e change param certain something going different direction function flow etc 5 line line review contract looking logic bug contract behaving way supposed e whitepaper smart contract ' align making sure contract safe exploit listed earlier 6 another review perspective every actor threat model e liquidity provider user swapping calling function various way common use case uncommon use case combination 7 run tool like slither review output 8 glance test case code coverage telling devs review another round review however comprehensive 3 first thing look smart contract 1 architecture 2 access control 3 fund transfer br leo alt researcher formal verification lead ethereum foundation q advice people would like go area using formal verification blockchain protocol smart contract e g pre requisite one interested company apply br think learning use fv tool best bit work give practical experience topic give pointer learn theoretical aspect ' interested far company go ' really say specific name guess company use fv audit quick thought access public external function give unsafe external call assembly smart contract audit used stamp approval word like passed audit big red flag audit basically detailed code review guarantee security ' hard quantify standardize process many shitty audit firm around ' expect reputable firm take personal loss case accident ' completely different product offering insurance however expect insurance provider code auditor work closely future br christoph ranked 1 hacker code4rena q ctfs war game material recommend someone aspiring take 1 spot code4rena br started damn vulnerable defi http cmichel io damn vulnerable de fi solution ethernaut http cmichel io ethernaut solution capture ether http cmichel io capture ether solution link include solution get stuck try first another great way got contact auditor major auditing firm wa paradigm ctf http cmichel io paradigm ctf 2021 solution q tool use auditing br ' use tool directly perform vulnerability analysis use great solidity visual developer vscode extension highlight storage variable function parameter make easier context reading new codebase q calculate audit ' cost br scoping audit always tough task imo get better experience ' give rule thumb let ' say audit 200 line code per hour standard assumption among auditor afaik adjust parameter code complex math heavy documentation bad take line code divide 200 loc h get hour required audit code single person ' independent auditor also add 5h 10h compiling report biz dev work plus answering question multiply hourly rate hourly rate much time spend contract average till stop looking e new c4 project launch br much use tool much really looking code manual work br make sure possible exploit really possible c4 code deployed yet br n report 100 sure vulns br 1 ' good question could always spend time code would increase likelihood finding bug point ' point diminishing return ' reasonable spend time code alexander schlindwein wa asked question regarding bug bounty think applies audit well approach work best set goal fully understanding system point could reimplement scratch without allowed look original codebase remembering code understood application supposed examined project far found bug chance finding one continuing low http medium com immunefi interview legendary bug bounty hunter alexander schlindwein cced9c73c02a realistically often stop reaching point due time constraint opportunity cost think limited time better spent elsewhere 2 100 manual work 3 definitely n well cannot code reproduction test framework every issue find would take much time complex critical issue personally also think ' better err side look like issue ' submit sure ' issue keep ' devs tell even though submission wa wrong feel confident code reviewed issue ' like stress though really appreciate protocol ha great test setup allows easily add new test case without write huge amount setup code get protocol desired state first q describe breakdown auditing process 1 besides technical skill like knowing many type exploit knowing evm well seen issue similar protocol personality trait think useful conscientiousness feel like auditor ' even try find bug want done job quickly possible happens especially incentive aligned get paid fixed salary often case traditional auditing firm want hire people conscientious take job seriously take pride work 2 ' need cryptography knowledge auditor see math heavy defi protocol good math definitely plus 3 income stream 1 code4rena 2 audit protocol reach 3 investment 4 onlyfans 4 auditing process pretty straightforward first read documentation read code top bottom order contract way make sense example read base class contract first read derived class contract ' use tool heavily take note scribble code ' using solidity visual developer extension come audit audit info audit ok audit issue marker use categorize note read entire codebase revisit note resolve loose end thing ' understand earlier afterwards create audit report note q must read auditing recommend br subscribe blockthreat newsletter http twitter com iphelix ' weekly newsletter consisting security incident post mortems security related topic happened past week rajeev secureum list great compact http secureum substack com p smart contract security 101 secureum q salary auditor based experience skin level br ' expert ' say hourly rate auditor roughly junior 100 h experienced 100 250 h top auditor 250 1000 h br samczsun research partner paradigm focused supporting portfolio company researching security related topic prev tob ' asking think three common vulnerability would say missing input validation checking token legit etc improper access control function private public onlyowner ' etc bad math however know key success ' memorize checklist vulnerability go one one ' able react see pattern match based experience checklist ' found poly network exploit careful reading analysis successfully prevented similar bug optimism going live http github com ethereum optimism contract pull 360 policy everything stay private default unless reason make public ' good reason de anonymize right ' q activity productive gain deep understanding lower level ethereum concept br always curious ' afraid dig deep concept ever wondered mapping implemented assume collision impossible ' difference calling regular function view function doe evm enforce ' plenty question waiting asked solidity ethereum people take granted answer question require explore evm ' better way learn low level concept imo q much code write weekly basis v read br split 50 50 right ' working tooling sometimes might go week without writing code q get br started smart contract security reading blog common vulnerability get speed slowly worked way stack felt comfortable knew jumping right evm seems like great way burn ' prepared q tooling like br tooling simple browsing source code github web smaller project basically project review uniswap v3 github vscode bigger project 0x v4 exploit development remix custom remix plugin let write quick script impersonate account print debug message etc hardhat hevm ' used workflow finding random thing chain etherscan io ethtx info ethervm io seth q quality make good auditor security engineer br default answer able look something question really work actually think want run experiment try test hypothesis maybe come q would describe auditing process br ' small enough codebase skim audit time getting sense code work looking common issue codebase big need really focus understanding logic move looking bug auditing process really approaching code bunch different angle trying tease ' assumed might break different angle help narrow scope know function care one ' q recommended must read resource security auditing br nothing particular ' attribute knowledge one n 3 blog post like number one recommendation always go thing whether ' live contract immunefi ctfs ' really neat one called paradigm ctf q better model requiring auditor card heavily stacked rugdoc seems cover lot contract fast time br imo auditor extremely vocal fact audit ' guarantee security simply third party code review make sure client ' treat right thing bad handful auditor singlehandedly killing reputation space whole keep producing report present guarantee security project hacked missed critical bug two br tincho security researcher openzeppelin q term security 3 first thing look smart contract br ' easy one go top bottom first 3 thing pragma import contract ' name reality specific step change depending ' looking first need understand ' looking least conceptual level documentation test whitepapers etc handy usually start goal understand architecture main role ' visual thinker point draw lot also say documentation deceiving try healthy distrust ' handful thing tend quite sensitive usual source error think question pointing transfer fund access control complex inheritance chain upgradeability external call user controlled target assembly integration token integration price oracle heavy math interface system complex business logic usual suspect ' say deserve attention ready read lot code thousand line ' coming black box web app testing might used reading code hour least come smart contract ' must q tool use audit review contract br nothing fancy beginning whatever let ' draw diagram slither surya kind tool allow see inheritance chain call graph exposed function etc ' helpful see complex beast main entry point ' use solidity auditor v code extension feel clutter ui much least taste usually ' reading code taking note either code comment txt file drawing stuff thinking also think people underestimate power pen paper ' found bug following logic pen paper ' keen using existing test suite project try attack debug behavior complex function note taking fellow auditor use smarter note taking apps obsidian roam also others use kanban board track thought exploration path ' tried workflow well useful q advice someone coming entry level position position get noticed security company improve skill br good one ok two separate question necessarily one tied long answer coming improve skill least tell continue play every smart contract ctf available increasing complexity probably capture ether ethernaut damn vulnerable defi paradigm ctf hit head wall solve challenge end ' actual solution matter learning process went reach solution read vulnerability incident post mortems similar material published take time understand distrust publisher actually try reproduce exact vulnerability attack code proof concept exploit ' also cool ' quite often lately vulnerability catch attention honestly ' great way continue learning vulnerability attack vector tooling etc skim published audit report read issue interesting ' learn kind thing found ' reported ' solved nice exercise least ha useful participate workshop conference etc either live watching recording talk ' like ' ' close 5 min give chance exposed something new ' shared security researcher probably ' learn something know ' refresh previous stuff ' done actually guess trying participate bug bounty program contest cool way start putting skill use even thing end finding low informational ' get exposure real solidity code intricacy always nice either independent security researcher employee security firm force start making living ' get real exposure code project vulnerability incident sort knowledge ' get ' every single day working get noticed ' say usually personal blog write stuff learn research ' ctf challenge solve writeups bounty ' earned similar ' great way show work skill also ' coder public github project solid contribution open source library tool related security also useful participating speaker security related conference another one sharing twitter cool stuff ' know probably lot way sometimes even depends security firm looking 0xbuns co founder soulswap look attack vector check exploited protocol fork primitive protocol e synthetix sushiswap pancakeswap compound uniswap v2 understanding really well help majority audit solidity gas optimisation require revert custom error lower contract size unchecked save gas w default safemath black magic fuckery cloneswithcalldata sol minimal proxy w immutables h boredgenius general error handling assert bool condition cause panic error thus state change reversion condition met used internal error require bool condition reverts condition met used error input external component use memory storage calldata memory var ha stored dudring function execution calldata var ha passed around function call e value passed another function storage ha stored chain multiple function naming convention different params e deposit uint amount deposit uint amount address act seperate function bonding curve aka curation market q bonding curve mathematical curve defines relationship price token supply allows fix predetermined price discovery mechanism q curve create list exponential curve le token le price potentially useful type staking fractioanlization uncapped market token supply limit negative exponential curve shape negative exponential curve allows incentivize early investment without heavily disincentivizing late investment linear used want static price v supply sigmoid bonding curve shape used incentivize market interested individual organization mean match behavior want investor type curve incentivizes behavior look like q used brief bonding curve shape used incentivize market interested individual organization mean match behavior want investor type curve incentivizes behavior example price discovery speculation fractionalizations secondary token fundraising tokenization developer note warned implementing complex math formula solidity gas expensive becomes complicated quickly want implement complex curve would recommend looking vyper curve finance us vyper taxation wanted use bonding curve mechanism fundraising need able withdraw collateral pay token bonding curve buy tax mean take percentage collateral every buy move different contract wallet allowing raise money bonding curve without de collateralize distributed token sell tax hand mean token holder pay fee sell token rather buy lastly one tax sell buy interaction bonding curve contract resource understanding bonding curve zap http www youtube com watch v yqktb5chirk customizable bezier bonding curve http github com bluedotdao bondzier intro bezier curve http javascript info bezier curve intro bonding curve http medium com linum lab intro bonding curve shape bf326bc4e11a token bonding curve design parameter http medium com molecule blog token bonding curve design parameter 95d365cbec4f make bonding curve continuous token model http blog relevant community make bonding curve continuous token model 3784653f8b17 depth article create bonding curve http blog relevant community bonding curve depth intuition parametrization d3905a681e0a persuasive design technique used direct capture attention extended period time inevitably forming habit creating dopamine feedback loop keep coming back use ' product ' http line25 com article persuasive design 101 investment http www youtube com watch v hshe4exx1o4 crypto lawyer moving portugal golden visa plan http map advogados com en golden visa portugal cheapest best investment option http www youtube com watch v 3krikjhtcbg chose st lucia citizenship investment http www youtube com watch v ph5jgygu9sc nomad capitalist http nomadcapitalist com global citizen second passport st lucia citizenship investment crypto friendly bank portugal v uae v country http www youtube com watch v qsuzuxok6da offshore citizen http offshorecitizen net citizenship investment life tip big network big inner circle choose wisely put people want thing around attribute around rub onto always think opportunity cost try minimise regret sweat peace le ' bleed war resource general cryotozombies http cryptozombies io solidity example http solidity example org solidity doc http doc soliditylang org sway lang rust based smart contract language http www youtube com watch v s52zsz7rnoo solidity yul tip trick http twitter com controlcthenv status 1475260262131417098 28 yul smart contract development http www libevm com 2021 12 18 yulp smart contract dev assembly code trick http co vih7tj8jeq ssr true data representation solidity http ethdebug github io solidity data representation good overview gas optimization mstore mload sstore sload http medium com goldfinch fi solidity learning save 50 gas cost 5e598c364ab2 daniele sesta popscile finance mim spell http www youtube com watch v pw6ch5c89iw uniswap v2 contract walk http ethereum org en developer tutorial uniswap v2 annotated code example uniswap calculate price token happens swap made http www publish0x com dalz blog example uniswap calculate price token xvrnxjd math solidity part 3 percent proportion http medium com coinmonks math solidity part 3 percent proportion 4db014e080b1 ethereum yellow paper http ethereum github io yellowpaper paper pdf constant sum amm solidity example 0 8 10 http solidity example org defi constant sum amm solidity tutorial assembly http jeancvllr medium com solidity tutorial assembly 5acdfefde05c tight variable packing http fravoll github io solidity pattern tight variable packing html efficient bit packing http ethereum stackexchange com question 77099 efficient bit packing 77102 77102 nft collection launch http metaversal banklesshq com p intro nft collection launch diving ethereum vm part 2 learned start worrying count storage cost http medium com hayeah diving ethereum vm part 2 storage layout bc5349cb11b7 ultimate defi blockchain research base http github com offciercia ultimate defi research base security safety security ethereum 101 http secureum substack com p ethereum 101 tip trick ' make auditor love day one http threadreaderapp com thread 1400170232904400897 html ethernaut ctf http ethernaut openzeppelin com blocksec ctfs http twitter com immunefi status 1474445026172174340 28 web3 hacking start guide http twitter com immunefi status 1475780995563638784 28 reverse engineering everyone http twitter com 0xasm0d3us status 1475813604100243460 28 start web3 hacking rust based chain http twitter com timurguvenkaya status 1475843655567089676 28 solidity bug vulns yul http github com mikerah solidity bug vulns yul consensys smart contract best practice http consensys github io smart contract best practice known attack http github com leonardoalt ethereum formal verification overview http github com crytic awesome ethereum security http samczsun com author samczsun http www certik org
/yearn/itoken,JavaScript,documentation iearn finance http doc iearn finance smart contract interface contract abi address iether json http github com iearn finance itoken blob master build contract iether json 0x9dde7cdd09dbed542fc422d18d89a589fa9fd4c0 http etherscan io address 0x9dde7cdd09dbed542fc422d18d89a589fa9fd4c0 code itoken interface tab tab title iiether sol javascript solidity interface interface iiether invest eth function invest external payable function calcpoolvalueineth external view return uint function getpriceperfullshare external view return uint redeem invested token pool function redeem uint256 share external endtab endtabs erc20 token interface tab tab title tokeninterface sol javascript http theethereum wiki w index php erc20 token standard contract erc20interface function totalsupply public view return uint function balanceof address tokenowner public view return uint balance function allowance address tokenowner address spender public view return uint remaining function transfer address uint token public return bool success function approve address spender uint token public return bool success function transferfrom address address uint token public return bool success optional function name external view return string function symbol external view return string function decimal external view return string event transfer address indexed address indexed uint token event approval address indexed tokenowner address indexed spender uint token endtab endtabs
/renproject/bridge-v2,TypeScript,ren bridge v3 easy way bridge cross chain asset blockchains bridge http user image githubusercontent com 2221955 108037890 4b8b0100 708e 11eb 948a 289766d0aebd png development guide env copy env example env add missing environment variable bridge us infura internally ' need go infura io http infura io create key set react app infura id env file yarn ensure dependency installed running yarn available command yarn start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console yarn start function run netlify function development mode br open http localhost 9999 http localhost 9999 view browser yarn test launch test runner interactive watch mode br yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br updating translation update translation need 1 add crowdin personal token crowdin project id env 2 install crowdin cli npm g crowdin cli update en json upload change crowdin crowdin upload community translation ready run crowdin download download substitute translation locale src i18n locale folder alternatively use i18next parser http github com i18next i18next parser scan file newly added key update en json file installed run yarn run scan architecture app wa build top cra http reactjs org doc create new react app html material ui http material ui com redux toolkit http redux toolkit j org shared state management core renvm library application built follows renproject multiwallet ui http www npmjs com package renproject multiwallet ui provides extensible wallet selection connection management feature react apps come together default ui adapted react ui framework renproject ren http www npmjs com package renproject ren renjs core library interacting renvm forking free fork app adapt extend need sh git clone http github com renproject bridge v2 git requirement renbridge requires infura key provided environment variable create one going infura io http infura io another ethereum provider used changed multiwallet tsx src provider multiwallet multiwallet tsx changing visual appearance visual related configuration lie theme src theme folder find style material ui check link http material ui com customization theming icon logo image found asset src asset folder deploying static hosting site used github page netlify cloudflare page ipfs service like fleek http blog fleek co post fleek create react app github page instruction found http create react app dev doc deployment github page
/bonedaddy/go-defi,Go,html center img src godefi png img center br html golang sdk working defi protocol general utility working ethereum compatible blockchains package bclient binding cli config database sushiswap uniswap testenv utils bclient provides wrapper around ethclient package binding provides code generated abigen working smart contract binding erc20 provides generated code working erc20 contract binding oneinch v2 provides generated code working oneinch v2 router contract binding oneinch v3 provides generated code working oneinch v3 router contract unicrypt presalefactory provides generated code working unicrypt presale factory uniswap provides generated code working uniswap v2 contract note also used working corresponding sushiswap contract cli cli package config configuration management package database database management packlage sushiswap wrapper around go ethereum ' ethclient package using sushiswap v2 uniswap wrapper around go ethereum ' ethclient package using uniswap v2 testenv provides wrapper around simulatedbackend allowing memory blockchain particularly useful local smart contract development developing backend dapps utils provides utility function including goethereum book utils http goethereumbook org en util go helper make bind transactopts safe concurrent use well general blockchain interface satisfies function provided simulated backend well ethclient useful drop replacement actual rpc client test environment example transaction matching shell go defi txm method transfer method transferfrom method buy contract address 0x5ade7ae8660293f2ebfcefaba91d141d72d221e8
/Jeiwan/zuniswap,JavaScript,zuniswap clone uniswap http uniswap org smart contract build educational purpose blog post 1 programming defi uniswap part 1 http jeiwan net post programming defi uniswap 1 introduction uniswap basic implementation addliquidity constant product function explanation pricing output amount calculation token swap 1 programming defi uniswap part 2 http jeiwan net post programming defi uniswap 2 complete addliquidity implementation lp token fee impermanent loss 1 programming defi uniswap part 3 http jeiwan net post programming defi uniswap 3 factory contract implementation token token swap unswap v1 finished
/mycitadel/mycitadel-desktop,Rust,mycitadel desktop bitcoin lightning rgb wallet banner asset banner jpg mycitadel wallet bitcoin digital asset bitcoin finance bifi smart contract blazingly fast secure cross platform technically advanced wallet market first wallet allowing taproot multisig locktime based spending condition reliable hodling inheritance option corporate organization current account instant lightning payment work single multisig setup based hardware air gaped cold server side hot key storage involving arbitrary complex time lock script miniscript wide interoperability use wallet descriptor asset screenshots linux history png mycitadel suite software hardware internet service focused digital individual sovereignty privacy includes mobile amp desktop cross platform wallet web trust contact amp identity management app end end encrypted chat app command line tool wallet runtime library server side node self hosted run mycitadel box home private mycitadel cloud application written rust programming language gtk framework set bitcoin amp lightning rust library developed lnp bp standard association including client side validation descriptor wallet bp lnp rgb library mycitadel node also contains embedded lnp amp rgb node provided association key feature support taproot multisigs asset screenshots linux launcher png taproot enabled day one including multisig script based taproot airgaped hardware watch wallet asset screenshots linux signer png arbitrary complex spending condition asset screenshots linux condition png wallet descriptor asset screenshots linux descriptor png batched payment asset screenshots linux pay png wallet independent psbt signer asset screenshots linux psbt png installation first need install prerequisite operation done specific debian linux please console sudo apt update sudo apt install cargo libssl dev pkg config g cmake libgtk 3 dev libusb 1 0 0 dev libudev dev python3 dev mac please console brew install gtk 3 libadwaita adwaita icon theme libusb window need install visual studio c tool msysy2 based gtk please follow instruction http www gtk org doc installation window using gtk msys2 package plan work hardware wallet required get hwi application installed working interface hardware wallet console pip3 install hwi ecdsa hidapi libusb1 mnemonic pbkdf2 pyaes typing extension compiling source compilation source requires rust language installed done described http rust lang org compile latest release command console cargo install mycitadel desktop locked finally run wallet typing console mycitadel license application free software distributed without warranty agpl 3 0 license c 2022 pandora prime sa neuchatel switzerland br right reserved detail please read license agreement business partnership enquiry please write enquiry mycitadel io
/bt3gl-labs/Blockchain-Hacking-Toolkit,JavaScript,blockchain development security br evm br evm opcodes http github com crytic evm opcodes ethereum book http github com ethereumbook ethereumbook ethereum ' whitepaper http ethereum org en whitepaper understanding rollups http barnabe substack com p understanding rollup economics r speeding evm flashbots http writing flashbots net research speeding evm part 1 br solidity br solidity doc http doc soliditylang org en v0 8 12 openzeppelin doc http doc openzeppelin com solidity example http solidity example org solidity style guide http doc soliditylang org en latest style guide html solidity 201 primitive http github com x676f64 secureum mind map blob master 3 20solidity 20201 md solidity python course http www youtube com watch v m576wgidbdq solidity securitum bookcamp http www youtube com watch v 5elqfac5tkg smart contract programmer video http www youtube com channel ucjwh7f3afyq x01vkzr9eya video ethereum smart contract best practice http consensys github io smart contract best practice solidity cheatsheet best practice http github com manojpramesh solidity cheatsheet br blockchain security br swc registry http swcregistry io blockchain security database http consensys github io blockchainsecuritydb intro security first dev http www youtube com watch v 72k57i9yvyi spoof token ethereum http medium com etherscan blog spoof token ethereum c2ad882d9cf6 solidity security mind map http github com x676f64 secureum mind map pitfall best practice http github com x676f64 secureum mind map blob master 4 20pitfalls 20and 20best 20practices 20101 md hacking blockchain immunefi http medium com immunefi hacking blockchain ultimate guide 4f34b33c6e8b uniswap oracle attack simulator euler http blog euler finance uniswap oracle attack simulator 42d18adf65af thinking smart contract security vitalik http blog ethereum org 2016 06 19 thinking smart contract securi ty advanced pitfall best practice http github com x676f64 secureum mind map blob master 5 20pitfalls 20and 20best 20practices 20201 md 246 finding smart contract audit executive summary http blog trailofbits com 2019 08 08 246 finding smart contract audit executive summary dan guido trail bit evolution smart contract security http www youtube com watch v fokqunzvn q audit finding http github com x676f64 secureum mind map blob master 7 20audit 20findings 20101 md advanced audit finding http github com x676f64 secureum mind map blob master 8 20audit 20findings 20201 md video audit finding http www youtube com watch v sromsimiphe sigp public audit http github com sigp public audit danger price oracle smart contract http www youtube com watch v ygo7nzpxcea list pldjrka9gckoonbslcifqlig ztyg ylqz index 5 strategy secure governance smart contract http www youtube com watch v gbdammdmh8q list pldjrka9gckoonbslcifqlig ztyg ylqz index 6 security upgrade smart contract http www youtube com watch v 5we6pec305w list pldjrka9gckoonbslcifqlig ztyg ylqz index 7 onward smart contract security http www youtube com watch v ripxdv7vygs list pldjrka9gckoonbslcifqlig ztyg ylqz index 8 publication trail bit http github com trailofbits publication blockchain smart contract security fundamental openzeppelin http www youtube com playlist list plby3qkuapv 7r1zi cs2nofn7ztanwy6g white hat panel defi exploit http www youtube com watch v df2zzfotfmc smart contract audit checklist http consensys net diligence blog 2019 09 prepare smart contract audit another audit checklist http github com nascentxyz simple security toolkit ethereum signature database http www 4byte directory opsec selfguard roadmap http github com offciercia crypto opsec selfguard roadmap solcurity standard http github com rari capital solcurity smart contract security verification standard http github com securing scsvs secureth guideline http guideline secureth org rekt leaderboard http rekt news leaderboard rug doc wiki http wiki rugdoc io smart contract attack vector http github com kadenzipfel smart contract attack vector list known attack vector http blog sigmaprime io solidity security html awesome ethereum security http github com crytic awesome ethereum security bug bounty 101 http www youtube com watch v z2iwbt1fg br contract interest br uniswap v3 http github com uniswap v3 core tree main contract chainlink http github com smartcontractkit chainlink tree develop contract src v0 4 fei protocol http github com fei protocol fei protocol core tree master contract openzeppelin ' erc 20 http github com openzeppelin openzeppelin contract blob master contract token erc20 erc20 sol openzeppelin ' erc 721 http github com openzeppelin openzeppelin contract blob master contract token erc721 erc721 sol immunefi note erc token standard http medium com immunefi erc standard work part 1 c9795803f459 security contract openzeppelin http github com openzeppelin openzeppelin contract tree master contract security br practice hacking skils br capture ether http capturetheether com paradigm ctf http github com paradigm operation paradigm ctf 2021 paradigm ctf solution http cmichel io paradigm ctf 2021 solution damn vulnerable defi http www damnvulnerabledefi xyz collection evm puzzle http github com fvictorio evm puzzle gamefication vault http hat finance gamification cipher shastra http ciphershastra com etherhack http etherhack positive com defihack xyz http www defihack xyz w3b s3c http www w3bs3c com tool list blockchain ctf competition http github com blockthreat blocksec ctfs crypto blacklist http www cryptoblacklist io en ethereum blacklist br white hat tool br ethereum general ethstats http ethstats net ethtx transaction decoder http ethtx info eth converter http eth converter com cryptocurrency historical data snapshot http coinmarketcap com historical contract diff checker http etherscan io contractdiffchecker mutation testing ethereum smart contract http github com joranhonig vertigo tenderly http dashboard tenderly co br foundry foundry repo http github com foundry r foundry ethernaut x foundry http github com ciaranmcveigh5 ethernaut x foundry br analysis tool symbolic execution tool http github com trailofbits manticore echidna smart contract fuzzer http github com crytic echidna security analysis tool evm bytecode http github com consensys mythril analysis tool smart contract http github com enzymefinance oyente ethereum security toolbox http github com trailofbits eth security toolbox evm binary static analysis http github com crytic rattle static analyzer solidity http github com crytic slither security scanner ethereum smart contract http github com eth sri securify2 ethereum security analysis testing http github com crytic etheno ethereum smart contract fuzzer http github com crytic echidna solidity inspector http github com consensys surya security analysis tool webassembly http github com pventuzelo octopus evm toolkit http github com quilt etk evm disassembler assembler http github com crytic pyevmasm smart contract code analyzer http github com crytic slither verx smart contract verifier http verx ch semgrep rule smart contract http github com raz0r semgrep smart contract eth detective http www ethtective com address tornado cash pool anonymity auditor http tutela xyz ethereum virtual machine transaction tracing tool http github com apeworx evm trace br vscode vscode plugin solidity visual http marketplace visualstudio com item itemname tintinweb solidity visual auditor vscode plugin solidity support http marketplace visualstudio com item itemname juanblanco solidity br useful dev tool solhint linter solidity http github com protofire solhint solidity coverage tool http github com sc fork solidity coverage json formatter http jsonformatter curiousconcept com craft request curl command http reqbin com tool notonly owner http www notonlyowner com learn intro security hacking smart contract ethereum ethereum developer tool list http github com consensys ethereum developer tool list immunefi scrapper http github com pratraut scrapyfi crystal blockchain http explorer crystalblockchain com 0xt http oxt impersonator http www impersonator xyz cia officer ' defi roadmap http github com offciercia defi developer road map transaction visualization scoring tracking
/ibnzUK/Token-Staking-dApp,JavaScript,token staking dapp h1 working demo http ibnz staking netlify app blockchain token staking dapp built react solidity ethereum ganache ropsten rinkeby testnet network h6 preview src asset screenshot png license legal agreement important application code free use modify resale using agree violate plagiarism copyright infringment order use application code modification project please contact info ibnz co uk obtain full licence change x added erc20 testtoken x added token staking basic contract x started testing x updated token staking contract x added ability stake unstake redistribute x implemented testing x added redistribution script x injected web3 metamask x ability detect metamask installed logged locked x added skeleton totalstaked mystake x added skeleton tester redistribute reward claim test token x added ability load contract x fetching data tokenstaking contract x fetching balance x stake unstake working x redistribute reward admin working x implemented totalstaked x implemented ability claim test token tst testing purpose x added amount type validity check x add ability user stake max x added ability listen trigger transactionhash x data automatically fetched confirmation received x added hdwallet provider infura setup x deployed ropsten rinkeby x different staking pool implemented customstake customunstake x implemented ability admin change custom pool apy value via script x implemented custom reward pool redistribution x contract source code verified exact match x component split smaller x added frontend logic custom pool x added ui element x loader fixed x added check restriction metamask connected x ui optimised mobile x production build uploaded http ibnz staking netlify app preview test run running instruction copy project directory git clone http github com ibnzuk token staking dapp install project package npm install start project npm run start testing run test navigate test tokenstaking run truffle test admin use prewritten script admin use either manually daily weekly basic ideally predefined cronjob server script located script folder change apy run truffle exec script changeapy j 0 137 script take 1 argument daily apy provided example admin set 0 137 daily apy preview src asset screenshot2 png redistribute reward console run truffle exec script redistribute j provide argument custom want redistribute custom reward preview src asset screenshot3 png mocha testing output contract tokenstaking testtoken deployment token deployed ha name 246ms tokenstaking deployment staking contract deployed ha name 160ms checking default apy value 179ms checking custom apy value 128ms staking contract ha 500k testtokens token inside 176ms tokenstaking staketokens function user balance correct staking 126ms checking total staked stake 126ms approving token staking token checking balance 1259ms checking contract balance staking 156ms checking user balance inside contract 131ms checking total staked 136ms testing user staking moment 148ms testing user ha staked 145ms tokenstaking redistributerewards function checking redistribution 1059ms checking tokenstaking balance 105ms checking user balance 130ms tokenstaking unstaketokens function unstaking checking user balance unstake 468ms checking total staked 132ms tokenstaking custom staking unstaking function checking total custom staked stake 132ms checking user balance staking 165ms approving token staking token checking balance 1131ms checking custom total staked 125ms testing user staking custom staking moment 147ms testing user ha staked custom staking 107ms unstaking custom staking checking user balance 535ms claim tst trying obtain 1000 test token 395ms change custom apy value checking change apy 1115ms checking new custom apy value 146ms testing custom apy reward redistribution staking customstaking 1299ms redistributing reward checking redistribute 733ms checking user balance custom apy reward 111ms deployoment ethereum network verification private ethereum test network make sure ganache running http 127 0 0 1 7545 first configure truffle config j infura key mnemonic key reate file top dirrectory name infurakey secret paste key planning publish project github make sure gitignore key compile smart contract truffle compile deploy local ganache network run truffle migrate reset ethereum test network rinkeby run truffle migrate network rinkeby reset change rinkeby ropsten verify contract code ethereum test network add etherscan api key ethkey rinkeby run truffle run verify testtoken network rinkeby change rinkeby ropsten tokenstaking smart contract address test net ropsten verified http ropsten etherscan io address 0x0fab2a018bb44dd2a6ef7c55f057dd9d9ec1b19f contract rinkeby verified http rinkeby etherscan io address 0xaf9352b33e9b08a86dd04fcd8533dbc75bd2c8d1 contract testtoken contract address test net ropsten verified http ropsten etherscan io address 0x0190f80487179053eb85451454541644abaf4048 contract rinkeby verified http rinkeby etherscan io address 0xb54039dac3c4addac082e86a6e9c290e80af9488 contract current admin test net ropsten rinkeby 0x3349ca399168df1c0df96a49410f5f9940241abc warning known security issue use risk h1 front end function claim 1000 tst token redistribute reward custom redistribution testing purpose showcase application include use final project preview src asset screenshot4 png
/akropolisio/akropolisOS,JavaScript,akropolisos akropolisos solidity framework building complex dapps protocol saving pension loan investment build akropolisos project description package sparta sparta undercollaterized credit pool based akropolisos member earn high interest rate providing undercollateralized loan member pooling investing capital various liquid defi instrument http github com akropolisio sparta delphi delphi allows executing automatic dollar cost averaging btc eth diversifying long term investment portfolio participating different yield harvesting liquidity mining possibility detail announced http github com akropolisio delphi
/GoodDollar/GoodDAPP,JavaScript,gooddollar dapp use img valign middle src bugsnag logo svg raw true sanitize 1 width 100px http bugsnag com img valign middle src http www datocms asset com 31049 1618983297 powered vercel svg raw true sanitize 1 width 100px http vercel com utm source gooddollar utm campaign os build status http travis ci com gooddollar gooddapp svg branch master http travis ci com gooddollar gooddapp coverage status http coverall io repos github gooddollar gooddapp badge svg branch master http coverall io github gooddollar gooddapp branch master use goodbootstrap http github com gooddollar goodbootstrap start dev env see doc http doc gooddollar org installation web important use node version 10 15 0 run web dev mode local ganache bash npm run web local installation native bash cd io pod install setup sentry bash npx sentry wizard reactnative p io android testing using snapshot testing http jestjs io doc en snapshot testing bash web npm run test web update snapshot npm run test web u web watch mode npm run test web watch coverage web npm run coverage
/dennohpeter/MultiDexArbBot,TypeScript,multidexarbbot arbitrage bot us existing price aggregator 1inch paraswap dex ag matcha get best exchange rate across different decentralized exchange different blockchains ecosystem install run clone repo git clone git github com dennohpeter multidexarbbot git cd multidexarbbot cd multidexarbbot install dependency yarn install rename example env env mv example env env update env contain trading preference wallet info private public key finally run app yarn start author enock kipkoech thenodeg dennoh peter rust edsoul contribution would like add feature suggestion please feel free fork open pull request issue wanna buy devs coffee eth thenodeg 0x88f852d7db6fd080c4fa257f755a517e9db0d124 rust edsoul 0xe5db9fcf40efb3975f9c695ff89fdb51fb4c553f bsc thenodeg 0x88f852d7db6fd080c4fa257f755a517e9db0d124 rust edsoul 0xe5db9fcf40efb3975f9c695ff89fdb51fb4c553f
/compound-finance/palisade,Elm,build push ipfs http github com compound finance palisade action workflow build workflow yml badge svg compound web3 front end palisade web3 front end experience interact compound ethereum protocol contributing welcome contribution community help keep compound web3 front end working great read contribute contributing md configuration web3 front end requires several item configured started properly required format form several json file specify config option local development development json version intended deployed production json local deployment script automatically look file exist path config env config env development json production json following example configuration file json api base url map goerli http api compound finance api kovan http api compound finance api rinkeby http api compound finance api ropsten http api compound finance api mainnet http api compound finance api data provider development http localhost 8545 goerli http goerli infura io v3 project id rinkeby http rinkeby infura io v3 project id kovan http kovan infura io v3 project id ropsten http ropsten infura io v3 project id mainnet http mainnet infura io v3 project id network map mainnet 1 ropsten 3 rinkeby 4 goerli 5 kovan 42 development 999 default network mainnet blocknative api key blocknative key top level key following function api base url map object mapping eth network name key value desired compound api host left data provider object mapping eth network name key value url corresponding json rpc host example show infura sample json rpc provider find information http infura io doc ethereum note specified setting env var data provider json e g export data provider ' rinkeby http infura io ' network map object mapping eth network name key value corresponding networkid value left blocknative api key blocknative api key required track transaction notification find information http doc blocknative com notify note specified setting env var blocknative api key key strictly required provides better user experience getting started compound web3 front end written elm http elm lang org wa bootstrapped create elm app http github com halfzebra create elm app strongly recommmend getting familiar elm framework jumping compound source code get started first clone repo bash git clone http github com compound finance palisade git cd palisade next install yarn dependency note use npm intsead yarn install npm doe respect yarn lock able use npm command bash yarn install lock file next build watch string translation change bash yarn watch i18n note information string translation see i18n md i18n md next build watch sas change bash yarn watch cs prefer build cs run yarn build cs separately start development server front end bash yarn start note elm may take pull dependency first run app point able navigate http localhost 3000 http localhost 3000 view application deployment application set easy deployment static web site generic deployment deploy application first build static asset bash yarn run build cs yarn run build build directly contain file necessary serve application whatever hosting provider choose repo includes support two option possible deployment target ipfs google cloud storage ipfs deploy web3 front end ipfs first familiar hosting single page website ipfs http doc ipfs io website ipfs single page website follow instruction able add file build directory obtain ipfs hash open gateway provider view hosted web3 front end alternatively may wish deploy ipfs hosting service like infura ipfs http infura io doc ipfs section getting started repo includes script deploy build directory ipfs host specified several environment variable deploy build infura ipfs bash ipfs auth project id project secret ipfs host ipfs infura io ipfs port 5001 yarn deploy ipfs environment variable following function ipfs auth basic authentication header using infura ipfs add endpoint find information http infura io doc ipfs section authentication ipfs host ipfs pinning service host ipfs port ipfs pinning service host port note deploy ipfs script ha tested used infura ipfs may need change support alternative pinning service google cloud storage deploy compound web3 front end google cloud storage familar hosting static site http cloud google com storage doc hosting static website google cloud follow instruction creating cname record dns provider creating fully public bucket also make sure cloud sdk http cloud google com sdk tool installed ' logged via gcloud auth correct project set http cloud google com sdk gcloud reference config set deploy gcloud bucket bash yarn deploy gcloud bucket name internationalization learn internationalization please view i18n md i18n md discussion concern web3 front end open issue visit u discord http discord com invite compound discus license copyright 2022 compound lab inc repository contributor repository licensed gplv3 please see license license full text license contributor repository must release contributed code gplv3 license free encumbrance contributor also agree contribution may licensed mit bsd 3 license future without notice instance copyright notice retained
/azizaiden/Compound-Watcher,Python,compound watcher python bot watch potential liquidation compound finance sends notification pushbullet image bot http imgur com mn6e8m4 png work compound watcher us compound ' official api http compound finance import list address risk liquidation bot show information every address health chain liquidity free http infura io api key required interact smart contract supplied asset borrowed asset estimated profit liquidated case address liquidited bot sends notification pushbullet pushbullet free api needed run bot install bot install bot need python 3 pip3 start installing required python module pip3 install web3 pip3 install termcolor pip3 install git http github com azelphur pypushbullet git fill pushbullet infura key ' ready start bot python3 app py make bot reboot automatically crash due api error use forever py script provided chmod x forever py forever py app py
/vegaprotocol/vegawallet,Go,vega wallet vegawallet command line interface running wallet service implemented go used sign transaction use vega vega vega wallet creates manages hd wallet ed25519 key pair documentation getting started cli app vega wallet vega documentation website create wallet learn install run stable version vega wallet cli app vega documentation vega documentation website learn vega work explore sample script api trading continuing familiar vega wallet want know vega wallet work use refer page using vega wallet vega wallet documentation website ' know set vega wallet want know create use vega wallet cli app refer page create vega wallet vega documentation website create wallet ' prefer use visual interface interact vega wallet use vega wallet desktop app refer desktop app documentation vega wallet desktop getting started want use latest stable version want use stable version refer create vega wallet vega documentation website create wallet use documentation repository looking documentation stable version vega wallet refer documentation website vega wallet documentation website refer documentation repository documentation living repository contains information unreleased unstable feature meant people running version vega wallet built source code word version release doe necessarily mean stable version suffixed pre ex v0 9 0 pre1 stable sure version currently running use following command find sh vegawallet version release seen release github release page installation install vega wallet download released binary install using golang toolchain download binary release github release page download zip file matching platform open platform associated zip file window vegawallet window amd64 zip window arm64 vegawallet window arm64 zip macos vegawallet darwin amd64 zip macos arm64 vegawallet darwin arm64 zip linux vegawallet linux amd64 zip linux arm64 vegawallet linux arm64 zip installing repository install released version using golang toolchain sh go install code vegaprotocol io vegawallet version replace version release version choice version v0 9 0 would sh go install code vegaprotocol io vegawallet v0 9 0 building source build vega wallet source code use following sh cd vegawallet go build using command line see list command available using sh vegawallet help using api using api documented service readme md support feedback feedback raise issue see others raised discord discord ask u help find scheduled open session keep vega generally vega vega vega website protocol creating trading derivative fully decentralised network network secured proof stake facilitate fully automated end end margin trading execution complex financial product anyone able build decentralised market using protocol read http vega xyz vega website vega website http vega xyz vega documentation website http doc vega xyz vega documentation website create wallet http doc vega xyz doc mainnet tool vega wallet desktop app latest getting started vega wallet documentation website http doc vega xyz doc mainnet tool vega wallet vega wallet desktop getting started http doc vega xyz doc mainnet tool vega wallet desktop app latest getting started feedback http github com vegaprotocol feedback discussion discord http vega xyz discord github release http github com vegaprotocol vegawallet release
/ConcealNetwork/conceal-desktop,C++,image http github com concealnetwork conceal imagery blob master logo splash png conceal desktop gui wallet latest release v6 6 5 maintained conceal devs information conceal network decentralized blockchain bank deposit investment paying interest rate without involvement financial institution powered 100 open source code conceal network enables untraceable anonymous messaging secure way transfer fund using distributed public ledger sender receiver kept anonymous key concern post snowden world hacker cannot trace money message message sent across public network conceal cryptocurrency ccx based cryptonote protocol run secure peer peer network technology operate central authority control private key fund conceal accessible anyone world regardless geographic location status blockchain resistant kind analysis ccx transaction message anonymous conceal avoids many concern e g technological environment impact reputational security bitcoin provides glimpse future conceal open source community driven truly decentralized one owns conceal everyone take part resource web http conceal network github http github com concealnetwork wiki http conceal network wiki explorer http explorer conceal network discord http discord gg ybphvsd twitter http twitter com concealnetwork telegram official news feed http concealnetwork telegram user group chat group http concealnetworkusers medium http medium com concealnetwork reddit http www reddit com r concealnetwork bitcoin talk http bitcointalk org index php topic 4515873 paperwallet http conceal network paperwallet compiling conceal source linux ubuntu debian prerequisite dependency gcc 4 7 3 later cmake 2 8 6 later boost 1 55 later qt 5 9 later may download http gcc gnu org http www cmake org http www boost org http www qt io ubuntu possible install using apt bash sudo apt install git gcc make cmake libboost dev qt5 default building acquire source via git build release version run following command bash git clone http github com concealnetwork conceal desktop cd conceal desktop rm rf cryptonote git clone http github com concealnetwork conceal core cryptonote make build release mkdir bin mv build release conceal desktop bin make clean build successful binary bin folder window 10 prerequisite install visual studio 2019 community edition http visualstudio microsoft com thank downloading visual studio sku community rel 16 installing visual studio need install desktop development c msvc v142 v 2019 c x64 x86 build tool component option install v142 build tool found expanding desktop development c node right need project build correctly install cmake http cmake org download install boost http sourceforge net project boost file boost binary 1 78 0 boost 1 78 0 msvc 14 2 64 exe download ensuring download installer msvc 14 2 instruction given boost 1 78 0 using different version supported change version required install qt 5 http www qt io download instruction given qt 5 15 2 using different version supported change version required building start menu open ' x64 native tool command prompt vs2019 ' run c program file x86 microsoft visual studio 2019 community common7 tool vsmsbuildcmd bat command prompt edit cmakelists txt file set path qt cmake folder change line set cmake prefix path c qt 5 11 0 msvc2017 64 lib cmake set cmake prefix path c qt 5 15 2 msvc2019 64 lib cmake p git clone http github com concealnetwork conceal desktop cd conceal desktop rmdir q cryptonote git clone http github com concealnetwork conceal core cryptonote mkdir build cd build cmake g visual studio 16 2019 x64 dboost root c local boost 1 78 0 msbuild conceal desktop sln p configuration release build successful binary release folder macos prerequisite first need install dependency conceal core http github com concealnetwork conceal core macos conceal core dependency installed need install qt5 open terminal run following command bash brew install qt5 export path usr local opt qt bin path building dependency installed build conceal desktop following command bash git clone http github com concealnetwork conceal desktop cd conceal desktop rm rf cryptonote git clone http github com concealnetwork conceal core cryptonote make build release build successful binary build release conceal desktop app also possible deploy application dmg using command build bash cd build release macdeployqt conceal desktop app cpack special thanks special thanks go developer cryptonote bytecoin monero forknote turtlecoin masari
/PeggyJV/sommelier,Go,sommelier sommelier coprocessor blockchain ethereum defi codecov http codecov io gh peggyjv sommelier branch main graph badge svg http codecov io gh peggyjv sommelier go report card http goreportcard com badge github com peggyjv sommelier http goreportcard com report github com peggyjv sommelier license http img shield io github license peggyjv sommelier svg http github com peggyjv sommelier blob main license loc http tokei r b1 github peggyjv sommelier http github com peggyjv sommelier golangci http golangci com badge github com peggyjv sommelier svg http golangci com r github com peggyjv sommelier talk u active helpful community twitter discord telegram twitter http twitter com sommfinance discord http discord gg gzzapmdzuq telegram http peggyvaults sommelier initial release sommelier blockchain consist standard cosmos sdk chain recently completed gravity bridge refactor http github com peggyjv gravity bridge gravity bridge gravity bridge requires additional piece deployed support ethereum contract http github com peggyjv gravity bridge tree main solidity associated tooling orchestrator relayer binary built go mod commit join mainnet installation bash create installation directory mkdir install cd install install orchestrator wget http github com peggyjv gravity bridge release download v0 3 9 gorc chmod x sudo mv usr bin install geth wget http gethstore blob core window net build geth linux amd64 1 10 4 aa637fd3 tar gz tar xvf geth linux amd64 1 10 4 aa637fd3 tar gz sudo mv geth linux amd64 1 10 4 aa637fd3 geth usr bin geth rm rf geth linux amd64 1 10 4 aa637fd3 install sommelier wget http github com peggyjv sommelier release download v3 1 1 sommelier 3 1 1 linux amd64 tar gz tar xf sommelier 3 1 1 linux amd64 tar gz sudo mv sommelier usr bin rm rf sommelier 3 1 1 linux amd64 license readme md fetch systemd unit file wget http raw githubusercontent com peggyjv sommelier main contrib systemd geth service http raw githubusercontent com peggyjv sommelier main contrib systemd gorc service http raw githubusercontent com peggyjv sommelier main contrib systemd sommelier service modify unit file fit environment nano geth service nano gorc service nano sommelier service install systemd sudo mv geth service etc systemd system geth service sudo mv gorc service etc systemd system sudo mv sommelier service etc systemd system sudo systemctl daemon reload start geth sudo systemctl start geth sudo journalctl u geth f init gorc configuration mkdir p home gorc cd home gorc wget http raw githubusercontent com peggyjv sommelier main contrib mainnet sommelier 3 config toml modify gorc config environment use alchemy infura endpoint rpc necessarily need sync blockchain eth geth nano config toml initialize validator file sommelier init myval chain id sommelier 3 create restore 2 cosmos key 1 ethereum key note sure save mnemonic eth private key restore orchestrator key gorc gorc config home gorc config toml key cosmos recover orchestrator menmonic create orchestrator key gorc gorc config home gorc config toml key cosmos add orchestrator restore eth key either restore eth priv key metamask gorc gorc config home gorc config toml key eth import signer 0x0000 restore eth mnemonic gorc gorc config home gorc config toml key eth recover signer menomonic create eth key gorc gorc config home gorc config toml key eth add signer restore validator mnemonic sommelier binary sommelier key add validator recover create validator mnemonic sommelier binary sommelier key add validator note end process need key named orchestrator fund cosmos chain gorc keystore key named signer fund connected eth chain gorc keystore key named validator fund cosmos chain sommelier keystore add peer contrib mainnet sommelier 3 peer txt sommelier config config toml file nano sommelier config config toml pull genesis file wget http raw githubusercontent com peggyjv sommelier main contrib mainnet sommelier 3 genesis json home sommelier config genesis json start sommelier node note may take minute two sync block sudo systemctl start sommelier sudo journalctl u sommelier f node synced create validator sommelier tx staking create validator amount 1000000usomm pubkey sommelier tendermint show validator moniker mymoniker chain id sommelier 3 commission rate 0 10 commission max rate 0 20 commission max change rate 0 01 min self delegation 1 gas 300000 fee 0usomm validator register delegate key eth orchestrator key sommelier tx gravity set delegate key sommelier key show validator bech val validator address gorc config home gorc config toml key cosmos show orchestrator orchestrator address must run manually address extracted gorc config home gorc config toml key eth show signer eth signer address gorc config home gorc config toml sign delegate key signer sommelier key show validator bech val chain id sommelier 3 validator start orchestrator sudo systemctl start gorc sudo journalctl u gorc f action try bridge bash send somm ethereum gorc cosmos eth cosmos phrase jq r ' orchestrator ' key json cosmos grpc http localhost 9090 cosmos denom somm amount 100000000 eth destination gorc config home gorc config toml key eth show signer cosmos prefix cosmos send goreli uniswap token cosmos gorc eth cosmos ethereum key jq r ' eth ' key json ethereum rpc http localhost 8545 cosmos prefix cosmos contract address jq r ' gravity ' key json erc20 address 0x0000000000000000000000000000000000000000 amount 1 3530000 cosmos destination sommelier key show orchestrator note genesis file change necessary bash change stake usomm sed ' stake usomm g ' sommelier config genesis json denom metadata todo add name symbol jq rmc ' app state bank denom metadata base usomm display somm description staking test token denom unit denom usomm exponent 0 denom somm exponent 6 ' sommelier config genesis json sommelier config genesis json gravity params jq rmc ' app state gravity params bridge chain id 5 ' sommelier config genesis json sommelier config genesis json deploy peggy contract bash wget http github com peggyjv gravity bridge release download v0 1 21 gravity json contract deployer cosmos node http localhost 26657 eth node http localhost 8545 eth privkey 0x0000000000000000000000000000000000000000000000000000000000000000 contract gravity json test mode false deploy somm erc20 representation bash gorc deploy erc20 ethereum key 0x0000000000000000000000000000000000000000000000000000000000000000 cosmos grpc http localhost 9090 cosmos prefix cosmos cosmos denom usomm ethereum rpc http localhost 8545 contract address 0x8887f26882a3f920e40a91969d1a40d1ef7efe10 erc20 name usomm erc20 symbol usomm erc20 decimal 6
/Gearbox-protocol/gearbox-protocol-description,Solidity,gearbox header jpeg gearbox protocol gearbox generalized leverage protocol allows take leverage one place use across various defi protocol platform composable way protocol ha two side passive liquidity provider earn higher apy providing liquidity protocol active trader farmer borrow asset trade farm x4 leverage feature doc feature jpeg gearbox aim enhance capital efficiency defi introduction credit account new primitive leveraged interaction defi protocol credit account isolated smart contract specific whitelisted action asset architecture ensures higher degree safety user fund borrowed fund per account liquidation user ' credit account portfolio certain health factor threshold feature doc architecture jpeg gearbox doe silo asset within platform needle say asset never end custody anyones control trade operation happen third party protocol could apply margin trading uniswap leverage farming yearn arbitraging pegged asset curve using dao treasury optimize holding core vision become backend leverage provider kind user dont even need interact directly envision building defi protocol making take leverage gearbox button gearbox protocol marketmake ethglobal hackathon finalist twitter http twitter com gearboxprotocol github http github com gearbox protocol discord http discord gg jjuabvh9pg blog http medium com gearbox protocol website http gearbox fi disclaimer application provided fault developer make representation warranty kind concerning safety suitability lack virus inaccuracy typographical error harmful component software inherent danger use software solely responsible determining whether software product compatible equipment software installed equipment also solely responsible protection equipment backup data provider liable damage may suffer connection using modifying distributing software product
/Synthetixio/synthetix-js,JavaScript,library deprecated please use http github com synthetixio j monorepo tree master package contract interface new monorepo synthetixjs library circleci http circleci com gh synthetixio synthetix j svg style svg http circleci com gh synthetixio synthetix j npm version http badge fury io j synthetix j svg http badge fury io j synthetix j discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io synthetix j library provides simple pre packaged api communicate synthetix http synthetix io ethereum use contribute defi ' growing synthetic asset ecosystem particularly useful hackathon team quickly npm install synthetix j start building minute hood synthetixjs us ether j http github com ether io ether j library concept provider http doc ether io ether j html api provider html transaction signer http doc ether io ether j html api contract html custom signer install via npm npm install synthetix j developer doc developer synthetix io http developer synthetix io example getting total susd stablecoin circulation javascript const synthetixjs require ' synthetix j ' const snxjs new synthetixjs us default contractsettings ether j default provider mainnet async function const totalsusd await snxjs susd totalsupply const totalsusdsupply snxjs utils formatether totalsusd console log ' susdtotalsupply ' totalsusdsupply default setting ' use signer mean constant viewed contract executing transaction fail execute transaction set signer 4 signer included library metamask compatible dapp browser trezor ledger privatekey custom ether j compatible signer used example using metamask signer javascript const synthetixjs require ' synthetix j ' const metamasksigner new synthetixjs signer metamask const snxjs new synthetixjs signer metamasksigner us metamask signer default infura io provider mainnet example minting stablecoin susd private key signer javascript const synthetixjs require ' synthetix j ' parameter default provider default networkid private key string const signer new synthetixjs signer privatekey null 0 ' 0x0123456789012345678901234567890123456789012345678901234567890123 ' const snxjs new synthetixjs signer async function run const totalsupply await snxjs synthetix totalsupply const snxtotalsupply snxjs utils formatether totalsupply console log ' snxtotalsupply ' snxtotalsupply issue 100 synths throw insufficient fund gas try const txobj await snxjs synthetix issuesynths snxjs util parseether ' 100 ' execute transaction requires gas console log ' transaction hash ' txobj hash catch e console log e run live example get total synth supply get total supply http user image githubusercontent com 799038 57645476 572dc780 758c 11e9 98e3 33846fb8c176 png http codepen io justinjmoses pen vmkywz left editor 0010 get collateralized state image http user image githubusercontent com 799038 57646044 ad4f3a80 758d 11e9 879e 4a507c2cf894 png http codepen io justinjmoses pen qwqobr left editor 0010 got question join dev community discord discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394
/PavanAnanthSharma/Aave-FlashLoan-using-solidity,Solidity,flashloan using aave lendng pool dev author pavan ananth sharma flashloan flash loan attack refer smart contract exploit attacker take flash loan defi protocol us capital ' borrowed pay back transaction flashloans trader successfully employed flash loan speculate new coin without risk fund flash loan bundle several smart contract transaction one reduce transaction fee add quite bit flashloan start contains code execute successful flashloan kovan test net ethereum flashloan taken aave lending pool take 1 dai flashloan please note name file changed make sure got kovan test ethere worry providing link showing perform flashloan step step please follow along step1 remix setup sake simplicity using remix ide remix ethereum org browser based ide also known integrated development environment remix come ability write debug deploy otherwise manipulate ethereum smart contract wont deep dive ide focus tutorial flash loan however want become familiar four section highlighted main panel side panel icon panel terminal start writing smart contract want download browser extension allows u interface ethereum blockchain several tool unlock functionality popular one metamask step2 metamask setup step step breakdown install metamask 1 start downloading extension chrome extension store 2 click newly installed extension agree term condition 3 create secure password 4 write mnemonic seed phrase physical world shouldnt kept anywhere computer four step outlined completed ready start writing first smart contract note stuff get really crazy tough step3 important note smart contract allow u read write data blockchain executing deterministic program coding smart contract use ethereum use programming language called solidity solidity file end sol extension please create multiple sol file make sure name provided 1 flashloan sol 2 flashloanreceiverbase sol 3 ilendingpooladdressesprovider sol 4 iflashloanreceiver sol 5 ilendingpool sol 6 withdrawable sol code given contract file summarize start importing dependency required execute flash loan dependency called abstract contract abstract contract ha least one function isnt implemented think blueprint house builder us blueprint make house however analogy blueprint abstract contract builder house derived contract case flash loan contract using abstract contract called flashloanreceiverbasev1 provides necessary implementation detail repayment flash loan break code line line 1 first define solidity compiler version case ' 0 6 0 2 4 importing dependency smart contract 6 flashloanv1 contract inheriting flashloanreceiverbasev1 contract 8 passed address one lending pool provider aave case providing address dai lending pool 13 defined function called flashloan take address asset want flash loan case asset dai 14 ' need data flash loan passing empty string 15 defining number dai term wei 10 18 want loan 16 initialize lendingpool interface ilendingpoolv1 provided aave call flashloan function 17 finally call flashloan function function take 4 main parameter first pas address receive loan case ' contract second pas address asset case ' address dai kovan network third pas amount asset case ' 1 ether amount unit 10 18 wei unit last least pas data value case empty string 24 31 next define second function executeoperation utilize flash loan called internally flashloan function successfully executed take 4 main parameter 1 address reserve pay back loan 2 amount asset 3 fee charged protocol 4 additional parameter used internally function 33 check received appropriate amount loan else throw error message 34 point would implement logic arbitrary use case 40 add fee along loan amount using add function provided safemaths library 41 last pay back total debt loan amount back lending pool step4 deploying contract first open metamask set network kovan test network make sure kovan test ether run following transcation please note kovan test ether pay gas fee flashloan get kovan test test ether note overload wallet test ether please kovan test ether link http faucet chain link kovan 1 enter account addrss 2 select 0 1 test eth check confirmation 3 wait second test eth sent address put use gist defining dependency flashloan smart contract contract provided contract folder step5 switch solidity compiler tab set compiler 0 6 6 click compile flashloan sol followed step see warning error message set deploy contract kovan network switch deploy run transaction tab environment field change javascript vm injected web3 open metamask asking permission make sure contract field set flashloan sol provide address lendingpool text field next deploy button case 0x506b0b2cf20faa8f38a4e2b524ee43e1f4458cc5 click deploy open metamask address lending pool 0x506b0b2cf20faa8f38a4e2b524ee43e1f4458cc5 want lending pool feel free check http www quicknode com guide defi make flash loan using aave click confirm upon see success notification metamask deployed contract side panel step6 funding flash loan new deployed contract tab able copy deployed contract ' address come back step later meantime need add dai flash loan contract flash loan need fund contract successfully execute jump link get dai token http testnet aave com faucet dai sure connect aave v2 market little k top right corner click faucet paste metamask wallet address wait confirmation obtaining confirmation going add dai token metamask open metamask click add token bottom token contract address field enter 0xff795577d9ac8bd7d90ee22b6c1703490b6512fd contract address dai kovan clicking next display dai got faucet earlier dai token contract address 0xff795577d9ac8bd7d90ee22b6c1703490b6512fd next click dai token click send open window enter flash loan contract address found obtain earlier enter amount want send case send 10 dai click next click confirm successfully given flash loan contract 10 dai dont know find contract address go http kovan etherscan io search txn hash find contract address step7 executing flash loan head back remix deployed flash loan contract another flashloan text field field take contract address asset want use case kovan testnets dai contract 0xff795577d9ac8bd7d90ee22b6c1703490b6512fd field correctly filled hit transact button upon clicking button metamask pop asking approval transaction confirm transaction greeted success message remixs terminal see transcation detail able find transcation txn hash copy go http kovan etherscan io paste txn hash search bar token transferred see three different transaction 1 first transaction highlight transfer 1 dai lendingpool contract 2 second transaction indicates payback 1 dai along fee back lending pool 3 third transaction show interest generated dai ha separate utility conclusion successfully able write smart contract flash loan able borrow dai pool pay flash loan fee repay borrowed amount single transaction borrowed money collateral enjoyed full tutorial consider following github well instagram 0x592ef244f8924be9f3f8803f8d639392f465ac51
/leofisG/go-defi,Go,go defi framework framework combine multiple interaction ethereum defi framework one atomic transaction library support flash loan use library thing like arbitrage thing includes arbitrage ycrv http furucombo app explore combo curve 00015 leverage short dai http furucombo app explore combo maker 00009 supported protocol compound supply token client compound supplyactions redeem token client compound redeemactions aave flash loan client aave flashloanactions uniswap swap client uniswap swapactions kyberswap swap client kyberswap swapactions yearn &#9; supply vault client yearn addliquidityactions &#9; withdraw vault client yearn removeliquidityactions curve &#9; exchange token client curve exchangeactions &#9; exchange underlying token client curve exchangeunderlyingactions &#9; add liquidity client curve addliquidityactions &#9; remove liquidity client curve removeliquidityactions sushiswap swap client sushiswap swapactions makerdao &#9; create new vault client maker generatedaiaction &#9; burn dai reduce debt client maker wipeaction &#9; add collateral vault client maker depositcollateralactions apis main api tool executeactions api tool sends transaction proxy contract let proxy contract actually interact underlying protocol graph illustration idea following proxy contract interaction image illustration compound png client e tool interact proxy contract proxy contract doe following 1 check handler valid isvalid function registry contract 2 step 1 successful delegate call compound handler contract interact underlyng compound code client create empty action go action new client action add action calling add function action struct go action add &#9; deficlient compound supplyactions big newint 1e18 client dai &#9; deficlient uniswap swapactions big newint 1e18 client dai client eth send action calling executeactions function go err deficlient executeactions action done executed transaction complete working example flash loan initialize flash loan go package main import &#9; log &#9; math big &#9; github com 524119574 go defi client &#9; github com ethereum go ethereum account abi bind &#9; github com ethereum go ethereum common &#9; github com ethereum go ethereum crypto &#9; github com ethereum go ethereum ethclient func main &#9; key err crypto hextoecdsa private key &#9; err nil &#9; &#9; log fatalf failed create private key v err &#9; &#9; ethclient err ethclient dial eth gateway could infura &#9; err nil &#9; &#9; log fatalf failed connect eth v err &#9; &#9; create new defi client &#9; deficlient client newclient bind newkeyedtransactor key ethclient &#9; err nil &#9; &#9; log fatalf error creating client v err &#9; &#9; approve transaction &#9; client approve deficlient client dai common hextoaddress client furucomboaddr big newint 2e18 &#9; err nil &#9; &#9; log fatal error getting dai balance &#9; &#9; action new client action &#9; action want take returning loaned fund &#9; flashloanactions new client action &#9; supply 1 dai compound &#9; flashloanactions add &#9; &#9; deficlient compound supplyactions big newint 1e18 client dai &#9; &#9; transfer fund enough pay back principal interest &#9; flashloanactions add &#9; &#9; deficlient supplyfundactions big newint 2e18 client dai &#9; &#9; redeem cdai &#9; flashloanactions add &#9; &#9; deficlient compound redeemactions big newint 1 client dai &#9; &#9; add flash loan action &#9; action add &#9; &#9; deficlient aave flashloanactions &#9; &#9; &#9; big newint 1e18 &#9; &#9; &#9; client dai &#9; &#9; &#9; flashloanactions &#9; &#9; &#9; &#9; err deficlient executeactions action &#9; err nil &#9; &#9; log fatalf failed interact furucombo v err &#9; go version 1 13 documentation thorough documentation found http godoc org github com 524119574 go defi client contact leonard ge twitter http twitter com ge leonard kaihua qin liyi zhou arthur gervais acknowledgement project inspired furucombo http furucombo app
/beefyfinance/beefy-protocol,Solidity,beefy finance bifi yield farming optimizer binance smart chain address token creator 0x565eb5e5b21f97ae9200d121e77d2760fff106cb http bscscan com address 0x565eb5e5b21f97ae9200d121e77d2760fff106cb bifi governance token 0xca3f508b8e4dd382ee878a314789373d80a5190a http bscscan com address 0xca3f508b8e4dd382ee878a314789373d80a5190a governance pool governance pool using contract first yearnrewards governance pool strong believer using battle tested code whenever possible community need innovate building new yield maximizing strategy dont need innovate thing already work also wanted make easy possible check source code correct pool 1 wbnb 14 000 bifi 0x55bb4ff561ce7d328ed10af322a14dc9c972f653 http bscscan com address 0x55bb4ff561ce7d328ed10af322a14dc9c972f653 pool 2 eth 14 000 bifi 0x50013da75ac4224b5c49fe197bfaf68c16e19d6e http bscscan com address 0x50013da75ac4224b5c49fe197bfaf68c16e19d6e pool 3 link 14 000 bifi 0x44bbca30aea5f2d226668c197053db3fa9ec9771 http bscscan com address 0x44bbca30aea5f2d226668c197053db3fa9ec9771 pool 4 cream 14 000 bifi 0x38191ea2a077d86b3df410379f8c0bb130683116 http bscscan com address 0x38191ea2a077d86b3df410379f8c0bb130683116 pool 5 lp bscswap bnb busd 8 000 bifi 0x1263f0bffe2d740ea3279416d0e84943b66958eb http bscscan com address 0x1263f0bffe2d740ea3279416d0e84943b66958eb pool 6 lp bscswap bnb sparta 8 000 bifi 0x2b8c4ad8053b7933cfde936f16abc55bb5f694c6 http bscscan com address 0x2b8c4ad8053b7933cfde936f16abc55bb5f694c6 team timelock contract handle team time lock using audited battle tested openzeppelin tokentimelock contract contract source code verified timelock 1 unlocks 2020 10 06 16 00 00 1602000000 0xedbf7a30453cf9a63cca4353b38ae60ad4e27bac http bscscan com address 0xedbf7a30453cf9a63cca4353b38ae60ad4e27bac timelock 2 unlocks 2021 01 06 16 00 00 1609948800 0x0dc06716bc1efdb5affd1308302fd45dbc31d09a http bscscan com address 0x0dc06716bc1efdb5affd1308302fd45dbc31d09a timelock 3 unlocks 2021 07 06 16 00 00 1625587200 0x4dece2b4c14083250f5a68faa18372563d174fea http bscscan com address 0x4dece2b4c14083250f5a68faa18372563d174fea timelock 4 unlocks 2022 07 06 16 00 00 1657123200 0x48091c485eb842c86805251a5d68993bf49c90a1 http bscscan com address 0x48091c485eb842c86805251a5d68993bf49c90a1 proof burn transaction revoke minter account used distribute pool burn governance address could create minter revoke minter 0x672a2c33769750ab69cafc47d9d5e1f8d0decd6da2f32fc6f412fa39aa0c195b http bscscan com tx 0x672a2c33769750ab69cafc47d9d5e1f8d0decd6da2f32fc6f412fa39aa0c195b burn governance 0x5e883d6da804fc8fe29bd74406774f3f1bc7e86d8750d140c52da3fa3f83f3f0 http bscscan com tx 0x5e883d6da804fc8fe29bd74406774f3f1bc7e86d8750d140c52da3fa3f83f3f0 community question reach u channel community awesome always someone help even dont doubt come say hi twitter http twitter com beefyfinance discord http discord gg ugyeps9 website http beefy finance medium http medium com beefyfinance telegram http beefyfinance
/OpenLeverageDev/openleverage-contracts,JavaScript,node j ci http github com openleveragedev openleverage contract action workflow node j yml badge svg branch main http github com openleveragedev openleverage contract action workflow node j yml openleverage protocol openleverage protocol comprises smart contract solidity permissionless lending borrowing asset leverage trading dex integration provided api anyone create pair lending pool specific token pair ltoken similar ctoken compound interest bearing erc 20 token received fund supplier supply erc 20 token lending pool ltoken contract track balance algorithmically set interest rate kinked model borrower margin trade executed liquidity pool dex like uniswap risk calculated real time price amm position protected ondemand oracle utilizing twap amm starting repo please read openleverage documentation http doc openleverage finance describing openleverage work installation compile openleverage smart contract pull repository github install dependency need npm http doc npmjs com cli install installed git clone http github com openleveragedev openleverage contract git cd openleverage contract npm install truffle compile testing run test need ganache cli http github com trufflesuite ganache cli npm install g ganache cli truffle contract test provided test directory http github com openleveragedev openleverage contract tree main test run truffle test audit certik jun 2021 audit rep openleverage protocol 2021 06 24 pdf peckshield sep 2021 http github com peckshield publication blob master audit report peckshield audit report openleverage v1 0 pdf peckshield dec 2021 http github com peckshield publication blob master audit report peckshield audit report openleverage 1 0 1 pdf code4rena mar 2022 http code4rena com report 2022 01 openleverage licensing primary license openleverage business source license 1 1 busl 1 1 see license license effectively time delayed gpl 2 0 later license license limit use openleverage source code commercial production setting two year point convert gpl license perpetuity discussion question protocol visit u discord http discord gg openleverage discus security concern please visit openleverage security http doc openleverage finance main dev security email security openleverage finance mailto security openleverage finance copyright 2021 openleverage team
/BendDAO/bend-lending-protocol,TypeScript,build pas http github com benddao bend lending protocol action workflow node j yml badge svg http github com benddao bend lending protocol action workflow node j yml codecov http codecov io gh benddao bend lending protocol branch main graph badge svg token z4y9s158js http codecov io gh benddao bend lending protocol benddao lending protocol repository contains smart contract source code market configuration benddao lending protocol repository us hardhat development enviroment compilation testing deployment task benddao lending protocol benddao lending protocol decentralized non custodial nft lending protocol user participate depositor borrower depositor provide liquidity market earn passive income borrower able borrow overcollateralized fashion using nfts collateral documentation documentation benddao lending protocol following benddao documentation http doc benddao xyz link documentation learn protocol see contract interface integration guide audit getting latest contract address please check deployed contract http doc benddao xyz developer deployed contract page documentation stay date audit 1 verilog solution online report http hackmd io verilog benddao audit 2 certik online report http www certik com project bend dao thanks benddao lending protocol refers architecture design adopts code aave http github com aave grateful aave providing u excellent defi platform connect community join discord http discord gg benddao channel governance http snapshot org benddao eth asking question protocol talk benddao peer getting started install benddao bend protocol npm package hardhat buidler truffle project import contract interface npm install benddao bend protocol import solidity file import ilendpool benddao bend protocol contract interface ilendpool sol contract misc function deposit address pool address token address user uint256 amount public ilendpool pool deposit token amount user 0 json artifact abi bytecode also included bundled npm package artifact directory import json file via node j require const lendpoolartifact require ' benddao bend protocol artifact contract protocol lendpool sol lendpool json ' log abi console console log lendpoolartifact abi setup repository us docker compose manage sensitive key load configuration prior action like test deploy must run docker compose start contract env container connect container console via docker compose exec contract env bash follow next step setup repository install docker docker compose create enviroment file named env fill next enviroment variable mnemonic first address used mnemonic add alchemy infura provider key alchemy take preference config level alchemy key infura key optional etherscan key automatize verification contract etherscan etherscan key market configuration configuration related benddao market located market directory follow ibendconfiguration interface create new market configuration extend current benddao configuration market market configuration file set deployment task using benddao market config task reference test run full test suite following command one terminal docker compose open another tab terminal docker compose exec contract env bash install dependency yarn install new bash terminal prompted connected container npm run test deployment deploying benddao lending protocol use available script located package json complete list run npm run see task prepare one terminal docker compose open another tab terminal docker compose exec contract env bash install dependency yarn install runing npm task npm run xxx localhost dev deployment first terminal npm run hardhat node second terminal npm run bend localhost dev migration localhost full deployment first terminal npm run hardhat node second terminal npx hardhat network localhost dev deploy mock reserve update pool config reserve address npx hardhat network localhost dev deploy mock nfts update pool config nft address npx hardhat network localhost dev deploy mock aggregator pool bend update pool config reserve aggregator address npx hardhat network localhost dev deploy mock bnft registry pool bend update pool config bnft registry address npx hardhat network localhost dev deploy mock bnft token pool bend rinkeby full deployment one terminal npm run bend rinkeby full migration interact benddao lending protocol mainnet via console interact benddao lending protocol mainnet network using hardhat console scenario frontend want interact directly check deployed address deployed contract http doc benddao xyz developer deployed contract run hardhat console pointing mainnet network npx hardhat network main console hardhat console interact protocol load hre helper access signer run set dre import getters instance bend contract const contractgetters require ' helper contract getters ' load first signer const signer await contractgetters getfirstsigner lend pool instance const lendpool await contractgetters getlendpool 0x3af6fc17ebd751e4d11f5a1d6823b2ae64723b87 erc20 token weth mainnet instance const weth await contractgetters getierc20detailed 0xbe4d36e2c69aa9658e937f6cc584e60167484381 approve 10 weth lendpool address await weth connect signer approve lendpool address ether utils parseunits ' 10 ' deposit 10 weth await lendpool connect signer deposit dai address ether utils parseunits ' 10 ' await signer getaddress ' 0 ' tool project integrates tool commonly used alongside hardhat ecosystem also come variety tool preconfigured work project code try running following task shell npx hardhat account npx hardhat compile npx hardhat clean npx hardhat test npx hardhat node npx hardhat help report gas true npx hardhat test npx hardhat coverage npx hardhat run script deploy j node script deploy j npx eslint ' j ' npx eslint ' j ' fix npx prettier ' json sol md ' check npx prettier ' json sol md ' write npx solhint ' contract sol ' npx solhint ' contract sol ' fix etherscan verification try etherscan verification first need deploy contract ethereum network ' supported etherscan ropsten project copy env template file file named env edit fill detail enter etherscan api key ropsten node url eg alchemy private key account send deployment transaction valid env file place first deploy contract shell hardhat run network ropsten script deploy j copy deployment address paste replace deployed contract address command shell npx hardhat verify network ropsten deployed contract address hello hardhat
/oceanprotocol/contracts,JavaScript,banner http raw githubusercontent com oceanprotocol art master github repo banner 402x png http oceanprotocol com h1 align center contract v4 h1 smart contract ocean protocol v4 http oceanprotocol com ocean v4 part ocean protocol http oceanprotocol com toolset beta state expect running problem run please open new issue http github com oceanprotocol contract issue new assignee label bug template bug report md title installation installation quickstart quickstart feature feature publisher flow publisher flow role diagram role diagram function need function need bundle function bundle function development testing development testing license license installation quick installation contract abis javascript typescript bash npm install oceanprotocol contract python bash pip3 install ocean contract usage default python doe support importing json file directly recommended use json sempai package order automatically importing abis json artifact pip3 install json sempai install ocean contract package python jsonsempai import magic artifact import address overview image doc image smart contract png quickstart feature base ip represented nft http blog oceanprotocol com data nft 5804a2d88671 datapublisher create multiple erc20s representing different type access dataset automated datatoken staking http blog oceanprotocol com ocean v4 one sided staking 93988f65e378 help initial dts distribution price stability goodbye rug pull help ocean community monetize http blog oceanprotocol com make money ocean v4 477b3decad51 ' swap fee ocean community ocean allied token basetoken pool ocean community receive 0 1 swap fee otherwhise 0 2 flexibility introduce advanced fee structure http doc oceanprotocol com concept fee market provider runner role administration multiple role flexible administation nft erc20 level key value store nft contract nft contract used store custom key value pair erc725y standard multiple nft template support factory deploy different type nft template multiple datatoken template support factory deploy different type datatoken template publisher flow interaction flow datapublisher point view go publisher flow doc quickstart pubflow md role diagram role handled v4 go role diagram doc quickstart role md function need selection common function go function doc quickstart function md bundle function helper function perform multiple step 1 call go helper doc quickstart bundle md difficulty quickstarts question use contract please reach u discord http discord gg tnxjkr5 notice bug issue repo please open issue github http github com oceanprotocol contract issue new assignee label bug template bug report md title ocean j http github com oceanprotocol ocean j ocean py http github com oceanprotocol ocean py library wrap contract javascript python respectively quickstart guide development testing run hardhat new terminal bash export alchemy url http eth mainnet alchemyapi io v2 xxxxxxxx npm install npx hardhat node open new terminal run test bash export alchemy url http eth mainnet alchemyapi io v2 xxxxxxxx npm run test full thing coverage reporting npm run test full cover unit test execute unit test bash npm run test unit flow test execute flow test bash npm run test flow license copyright c 2022 ocean protocol foundation licensed apache license version 2 0 license may use file except compliance license may obtain copy license http www apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
/irnb/DeFiPapers,Python,arxiv table updated 6 aug 2021 number title first sentence summary pdf url published 1 financial intermediation risk decentralized lending protocol provide overview decentralized protocol like compound aave offer collateralized loan cryptoasset investor http arxiv org pdf 2107 14678v1 2021 07 30 2 zero knowledge based proof chain methodology blockchain partial system intuitively drastic distinction pure decentralized block chain system like defis utilize block chain enhancing technology remain centralized real world business model conventional technology like database application server etc http arxiv org pdf 2107 14142v1 2021 06 29 3 training massive deep neural network smart contract new hope deep neural network dnns could useful blockchain application defi nft trading http arxiv org pdf 2106 14763v1 2021 06 28 4 uniswap impermanent loss risk profile liquidity provider uniswap decentralized exchange dex wa first launched november 2 2018 ethereum mainnet 1 part ecosystem product decentralized finance defi http arxiv org pdf 2106 14404v1 2021 06 28 5 flash crash cash cyber threat decentralized finance decentralized finance defi took shape 2020 http arxiv org pdf 2106 10740v1 2021 06 20 6 cefi v defi comparing centralized decentralized finance non expert traditional centralized finance cefi ecosystem may seem obscure user typically aware underlying rule agreement financial asset product http arxiv org pdf 2106 08157v2 2021 06 15 7 empirical study defi liquidation incentive risk instability financial speculator often seek increase potential gain leverage http arxiv org pdf 2106 06389v1 2021 06 11 8 maximizing extractable value automated market maker automated market maker amms decentralized application allow user exchange crypto token without need find matching exchange order http arxiv org pdf 2106 01870v1 2021 06 02 9 sok yield aggregator defi yield farming ha immensely popular activity cryptocurrency holder since explosion decentralized finance defi summer 2020 http arxiv org pdf 2105 13891v2 2021 05 28 10 defiranger detecting price manipulation attack defi application rapid growth decentralized finance defi boost ethereum ecosystem http arxiv org pdf 2104 15068v1 2021 04 30 11 bank defi evolution lending market internet value iov distributed ledger technology dlt underpinning ha created new form lending market http arxiv org pdf 2104 00970v2 2021 04 02 12 homogenous property automated market maker automated market maker amm grown obtain significant market share within cryptocurrency ecosystem resulting proliferation new product pursuing exotic strategy horizontal differentiation http arxiv org pdf 2105 02782v1 2021 03 31 13 sok decentralized exchange dex automated market maker amm protocol integral part decentralized finance defi ecosystem automated market maker amm based decentralized exchange dexs gained massive traction revived interest blockchain distributed ledger technology general http arxiv org pdf 2103 12732v3 2021 03 23 14 blockeye hunting defi attack blockchain decentralized finance http arxiv org pdf 2103 02873v1 2021 03 04 15 time discovery profit generating transaction defi protocol paper investigate two method allow u automatically create profitable defi trade one well suited arbitrage applicable complicated setting http arxiv org pdf 2103 02228v1 2021 03 03 16 scivik versatile framework specifying verifying smart contract growing adoption smart contract blockchains pose new security risk lead significant monetary loss existing approach either provide partial security guarantee smart contract require huge proof effort http arxiv org pdf 2103 02209v1 2021 03 03 17 formal analysis composable defi protocol decentralized finance defi ha become one successful application blockchain smart contract http arxiv org pdf 2103 00540v2 2021 02 28 18 leveraged trading blockchain technology document ongoing research process towards implementation integration digital artefact executing lifecycle leveraged trade permissionless blockchain technology http arxiv org pdf 2102 13488v1 2021 02 25 19 theory automated market maker defi automated market maker amms one prominent decentralized finance defi application http arxiv org pdf 2102 11350v2 2021 02 22 20 measuring asset composability proxy defi integration decentralized financial defi application ethereum blockchain highly interoperable share single state deterministic computational environment http arxiv org pdf 2102 04227v2 2021 02 02 21 decentralized governance blockchain based finance empirical evidence four governance token distribution novel blockchain technology provides infrastructure layer creation decentralized appli cation http arxiv org pdf 2102 10096v2 2021 02 02 22 flashot snapshot flash loan attack defi ecosystem flash loan attack grab million dollar decentralized vault one single transaction drawing increasing attention decentralized finance defi player http arxiv org pdf 2102 00626v1 2021 02 01 23 sok decentralized finance defi decentralized finance defi blockchain powered peer peer financial system mushrooming http arxiv org pdf 2101 08778v3 2021 01 21 24 defi ning defi challenge pathway decentralized trustless nature cryptocurrencies blockchain technology lead shift digital world http arxiv org pdf 2101 05589v1 2021 01 14 25 quantifying blockchain extractable value dark forest permissionless blockchains bitcoin excelled financial service http arxiv org pdf 2101 05511v3 2021 01 14 26 dynamic curve decentralized autonomous cryptocurrency exchange one exciting recent development decentralized finance defi ha development decentralized cryptocurrency exchange autonomously handle conversion different cryptocurrencies http arxiv org pdf 2101 02778v1 2021 01 07 27 decentralized finance centralized ownership iterative mapping process measure protocol token distribution paper analyze various decentralized finance defi protocol term token distribution http arxiv org pdf 2012 09306v1 2020 12 16 28 extracting smart contract tested verified coq implement extraction coq program functional language based metacoq ' certified erasure http arxiv org pdf 2012 09138v2 2020 12 16 29 exploring narrative economics agent based modeling platform integrates automated trader opinion dynamic seeking explain aspect real world economy defy easy understanding analysed via conventional mean nobel laureate robert shiller ha since 2017 introduced developed idea narrative economics observable economic factor dynamic price asset market explained largely consequence narrative http arxiv org pdf 2012 08840v1 2020 12 16 30 towards first step understand flash loan application defi ecosystem flash loan emerging service decentralized finance ecosystem allows user request non collateral loan http arxiv org pdf 2010 12252v3 2020 10 23 31 amr autonomous coin mixer privacy preserving reward distribution well known user open blockchains tracked industry providing service government law enforcement secret service alike http arxiv org pdf 2010 01056v3 2020 10 02 32 liquidation defi knife edge trustless nature permissionless blockchains render overcollateralization key safety component relied upon decentralized finance defi protocol http arxiv org pdf 2009 13235v5 2020 09 28 33 automated market maker decentralized finance defi paper compare mathematical model automated market maker including logarithmic market scoring rule lmsr liquidity sensitive lmsr l lmsr constant product mean sum others http arxiv org pdf 2009 01676v2 2020 09 03 34 decentralized asset custody scheme security rational adversary asset custody core financial service custodian hold safekeeping asset behalf client http arxiv org pdf 2008 10895v3 2020 08 25 35 stake borrow smart contract platform autonomously manage billion dollar capital quantifying portfolio risk investor engender system increasingly important http arxiv org pdf 2006 11156v1 2020 06 16 36 defi protocol loanable fund interest rate liquidity market efficiency coin term protocol loanable fund plf refer protocol establish distributed ledger based market loanable fund http arxiv org pdf 2006 13922v3 2020 06 11 37 first look defi oracle recently emerging decentralized finance defi take promise cryptocurrencies step leveraging decentralized network transform traditional financial product trustless transparent protocol run without intermediary http arxiv org pdf 2005 04377v3 2020 05 09 38 human dimension hacking social engineering social medium social engineering social medium channel targeting organizational employee emerging one challenging information security threat http arxiv org pdf 2005 04049v1 2020 05 08 39 attacking defi ecosystem flash loan fun profit credit allows lender loan surplus capital borrower http arxiv org pdf 2003 03810v4 2020 03 08 40 decentralized financial crisis global financial crisis 2008 caused accumulation excessive financial risk inspired satoshi nakamoto create bitcoin http arxiv org pdf 2002 08099v2 2020 02 19 41 potential application distributed ledger technology defence support network proponent distributed ledger technology dlt claim could impact greater internet breakthrough defying organisational boundary securely storing data across trustless entity http arxiv org pdf 1811 11471v1 2018 11 28 42 decentralized basic income creating wealth chain staking fixed rate protocol review evaluate mechanism behind decentralized finance protocol generating stable passive income http arxiv org pdf 2107 14312v1 2021 07 29 43 architecture automated crypto finance agent present cognitive architecture autonomous agent active portfolio management decentralized finance involving activity asset selection portfolio balancing liquidity provision trading http arxiv org pdf 2107 07769v3 2021 07 16 44 frontrunner jones raider dark forest empirical study frontrunning ethereum blockchain ethereum prospered inception plethora smart contract application ranging gambling game decentralized finance http arxiv org pdf 2102 03347v2 2021 02 05 45 sok lending pool decentralized finance lending pool decentralized application allow mutually untrusted user lend borrow crypto asset http arxiv org pdf 2012 13230v1 2020 12 24 46 optimal bidding strategy maker auction maker protocol decentralized finance application enables collateralized lending http arxiv org pdf 2009 07086v2 2020 09 15 47 stablecoins 2 0 economic foundation risk based model stablecoins one widely capitalized type cryptocurrency http arxiv org pdf 2006 12388v3 2020 06 22 48 improved price oracle constant function market maker automated market maker first popularized hanson ' logarithmic market scoring rule lmsr prediction market become important building block called ' primitive ' decentralized finance http arxiv org pdf 2003 10001v4 2020 03 22 none
/mstable/mStable-app,TypeScript,mstable app ha moved app deployed http mstable app http mstable app part mstable apps http github com mstable mstable apps mstable app web frontend interacting mstable contract http github com mstable mstable contract setup installation 1 git clone git github com mstable mstable app git cd mstable app 2 cp env example env 3 yarn 4 yarn codegen running application locally simply run yarn start
/SetProtocol/setprotocol.js,TypeScript,p align center img src http s3 u west 1 amazonaws com set protocol img asset set protocol logo png width 64 p p align center href http circleci com gh setprotocol setprotocol j tree master target blank rel noopener img src http img shield io circleci project github setprotocol setprotocol j master svg href ' http github com setprotocol setprotocol j blob master license ' target blank rel noopener img src ' http img shield io badge license apache 202 0 blue svg ' alt ' license ' href ' http www npmjs com package setprotocol j ' img src ' http img shield io npm v setprotocol j svg ' alt ' npm ' p warning developer library interacting set protocol v1 smart contract longer written currently sdk available set protocol v2 refer v2 developer portal http doc tokensets com information setprotocol j setprotocol j library interacting set protocol v1 smart contract library enables create issue redeem create fill issuance order set take look v1 developer portal http doc setprotocol com fastest way get running href http joinchat fx8d6wyprlulm1jmvnardg target blank rel noopener join u telegram note alpha software subject non backwards compatible change computer installation setprotocol j using yarn shell yarn add setprotocol j 1 2 8 using npm shell npm save setprotocol j 1 2 8 setup date step initialize use setprotocol j please refer installation guide http doc setprotocol com getting started installation raising hand contributing testing compile migrate contract start testrpc setup dependency yarn chain wait dependency migration complete message appears interacting contract new terminal window run yarn test watch troubleshooting use node version 10 may issue npm install yarn install sha3 package use nvm install 9 11 1 nvm use 9 11 1 occasionally may need run yarn run chain reset run yarn chain make sure date contract running yarn install update set protocol contract package
/yearn/yearn-starter-pack,Solidity,yearn starter pack ' find solidity smart contract dai curve strategy plus ' controller yvault interface used defi protocol ethereum mainnet sample test suite run mainnet fork doe work user let ' say alice hold 100 dai want start earning yield alice need dai approve yvault address 100 alice call yvault deposit 100 yvault transfer 100 dai alice mint alice corresponding share alice redeem share using yvault withdrawall corresponding dai balance doe work vault todo requirement install brownie http eth brownie readthedocs io en stable install html install dev dependency pip3 install r requirement dev txt use whatever pip version avaiable install ganache cli npm install g ganache cli 6 10 1 using node 14 ' need launch ganache cli via node 8 10 12 fixed example run nvm use 12 npm install ganache cli g install node 12 run ganache cli nvm use 12 ganache cli install npm dependency npm install copy env example env setup etherscan token web3 infura project id env get etherscan http etherscan io apis infura http infura io respectively useful command compile contract npm run compile run test npm test
/cusdt-LINK/alpha-kcc-dex-bot,Python,evm dex bot center href http ibb co xfxq7rt img src http ibb co xfxq7rt bot icon 1 png alt bot icon 1 border 0 center http img shield io github last commit cusdt link alpha kcc dex bot http img shield io github fork cusdt link alpha kcc dex bot http img shield io github star cusdt link alpha kcc dex bot http img shield io github license cusdt link alpha kcc dex bot http img shield io github issue cusdt link alpha kcc dex bot style plastic automated trading bot kcc defi ecosystem however compatible several evm chain ha ability scan multiple trading pair dex grab price realtime make automated trading decision based user setting us web3 py custom wrapper directly interact smart contract exchange thus avoiding slow web interface metamask enabling alphabot fastest throughput possible done locally machine alphatbot never ha access read store private key private key encrypted password initial bot startup feature dex limit order dex stop loss dex trailing stop loss real time trade notification via apprise see info mempool sniping alphabot fast enough snipe liquidity block pink sale sniping accumulation mode take profit trailing take profit multi pair multi wallet trading multi pair monitoring grid trading automated rug doc front run liquidity check monitoring private key encryption support eip 1559 custom exchange wrapper trade pair combination support fully automated strategy requires advanced configuration supported dex alphaswap kuswap pancake swap pink swap bakery swap biswap ape swap trader joe pangolin spooky swap spirit swap quick swap uniswap various dexs harmony chronos metis fee alphabot doe never charge user trading fee img http ibb co 60gc8r7 tempsnip png installation either simply run precompiled exe run source need latest version python http www python org downloads visual studio http visualstudio microsoft com fr thank downloading visual studio sku community rel 17 installed would still like run bot source please follow instruction clone repo git clone http github com cusdt link alpha kcc dex bot install requirement pip install r requirement txt install package needed run alphabot enable ansi color terminal run enableterminalcolors bat highly suggest make reading bot ui 10x easier certain bot action color coded open window command prompt powershell bash terminal linux macos navigate alphabot folder cd path alphabot folder run alphabot python alphabot py configuration setting json &#9; &#9; &#9; alphawalletprivatekey enter manually open bot encrypt &#9; &#9; alphawalletaddress wallet address hold alpha token &#9; &#9; walletaddress wallet address want trade different alpha wallet &#9; &#9; privatekey enter manually open bot encrypt &#9; &#9; walletaddress2 null &#9; &#9; privatekey2 null &#9; &#9; walletaddress3 null &#9; &#9; privatekey3 null &#9; &#9; walletaddress4 null &#9; &#9; privatekey4 null &#9; &#9; walletaddress5 null &#9; &#9; privatekey5 null &#9; &#9; usecustomnode false &#9; &#9; customnode put node &#9; &#9; exchange kuswap &#9; &#9; exchangeversion 2 &#9; &#9; preapprove true &#9; &#9; unlimitedslippage false &#9; &#9; password change false &#9; &#9; verbose pricing true &#9; &#9; slow mode false &#9; exchangeversion applies pancakeswap otherwise leave alone alphawalletprivatekey privatekey private key wallet holding alpha token private key wallet bot trade &#9; 12 word seed phrase usecustomnode set true want use custom node customnode want use custom node enter node ' address http w ipc &#9; example http rpc mainnet kcc network w rpc mainnet kcc network preapprove tell bot preapprove token startup encryptprivatekeys set automatically initialize bot first time unlimitedslippage whethter want bot completely bypass slippage setting &#9; true bot buy slippage &#9; help avoid insufficient amount error password change activate option want bot ask private key ' password update token json verbose pricing self explanatory default setting true set false bot show line screen price update slow mode change often bot query price true bot check every 0 5 using public node provider consider using slow mode getting rate limited token json enabled true symbol alpha address 0x0490c1076552ed3c91876ead9f6a547b389e69d4 kind swap token buyamountinbase 0 5 buyamountintoken 10 max base amount per exact token transaction 0 5 buypriceinbase 10 sellpriceinbase 15 stoplosspriceinbase 8 slippage 25 maxtokens 100 moonbag 0 rugdoc check false buyafter xxx second 0 wait open trade false max failed transaction row 2 max success transaction row null multiplebuys false buycount 1 always check balance false liquiditycheck false liquidityamount 100 liquidityinnativetoken true usecustombasepair false basesymbol wkcs baseaddress 0x4446fc4eb47f2f6586f9faab68b3498f86c07521 sellamountintokens hasfees false gas boost boostpercent 1 gaslimit 1000000 gaspriority eth 1 5 enabled enable disable trading &#9; false bot ' try buy token symbol ticker token want trade &#9; example alpha address contract address token want trade kind swap 1 kind swap base want swap amount base token &#9; example want buy 1 kc alpha token 2 kind swap token want swap exact amount token &#9; example want buy 50 alpha token buyamountinbase used kind swap base enter amount token base symbol want bot place buy order buyamountintoken used kind swap token enter amount token want bot buy max base amount per exact token transaction used kind swap token enter maximum amount kc eth ftm want bot use ' swapping per token &#9; option avoids spending much buy token ' trading buypriceinbase used kind swap base buy price 1 token base symbol price 1 token price bot place buy order want bot never buy set buypriceinbase 0 sellpriceinbase sell price 1 token base symbol price 1 token price bot sell &#9; sell market price price &#9; want bot never sell set sellpriceinbase 99999999 stoplosspriceinbase set stop loss price base symbol &#9; bot sell token price stoplosspriceinbase slippage slippage want use denominated usecustombasepair must true false false bot us native token kc eth matic bnb ftm matic trade &#9; need hold native token true bot us base pair ' entered &#9; please note &#9; &#9; using option bot need route transaction several route &#9; &#9; custom base token native token token ' sniping &#9; &#9; one route could low liquidity basesymbol symbol token want trade selected usecustombasepair true example want buy alpha kc wallet baseaddress contract address token want trade selected &#9; usecustombasepair true liquidityinnativetoken must true false true bot always route thru native token liquidity pool &#9; kc eth matic bnb ftm matic false bot always use direct route &#9; mim usdt usdc busd etc use option want trade liquidity stable coin &#9; mim usdt usdc busd etc &#9; please note using liquidityinnativetoken option set &#9; wrong configuration bot trade wrong pair maxtokens parameter used make bot stop buying certain balance obtained bot always check maxtokens placing buy order &#9; balance maxtokens bot place buy order moonbag minimal amount token want keep wallet &#9; ' want keep token enter 0 rugdoc check call rugdoc ' api check contract honeypot &#9; please take note rugdoc 100 reliable http rugdoc io honeypot buyafter xxx second ask bot wait xxx second placing buy order &#9; useful want avoid anti bot protection wait open trade option token liquidity added dev team enables trading special function &#9; enabletrading several scenerios &#9; wait open trade true bot scan pending transaction wait price move simultainiously &#9; wait open trade mempool bot scan pending transaction &#9; wait open trade true buy tx failed true bot try place buy order soon detects liquidity launch wait open trade txn fails &#9; wait open trade mempool buy tx failed mempool bot try place buy order soon detects liquidity launch wait open trade txn fails &#9; wait open trade pinksale pinksale sniping make wait open trade true work need snipe liquidity pair added try snipe usdt liquidity kc price move volatility usdt kc example &#9; liquidity kc use liquidityinnativetoken true usecustombasepair false &#9; liquidity usdt use liquidityinnativetoken false usecustombasepair true baseaddress 0x4446fc4eb47f2f6586f9faab68b3498f86c07521 please note many way enable trading difficult bot detect scenerios keep function updated possible sure update bot regularly max failed transaction row tell bot stop trading xxx failed transaction max success transaction row tell bot stop trading xxx success transaction multiplebuys alphabot able create 5 different trade 5 different wallet time &#9; useful token trading limited maximum amount per wallet buycount must set multiplebuys true &#9; tell bot many order place always check balance optimize alphabot ' speed default balance checked initially launch set true would like bot detect wallet ' balance bot trading sell token quickly possible &#9; please note true doe slightly decrease performace speed sellamountintokens enter amount token would like bot sell hasfees select true want trade token additional fee &#9; automatic transfer liquidity buy additional tax rebase etc gas boostpercent two scenerios &#9; set fixed gas price simply set gas price gas parameter &#9; gas 200 &#9; let bot calculate gas price via web3 real time boost &#9; recommended setting 1000000 avoid gas error gaspriority eth eth set max priority gas &#9; max priority fee also referred miner tip go miner validator &#9; incentivizes prioritize transaction often value put &#9; &#9; max priority fee amount pay minimum liquidity dollar use option want bot set minimal amount liquidity require liquidity pool order placed &#9; please note liquidity amount set pinksale presale address enter presale address token address please note sniping pinksale must set &#9; wait open trade pinksale apprise ' api allows receive push notification via sm imessage browser telegram discord basically everywhere receive real time notification alpha bot executes trade use 1 check apprise github read documentation http github com caronc apprise popular notification service 2 configure setting json enable apprise notification true apprise parameter put parameter put several notification time example using window computer would like receive notification desktop register pushsafer http www pushsafer com copy paste pushsafer key setting json set enable apprise notification true setting json enable apprise notification true apprise parameter window psafers efhoow0gh0vwvocqdplb efhoow0gh0vwvocqdplb pushsafer key please note apprise notification enabled run bot source precompiled exe ha apprise notification disabled due bootloader compatibility issue fix released shortly
/web3together/web3together,JavaScript,h1 align center img src logo png width 300px h1 p align center follow u href http twitter com web3together twitter href http www facebook com web3together facebook href http theweb3together telegram say hi u href mailto hello web3together com hello web3together com p br welcome web3 together community connect developer share knowledge every part blockchain development including defi nfts dao etc join discussion http github com web3together web3together discussion resource basic introduction book bitcoin http www amazon com bitcoin coingecko ebook dp b08xvzlkht coingecko basic bitcoins blockchains http www amazon com basic bitcoins blockchains introduction cryptocurrencies dp 1633538001 antony lewis grokking bitcoin http www amazon com grokking bitcoin kalle rosenbaum dp 1617294640 kalle rosenbaum cryptoassets innovative investor ' guide bitcoin beyond chris burniske http www amazon com cryptoassets innovative investor bitcoin beyond dp 1260026671 jack tatar bitcoin standard http www amazon com bitcoin standard decentralized alternative central dp 1119473861 saifedean ammous mastering bitcoin http www amazon com mastering bitcoin programming open blockchain dp 1491954388 andreas antonopoulos course introduction digital currency http www unic ac cy blockchain free mooc university nicosia blockchain foundation use case http www coursera org learn blockchain foundation use case consensys academy blockchain money http ocw mit edu course sloan school management 15 s12 blockchain money fall 2018 mit video whiteboard crypto http www youtube com channel ucsyyksphigqxhpohi fm5sg bitcoin 99 http www youtube com channel ucqq fgcmdxlkre3seqewrla finematics http www youtube com channel uch1ob28cegdqohunr7vbaca coin bureau http www youtube com channel ucqk gsmbpiv8spgd3zglosw dapp university http www youtube com channel ucy0xl8v6nzzfcwzhcgb8orq eattheblocks http www youtube com channel uczm8xqjnoyg2elppeutnasa school block http www ledger com academy school block patrick collins http www youtube com c patrickcollins featured austin griffith http www youtube com channel uc hi2i2peo1a stdg22gfsa podcasts daon rabbit hole http podcasts apple com u podcast daon rabbit hole id1596150103 ledger http www ledger com ledger podcast bankless http podcasts apple com u podcast bankless id1499409058 link decrypt learn http decrypt co learn koompi ama blockchain series http www youtube com playlist list pljhxeyhz6zkdcsxqv9ulwnimrjcwkc9l5 web3 decentralized apps dapps general token economy web3 reinvents internet http www amazon com token economy web3 reinvents internet dp 3982103819 shermin voshmgir mastering ethereum building smart contract dapps http www amazon com mastering ethereum building smart contract dp 1491971940 andreas antonopoulos blockchain action http www amazon com blockchain action bina ramamurthy dp 1617296333 bina ramamurthy hand smart contract development solidity ethereum http www amazon com hand contract development solidity ethereum dp 1492045268 kevin solorio randall kanna david h hoover building ethereum dapps http www amazon com building ethereum dapps decentralized application dp 1617295159 roberto infante solidity build web3 app ethereum solidity smart contract http buildspace solidity buildspace crypto market pool solidity http cryptomarketpool com getting started solidity solidity example http solidity example org solidity example http github com samnang solidity example solidity blockchain smart contract course http www freecodecamp org news learn solidity blockchain smart contract free freecodecamp org learn solidity basic http www youtube com playlist list plvfqp12v0hs2pqd9 x e2ajmxj1o05woo hashlips ethereum solidity complete developer ' guide http www udemy com course ethereum solidity complete developer guide stephen grider defi defi beginner http www amazon com defi beginner coin gecko dp b098gt2psg coingecko defi advanced http www amazon com defi advanced coin gecko dp b098h215p3 coingecko defi future finance http www amazon com defi future finance campbell harvey dp 1119836018 campbell r harvey ashwin ramachandran joey santoro decentralized finance defi wall street era http www amazon com wall street cryptocurrency decentralized dp 1527295362 defiyield app decentralized finance mooc http defi learning org university california berkeley introduction decentralized finance defi http www unic ac cy blockchain free defi mooc university nicosia decentralised finance blockchain ethereum future banking http www futurelearn com course defi exploring decentralised finance blockchain technology rmit university nft generate epic nft collection ship web3 app let friend mint http buildspace build nfts buildspace nft handbook http www amazon com nft handbook create non fungible token dp 111983838x matt fortnow quharrison terry dao beginner guide daos http linda mirror xyz vh8k4lecgeo06 qsgx vs5lvguqhqkcz9ut81wwcp2o daos creator resource get started today http kinjal mirror xyz ed3 sgv2h50j kwjhqconwqmkqsltfnrqrtnypu p5k community developer dao http twitter com developer dao buildspace http buildspace web3 university http www web3 university encode club http www encode club cryptodevhub http cryptodevhub io questbook http www questbook app useweb3 http www useweb3 xyz banklessdao http www bankless community odysseydao http www odysseydao com link defisummer designing tokenomics http www youtube com watch v kcmrgk3a y4 working web3 handbook http web3 smsunarto com architecture web 3 0 application http www preethikasireddy com post architecture web 3 0 application speedrunethereum com http speedrunethereum com contributing 1 fork http github com web3together web3together fork 2 create feature branch git checkout b new feature 3 commit change git commit ' add feature ' 4 push branch git push origin new feature 5 create new pull request
/Synthetixio/synthetix-subgraph,TypeScript,synthetix subgraph overview graph http thegraph com decentralized protocol indexing querying data ethereum blockchain subgraphs define data graph index stored data provided via graphql api graph currently consists hosted service decentralized network future hosted service gradually sunset decentralized network achieves feature parity synthetix currently maintains one official subgraph per network hosted service hosted service synthetix subgraph available hosted service mainnet http thegraph com hosted service subgraph synthetixio team mainnet main optimism http thegraph com hosted service subgraph synthetixio team optimism main kovan http thegraph com hosted service subgraph synthetixio team kovan main optimism kovan http thegraph com hosted service subgraph synthetixio team optimism kovan main using subgraphs hosted service may introduce breaking change synthetix subgraphs active development graph doe currently support pinning subgraph version hosted service subgraphs used caution note data queried optimism network may incomplete due regenesis 11 11 21 graph network subgraph also found graph decentralized network http thegraph com explorer subgraph id 0xde910777c787903f78c89e7a0bf7f4c435cbb1fe 0 view overview decentralized network support pinning version subgraphs decentralized network query data mainnet latest version available decentralized network may always synchronized latest version hosted service usage query hosted service directly code snippet demonstrates retrieve exchange occured last 24 hour javascript async const math floor date 1e3 const onedayago 3600 24 const body json stringify query synthexchanges orderby timestamp orderdirection desc timestamp gt onedayago fromamount fromamountinusd fromcurrencykey tocurrencykey block timestamp toaddress toamount toamountinusd feesinusd variable null const response await fetch ' http api thegraph com subgraphs name synthetixio team mainnet main ' method ' post ' body const json await response json const synthexchanges json data console log synthexchanges explore entity available subgraph playground http thegraph com hosted service subgraph synthetixio team mainnet main selected playground due limitation imposed graph 1 000 result returned query review graph ' documentation pagination http thegraph com doc graphql api pagination information synthetixio query synthetixio query http github com synthetixio j monorepo tree master package query javascript library retrieves synthetixs data graph library provides typescript support returned data automatically handle pagination allows subscribe real time update subgraph entity find detailed documentation commonly accessed subgraph entity candle candle entity store data pertaining price snx token synth reported chainlink oracle various time period contains data necessary generate candlestick chart id string unique identifier candle represented synth period periodid periodid calculated dividing current timestamp period synth string ticker symbol synth e g susd snx period integer duration candle tracking second following period available year 31556736 quarter 7889184 month 2629728 week 604800 day 86400 hour 3600 15 minute 900 open decimal price reported beginning period high decimal highest price reported period low decimal lowest price reported period close decimal price reported end period timestamp integer timestamp second beginning period average decimal average price reported period aggregatedprices integer number time price wa reported period see rate update entity individual price report synthexchange time synth exchanged new synthexchange entity created id string unique identifier exchange represented transactionhash eventlogindex account exchanger account executed exchange fromsynth synth synth exchanged tosynth synth synth received exchange fromamount decimal amount synths exchanged fromamountinusd decimal value synths exchanged denominated usd price synths time exchange toamount decimal amount synths received toamountinusd decimal value synths received denominated usd price synths time exchange feesinusd decimal fee collected protocol exchange denominated usd toaddress byte address synth received exchange timestamp integer timestamp second exchange occured gasprice integer gas price exchange total total entity aggregate synthexchange data future trade time note collecting single entity record time total combination bucketmagnitude synth filter e total period 0 timestamp 0 id string unique identifier total represented timestamp bucketmagnitude synth period period integer duration candle tracking second following period available year 31556736 quarter 7889184 month 2629728 week 604800 day 86400 15 minute 900 time 0 especially useful filtering timestamp integer timestamp second beginning period especially useful filtering bucketmagnitude integer minimum power 10 exchange ' fromamountinusd value must e g 2 total trade valued 100 higher especially useful filtering synth synth synth exchanged especially useful filtering trade integer number individual exchange completed total exchanger integer number unique exchanger seen total newexchangers integer number exchanger first seen total exchangeusdtally decimal value synths exchanged denominated usd total totalfeesgeneratedinusd decimal value exchange fee denominated usd generated total snxholder entity represents individual holder snx token id string user ' address block integer number last block event user updated entity timestamp integer timestamp second last block event user updated entity balanceof decimal current balance snx token held user collateral decimal amount snx used collateral last event cannot spent transferable decimal amount snx spent last event initialdebtownership integer percentage total debt owned time issuance number modified global debt delta array figure user ' exit price collateralization ratio using combination initial debt slice global debt delta applies debtentryatindex integer index let u know relative term user entered debt pool calculate exit price collateralization ratio claim integer number fee claim performed user mint integer number mint performed user build deploy build deploy subgraphs run npm run deploy cli option update synthetix contract abis build updated subgraph deploy hosted service decentralized network cli automatically generates main subgraph composed subgraph subgraphs directory also use cli deploy component subgraphs hosted service faster development testing prompt cli provided via option information run npm run deploy help
/ergoplatform/oracle-core,Rust,oracle core v2 0 oracle core chain component oracle part oracle pool run oracle core provides http api interface reading current protocol state another submitting datapoints datapoint submited oracle core automatically generate required tx post well action required protocol run thereby allows oracle participate oracle pool protocol without extra effort oracle operator oracle core requires user ha access full node wallet order create tx perform utxo set scanning furthermore oracle core designed work single oracle pool operator run several oracle several oracle pool single full node used several instance oracle core must run set different api port current oracle core built run protocol specified eip 0023 pr http github com ergoplatform eips pull 41 verifying contract recommended check contract used indeed coming eip 23 run following command get encoded hash contract console oracle core print contract hash running source file console cargo test check contract hash nocapture check value described eip 23
/lifinance/lifi-web,TypeScript,transferto xyz powered li fi http li fi setup use nvm http github com nvm sh nvm run app latest node version installed run nvm use version 16 work great install using nvm install 16 editorconfig http editorconfig org defines basic formatting use plugin http editorconfig org download ide sh install dependency yarn install server local development version yarn start window problem running start command please try run yarn window create local env local file define environment e g want use xpollinate copy one xpollinate file setup includes antd http ant design component overview styled component setup based create react app http create react app dev environment variable variable name start react app available within react use env default config variabels used environment use env development env production environment specific configuration create local env local file want test additional setting locally e g run semi production version env file loaded automatically http create react app dev doc adding custom environment variable changing variable require restart yarn start available script project directory run yarn start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make edits also see lint error console yarn build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information yarn test unit executes unit test unit test test one component mock others yarn test int executes integration test test access stack e g query external api since ' ensure external resource available time test may sometimes fail guide lifi sdk follow linked readme http github com lifinance lifi web blob develop doc sdk guide md need change lifi sdk http github com lifinance sdk package deployment pushing code repository automatically trigger deployment several environment branch main http transferto xyz env lifinance mainnet configuration branch staging http staging transferto xyz env lifinance mainnet staging configuration
/arkadiko-dao/arkadiko,TypeScript,arkadiko http www arkadiko finance arkadiko implement stablecoin soft pegged 1 usd called usda governance token diko create foundational primitive lending borrowing platform arkadiko protocol trustlessly provides stable loan backed stack token stx known usda order mint usda need collateralise stack stx token arkadiko stack vault word usda stablecoin existing maintain relative price stability volatile market people repay loan returning usda plus little cover fixed interest loan called stability fee loan paid back anytime repayment schedule protocol enforces price selling person ' stx total value fall 150 percent liquidation ratio however much stx user borrowed stx sold auction stacker registered protocol le usda exist world loan made time every single usda piece someone stx locked arkadiko protocol person put stx pay usda back usda go system repay loan get burnt disappears forever interest e stability fee remains arkadiko use reward diko holder cover expense protocol stx posted collateral mint stablecoins stx token automatically used stack natively stack protocol either autonomously delegation pool information please read documentation http doc arkadiko finance architecture high level architecture would look follows architecture http github com philipdesmedt arkadiko dao blob master doc architecture high level png raw true usda arkadiko stablecoin whenever new usda minted debt collateral created network every type collateral principle stx accepted collateral set risk parameter decided community parameter voted diko governance token token ha 1 vote stablecoin risk parameter debt ceiling debt ceiling maximum amount debt created single collateral type arkadiko governance assigns every collateral type debt ceiling used ensure sufficient diversification arkadiko protocol collateral portfolio collateral type ha reached debt ceiling becomes impossible create debt unless existing user pay back portion reserve debt stability fee stability fee annual percentage yield calculated top much usda ha generated reserve ' collateral fee paid stx sent arkadiko buffer liquidation ratio low liquidation ratio mean arkadiko governance expects low price volatility collateral high liquidation ratio mean high volatility expected liquidation penalty liquidation penalty fee added reserve ' total outstanding generated usda liquidation occurs liquidation penalty used encourage usda owner keep appropriate collateral level arkadiko governance token diko governance token used manage vote proposal put forward community add new collateral asset type unique set risk parameter change risk parameter one existing collateral asset type set percentage threshold distribute btc earnings trigger emergency shutdown regulate stack stacking payouts roadmap see http trello com b qem9bjzk public roadmap test mocking test written using clarinet test folder smart contract pox fungible token trait mocked contract trait deployed mainnet production ready version ready deployed error handling error thrown smart contract unsigned integer format used following smart contract prefix error code smart contract prefix denoted follows 1 arkadiko token 2 auction engine 3 dao 4 freddie 5 liquidator 6 7 8 oracle 9 sip10 reserve 11 stx reserve 12 13 xstx token 14 usda token 16 diko staker 17 collateral type 18 19 stacker 20 swap 21 swap token diko usda
/powerpool-finance/powerindex,JavaScript,powerindex ci http github com powerpool finance powerindex workflow ci badge svg codecov http codecov io gh powerpool finance powerindex branch master graph badge svg http codecov io gh powerpool finance powerindex repository contains powerindex smart contracs powerindex main product powerpool main feature powerindex possibility create special pool unique governance pool design security review status partially audited detail powerindexpool sol poolrestrictions sol security audit mixbytes http github com powerpool finance powerpool doc blob master audit powerindexpoolsecurityauditscope1 pdf vestedlpmining sol powerindexpoolcontroller sol security audit pessimistic http github com powerpool finance powerpool doc blob master audit powerindexpool securityaudit scope1 pessimistic pdf powerindexpool sol security audit pessimistic http github com powerpool finance powerpool doc blob master audit powerindexpool sol 20security 20analysis 20by 20pessimistic pdf testing development use yarn npm run following npm task yarn compile compile contract yarn test run test yarn coverage generate test coverage report contract ethereum main network active power index pipt 0x26607ac599266b21d13c7acf7942c7701a8b699c http etherscan io address 0x26607ac599266b21d13c7acf7942c7701a8b699c powerindex smart pool based balancer amm upgraded functionality contains 8 defi governance token enables voting underlying token dynamically change token weight decided community cvp token holder entirely governs power index yearn ecosystem token index yeti 0xb4bebd34f6daafd808f73de0d10235a92fbb6c3d http etherscan io address 0xb4bebd34f6daafd808f73de0d10235a92fbb6c3d poolrestrictions 0x3885c4e1107b445dd370d09008d90b5153132fff http etherscan io address 0x3885c4e1107b445dd370d09008d90b5153132fff contract set optional restriction pool capitalization method call contract etc vestedlpmining proxyadmin 0x4bb5a5b7e10c98884960bbdb9540cd1babdeac68 http etherscan io address 0x4bb5a5b7e10c98884960bbdb9540cd1babdeac68 code proxy 0xf09232320ebeac33fae61b24bb8d7ca192e58507 http etherscan io address 0xf09232320ebeac33fae61b24bb8d7ca192e58507 code implementation 0x5ccbf7b7a89ec43bd83f4b70871d02f700df3335 http etherscan io address 0x5ccbf7b7a89ec43bd83f4b70871d02f700df3335 reward contract developed allow liquidity provider vote claim lp reward liquidity provider power index uniswap balancer deposit pool token receive reward cvp well voting right based stake token accrued cvp token specified vesting period reservoir 0x8ebc56a13ae7e3ce27b960b16aa57efed3f4e79e http etherscan io address 0x8ebc56a13ae7e3ce27b960b16aa57efed3f4e79e contract allocating cvp token lp mining contract erc20piptswap 0x471868211e03f0da24f8576cb546d4276623c67d http etherscan io address 0x471868211e03f0da24f8576cb546d4276623c67d contract supplying liquidity pipt eth erc20 token usdc dai dpi wbtc etc sent contract automatically converted index token aave yfi snx cvp comp wnxm mkr uni via uniswap put pool erc20piptswap 0x56fa426e08afce7a9dfdddd42fedfa64a7ccf7cb http etherscan io address 0x56fa426e08afce7a9dfdddd42fedfa64a7ccf7cb contract supplying liquidity yeti eth erc20 token usdc dai dpi wbtc etc sent contract automatically converted index token aave yfi snx cvp comp wnxm mkr uni via uniswap put pool deprecated lp mining 0xc0b5c7f2f5b5c6cdcc75aebb73ac8b5d87c68dcc http etherscan io address 0xc0b5c7f2f5b5c6cdcc75aebb73ac8b5d87c68dcc old liquidity mining contract vestedlpmining implementation 0xacd09e94a4fc629f9d4c09a3e5577f053fc583ac http etherscan io address 0xacd09e94a4fc629f9d4c09a3e5577f053fc583ac old vestedlpmining implementation ethpiptswap 0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05 http etherscan io address 0x0228e1074bd0d089719e69f7c3bf0a97b6ab0c05 old version ethpiptswap 0x91aa1d4294fd16629fe64c570574a550827b832f http etherscan io address 0x91aa1d4294fd16629fe64c570574a550827b832f old version erc20piptswap 0x57a47a8d522c32e8d4515f8936ee9d1a699284d1 http etherscan io address 0x57a47a8d522c32e8d4515f8936ee9d1a699284d1 old version erc20piptswap 0xe65040f61701940b62e18da7a53126a58525588b http etherscan io address 0xe65040f61701940b62e18da7a53126a58525588b old version erc20piptswap 0xa600524f0c73647476d269aaaebe4f9b86ea3d7d http etherscan io address 0xa600524f0c73647476d269aaaebe4f9b86ea3d7d old version powerindexpool 0xb2b9335791346e94245dcd316a9c9ed486e6dd7f http etherscan io address 0xb2b9335791346e94245dcd316a9c9ed486e6dd7f baby version poolrestrictions 0x698967ca2fb85a6d9a7d2bed4d2f6d32bbc5fcdc http etherscan io address 0x698967ca2fb85a6d9a7d2bed4d2f6d32bbc5fcdc old version
/cycloneprotocol/cyclone-contracts,Solidity,cyclone protocol cyclone cross chain non custodial universal privacy preserving protocol decentralized governance defi apps cyclone applies zksnarks enable transactional privacy defi component breaking chain link depositor recipient address us smart contract accepts coin token deposit withdrawn different address whenever asset withdrawn cyclone way link withdrawal deposit absolute privacy cyclone ' zksnarks part based attested implementation tornado cash offer unique value supporting cross chain universal privacy preserving layer almost defi component decentralized governance cyc holder cross chain cyclone ha launched firstly iotex fast evm compatible blockchain active community thanks anonymity mining liquidity mining properly incentive contribution anonymity pool first four anonymity pool launched got 3 million usd tvl day according http cyclone xyz stats cyclone aim launch multiple anonymity pool various asset ethereum binance smart chain bsc evm compatible public blockchains q1 q2 2021 looking launching polkadot non evm public blockchains q3 2021 cyc token instance cyclone protocol decentralized governance cyclone protocol governed decentralized way governance dao life iotex blockchain anonymity pool live different blockchains connected iotex blockchain via bridge iotube estimate governance dao activated early q2 2021 least following right entitled cyc holder blockchain support next launch new anonymity pool certain asset update params existing anonymity pool e g cyc mine per day launch new liquidity pool update params existing liquidity pool e g cyc mine per day token economics cyc universal privacy preserving layer defi yield aggregation cyclone protocol much token mixer cyclone protocol world first protocol support anonymity pool aggregating yield generating defi component universal privacy enhancement layer defi apps envisioned universal privacy layer defi component various blockchains enabling user participate anonymity liquidity mining cyc harvesting profit underlying defi component work http doc cyclone xyz work token economics http doc cyclone xyz cyc token roadmap http doc cyclone xyz cyc token roadmap deployment contract address see http doc cyclone xyz audit
/IndexCoop/index-ui,TypeScript,index ui license http img shield io license mit blue svg http opensource org license mit index ui simple front end used interact index front end describes index consolidates relevant link onboard user onto protocol ' basic functionality also allows user stake unstake claim index token initial distribution liquidity mining phase protocol ' launch local development project wa created create react app http create react app dev refer doc advanced usage prerequisite 1 install node http nodejs org en 14 1 install yarn http yarnpkg com getting started install 1 fork repo 1 clone fork locally step 1 make copy prod env file bash cp env prod env 1 install dependency bash yarn install 1 start app development mode localhost 3000 bash yarn start 1 navigate http localhost 3000 http localhost 3000 change make locally live reload app testing unit test run unit test watch mode bash yarn test run e2e test cypress run e2e test cypress first must serve local instance bash yarn start served another terminal navigate repo run bash yarn run e2e kick cypress run headlessly writing debugging cypress test wish write test debug help cypress tool running bash yarn run cypress open allow see select item page easily obtaining id selector etc information found cypress doc http doc cypress io helpful command build app production build folder yarn build eject app create react app rail yarn eject project us browserslist http github com browserslist browserslist need regularly update browser data http github com browserslist browserslist browser data updating via bash npx browserslist update db contributing main purpose repository continually serve need index making faster simpler easier use new proposal submitted scope index ' governance evolves anticipate tool change well greatly encourage community contribution may help index reach user promote greater adoption sure check contribution guideline http github com setprotocol index ui blob master contributing md way get involved project style guide absolute import prefer absolute import relative import loose codebase convention refer configuring react absolute import typescript http justinnoel dev 2019 06 18 configuring react absolute import typescript editor ' picking absolute import typescript good import page ' component page ' bad import page ' component page ' import ordering order library import top file newline separator import exported member defined package typescript good import react useeffect ' react ' import container spacer ' react neu ' import page ' component page ' import explanation ' component explanation ' typescript bad import react useeffect ' react ' import page ' component page ' import container spacer ' react neu ' import explanation ' component explanation ' license index ui mit licensed
/yearn/ygov-finance,JavaScript,ygov finance project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console npm test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information npm run build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify
/yearn/yearn-sdk,TypeScript,span img align right src http raw githubusercontent com yearn yearn sdk master github medium sdk png height 150 span yearn sdk ci http github com nymmrx yearn sdk workflow ci badge svg http github com nymmrx yearn sdk action query workflow 3aci styled prettier http img shield io badge code style prettier ff69b4 svg http prettier io getting started installation npm yfi sdk configuration usage use sdk need instantiate yearn object desired configuration import yearn yfi sdk import jsonrpcprovider ethersproject provider ethereum mainnet const chainid 1 recommended use alchemy web3 provider using yearn sdk const rpcurl http eth mainnet alchemyapi io v2 secret id const yearn new yearn chainid provider new jsonrpcprovider rpcurl documentation autogenerated documentation found http yearn github io yearn sdk helpful link live site http yearn finance governance forum http gov yearn finance documentation http doc yearn finance contributing code style follows prettier convention yarn lint commit message follow conventional commits http www conventionalcommits org en v1 0 0 pr convention follow guideline outlined http github com yearn yearn sdk wiki pr convention releasing sdk npmjs get write access package npmjs http www npmjs com package yfi sdk login npm npm login install np http www npmjs com package np checkout pull master branch run yarn build run np follow instruction debug website local copy sdk install yalc http www npmjs com package yalc run yarn build run yalc publish clone website repo configure enviornment open terminal http github com yearn yearn finance v3 run yalc add yfi sdk run yarn install run yarn start
/dapphub/ds-dach,Shell,dach deployed mainnet http etherscan io address 0x64043a98f097fd6ef0d3ad41588a6b0424723b3a code dai automated clearing house perform following action clearing dai chai cheque clearing dai eth chai eth uniswap sale clearing chai join exit example cheque signed message containing following information sender address author cheque receiver address receiver fund amount uint256 token amount transfer receiver sender expiry uint256 time cheque longer cleared fee uint256 token amount transfered sender whoever submits cheque clearing house nonce uint256 replay protection relayer address address authorized clear transaction anyone obtains signed message clear paying gas cost transaction exchange fee signature generation contract us typed signature format eip 712 http github com ethereum eips blob master eips eip 712 md provide nice user interface separate similar looking cheque might used clearing house want try ' guide utilizes api http api stablecoin service clear dai transfer requires seth ethsign installed local wallet dai chai available install seth ethsign see dapp tool http dapp tool generating signed message first generate dai cheque using script provided bin daicheque example generate cheque 0 1 dai ethereum foundation multisig 0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae paying 0 2 dai tx fee first set environment eth whatever account would like sign cheque sh export eth 0xacab acc generate cheque store file ' call cheque json sh bin daicheque 0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae seth wei 0 1 ' ether ' seth wei 0 2 ' ether ' cheque json clearing cheque need authorize dach contract sh seth send 0x6b175474e89094c44da98b954eedeac495271d0f approve address uint256 0x64043a98f097fd6ef0d3ad41588a6b0424723b3a seth int256 1 submit cheque cleared using stablecoin service api sh curl x post http api stablecoin service v1 daicheque cheque json h content type application json
/compound-developers/compound-governance-examples,HTML,quick start compound governance code example building interface compound protocol governance comp governance smart contract live ethereum main ropsten test network full quick start tutorial compound medium blog http medium com compound finance building governance interface 474fc271588c compound compound open source autonomous protocol built developer unlock universe new financial application interest borrowing open financial system learn website href http compound finance ref github user ajb413 repo compound governance example img alt compound finance src http raw githubusercontent com ajb413 compound interest alert master compound finance logo png width 260 height 60 compound protocol governance compound protocol upgraded configured decentralized fashion change supported asset system parameter decided comp token holder using voting system community member create proposal vote proposal modify protocol made possible compound governance smart contract http github com compound finance compound protocol tree master contract governance order participate governance user need hold comp token ethereum wallet however user need comp delegated address delegation utility function comp erc 20 token contract http github com compound finance compound protocol blob master contract governance comp sol learn compound protocol governance documentation http compound finance doc governance ref github user ajb413 repo compound governance example example following code example used web3 enabled website example querying ethereum blockchain directly well example use compound rest api http compound finance doc api ref github user ajb413 repo compound governance example operation get done using either implementation however set operation must performed writing blockchain web3 requires eth spent gas fee latest contract address abis see network page http compound finance doc network doc get comp token holder example web page compound api http compound developer github io compound governance example api example get comp holder example web page web3 ropsten http compound developer github io compound governance example web3 example get comp holder code example compound api http github com compound developer compound governance example blob master api example get comp holder html code example web3 http github com compound developer compound governance example blob master web3 example get comp holder html get delegate example web page compound api http compound developer github io compound governance example api example get delegate example web page web3 ropsten http compound developer github io compound governance example web3 example get delegate code example compound api http github com compound developer compound governance example blob master api example get delegate html code example web3 http github com compound developer compound governance example blob master web3 example get delegate html get proposal state example web page compound api http compound developer github io compound governance example api example get proposal example web page web3 http compound developer github io compound governance example web3 example get proposal code example compound api http github com compound developer compound governance example blob master api example get proposal html code example web3 http github com compound developer compound governance example blob master web3 example get proposal html get ballot proposal example web page compound api http compound developer github io compound governance example api example get ballot example web page web3 http compound developer github io compound governance example web3 example get ballot code example compound api http github com compound developer compound governance example blob master api example get ballot html code example web3 http github com compound developer compound governance example blob master web3 example get ballot html delegate voting right example web page web3 http compound developer github io compound governance example web3 example set delegate code example web3 http github com compound developer compound governance example blob master web3 example set delegate html cast vote active proposal example web page web3 http compound developer github io compound governance example web3 example cast vote code example web3 http github com compound developer compound governance example blob master web3 example cast vote html signature example delegate signature web page http compound developer github io compound governance example signature example delegate signature delegate signature code example http github com compound developer compound governance example blob master signature example delegate signature html cast vote signature web page http compound developer github io compound governance example signature example vote signature cast vote signature code example http github com compound developer compound governance example blob master signature example vote signature html see readme http github com compound developer compound governance example tree master signature example context signature running clone repository use web3 enabled browser like brave http brave com install metamask http metamask io download html browser extension serve file http server html file work open directly browser following command line command includes http server installed node j npm http nodejs org git clone git github com compound developer compound governance example git cd compound governance example npm install g http server http server p 8080 go http localhost 8080 api example get proposal http localhost 8080 api example get proposal web browser compound governance resource governance announcement http medium com compound finance compound governance 5531f524cf68 governance live announcement http medium com compound finance compound governance decentralized b18659f811e0 compound protocol governance documentation http compound finance doc governance ref github user ajb413 repo compound governance example compound api governance service documentation http compound finance doc api governanceservice ref github user ajb413 repo compound governance example compound governance explorer http compound finance governance ref github user ajb413 repo compound governance example
/VisorFinance/visor-core,Solidity,visor finance http visor finance introducing visor nft vault visor 2 x vault allow management permissioning erc20 erc721 asset use external protocol purpose active lp token management directly user purpose asset timelocks nft collection lp position management visor living smart vault platform compatibility layer within emerging defi ecosystem built universalvault standard developed alchemist alchemist wtf project use visor sol 2 0 x base submit template proposal admission snapshot org visor eth http snapshot org visor eth stay tuned come community medium com visorfinance http medium com visorfinance discord gg http discord gg epsz4be5kz current deployment visor base nft template 0x8daed2da38f4a4eb0c46f2e0e6811f63b7c7752c http etherscan io address visorfactory 0xae03233307865623aaef76da9ade669b86e6f20a http etherscan io address 0xae03233307865623aaef76da9ade669b86e6f20a
/re-nft/legacy-contracts,TypeScript,renft contract renft http raw githubusercontent com nft asset main mainlogov1 png table content renft renft flow flow renft contract spec renft contract spec event event function function marketing marketing renft renft ethereum protocol erc 721 erc 1155 lending renting protocol incredibly minimalistic core contract implemented src renft sol find interface src interface irenft sol allows combination erc 721 erc 1155 lent single transaction complementary npm package http github com nft sdk help pas argument contract correctly user save gas library prepares argument passed contract erc1155s invoke batch function subgraph implementation find http github com nft subgraph flow 1 lender specifies number parameter maximum number day nft rented ' want renter hold nfts long b daily rent price c nft price case nft returned lender entitled claim collateral payment token lender receives rent payment token collateral priced token well 2 lender lends nft 3 renter agrees term pay full collateral rent front 4 step 5 step 6 5 renter return time 4a unused rent amount collateral get returned renter 4b nft returned lender deposited back renft contract lender doe deposit nft back lending 6 renter doe return time 5a lender claim collateral 5b collateral along full rent payment get sent lender renft contract spec event lent nft lent rented nft rented returned nft returned renter back renft contract collateralclaimed renter fails return nft time lender claim collateral emmitted lender claimed collateral lendingstopped lender stop lending nft sent renft contract back lender function lend lend nfts get sent renft contract escrow renter found rent rent one many erc721 erc1155 nfts user lent reside renft escrow returnit return one rented erc721 erc1155 nfts deadline claimcollateral called lender renter missed return date stoplending called lender release lent nft back mark end interaction renft smart contract marketing renft branding material head http github com nft asset
/RageTrade/core,TypeScript,p href http github com rage trade perpswap contract action img alt test status src http github com rage trade perpswap contract action workflow test yml badge svg href http solidity readthedocs io en v0 8 14 img alt solidity v0 8 14 src http badgen net badge solidity v0 8 14 blue p rage trade repository contains core smart contract rage trade protocol bug bounty repository subject rage trade bug bounty program per term defined bug bounty md script yarn compile compiles contract yarn test run test yarn coverage run test generates coverage report yarn deploy network arbtest testnet deployment yarn deploy network arbmain mainnet deployment deployment live deployment file deployment deployment directory deploy contract use yarn deploy network network name ' looking detail please see deployment guide deployment guide md licensing primary license rage trade core mit license however dependency various license hence file import inherits maximum restrictive license ' dependency specified spdx identifier file file licensed mit please see license license file licensed gpl 2 0 later please see uniswap v3 core ' gpl http github com uniswap v3 core blob main contract library license gpl file licensed busl 1 1 please see uniswap v3 core ' busl http github com uniswap v3 core blob main license see overview spdx license identifier used source code repository license overview md
/Shaivpidadi/NFT-Dapp-Boilerplate,JavaScript,nft dapp boilerplate br div align center strong start next dapp defi project second strong div div align center highly scalable boilerplate pre added web3 different wallet focus performance best practice div br installation first ensure new empty directory 1 clone repository navigate repo j git clone cd nft dapp boilerplate 2 create env file add environment variable refer env example file javascript react app color address contract address interact testing use 0x320792c7a855b4fd0636df06014cd6f717fafdeb react app rpc url 1 infura rpc url react app rpc url 3 infura rpc url react app polling interval polling time interval set 15000 react app infura key infura key fortmatic wallet react app fortmatic api key fortmatic key react app fortmatic chain name supported fortmatic network e ropsten 3 install dependency start project javascript npm install npm run start 4 build application production use build script production build build folder javascript npm run build note want use truffle make sure use include truffle branch div align center sub created href http github com shaivpidadi shaishav pidadi sub div
/pods-finance/contracts,JavaScript,p align center img src http github com pod finance contract blob develop podslogo png width 280px p p align center pod decentralized non custodial option protocol ethereum read href http medium com podsfinance understanding option 5c47004f4c4 target blank article want learn p p align center href http circleci com gh tree master style text decoration none img src http img shield io circleci project github svg alt ' ci ' href http hardhat org img src http img shield io badge built hardhat f9c937 alt build hardhat href http github com pod finance contract action query workflow test img src http github com pod finance contract workflow lint compile test badge svg alt test href ' http coverall io github pod finance contract branch develop ' img src ' http coverall io repos github pod finance contract badge svg branch develop ' alt ' coverage status ' href http gplv3 fsf org img src http img shield io badge license agpl 3 blue alt license agpl 3 p full documentation doc pod finance http doc pod finance table content documentation documentation compile compile contract contract development development testing testing maintainer maintainer contributing contributing license license documentation check full documentation doc pod finance http doc pod finance compile bash yarn compile contract checkout full address list http doc pod finance developer deployed contract development testing yarn test coverage yarn coverage running locally first need run local node machine hardhat using npx hardhat node run script responsible deploying contract default configuration created initial option pool liquidity npx hardhat setuplocal network local contributing highly encourage participation community help shape development pod interested contributing question ping u twitter http twitter com pod finance discord http discord com channel 713910672525754459 725468404139556874 use yarn http yarnpkg com dependency manager hardhat http hardhat org development environment compiling testing deploying contract contract written solidity v0 6 12 http github com ethereum solidity maintainer guilherme viana ggviana http github com ggviana gui pod finance mailto gui pod finance robson silva robsonsjre http github com robsonsjre rob pod finance mailto rob pod finance license agpl 3 blob master license
/Computable-Finance/CoFiX,Solidity,h1 align center href http cofix io code cofix code h1 p align center computable financial transaction model p p align center future chain market making p p align center href http github com computable finance cofix action query workflow 3acofix img src http github com computable finance cofix workflow cofix badge svg href http travis ci org computable finance cofix img src http travis ci org computable finance cofix svg branch master href http coverall io github computable finance cofix branch master img src http coverall io repos github computable finance cofix badge svg branch master href http www gnu org license gpl 3 0 img src http img shield io badge license gplv3 green svg p cofix http cofix io computable financial transaction model cofix http github com computable finance cofix workflow cofix badge svg build status http travis ci org computable finance cofix svg branch master http travis ci org computable finance cofix coverage status http coverall io repos github computable finance cofix badge svg branch master http coverall io github computable finance cofix branch master whitepaper http cofix io doc cofix white paper pdf http cofix io doc cofix white paper pdf documentation http doc cofix io http doc cofix io http github com computable finance doc http github com computable finance doc guide integrate cofix doc integrate cofix md smart contract diagram cofix smart contract doc cofix smart contract svg p align center thanks great contract architecture p usage run test shell npm install npm run test compile run truffle compile get build result build contract folder including abi json file use npx oz compile adopt openzeppelin cli toolchain deploy deploy truffle get contract deployement summary contract address shell truffle migrate network ropsten may need activate price oracle cofixcontroller contract manually set ktable help script setktable j script setktable j script several script used invoke protocol script script folder simplely run truffle exec script specific script j flag execute example doc change controller md generate abi shell npm run genabi mainnet governance cofix governance multi sig http gnosis safe io app safe 0xf51d8fdf98286e1ea846c79f1526ecc95b93abb8 balance check record governance authority transfer multi sig wallet detail cofix multi sig governance contract doc transfer governance record md governance ownership transferred cofix dao next stage cofi token widely distributed release contract address usdt 0xdac17f958d2ee523a2206206994597c13d831ec7 hbtc 0x0316eb71485b0ab14103307bf65a021042c6d380 nest 0x04abeda201850ac0124161f037efd70c74ddc74c weth 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 nestpriceoracle deprecated use nestpricefacade 0x94f36faa6bb4f74009637292b09c355ccd3e80eb nestquery deprecated use nestpricefacade 0x3bf046c114385357838d9cae9509c6fbbfe306d2 nestpricefacade 0xb5d2890c061c321a5b6a4a4254bb1522425baf0a nest3votefactory 0x6cd5698e8854fb6879d6b1c694223b389b465dea cofixktable 0x75e360be6248bd46030c6818624a09403ef5ec21 cofitoken 0x1a23a6bfbadb59fa563008c0fb7cf96dfcf34ea1 cofixnode 0x558201dc4741efc11031cdc3bc1bc728c23bf512 cofixfactory 0x66c64ecc3a6014733325a8f2ebee46b4ca3ed550 cofixrouter 0x26aad4d82f6c9fa6e34d8c1067429c986a055872 cofixrouter02 beta 0x5c35badebd40308e409df891ac56d17c8625c2bc cofixcontroller deprecated 0xd694ef4c82e50f3f184877572dcd6a45b8feae87 cofixcontroller02 deprecated 0x7e497be7532cc4954d73c6df93f016c53cc0c29a cofixcontroller03 deprecated 0xc6f45eb40609c9cd30c8750a95042de1b8b1dbff cofixcontroller04 0xb99db9674e03a2cb07c3d7d92406ae1a3bbb9f56 cofixvaultforlp 0x6903b1c17a5a0a9484c7346e5c0956027a713fcf cofixvaultfortrader 0xe6183d3094a9e360b123ec1330afae76a74d1cbf cofixvaultforcnode 0x7eda8251ac08e7898e986dbec4ba97b421d545dd cofistakingrewards 0x0061c52768378b84306b2665f098c3e0b2c03308 eth usdt pair 0xb2b7bedd7d7fc19804c7dd4a4e8174c4c73c210d eth hbtc pair 0x7c2d7b53aca4038f2eb649164181114b9aee93cb cofixstakingrewards eth usdt pair 0x3b67fe44216d3e147ba8ccf6e49d2e576441cb10 cofixstakingrewards eth hbtc pair 0x5fd4eb552965f0db9f50ac285c55c8397f19f45b cnodestakingrewards cnode 0xb697a2528d57a2ba8e75e2f33ed56b594cf9f308 eth usdt pair xtoken 0xb2b7bedd7d7fc19804c7dd4a4e8174c4c73c210d xtoken stakingrewards pool 0x3b67fe44216d3e147ba8ccf6e49d2e576441cb10 eth hbtc pair xtoken 0x7c2d7b53aca4038f2eb649164181114b9aee93cb xtoken stakingrewards pool 0x5fd4eb552965f0db9f50ac285c55c8397f19f45b cnode token stakingrewards pool cnodestakingrewards 0xb697a2528d57a2ba8e75e2f33ed56b594cf9f308 beta v0 9 4 contract address usdt 0xdac17f958d2ee523a2206206994597c13d831ec7 hbtc 0x0316eb71485b0ab14103307bf65a021042c6d380 nest 0x04abeda201850ac0124161f037efd70c74ddc74c weth 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 nestpriceoracle 0x94f36faa6bb4f74009637292b09c355ccd3e80eb nest3votefactory 0x6cd5698e8854fb6879d6b1c694223b389b465dea cofixktable 0x75e360be6248bd46030c6818624a09403ef5ec21 cofitoken 0xbf4d534cfe1c293c9bb1cbaa01bb17c8ff65b670 cofixnode 0x2baac0ad6b54b90b07ec89bb8c3542af6c26e81f cofixfactory 0xfb374d926e34add1e5036ef3edd5d9d698722e97 cofixrouter 0x84d9e80d3759aadb5658bcffbc54cd2cf0008b81 cofixcontroller 0x1a53be16d7fae6180692e9fd3d0c4ae90ad0a5f8 cofixvaultforlp 0xbc99a5e7764792cd1024fd5310e9867ee578c23d cofixvaultfortrader 0x8367f04c7d6c2e1ce9f68e77cb850f09cfbaeb8d cofixvaultforcnode 0xb655feec232c0b93a58846724ad5bbdf44d135ed cofistakingrewards 0xf0f095e13b1d86c2c36812a64882565c8ec5f91b eth usdt pair 0x1874c790b75b3e64c813f5bff2428ca03d492063 eth hbtc pair 0xe9ba64c0315b9ff5c29ddf5bdaeeec46fc3dc22e eth usdt pair xtoken 0x1874c790b75b3e64c813f5bff2428ca03d492063 xtoken stakingrewards pool 0x1092521c9cb34b7049efd61e47c2c3d8b726292f eth hbtc pair xtoken 0xe9ba64c0315b9ff5c29ddf5bdaeeec46fc3dc22e xtoken stakingrewards pool 0xb13e3e7e3461d9c40c3faa736cc852b6d61900e7 cnode token test stakingrewards pool cnodestakingrewards 0x939b66cffc1ed066a43bc2e0a075f93bd9f8852e beta v0 9 3 contract address usdt 0xdac17f958d2ee523a2206206994597c13d831ec7 hbtc 0x0316eb71485b0ab14103307bf65a021042c6d380 nest 0x04abeda201850ac0124161f037efd70c74ddc74c weth 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 nestpriceoracle 0x94f36faa6bb4f74009637292b09c355ccd3e80eb nest3votefactory 0x6cd5698e8854fb6879d6b1c694223b389b465dea cofixktable 0x75e360be6248bd46030c6818624a09403ef5ec21 cofitoken test 0xc2283c20a61847240d2eb10e6925d85bcaef89ae cofixnode test 0x2baac0ad6b54b90b07ec89bb8c3542af6c26e81f cofixfactory 0x155bda3255115b244fe3767a9edc002dc76023ad cofixrouter 0xa2b29f965b537a9d279f75e1498413248c265ead cofixcontroller 0x2f51563044d96105611cdb5bee621a5002ee0264 cofixvaultforlp 0xf128802361580fb2a74574dded4e09f44f4ec4cf cofixvaultfortrader 0x357811e0ca5ad4c66f1d44d05a3c73d98b4583cf cofixvaultforcnode 0x1500b2621042fb814c38d9322a62ae214beeea77 cofistakingrewards 0xd16eeafc4f614589eed0bc9294c1ae15f459831a eth usdt pair xtoken 0x893554c9d24583dc4a926a0e6f5118028f4145eb xtoken stakingrewards pool 0xaf6ce9cec2d13773895a6b683f1ce454505d89b1 eth hbtc pair xtoken 0x5455064a184b41a8229e359b481c58f9cfebc991 xtoken stakingrewards pool 0x12114849048b43cb57282027f574a8b92a01eac7 cnode token test stakingrewards pool cnodestakingrewards 0x64d96c347e4e860af4624276c65f0b8db0789b4e beta v0 6 contract address usdt 0xdac17f958d2ee523a2206206994597c13d831ec7 hbtc 0x0316eb71485b0ab14103307bf65a021042c6d380 nest 0x04abeda201850ac0124161f037efd70c74ddc74c weth 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 nestpriceoracle 0x7722891ee45ad38ae05bda8349ba4cf23cfd270f cofixcontroller 0xc16e5eecc0948604eb326296c71311ac8d9bc786 cofixfactory 0xd5a19e1adb5592921dcc42e48623d75c4c91e405 cofixktable 0x75e360be6248bd46030c6818624a09403ef5ec21 cofixrouter 0x2878469c466638e8c0878bb86898073ca6c91b45 ropsten testnet beta v0 9 5 latest contract address usdt 0x200506568c2980b4943b5eaa8713a5740eb2c98a hbtc 0xa674f71ce49ce7f298aea2f23d918d114965eb40 nest 0xd287bc43ecd3d892204aa3792165fe8728636e29 weth 0x59b8881812ac484ab78b8fc7c10b2543e079a6c3 nestpriceoracle deprecated use nestquery 0x70b9b6f0e1e4073403cf7143b45a862fe73af3b9 nestquery 0x3bf1d76a2fb912481022fdc31bd5016cc5a6c671 nest3votefactory 0xab996648c3e7e16253988d4a916456f6f63f04ee cofixktable 0xe609b978635c7bb8d22ffc4ec7f7a16615a3b1ca cofitoken 0x72fd35b1db364db812a8e726891685a25a9135d3 cofixnode 0x655c281dc8610003d8ae490d462b950bda71582f cofixfactory 0x8e636bdb79752bfa2c41285535852bbbdd50b2ca cofixrouter 0xbee8674291328d09831caf96efceacdf53066b86 cofixrouter02 beta 0xadd27c75b7b003cc791e4062e20f9eb872fafc65 cofixcontroller deprecated 0xeb95e090b27a67f574005f41eea83794d5ac1650 cofixcontroller02 deprecated 0x36f99d8500cb288c924b50cf4a081f4c3e6d48dd cofixcontroller03 0x8a814da4d9dfdebf6080bbe2d8c7bb238272507b cofixvaultforlp 0x2494853258c33a99581abddc7b85b11d1d1885df cofixvaultfortrader 0xe901e7f88a377d01028ae947cfa3192b3c5f7587 cofixvaultforcnode 0x159894c1e9712bf2eedb4b2b84dfda154893088b cofistakingrewards 0x2a603d9e8b3152b6e235c7efa41dfc073764d96a eth usdt pair 0xffe14368fc46eb507e5221459a480646f22558b6 eth hbtc pair 0xe0297abdccf60ab85365694e53af92a433c2852e cofixstakingrewards eth usdt pair 0x58fef07559c7b19926bf4104463f80360a677144 cofixstakingrewards eth hbtc pair 0xfdfc41f8b9d8b667b7de8a976f446c557c697981 cnodestakingrewards cnode 0x3ecd22524cddc3e3ac2f52a595a9c7fa3b677ec1 eth usdt pair xtoken 0xffe14368fc46eb507e5221459a480646f22558b6 xtoken stakingrewards pool 0x58fef07559c7b19926bf4104463f80360a677144 eth hbtc pair xtoken 0xe0297abdccf60ab85365694e53af92a433c2852e xtoken stakingrewards pool 0xfdfc41f8b9d8b667b7de8a976f446c557c697981 cnode token stakingrewards pool cnodestakingrewards 0x3ecd22524cddc3e3ac2f52a595a9c7fa3b677ec1 beta v0 9 3 contract address usdt 0x200506568c2980b4943b5eaa8713a5740eb2c98a hbtc 0xa674f71ce49ce7f298aea2f23d918d114965eb40 nest 0xd287bc43ecd3d892204aa3792165fe8728636e29 weth 0x59b8881812ac484ab78b8fc7c10b2543e079a6c3 nestpriceoracle 0x70b9b6f0e1e4073403cf7143b45a862fe73af3b9 cofixktable 0xe609b978635c7bb8d22ffc4ec7f7a16615a3b1ca cofitoken 0xe68976a81572b185899205c7b8bcbd1515df4f5b cofixnode 0x1467459e5bc77c5d350d6c31ba69351df1e1e3a2 cofixfactory 0xc85987c73300cfd1838da40f0a4b29bb64eaed8e cofixrouter 0x66aa2ac8f6557b956ae144efe85fef860d848851 cofixcontroller 0xff460a541dc7af7fea7b98e0ba5ef64c80b1409b cofixvaultforlp 0x7e6dcd3581d596fe5f628b77fd6784f10d09b43d cofixvaultfortrader 0x12fc8391e7c868e7aa90c69e204c60f18aa0afab cofixvaultforcnode 0x1a31b517abf0d2f4f11a797d7b8622859429aa25 cofistakingrewards 0xde80d5423569ea4104d127e14e3fc1be0486531d eth usdt pair xtoken 0x5f22a04f81a87a7abe9191c338fa5ba092af4562 xtoken stakingrewards pool cofixstakingrewards 0xa3904574e4fbf7592b3a3c1439cae97d5622fbfd eth hbtc pair xtoken 0x9d90e9e5aff7545046ff66544b7848c21118da22 xtoken stakingrewards pool cofixstakingrewards 0xe6c3bd6d258ce7fc7554723fc2b93f848cef30e7 cnode token stakingrewards pool cnodestakingrewards 0x6c62b1ed1c2aa3c9f51c9d7657e6d73dbe4607c0 beta v0 1 contract address cofixrouter 0x07f4385f741f873423dede6c2645698fcb287683 cofixfactory 0x869eff8b605e0b5ba3e8b9f81c199b2bbb3e34df usdt token 0xb5852d2cc06cd394f52c9edebf0f1d59ad4a0615 weth 0x1a2c206fce664440c0b953df0c976b1208f411eb nest3priceoraclemock 0x9de1109708926c90117dafb23f13176bb6d878e0 beta v0 2 contract address cofixrouter 0xea19497f26eef50a68cd4502410471f41c23b563 cofixfactory 0x2f3dc9488c8cea30c2dca6bb78ad15d1e37206b7 usdt token 0x83a1e68da9fa81b3a54ddc49fbb2c13cf4f7239d weth 0xd44b717a5d54a9520b411d0f297ed69ef81af10e cofixcontroller 0x01b5ff069b49d2da08ccbce9d8506d59472ea868 nest3priceoraclemock 0xf137dd7c6f091494597e0907d234e486128bc937 beta v0 3 contract address usdt 0xdc9e7381678efa251e403f8f9fafcbdbf91a5c6c hbtc 0x081b96b53f887ef4543649ced7fd7a5a872bdd29 weth9 0xcfcf136eec1c4a03bc2f684090844bf67168bf90 nest3priceoraclemock 0x33eb7860427220684d6d69e0ce1914ffbfac56b1 cofixcontroller 0x6d631e101bc36a6f51fb875059347b1d4830bdbb cofixfactory 0xd9ab2ca67641f11e808d32ffc5741a3a0d44e05c cofixrouter 0x442a92e41eefa4567a75d27773a9a64e8d3a6880 beta v0 4 contract address usdt 0xd52d3bfca0d39e4bd5378e0bba8ad245c3f58c17 hbtc 0x9aa0af152cf141740f19d335b5dde1f0e51008a7 nest 0xb9746a8572db5c27597fe88b86b6520599bf62d4 weth9 0xb3d7c7993be7beec23d005552224b2daf18bd85e nest3priceoraclemock 0x2183b4bc72c299fddff27d4bdbc635bbc8ca5e44 cofixcontroller 0xf2fe41c81c60698e2abe1b8cb7bb56c5570e3c55 cofixfactory 0xde33584665ea098748897b1292150c003b855df6 cofixktable 0xdb69107004694428aab5e6f196dcdd588f52b745 cofixrouter 0x2cc5b038bd296779a3a50430179cb8c6a02b9d13 beta v0 7 contract address usdt 0x200506568c2980b4943b5eaa8713a5740eb2c98a hbtc 0xa674f71ce49ce7f298aea2f23d918d114965eb40 nest 0xd287bc43ecd3d892204aa3792165fe8728636e29 weth 0x59b8881812ac484ab78b8fc7c10b2543e079a6c3 cofitoken 0xa1b66d21dc42cccde55f06f381cbcecd422ef4d4 cofistakingrewards 0x8beefdc9ba635e2451d275ca1b9afee3c13d65d7 nestpriceoracle 0x70b9b6f0e1e4073403cf7143b45a862fe73af3b9 cofixcontroller 0x636520329ee488cb99552ab225267668608b179a cofixfactory 0xf56e0c6e9d3233b99fa439710147e52b9ef26f60 cofixktable 0xe609b978635c7bb8d22ffc4ec7f7a16615a3b1ca cofixrouter 0x30f1c72cfcf96c4de2e279fa256567f8adbef888 cofixvaultforlp 0x4f6544af9ea4107b52d4563f16c2a660d1e7eb41 beta v0 8 contract address usdt 0x200506568c2980b4943b5eaa8713a5740eb2c98a hbtc 0xa674f71ce49ce7f298aea2f23d918d114965eb40 nest 0xd287bc43ecd3d892204aa3792165fe8728636e29 weth 0x59b8881812ac484ab78b8fc7c10b2543e079a6c3 nestpriceoracle 0x70b9b6f0e1e4073403cf7143b45a862fe73af3b9 cofixktable 0xe609b978635c7bb8d22ffc4ec7f7a16615a3b1ca cofitoken 0x0c7cad803686a284542d807406f4cd0b2c6b5d17 cofixnode 0xa4b1412ecababb6f3188aa411546491790bde89b cofixfactory 0xb19ebe64a0ca9626824abbdbdec4a76294d460a5 cofixrouter 0xb9a933fe0eeb184b2e35372b3ad55fdc4b325469 cofixcontroller 0xe4fa2daa56e87a927386790d41e3f9906e40f4c2 cofixvaultforlp 0xb6ae9774d2c743b0886123a1c98d4fc92558babc cofixvaultfortrader 0xcf3167afcaf33f899d4fa0ab431d3b6038c79dbf cofixvaultforcnode 0xef1976634a2fbcced89dfaa44fad85a4a211e4b3 cofistakingrewards 0xc8b29e0b4f5e9a55a0130934a690655befba34b4 kovan testnet beta v0 9 contract address usdt 0x3399eb8165888221a30c822753648dfc16ed3803 hbtc 0xc34156be35c870d47638efdcfa20e39e299607b0 nest 0xa50cb75ee798268aea5de0f0aee271595e1caaa2 weth 0x39ede2c2ca91295bea2f20080c0b82872b7c64b7 nestpriceoracle 0x505a054e6064fadb9277864647641ef64b7c783b cofixktable 0xa01fecbed543dcf5612d379ecbe23b0d2763c0d6 cofitoken 0x61f423c704fcfd84adf006db84a905ddca2ba4fa cofixnode 0xc2b66c87bfca3900031b246a169fb6a67a911d8a cofixfactory 0x3b4d6962a3f5184d9eb240d70070516addc3f4c5 cofixrouter 0x5f6c887b22a8b30c2eca90b9c63ff370494790b7 cofixcontroller 0xed03772aff6b83875de68c89961f83899d29eed1 cofixvaultforlp 0x1eaf116d62eb943fcf28a0645b8059efbb829fab cofixvaultfortrader 0x37289c1d3beae79c0eef494abf5209668e1704b9 cofixvaultforcnode 0x04983eea3aa0a73a1487b255aba688619844b023 cofistakingrewards 0x453fed6fe31a17c8277bd7f477ebbcb542d4ad5d beta v0 5 contract address usdt 0x04716baa169f6e5bafe92e4643c2f18480ba46d3 hbtc 0xcae23767df5bbebd0d64402a7d3d82776f97be46 nest 0x08cff00044dece1d817f3d30a7cc8aef43a284de weth 0x6a04af9c9793d9ee1a27eb7a343f940282a0ab9e nestpriceoracle 0x93afa4ff16874cf9d4f29da4973be277f53607af cofixcontroller 0xf71141f66e15740db5d59e4c31ee0d84d6584452 cofixfactory 0x9984dce65387d9ae8a495452f72df0a0d4f85d2c cofixktable 0x0441e7e4c1ecd73a068f0696cf4cb10ea69dd74a cofixrouter 0xb5852d2cc06cd394f52c9edebf0f1d59ad4a0615 test flow check test cofix test j test cofix test j detail
/cusdt-LINK/kcc-flashswap-arb,Solidity,kcc flashswap arb maintenance http img shield io badge maintained 3f yes green svg http github com cusdt link kcc flashswap arb graph commit activity nbsp github issue http img shield io github issue cusdt link kcc flashswap arb svg http github com cusdt link kcc flashswap arb issue nbsp github last commit http img shield io github last commit cusdt link kcc flashswap arb style plastic nbsp typescript http badgen net badge icon typescript icon typescript label http typescriptlang org arbitrageur contract typescript bot implementation leverage flash swap arbitrage uniswap v2 amms related fork rationale lot amms ethereum blockchains support evm many amms fork uniswapv2 share interface list amms ksfswap kcc spookyswap ftm traderjoe avax uniswap v2 ethereum sushi swap ethereum mojitoswap kcc kuswap kcc exploit inefficiency arbitrage amms price token pair diverges different amms without ever risking menial txn fee flash swap similar aave flash loan allow withdraw liquidity erc20 token uniswap without cost given end transaction either pay withdrawn erc20 token corresponding pool pair token return withdrawn erc20 token next block mined unable meet either condition mentioned flash swap transaction fail arbitrary execution involved transaction rolled back possible flash swap atomic ethereum transaction suppose ' like arbitrage token pair alpha wkcs alpha wkcs pair must exists multiple amms kcc evm compatible blockchains ftm call wkcs base token token actual value usdt usdc dai busd call alpha quote token token even regardless value quote token ' reserved arbitrage executed arbitrage base token reserved profit denominate base token two token pair considered base token either one reserved arbitrage type arbitrage referenced done using uniswap v2 flashswap example suppose pair0 pair1 two pair two token different amms price diverges exploit inefficiency arbitrage bot call flashbot contract start arbitrage contract calculates price denominated quote token suppose price quote token pair0 lower 1 using flash swap contract first borrows quote token pair0 amount x contract need repay debt pair0 debt denominated base token functionality uniswap v2 2 sell borrowed quote token pair1 contract get base token amount y2 3 repay debt pair0 base token amount y1 4 contract keep profit y2 y1 point process calculate much amount x extract much profit possible supoose initial state pair0 pair1 follows pair0 pair1 base token amount a1 a2 quote token amount b1 b2 get img http ibb co y0fcrxf a806 dabd 7 a56 4879 8074 d700 a010 a32 f png amount borrowed quote token delta b1 delta b2 let x delta b profit function x img http ibb co thpkpht 4 a5 fe15 f 12 fb 43 a8 b806 8 abde3 ea15 a8 png want calculate value x function get maximum value first need get derivative function img http ibb co v1f3dct e9 a77 c78 ebe1 47 b9 9 a22 a1 fb4082 f12 b png derivative function 0 function ha maximum minimum value set condition ignore solution minimum possible solve img http ibb co pmcnbd5 abdf7 d84 e0 d0 421 b 8 ed7 16180 e637673 png img http ibb co hmtcsyz dd6 cc8 eb 9013 4639 a676 a675 bcd2628 e png let img http ibb co njvdnqs 04 e07391 c4 cf 4 ebf 8 fc5 4 fc7388 f2467 png previous equation reduced general quadratic equation img http ibb co vbfxpy5 f1 bf9231 d0 a1 47 d8 89 bc 2863 ab1 c4691 png solve img http ibb co cbskky2 525 b4 d01 9 e1 b 4 b15 bf2 13 fdbeb6 a299 png solution x amount need borrow pair0 usage deploy flash swap contract 1 edit network config hardhat config currently configured kcc however also deploy evm compatible chain 2 copy secret sample config bash cp secret sample secret 3 edit private key wallet address field secret config 4 run deploy j script default deploys kcc want dpeloy different network need change network setting hardhat config also need change wkcs token address deploy ' set wkcs address default bash hardhart network xxx run script deploy example bash npx hardhat network kcc run script deploy bot implementation contract function getprofit address pool1 address pool2 used calculate maximum profit two pair denominated base token bot need call getprofit get possible profit token pair profitable bot call flasharbitrage pool1 pool2 execute arbitrage profit remain contract address withdraw contract owner may call withdraw withdraw profit run bot bash sudo yarn bot testing bash hardhat test faq need hold token perform arbitrage simple bot exploit divergence price different amms ' profit filling gap contract help make maximum profit using flashswaps need enough token pay txn fee gas run change token pair bot monitoring upon startup bot us kccbasetokens kccquotetokens kccdexes token automatically get possible token pair save kcc pair json json file reused delete want reconfigure pair simply delete kcc pair json edit three variable rerun bot us new pair check new pair kcc pair json please note use public rpc provider chance rate limited within second minute connection slow effective bot work best connected private light node license mit http choosealicense com license mit
/antoncoding/opyn-monitor,TypeScript,opyn monitor netlify status http api netlify com api v1 badge aff350a5 fd8c 49c8 b8c6 c96bd69d5343 deploy status http app netlify com site opynmoinor deploys p align center img src public favicon ico height 100 p align center code position management opyn asset code p opyn monitor open source frontend interface opyn decentralized option protocol project built community maintained antoncoding currently hosted opynmonitor xyz http opynmonitor xyz disclaimer official interface interact opyn please visit opyn co use official interface provided opyn core team frontend code verified auditted way please use risk contract ui interacts opyn http github com opynfinance convexity protocol option core 0x http 0x org 0x trading dex flashloan liquidator http github com antoncoding liquidatorbot flashloan liquidator built kollateral http www kollateral co aggregator service library used aragonui http github com aragon aragon ui ui lib blocknative http www blocknative com onboarding mempool notify sdk graph http thegraph com install run shell npm install npm start donation donation appreciated yellow heart contribute gitcoin grant http gitcoin co grant 1064 opyn monitor directly send token following address ethereum 0xd325e15a52b780698c45ca3bdb6c49444fe5b588 screenshots opyn option http imgur com yisoouf png trade eth option trade http imgur com r1vtdiz png
/IPILabs/shorter-v1-periphery,Solidity,shorter v1 periphery depth documentation shorter v1 available doc shorter finance http doc shorter finance local development following assumes use node 12 install dependency yarn compile contract yarn build
/Aymen1001/aave-flashloan-arbitrage,Solidity,aave flashloan arbitrage smart contract performing arbitrage aave flashloan uniswap amp sushiswap feature flashloans one exciting concept web3 0 defi industry allow user borrow large amount asset erc20 use kind application condition borrowed money returned transaction many protocol provide possibility flashloan like aave uniswap dydx flashloanarbitrage smart contrat us aave flashloan arbitrage uniswap sushiswap exchange ' devided 2 part first arbitrage logic deposit withdraw functionality second implement flashloan logic found aave doc built solidity http doc soliditylang org brownie http eth brownie readthedocs io openzeppelin http doc openzeppelin com usage installation setup 1 installing brownie brownie python framework smart contract development testing deployment ' quit like hardhat http hardhat org us python writing test deployements script instead javascript simple way install brownie pip install user pipx pipx ensurepath restart terminal pipx install eth brownie ' get pipx work via pip ' recommended use pipx pip install eth brownie install ganache cli http www npmjs com package ganache cli sh npm install g ganache cli 3 clone repo sh git clone http github com aymen1001 aave flashloan arbitrage git cd aave flashloan arbitrage 4 set environment variable able deploy real testnets need add private key find private key ethereum wallet like metamask infura project id create infura account ' free env file private key private key web3 infura project id infura project id run start arbitrage mainnet fork testing purpose also use kovan testnet need run command sh brownie run script flashloan arbitrage py network mainnet fork
/partylikeits1983/num_complex_solidity,Solidity,num complex solidity complex number solidity library development please feel free make pull request added functionality usage npm bash npm partylikeits1983 complex sol solidity spdx license identifier unlicense pragma solidity 0 8 12 import partylikeits1983 complex sol contract complex sol contract model function test int int im public return int int im complex complexln im return im version 1 0 function description gas estimation add bi bi 698 sub bi bi 687 mul bi bi 2212 div bi bi 4099 r2 2 b 2 c 2 2188 frompolar z r co isin 2518 topolar z r co isin 5506 atan2 tan 1 2632 p atan2 precise tan 1 3442 atan1to1 tan 1 1 1 2496 complexsqrt bi 1 2 8812 complexpow n 1 bi n 18182 complexexp e bi 4986 documentation num complex solidity documentation doc index md testing sh npx hardhat test test math test j acknowledgement big thanks author mds1 solidity trigonometry http github com mds1 solidity trigonometry prb math http github com paulrberg prb math repository sponsor repository would like support repository please feel free make contribution address 0x74d6e0f5bff59a2a6b3cde43c26ecaac31101722 proceeds go development repository contribution greatly appreciated sponsor paul berg http github com paulrberg license licensed either apache license version 2 0 http www apache org license license 2 0 mit license http opensource org license mit option contribution unless explicitly state otherwise contribution intentionally submitted inclusion work defined apache 2 0 license shall dual licensed without additional term condition
/madfish-solutions/quipuswap-core,TypeScript,description project intended provide easy efficient way exchange token xtz tezos blockchain wide number direction using smart contract listed repo user add token exchange provide liquidity potentially make profit fully decentralized way current implementation support fa1 2 http gitlab com tzip tzip blob master proposal tzip 7 tzip 7 md fa2 http gitlab com tzip tzip blob master proposal tzip 12 tzip 12 md architecture architecture architecture png solution consists 6 type contract 1 factory singleton used deploy new tokenx xtz exchange pair 2 dex contract tokenx xtz pair exchange 3 ttdex contract tokenx tokeny pair exchange 4 token fa token implementation 5 bakerregistry bakery registrar 6 metadatastorage contract store upgrade share token metadata project structure ci script continues integration contract contract main contract compiled partial code part imported main contract test test case storage initial storage contract origination script cli dex factory action test md case covered test readme md current file env gitignore package json architecture png prerequisite installed nodejs tested nodejs v12 installed yarn npm ' working properly ganache cli 6 11 0 tezos 0 installed ligo curl http gitlab com ligolang ligo raw dev script installer sh bash next installed node module cd quipuswap core yarn configure truffle config j needed http www trufflesuite com doc tezos truffle reference configuring tezos project quick start compile deploy contract delphinet 1 chose configure version fa12 fa2 setting exchange token standard env run yarn migrate network yarn migrate network name usage contract processed following stage 1 compilation 2 deployment 3 configuration 4 interaction chain quipuswap support 2 token standard vary token interface implementation inter contract communication dex external token shared codebase used therefore work specific standard version configure setting exchange token standard env either fa12 fa2 compilation compile contract run yarn compile artifact stored build contract directory deployment deployment step following command used yarn migrate address deployed contract displayed terminal stage new metadatastorage factory originated aditionaly testnets two new pair deployed testing ' like run test local environment might want run ganache cli tezos using following command yarn start sandbox truffle framework used testing run yarn test note want use different network configure truffle config j need use different standard configure exchange token standard env
/darrylyeo/blockhead,TypeScript,blockhead darryl yeo blockhead dynamic user friendly cross chain crypto portfolio manager explorer interface ethereum evm based blockchains http blockhead info blockhead info
/jet-lab/jet-v2,TypeScript,div align center img height 170 src http 293354890 file gitbook io file v0 b gitbook legacy file asset 2f 72skn1dye71pumdjs 2f miqzl5ok1cxxakarfer 2f mi yekp1krh7jofzqg 2fjet logomark color png alt medium token 0b8dfc84 37d7 455d 9dfd 7bb59cee5a1a h1 jet v2 h1 p target blank href http github com jet lab jet v2 action workflow rust coverage yml img alt build src http github com jet lab jet v2 action workflow rust coverage yml badge svg target blank href http discord com channel 880316176612343891 img alt discord src http img shield io discord 833805114602291200 color blueviolet target blank href http opensource org license agpl 3 0 img alt license src http img shield io badge license agpl 3 0 later blue p h4 target blank href http jetprotocol io webite target blank href http doc jetprotocol io doc h4 div install install anchor please see anchor documentation http project serum github io anchor getting started installation html make sure update solana latest version sh c curl ssfl http release solana com v1 10 23 install install anchor npm project serum anchor cli 0 24 2 g install project ' node module npm run npm test run test suite
/yearn/YIPS,HTML,copyright 2020 yearn finance contributor p align center img src http rawcdn githack com gist sambacha 9a62174a080ead34271ff5d187a24343 raw 02cad2900f4cedb87895cc57729030e095d2869f gh banner svg align right width 350 &#9; h1 align left yip h1 h3 align center h3 p align center align center validate http github com iearn finance yip workflow validate badge svg branch master discord http img shield io discord 734804446353031319 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 734804446353031319 telegram http img shield io badge chat 20telegram blue svg http yearnfinance twitter follow http img shield io twitter follow iearnfinance svg label iearnfinance style social http twitter com iearnfinance yip yip contributing contributing yip status yip status validation validation visit governance proposal documentation webpage http doc yearn finance governance proposal repository &#9; yearn finance improvement proposal yip describe standard yearn platform including core protocol specification client apis contract standard governance operation contributing 1 review yip 0 yip yip 0 md 2 fork repository clicking fork top right 3 add yip fork repository template yip yip x md 4 submit pull request yearn ' yip repository http github com iearn finance yip first pr first draft final yip must meet formatting criterion enforced build largely correct metadata header editor manually review first pr new yip assign number merging make sure include discussion header url new thread gov yearn finance http gov yearn finance people discus yip whole yip requires image image file included subdirectory asset folder yip follow asset yip x yip x linking image yip use relative link asset yip x image png believe yip mature ready progress past wip phase ask issue added next governance call discussed inclusion future platform upgrade community agrees include yip editor update state yip ' approved ' yip status wip yip still developed proposed yip ready reviewed governance call approved yip ha accepted implementation yearn community implemented yip ha released mainnet rejected yip ha rejected withdrawn yip ha withdrawn author deferred yip pending another yip change bundled together moribund yip wa implemented obsolete requires explicit replacement validation yip must pas validation test yip repository ensures running test using html proofer http rubygems org gem html proofer yip validator http rubygems org gem yip validator possible run yip validator locally gem install yip validator yip validator input file yip generator yip generator available nodejs package http github com sambacha generator yyip copyright copyright related right waived via cc0 http creativecommons org publicdomain zero 1 0
/saddle-finance/saddle-frontend,TypeScript,saddle frontend ci http github com saddle finance saddle frontend workflow ci badge svg http github com saddle finance saddle frontend action query workflow 3aci open source ui saddle ui deployed ipfs accessible saddle exchange http saddle exchange saddlefinance eth link http saddlefinance eth link installation bash npm install create env local file valid react app network url e g alchemy infura valid blocknative api key bash react app network url http eth mainnet alchemyapi io v2 key react app notify dapp id block native api key usage bash npm run start math max min sdl reward per gauge per second rate min 0 4 sdlpriceusd minter rate gaugecontroller gauge relative weight 1e18 gauge working supply lptokenpriceusd max sdlpriceusd minter rate gaugecontroller gauge relative weight 1e18 gauge working supply lptokenpriceusd partner reward per gauge per second rate min 0 4 reward rate rewardtokenpriceusd gauge working supply lptokenpriceusd max reward rate rewardtokenpriceusd gauge working supply lptokenpriceusd
/NeapolitanSwaps/CherrySwap,JavaScript,cherryswap monorepo circleci http circleci com gh neapolitanswaps cherryswap tree master svg style svg http circleci com gh neapolitanswaps cherryswap tree master coverage status http coverall io repos github neapolitanswaps cherryswap badge svg branch master http coverall io github neapolitanswaps cherryswap branch master cherry swap autonomous open source platform interest rate swap compound finance market additionalresources screenimage2 png ethberlinzwei winner theblock write http www theblockcrypto com genesis 38113 ethberlin interest rate hackathon project interest rate swap coming defi cherry swap http cryptobriefing com interest rate swap coming defi cherry swap table content resource resource team team network network testnets testnets kovan testnet kovan testnet mainnets mainnets ethereum mainnet ethereum mainnet work work technical description technical description local development local development testing testing code linting code linting deployment deployment issue issue additional resource additional resource license license resource cherryswap v2 paper double bonding curve liquidity pool automatic swap market maker http www notion neapolitan double bonding curve liquidity pool automatic swap market maker e6f2eb5001244ed89832789e07e1ca71 smart contract documentation doc contract spec cherryswap md team chris maree integration sabine bertram vyper contract haythem sellami solidity contract chris fulford front end development liesl eichholz design ux ui network testnets kovan testnet contract address deployed kovan test network contract address cherrydai cherrymath cherryswap mainnets ethereum mainnet contract address deployed mainnet mainnet contract address cherrydai cherrymath cherryswap work technical description local development monorepo contains following package front end package front end cherryswap interface smart contract package smart contract cherryswap v2 contract shared package shared script package node j lts greater required bash current package name alias frontend contract testing code linting linting setup javascript eslint http eslint org solidity solhint http protofire github io solhint prettier http prettier io lint solidity contract yarn run contract prettier code style enforced ci test process build fail ' linting error deployment issue come across issue cherryswap search issue http github com neapolitanswaps cherryswap issue tab repo make sure ' reported follow step help u prevent duplicate issue unnecessary notification going many people watching repo issue found ha reported still open detail match issue give thumb relevant post issue thread signal issue action required part issue found ha reported still open issue missing detail add comment issue thread describing additional detail issue found ha reported ha closed comment closed issue thread ask issue reopened still experiencing issue alternatively open new issue reference closed issue number link state still experiencing issue provide additional detail post better understand issue fix additional resource figma mockups formula validation license mit license copyright c 2019 neapolitanswaps permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
/lifinance/sdk,TypeScript,li fi sdk li fi cross chain swap sdk please checkout sdk doc http doc li fi integrate li fi j sdk install li fi sdk api reference http apidocs li fi information installation bash yarn add lifi sdk bash npm install save lifi sdk summary package allows accessing li fi api find best cross chain route different bridge route executed via sdk learn li fi http li fi check changelog changelog md see changed last release extend sdk install dependency bash yarn test test code jest framework bash yarn test build build production distribution file dist folder bash yarn build publish order update package commit new change first run following command bash yarn release bump version number according type last commits e major minor bug fix release create new git tag update changelog md next need push code new version tag bash git push git push tag
/corbinpage/yield-farmers-almanac,HTML,yield farmer ' almanac yield farming ha emerged massive new trend defi hard understand follow along find best opportunity given rapid pace innovation experiment yield farmer ' almanac community sourced reference yield farming information meant clear accessible repo get 2000 star 2000 merged pr ' distribute token retroactively contributor adding best date content hot protocol protocol token description reward access compound protocol compound md comp lending protocol http compound finance anyone deposit borrow token rate apr set market 2 880 comp distributed daily borrower lender 50 50 protocol allocated market based proportion http compound finance governance comp compound dapp http app compound finance balancer protocol balancer md bal dex automated market maker project http balancer finance allows anyone create add liquidity customizable token portfolio earn trading fee token exchanged centralized router make sure trade get best price across pool pass fee liquidity provider 145k bal distributed every week tuesday evening offchain rule team iterate quickly info found http forum balancer finance balancer dapp http pool balancer exchange zapper pool http www zapper fi invest curve http www curve fi crv dex automated market maker project http www curve fi designed efficient cheap swapping stablecoins low slippage liquiditiy pool token also deposited lending protocol like compound earn additinal fee reward 766k crv minted per day distributed liquidity provider top trading fee curve dapp http www curve fi synthetix protocol synthetix md snx derivative protocol http www synthetix io creating chain synthetic asset track value real world asset including fiat currency commodity e g gold cryptoassets stock index derivative planned reward distributed curve susd pool ieth ibtc market synthetix mintr dapp http www synthetix io product mintr yearn finance protocol yfi md yfi lending protocol aggregator http yearn finance utilizes aave compound dydx fulcrum optimize rebalance token lending us curve http www curve fi amm automated market maker liquidity yfi reward distributed curve yusd pool http www curve fi well staking make governance decision earn extra yearn dapp http yearn finance farming opportunity protocol token description reward access yam protocol yam md yam radical defi experiment http yam finance reward issued mulitple uniswap pool well yam ycrv uniswap pool deprecated v2 progress http medium com yamfinance yam post rescue attempt update c9c90c05953f zz mstable http mstable org mta stablecoin lending dex protocol http mstable org meant provide alternative stablecoin musd includes aggregate existing peg asset provide yield insure capital loss currently providing reward musd mta balancer pool well uniswap balancer http pool balancer exchange ren protocol protocol ren md ren decentralized cross chain swap protocol http renproject io allowing anyone move asset across different blockchain network currently support renbtc renbch renzec token ethereum ren reward farmed curve sbtc pool http www curve fi sbtc deposit detail http blog synthetix io btc yield farming pool curve sbtc pool http www curve fi sbtc deposit uma protocol uma md uma derivative protocol http umaproject org creating chain synthetic asset currently providing reward yusd usdc pool balancer balancer http pool balancer exchange aave protocol aave md lend lending protocol http aave com allows multi token market stable borrowing rate flash loan delegated credit tbd announced http medium com aave governance testnet seize power f1237c01567d set protocol protocol set md set portfolio management protocol http www tokensets com create manage trade basket token customizable allocation portfolio rebalance optimize based coded strategy tbd announced http medium com set protocol introducing set v2 afc577050bc0 based money protocol based md based defi game chicken http based money based token combine simplified version ampleforths economic policy yfis distribution mechanism result post modern economic game continually reset barrier entry fair balanced participant tbd staking app http stake based money resource yieldfarming info http yieldfarming info information access many different pool defi rate http defirate com earn great overview different opportunity coingecko defi coin http www coingecko com en defi list top defi coin farm contributing pull request welcomed encouraged please aim honesty objectivity defi community ha reliable information depend spammy shilly activity ' tolerated merged contribution opportunity add new yield farming opportunity fill protocol page protocol folder translate summary language add return range different pool would like moderator get rewarded token please contribute great content permission updated license mit http choosealicense com license mit
/primitivefinance/v1-contracts,Solidity,http raw githubusercontent com primitivefinance primitive frontend develop src icon primitivebannersvg svg primitive protocol http img shield io github star primitivefinance primitive v1 style social http img shield io github star primitivefinance primitive contract style social twitter follow http img shield io twitter follow primitivefi style social discord http img shield io discord 168831573876015105 svg label logo discord logocolor ffffff color 7389d8 labelcolor 6a7ec2 http discord gg rzrwj4k documentation database primitive protocol contract documentation hosted notion primitive protocol hq http www notion primitivefi primitive protocol hq fc081b939bb04e2a90ccaebf36faa78e contract primitive decentralized protocol option focused security simplicity user developer tap protocol offer underwrite tokenized option erc 20 token protocol operates without centralized control enabling immutable set smart contract work perpetuity ethereum repository ha core contract option primitive live contract address http www notion primitivefi dc3b883ff9d94044b6738701b2826f7a v 9e56507d430d4f4fb1939242cfb23736 use hardhat http hardhat org development environment compiling testing deploying contract testing run test yarn test run coverage yarn coverage deployment yarn deploy mainnet yarn deploy rinkeby verify deployment yarn verify rinkeby yarn verify mainnet report coverage coverage report available http www notion primitivefi coverage report b49c6f99571c4307aa78c9a0c0175ca2 gas gas report available http www notion primitivefi gas report 9d89c906edec48ec9c4afe6209277f19 contributing join developer team primitive discord discord http discord gg jbm6apt security disclosure security vulnerability help u ensure security user report security vulnerability believe youve found security vulnerability one contract platform send u emailing security primitive finance mailto security primitive finance please include following detail report description location potential impact vulnerability detailed description step required reproduce vulnerability
/galacticcouncil/Basilisk-node,Rust,basilisk node local development follow step prepare local substrate development environment hammer wrench simple setup install required dependency single command patient take 30 minute bash curl http getsubstrate io ssf bash fast manual setup find manual setup instruction substrate developer hub http substrate dev doc en knowledgebase getting started manual installation build development environment set build node command build wasm http substrate dev doc en knowledgebase advanced executor wasm execution native http substrate dev doc en knowledgebase advanced executor native execution code bash make build run local testnet relay chain repository polkadot ha built polkadot install polkadot launch utility used start network npm install g polkadot launch start local testnet 4 relay chain validators basilisk parachain 2 collators cd rococo local polkadot launch config json observe basilisk log multitail 99 log use testing runtime also option run testing runtime le restrictive setting facilitate testing new feature following command start dev node collator testing runtime used runtime node bash target release basilisk dev runtime testing testing runtime currently support two chain specification dev local testnet runtimes store blockchain data directory e g dev directory shared runtimes started dev parameter ' important purge chain data switching different runtime note runtime parameter ' used purging chain data case starting testnet using polkadot launch tool ' option communicate internal command would like use testing runtime overcome limitation rename binary start testing prefix e g testing basilisk binary always us testing runtime even runtime testing option specified start local testnet testing runtime cd rococo local polkadot launch testing config json interaction node go polkadot apps http dotapps io connect local testnet w localhost 9988 live w basilisk hydradx io 9944 note fixedu128 type yet implemented polkadot apps balance measure price reasonably selected using polkadot apps create pool 1 mega unit equal 1 1 price 20 mega unit equal 20 1 price 50 kilo unit equal 0 05 1 price
/AmbireTech/adex-protocol-eth,JavaScript,adex protocol eth ethereum implementation adex protocol http github com adexnetwork adex protocol replaces adex core http github com adexnetwork adex core repository implement outpace http github com adexnetwork adex protocol blob master outpace md chain unidirectional trustless payment channel gas abstraction layer called adex identity http github com adexnetwork adex protocol issue 10 please note every channel eventually expire validuntil allowing non withdrawn portion initial deposit received back whoever opened channel channel created erc20 token underlying token channel insecure malicious also compromise channel well scope contract since fundamental issue system us erc20s needle say user need aware token ' using earning detail outpace channel work please read spec adex protocol http github com adexnetwork adex protocol outpace http github com adexnetwork adex protocol blob master outpace md testing first run ganache cli separate terminal truffle build important cause j identityproxydeploy us artifact npm test deployment contract adexcore version v3 1 0 compiled solc v0 5 6 deployed mainnet http etherscan io address 0x333420fc6a897356e69b62417cd17ff012177d2b goerli http goerli etherscan io address 0x333420fc6a897356e69b62417cd17ff012177d2b kovan http kovan etherscan io address 0x333420fc6a897356e69b62417cd17ff012177d2b identity initialized privilege used basis identityproxy mainnet http etherscan io address 0xbdf97b0f5fa78beae684d9fb67dd45f11b996e46 goerli http goerli etherscan io address 0xbdf97b0f5fa78beae684d9fb67dd45f11b996e46 identityfactory set adex relayer mainnet http etherscan io address 0x801dbbb2fcbf9f4c3865c6ba5c5012ee19ec283a goerli http goerli etherscan io address 0x801dbbb2fcbf9f4c3865c6ba5c5012ee19ec283a registry obsolete longer used mainnet http etherscan io address 0x7671db0a70fa0196071d634f26971b9371627dc0 goerli http goerli etherscan io address 0x7671db0a70fa0196071d634f26971b9371627dc0 v4 1 contract compiled solc v0 5 13 identity initialized privilege used basis identityproxy mainnet http etherscan io address 0x96e3cb4b4632ed45363ff2c9f0fbec9b583d9d3a goerli http goerli etherscan io address 0x96e3cb4b4632ed45363ff2c9f0fbec9b583d9d3a identityfactory set adex relayer mainnet http etherscan io address 0xd5a1c8a5ea507ea459216ff34939cae3326dba6f goerli http goerli etherscan io address 0xd5a1c8a5ea507ea459216ff34939cae3326dba6f staking mainnet adx token adex multisig slasher http etherscan io address 0x46ad2d37ceaee1e82b70b867e674b903a4b4ca32 goerli tst token creator slasher http goerli etherscan io address 0x46ad2d37ceaee1e82b70b867e674b903a4b4ca32 v4 2 adxsupplycontroller contract mainnet http etherscan io address 0x360625ba7bce57f74eb5501fd2b75db8f85a85d8 goerli http goerli etherscan io address 0x360625ba7bce57f74eb5501fd2b75db8f85a85d8 adxtoken contract mainnet http etherscan io address 0xade00c28244d5ce17d72e40330b1c318cd12b7c3 goerli http goerli etherscan io address 0xade00c28244d5ce17d72e40330b1c318cd12b7c3 instance identityfactory used staking mainnet http etherscan io address 0x9fe0d438e3c29c7cff949ad8e8da9403a531cc1a goerli http goerli etherscan io address 0x9fe0d438e3c29c7cff949ad8e8da9403a531cc1a staking contract mainnet adx token adex multisig slasher http etherscan io address 0x4846c6837ec670bbd1f5b485471c8f64ecb9c534 goerli tst token creator slasher http goerli etherscan io address 0x4846c6837ec670bbd1f5b485471c8f64ecb9c534 adxflashloans contract mainnet http etherscan io address 0xae4c306ce6641e1276c57473f2c2953841f0856a goerli http goerli etherscan io address 0xae4c306ce6641e1276c57473f2c2953841f0856a adxloyaltypooltoken contract mainnet http etherscan io address 0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c goerli http goerli etherscan io address 0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c adxloyaltypoolincentivecontroller contract mainnet http etherscan io address 0xc1aec6a718c16698d14e9f4d88d2268ae8b04e71 goerli http goerli etherscan io address 0xc1aec6a718c16698d14e9f4d88d2268ae8b04e71 v5 supplycontroller contract mainnet http mainnet etherscan io address 0x617e6f354d288fcb33e148b1bb6d2cc9be1f7695 goerli http goerli etherscan io address 0x617e6f354d288fcb33e148b1bb6d2cc9be1f7695 new v5 supplycontroller increased cap account burned staking migration adx mainnet http etherscan io address 0x9d47f1c6ba4d66d8aa5e19226191a8968bc9094e goerli http goerli etherscan io address 0x9d47f1c6ba4d66d8aa5e19226191a8968bc9094e new v5 supplycontroller increased cap account governance induced burn mainnet http etherscan io address 0x515629338229dd5f8cea3f4f3cc8185ba21fa30b stakingpool mainnet http etherscan io address 0xb6456b57f03352be48bf101b46c1752a0813491a goerli http goerli etherscan io address 0xb6456b57f03352be48bf101b46c1752a0813491a stakingmigrator mainnet http etherscan io address 0x27851df171c419a8e05cac7d7b45a9fa72b0a07c goerli http goerli etherscan io address 0x27851df171c419a8e05cac7d7b45a9fa72b0a07c gaslesssweeper mainnet http etherscan io address 0x872e239332d13d6b29bf58283906d92fb2a7209b code goerli http goerli etherscan io address 0x872e239332d13d6b29bf58283906d92fb2a7209b code wallet first demo identityfactory contract mainnet http etherscan io address 0x50484176f62bc7b5c5f24db12ce0508c514d0c07 goerli http goerli etherscan io address 0x50484176f62bc7b5c5f24db12ce0508c514d0c07 polygon http polygonscan com address 0x50484176f62bc7b5c5f24db12ce0508c514d0c07 binance smart chain http bscscan com address 0x50484176f62bc7b5c5f24db12ce0508c514d0c07 identity contract mainnet http etherscan io address 0x90012067c3254af79e19d3c08e6c28ae5af8daec goerli http goerli etherscan io address 0x90012067c3254af79e19d3c08e6c28ae5af8daec polygon http polygonscan com address 0x90012067c3254af79e19d3c08e6c28ae5af8daec binance smart chain http bscscan com address 0x90012067c3254af79e19d3c08e6c28ae5af8daec ambire wallet factory 0xbf07a0df119ca234634588fbdb5625594e2a5bca base identity 0x2a2b85eb1054d6f0c6c2e37da05ed3e5fea684ef quickaccmanager 0xff3f6d14df43c112ab98834ee1f82083e07c26bf batcher 0x460fad03099f67391d84c9cc0ea7aa2457969cea address ethereum polygon bsc fantom arbitrum avalanche moonbeam moonriver cronos metis gnosis chain formerly xdai near aurora deployment truffle migrate network mainnet truffle migrate network polygon truffle migrate network bsc verifying etherscan truffle compile cat build contract adexcore json jq ' bytecode ' bytecode deploy script bundle sh contract adexcore sol output bundled sol code gas usage test measured solc v0 5 6 commit d80fa80424ef7b8932399424f8d919d67b135a30 channelopen 69961 channelwithdrawexpired 70470 channelwithdraw 137117 execute 89900 execroutines 114440 channelopen execute 115086 deploying identity proxy identityfactory 127549 addbond 73404 requestunbond 34807 unbond 41770 en part adex protocol eth source code may useful anyone building top adex protocol eth wish integrate en en contract mainnet address 0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e en publicresolve mainnet address 0x226159d592e2b063810a10ebf6dcbada94ed68b8 adex eth node hash 0x4e4e818e9467df5c5d1f8c399b11acc73ea24ad69e9c8e1ba6e5784a302c47d4 adex eth subdomain registrar adex eth controller compiled solc v0 5 6 0x7bc082552b1a195813ddb500600ce2b544d579cb http etherscan io address 0x7bc082552b1a195813ddb500600ce2b544d579cb code style design principle minimalistic use smart contract general avoid putting logic sc ' outcome controlled single entity anyway add complexity centralization address various ifs addressed chain e g user send token contract accident detailed test every contract solidity warning allowed modifier allowed limited use inheritance reentrancy guard allowed instead use check effect interaction pattern require error message delegatecall upgradability upgradability achieved via chain social consensus emergency stop pausability dilutes value smart contract audit g0 group http github com g0 group audit blob master adexnetwork md issue discovered low severity resolved sigma prime http github com sigp public audit blob master adex review pdf 4 issue discovered informational severity resolved g0 group staking contract http github com g0 group audit blob master g0group adexstaking pdf issue discovered resolved forkway adxtoken http github com adexnetwork adex protocol eth blob master audit forkway adxtoken audit pdf issue discovered informational resolved forkway adxloyaltypooltoken http github com adexnetwork adex protocol eth blob master audit forkway loyalty pool md issue discovered resolved codearena http github com ambiretech adex protocol eth blob master audit ambire 20contest 20 e2 80 94 20code 20423n4 pdf view report codearena ' website http code423n4 com report 2021 10 ambire issue discovered patched integration guide identity v5 2 eip 1271 isvalidsignature ' work deployed since isvalidsignature relies calling identity contract eth call need said identity contract proxy deployed relayer true first transaction due counterfactual deployment dapps actually work around asking user deploy proxy first credit brendanchou safeerc20 http gist github com brendanchou 88a2eeb80947ff00bcf58ffdafeaeb61 decanus signaturevalidator connextproject merkletree j
/celer-network/layer2-finance-contracts,Solidity,layer 2 finance contract contract layer 2 finance defi aggregator powered optimistic rollup run unit test sh yarn test benchmark gas cost sh yarn report gas benchmark yarn report gas summary check report gas usage update contract size sh yarn size contract check report contract size txt deployment 1 project root directory update env example value env template 2 run deployment command sh hardhat deploy network network tag deployment tag 3 verify etherscan using hardhat try sh hardhat etherscan verify network network 4 verify etherscan using solt http github com hjubb solt blob main readme md run sh source script solt sh run solt write try sh solt verify license 3 network network solc input contract json deployed address contract name second step fails go etherscan manually verify using standard json input file 5 recommended doe work abiencoderv2 flatten manually verify etherscan first flatten contract verify sh hardhat flatten path contract flattened edit flattened remove duplicate spdx license identifier line submit etherscan
/xBidi/PancakeSwapBot,TypeScript,update v2 pancakeswap prediction bot pancakeswap prediction game bot includes backtesting code try new strategy changing env variable risk free environment work pancakepredictionv2 http pancakeswap finance prediction use 1 provide private key env private key field 2 install dependency npm 4 start app npm run start 5 enjoy winning export private key metamask open account click three point top right corner account detail export private key backtesting pancakeswap data 1 update initialepoch current epoch pancake 5 example current epoch 25890 25885 2 update finalepoch current epoch pancake 500 example current epoch 25890 25390 3 install dependency npm 4 run npm run download data needed code contains history json file 5 run npm run backtest 6 open file chart png alt pancakeswap prediction bot winner image ppw image png alt pancakeswap prediction bot winner screenshot image ppw image 2 png alt candle genie bot winner screenshot image ppw image 3 png strategy bot strategy found src bot http github com xbidi pancakeswapbot blob main src bot l73 bet biggest bull bear payout const bet roundbullamount roundbearamount ' bull ' ' bear ' increase bet amount bot us strategy check env modify multiplier initial bet amount http en wikipedia org wiki martingale probability theory beware fork give guarantee fork may turn scam disclaimer ' coding stuff pure open source every time bot win donates small portion winning developer account continue improving bot 0xc3c531be09102e84d4273984e29e827d71e28ae8 investment strategy investment involve risk loss nothing contained program script code repository construed investment advice reference investment ' past potential performance construed recommendation guarantee specific outcome profit using program accept liability claim made developer others connected program
/yam-finance/yam-www,TypeScript,yam finance yam core website application yam yam governance token yam protocol decentralized cryptocurrency treasury managed community community use fund via yam governance build protocol available http yam finance live website href http app netlify com site epic goldberg 1d6f10 deploys target blank netlify status http api netlify com api v1 badge c6e1a55f 0f94 4b2d 937c 0749cf108ebd deploy status http develop yam finance devleopment build href http app netlify com site naughty villani 786b2d deploys target blank netlify status http api netlify com api v1 badge aeee282a 58a9 4cf7 8965 a9cafc836168 deploy status development install deps sh yarn install start project sh yarn start contribution interested contribute feel free open issue http github com yam finance yam www issue submit pr http github com yam finance yam www pull develop branch issue ha tag assigned mean ha already assigned someone question bug like submit please join chat http discord gg tgfpmdj speak license mit license
/crescent-network/crescent,Go,p nbsp p p align center img src crescent core image png width 700 height 280 p p align center crescent core expanding defi capability interblockchain technology br br href http pkg go dev github com crescent network crescent img src http pkg go dev badge github com crescent network crescent href http codecov io gh crescent network crescent img src http codecov io gh crescent network crescent branch main graph badge svg img src http github com crescent network crescent action workflow test yml badge svg p crescent crescent defi hub provides innovative powerful tool empower user digital asset maximizing financial return managing associated risk efficient way base layer crescent core ha dex functionality equipped several unique characteristic hybrid dex hybrid system orderbook amm tick system standardization order price batch execution order included block fairly executed ranged pool liquidity pool providing liquidity within predefined price range optimized liquidity incentive strategy synergy crescent boost installation use binary easiest way get started download pre built binary operating system find latest binary release http github com crescent network crescent release page build source step 1 install golang go version 1 17 http go dev doc go1 17 higher required crescent core ' already install go following official doc http golang org doc install make sure gopath gobin environment variable properly set step 2 get crescent core source code use git retrieve crescent core official repo http github com crescent network crescent checkout release v3 0 x branch branch contains latest release install crescentd binary bash git clone http github com crescent network crescent git cd crescent git checkout release v3 0 x make install step 3 verify installation verify installed crescentd successfully running following command bash crescentd version long dependency crescent core us customized cosmos sdk please check difference http github com crescent network cosmos sdk compare v0 45 3 v1 1 0 sdk 0 45 3 requirement note go version go1 17 higher customized cosmos sdk v1 1 0 sdk 0 45 3 documentation documentation available doc doc directory developer interested technical specification see inside x module ' spec directory crescent official doc http doc crescent network swagger api doc http app swaggerhub com apis doc crescent crescent 2 0 0 community official website http crescent network medium blog http crescentnetwork medium com discord http discord com invite vmjfqhy4ua telegram http 5lj33oeqv2qwyzq1 twitter http twitter com crescenthub contributing crescent public open source blockchain protocol welcome contribution everyone interested contributing crescent core please review contributing contributing md guide thank contributed crescent core license software licensed apache 2 0 license read license
/sora-xor/polkaswap-web,HTML,polkaswap dex interoperable future cross chain exchange asset simple creation listing new asset easiest swap ever interoperable future polkadot forefront sample polkaswap share image jpg
/zeriontech/defi-sdk-js,TypeScript,defi sdk div href http www npmjs com package defi sdk img src http img shield io npm v defi sdk alt download npm br div j client interacting zerion api http github com zeriontech zerion api install sh npm install defi sdk getting started j import client defi sdk client configure url endpoint apitoken api token api general usage client subscribe option j import client defi sdk client subscribe namespace asset body scope price payload asset code eth currency usd onmessage event event data response handle data namespace namespace http doc zerion io websockets namespaces string event one received changed appended removed see zerion doc http doc zerion io websockets websocket api overview body request request object data response response object domain helper instead calling client subscribe passing type information manually sdk provides helper existing request scope http doc zerion io websockets websocket api overview request addressassets j import client defi sdk client addressassets payload asset code eth currency usd ondata data handle data type request interface request scopename extends string scope scopename payload response interface response meta payload see response zerion doc http doc zerion io websockets websocket api overview response license mit license see included license license file
/Premian-Labs/premia-contracts,TypeScript,premia next generation option amm http premia finance deployment network ethereum mainnet doc deployment ethereum md arbitrum mainnet doc deployment arbitrum md fantom doc deployment fantom md optimism doc deployment optimism md development install dependency via yarn bash yarn install setup husky format code commit bash yarn prepare create env file following value defined key description api key alchemy alchemy http www alchemy com api key node connectivity api key etherscan etherscan http etherscan io api key source code verification pkey eth test private key test development use testnets fork mode true local hardhat network forked mainnet report gas true gas report generated running test create env secret file following value defined key description pkey eth main private key production use mainnets testing test contract via hardhat bash yarn run hardhat test activate gas usage reporting setting report gas environment variable true bash report gas true yarn run hardhat test generate code coverage report using solidity coverage bash yarn run hardhat coverage licensing primary license premia contract business source license 1 1 busl 1 1 see license license exception interface licensed lgpl 3 0 later indicated spdx header see license lgpl license lgpl file contract test remain unlicensed
/sirenmarkets/core,TypeScript,p align center href http sirenmarkets com img src siren banner png alt siren logo title go sirenmarkets com width 600 style border none p siren market core smart contract repository contains source code siren market core smart contract row 1 status siren ci http github com sirenmarkets core workflow siren 20ci badge svg coverage status http coverall io repos github sirenmarkets core badge svg branch master qofawf http coverall io github sirenmarkets core branch master github contributor http img shield io github contributor sirenmarkets core http github com sirenmarkets core graph contributor github commit activity http img shield io github commit activity w sirenmarkets core http github com sirenmarkets core graph contributor github star http img shield io github star sirenmarkets core svg http github com sirenmarkets core stargazer github repo size http img shield io github repo size sirenmarkets core github http img shield io github license sirenmarkets core color blue http github com sirenmarkets core blob master license row 2 link profile website sirenmarkets com http img shield io website green red http sirenmarkets com svg http sirenmarkets com blog http img shield io badge blog green http sirenmarkets medium com doc http img shield io badge doc green http doc sirenmarkets com governance http img shield io badge governance green http gov sirenmarkets com twitter sirenprotocol http img shield io twitter follow sirenprotocol style social http twitter com sirenprotocol row 3 detailed status github pull request label http img shield io github issue pr raw sirenmarkets core http github com sirenmarkets core pull github issue http img shield io github issue raw sirenmarkets core svg http github com sirenmarkets core issue mainnet contract list ammfactory http doc sirenmarkets com developer amm factory seriescontroller http doc sirenmarkets com developer series controller seriesvault http doc sirenmarkets com developer series vault erc1155controller http doc sirenmarkets com developer erc1155 controller priceoracle http doc sirenmarkets com developer price oracle build test npm install npm test design goal build fully unit tested system 100 code coverage including error scenario event logging allow siren system upgradeable time governance system include new functionality included initial launch without requiring migration new token e g augur minimize gas deploying proxy contract whenever possible instead full logic contract utilize open zeppelin contract whenever possible instead rolling version fully comment codebase new developer quickly grok protocol contribute protocol overview see technical documentation http doc sirenmarkets com developer contract architecture detail protocol series lifecycle example one unit test showing flow minting option exercising option claiming remaining series ' collateral typescript allows claiming expiration full redemption async amount minting const mint amount 100 give alice 100 token await collateraltoken mint aliceaccount mint amount save token const btokenindex await deployedseriescontroller btokenindex seriesid approve amount mint alice option wbtc collateral locked series contract await collateraltoken approve deployedseriescontroller address mint amount aliceaccount await deployedseriescontroller mintoptions seriesid mint amount aliceaccount send btokens alice bob simulates alice selling option await deployederc1155controller safetransferfrom aliceaccount bobaccount btokenindex mint amount 0x0 aliceaccount move block time future contract expired await time increaseto expiration one day bob exercise await deployederc1155controller setapprovalforall deployedseriescontroller address true bobaccount await deployedseriescontroller exerciseoption seriesid mint amount true bobaccount succeed alice claiming leftover collateral await deployederc1155controller setapprovalforall deployedseriescontroller address true aliceaccount await deployedseriescontroller claimcollateral seriesid mint amount aliceaccount bob share collateral token assertbneq await collateraltoken balanceof bobaccount 17 bob collateral alice share collateral token assertbneq await collateraltoken balanceof aliceaccount 83 alice collateral development repo generate client contract install updating contract definition manually updated 1 running npm run compile 2 running npm run build compiled json abi file commited deployment deployment metadata available repo
/hegic/contracts-v1,JavaScript,hegic protocol v1 1 license gpl v3 http img shield io badge license gplv3 blue svg http www gnu org license gpl 3 0 discord http img shield io discord 679629806043660298 color 768ad4 label discord logo discord logocolor 768ad4 http discordapp com channel 679629806043660298 telegram http img shield io badge chat 20telegram 9cf svg http hegicoptions twitter follow http img shield io twitter follow hegicoptions style social http twitter com hegicoptions 30 05 2020 1 0 1 1 hegic http www hegic co chain option trading protocol ethereum http github com ethereum core hegic protocol v1 1 system solidity smart contract http github com ethereum solidity main part protocol option contract liquidity pool contract option contract call option contract put option contract liquidity pool contract eth pool contract erc pool contract table content option option hegic protocol v1 1 work hegic protocol v11 work important warning important warning contract contract admin key admin key document document maintainer maintainer acknolwedgements acknolwedgements license license option option contract giving buyer right obligation buy case call option contract sell case put option contract underlying asset specific price certain date trader use chain option speculation hedge position option known derivative derive value underlying asset learn option hegic protocol gitbook http hegic gitbook io start hegic protocol v1 1 work alt text http imgur com m1soox3 png alt text http imgur com zwq9gwx png hegiccalloptions hegicputoptions option contract contract calculate fee option price create new option exercise option contract behalf holder exchange holder ' asset using uniswap protocol http github com uniswap sending liquidity back pool process exercising hegicethpool hegicercpool liquidity pool contract non custodial contract accumulate liquidity provider writer pooled liquidity used selling writing option contract buyer holder liquidity provider call provide method send eth erc 20 token http eips ethereum org eips eip 20 liquidity pool contract receive writeeth writeerc erc 20 token address leave pool liqudity provider call withdraw method burn writeeth writeerc token receives eth erc 20 token address eth call option created exercised via hegiccalloptions hegicethpool contract eth call option chain contract give holder right swap dai stablecoins http github com makerdao ds eth http ethereum org eth fixed price certain period activate eth call option holder chooses period amount strike option contract paying fee lock method hegicethpool contract lock eth strikeamount pool contract holder intends swap dai eth fixed period paid call exercise method hegicethpool contract receive holder ' dai send amount eth wa locked contract particular holder calling exchange method hegicethpool contract automatically swap dai received option holder eth market price using uniswap protocol ' eth dai pool http uniswap info token 0x6b175474e89094c44da98b954eedeac495271d0f swap eth sent back hegicethpool contract eth put option created exercised via hegicputoptions hegicercpool contract eth put option chain contract give holder right swap eth http ethereum org eth dai stablecoins http github com makerdao ds fixed price certain period activate eth put option holder chooses period amount strike option contract paying fee lock method hegicercpool contract lock dai amount pool contract holder intends swap eth dai fixed period paid call exercise method hegicercpool contract receive holder ' eth send amount dai wa locked contract particular holder calling exchange method hegicercpool contract automatically swap eth received option holder dai market price using uniswap protocol ' eth dai pool http uniswap info token 0x6b175474e89094c44da98b954eedeac495271d0f swap dai sent back hegicercpool contract important warning hegic protocol v1 1 contract audited bramah system http bramah system audit hegic audit bramah pdf however fund risk lose 100 amount provide liquidity pool contract technical risk hegic protocol v1 1 contract hacked future never provide fund liquidity pool contract ' afford lose always research added 28 05 2020 fixed 31 05 2020 attention please read first 90 day v1 1 contract deployment deployed 30 05 2020 owner address highly privileged account mean contract owner ' control 90 day contractcreationtimestamp time priviledges lost forever contract owner able use setlockupperiod lockupperiod value 60 day setimpliedvolrate setmaxspread function contract see notice used update contract critical situation first 90 day deployment function transferpoolownership external onlyowner require contractcreationtimestamp 90 day pool transferownership owner contract contract description mainnet address hegiccalloptions http github com hegic contract v1 blob master contract hegiccalloptions sol eth call option 0x0b660d66b05a743df3755058c2e63d5a5f2ba2f7 http etherscan io address 0x0b660d66b05a743df3755058c2e63d5a5f2ba2f7 hegicputoptions http github com hegic contract v1 blob master contract hegicputoptions sol eth put option 0xd45cc8321e3015608cfb2d51668ffe03db80f3be http etherscan io address 0xd45cc8321e3015608cfb2d51668ffe03db80f3be hegicethpool http github com hegic contract v1 blob master contract hegicethpool sol eth liquidity pool 0xada5688293de408a9fa4cb708f9003d140bd99cb http etherscan io address 0xada5688293de408a9fa4cb708f9003d140bd99cb hegicercpool http github com hegic contract v1 blob master contract hegicercpool sol erc liquidity pool 0xd5a596d0e46ae92d77b6c8b63848b02bada3d7ba http etherscan io address 0xd5a596d0e46ae92d77b6c8b63848b02bada3d7ba aggregator eth usd price feed 0xf79d6afbb6da890132f9d7c355e3015f15f3406f http etherscan io address 0xf79d6afbb6da890132f9d7c355e3015f15f3406f admin key hegic protocol v1 1 contract admin key holder call setlockupperiod function change lock period liquidity provider 60 day call setimpliedvolrate function change implied volatility proxy influence fee call setmaxspread function change maximum spread swap uniswap protocol hegic protocol v1 1 contract admin key holder ' 90 day day contract deployment 30 05 2020 ' withdraw user ' fund pool contract using withdraw function ' lock user ' fund liquidity pool contract calling call lock function ' unlock user ' fund unexercised active contract calling unlock function ' send user ' writeeth writeerc token calling transfer function ' exercise user ' active option contract calling exercise function document hegic chain option trading protocol ethereum powered hedge contract liquidity pool http ipfs io ipfs qmwy8x6veunh4gd2gwt4bt4bbwwx2kaeuov46tclvmrcme molly wintermute hegic protocol faq guide educational information option gitbook http hegic gitbook io start maintainer molly wintermute http github com 0mllwntrmt3 contact molly wintermute protonmail com http keybase io mollywintermute acknolwedgements sam sun http github com samczsun lev livnev http github com livnev dan elitzer http github com delitzer jon itzler http github com itzler helped make hegic protocol v1 1 better thank license hegic protocol v1 1 gnu general public license v3 0 http www gnu org license gpl 3 0
/Ricochet-Exchange/ricochet-frontend,TypeScript,div align center img src public icon icon svg height 70 alt ricochet logo h1 ricochet frontend h1 strong ricochet app frontend made react using redux redux saga strong div br div align center img src http img shield io github commit activity w ricochet exchange ricochet frontend alt github commit activity href http github com ricochet exchange ricochet frontend issue q 3aissue 3aopen label 3a 22help wanted 22 img src http img shield io github issue ricochet exchange ricochet frontend help wanted alt github issue help wanted href http discord gg egu4fzbpbm img src http img shield io discord 862796510604296263 svg label logo discord logocolor ffffff color 7389d8 labelcolor 6a7ec2 alt discord href http twitter com ricochetxchange img src http img shield io twitter follow ricochetxchange label ricochetxchange style flat logo twitter color 1da1f2 alt twitter div div align center br href http ricochet exchange b ricochet exchange b br br href http doc ricochet exchange b documentation b href http github com ricochet exchange ricochet frontend issue new b feature request b div start bash yarn install yarn start arm64 macbook node sas doe work arm64 fix replace sas bash yarn remove node sas yarn add sas sas installed still error trying compile project bypass simply comment extend link line code project structure component contains react component ' state business logic developed storybook container container use component adding business logic store data global business logic placed separate folder reducer utils common function project hook common business logic reused container configuring project see env file configuration dotenv react app api grath http api thegraph com subgraphs name superfluid finance superfluid matic react app chain id 137 test merge main fork project fork ricochet frontend repo create branch please avoid using special character branch name http doc github com en get started using git dealing special character branch tag name create pr create pull request github test change check github action check successful new environment created minute please check comment get complete url look something like a380c3be5e6284f4ca1dfc37a12b3033 851332533 eu west 1 elb amazonaws com branch name environment destroyed pr merged
/teal-finance/rainbow,Go,rainbow doc rainbow chancery png logo doc small png dashboard defi option trading highlighting market opportunity ease strategy decision rainbow screener user scan cex dex market fetch available option data empowered teal finance http teal finance team http teal finance team br br go report card http goreportcard com badge github com teal finance rainbow http goreportcard com report github com teal finance rainbow rainbow live teal finance rainbow http teal finance rainbow please share feedback github issue http github com teal finance rainbow issue email teal finance pm twitter tealfinance http twitter com tealfinance warning go 1 19 rainbow cli run cli web server makefile server web yet go 1 19 ready crash using go 1 19 cd rainbow go source code go build cmd cli build cli cli crash startup origin bug bug indirect dependency used solana library rainbow use problem ha discussed golang developer http github com golang go issue 54227 fix ha implemented http github com 42wim go zipexe http github com 42wim go rice rainbow cannot currently use fix since indirect dependency dependency dependency workaround need run cli go 1 19 use following go run github com teal finance rainbow cmd cli latest replace go build go run cd rainbow go run cmd cli web server recommend using dockerfile dockerfile still us go 1 18 motivation rainbow inspired following trend crypto asset defi becoming mainstream advent internet blockchains world cross chain application communication crypto option trading growing bigger spot market like traditional finance crypto derivative market expected grow lot upcoming year specifically option market see biggest growth finance option market much bigger underlying spot market lagging crypto look deribit ' volume main centralized venue crypto option compared perpetuals future participated hackathons super price ethereum ' ethglobal hackathon http showcase ethglobal com ethonline2021 rainbow solana ' ignition hackathon http devpost com software rainbow ai5p7m encode club ' hack defi http www encode club hack defi info motivation cryptonuage com post internet decentralized option http cryptonuage com post internet decentralized option currently supported option exchange deribit http www deribit com centralized exchange main venue crypto option trading delta exchange http www delta exchange centralized exchange future option interest rate swap 50 underlying cryptocurrencies lyra http www lyra finance ethereum defi protocol trading option based layer 2 optimism using custom amm psyoptions http www psyoptions io solana defi option protocol build serum order book opyn http www opyn co ethereum defi option protocol using thegraph 0x thales http thalesmarket io optimism polygon defi protocol binary option http wikiless org wiki binary option exotic option zeta http zeta market solana defi option protocol built using serum order book run source code rainbow used cli run cli front end makefile server web official instance http teal finance rainbow requirement go v1 18 single requirement cli node v14 yarn v1 20 docker v20 optional podman v3 optional rainbow used cli run cli without requiring node yarn docker snap http en wikipedia org wiki snap package manager provides simple way install requirement many linux distribution snap install go classic snap install node classic installs yarn check go version yarn version debian ubuntu command sudo apt install golang may install older version check apt list version golang golang 1 install recent go version may try sudo apt purge golang sudo apt install golang 1 18 dockerfile container used equally docker podman clone rainbow git repo git clone http github com teal finance rainbow cd rainbow run cli rainbow project provides command line interface cli let user play terminal command cli retrieves minute print pretty nice table option go run cmd cli cli screenshot doc cli jpg makefile server web see make help output makefile build make build backend frontend make server build backend make front build frontend make clean clean run run target depend build target need make build make run make run run backend make run front run frontend dev mode serve static website using rainbow backend production make clean j make j make run container make container run build run backend frontend make container rm stop remove container target try use docker podman container run also open browser window http localhost 1111 print container log indefinitely use ctrl c stop log printing doe stop container stop container simply use make container rm two container target needed invoked manually make container build build container image make container stop stop remove container container parameter customized slightly smiling face make container run expose 80 port 80 base rainbow manual build run back end front end requires server api go build cmd server server go run cmd server make run front end run vue3 front end dev mode similar make run front cd frontend yarn yarn dev open prod mode back end serf web static file frontend dist make frontend dist cd frontend yarn yarn build finally open http localhost 8090 manual build run container git repo provides dockerfile dockerfile secured light one container image 30 mb image contains hardened sever executable front end static file container enables default cors export port rate limiter feature customized using environment variable following command configures server listening port 2222 published port 1111 front end using cors http localhost 1111 see also comment within dockerfile dockerfile detail podman build build arg addr http localhost 1111 build arg port 2222 rainbow podman stop rainbow already running background podman run rm p 0 0 0 0 1111 2222 name rainbow rainbow podman log follow rainbow open http localhost 1111 manual command obtained using makefile makefile make container run addr http localhost 1111 expose 1111 port 2222 server command line flag rainbow embeds complete http server including rate limiter export port prometheus monitoring detail see underlying project teal finance garcon http github com teal finance garcon sh go run github com teal finance rainbow cmd server h usage tmp go build1548629542 b001 exe server addr string schema dns used doc url cors ha precedence main addr default http localhost aes string 128 bit aes key 32 hex digit session cooky ha precedence aes128 alert string webhook endpoint notify anomaly ha precedence alert url burst int max request burst ha precedence req burst default 22 cex enable centralized exchange deribit delta exchange dev enable developer mode enabled default addr port used dex enable decentralized exchange lyra opyn psyoptions zeta exotic enable decentralized exchange binary option thales exp int export port prometheus ha precedence exp port form string webhook endpoint notify filled contact form ha precedence webform url hmac string hmac sha256 key 64 hex digit jwt token ha precedence hmac sha256 period duration period fetch market data provider default 10m0s port int api port ha precedence main port default 8090 provider string coma separated list provider ha precedence provider default deribit delta lyra opyn psy zeta rate int max request per minute ha precedence req per minute default 88 version print version exit www string folder web static file ha precedence www dir default frontend dist join team interested build please contact u github issue http github com teal finance rainbow issue teal finance pm twitter tealfinance http twitter com tealfinance api test api endpoint run back end make run using container alternative make container run expose 8090 v0 option v0 option http localhost 8090 v0 option endpoint accepts optional parameter filtering progressive filtering v0 option btc http localhost 8090 v0 option btc btc based option v0 option btc 2022 04 29 http localhost 8090 v0 option btc 2022 04 29 btc based option expiring 2022 04 29 v0 option btc 2022 04 29 deribit http localhost 8090 v0 option btc 2022 04 29 deribit btc based option expiring 2022 04 29 deribit v0 option btc 2022 04 29 deribit csv http localhost 8090 v0 option btc 2022 04 29 deribit csv csv http wikiless org wiki comma separated value comma separated value file see supported format supported format general url pattern v0 option asset expiry provider format api may tested curl http wikiless org wiki curl curl localhost 8090 v0 option curl localhost 8090 v0 option btc curl localhost 8090 v0 option btc 2022 04 29 curl localhost 8090 v0 option btc 2022 04 29 deribit curl localhost 8090 v0 option btc 2022 04 29 deribit csv query string moreover parameter also passed using query string v0 option asset btc asset eth http localhost 8090 v0 option asset btc asset eth multiple underlying asset v0 option asset btc expiry 2022 provider deribit format csv http localhost 8090 v0 option asset btc expiry 2022 provider deribit format csv post method api also support post form http wikiless org wiki application x www form urlencoded application x www form urlencoded type application x www form urlencoded curl localhost 8090 v0 option asset btc asset eth curl localhost 8090 v0 option asset btc expiry 2022 provider deribit format csv post form http wikiless org wiki application x www form urlencoded application x www form urlencoded type application x www form urlencoded recommended privacy reason since hide query within encrypted request body using http awesome expiry filtering expiry filtering match beginning date v0 option http localhost 8090 v0 option option expiry date v0 option 2022 http localhost 8090 v0 option 2022 expiry date 2022 v0 option 2022 04 http localhost 8090 v0 option 2022 04 expiry date april 2022 v0 option 2022 04 01 http localhost 8090 v0 option 2022 04 01 april 1st 2022 supported format format parameter last one position v0 option http localhost 8090 v0 option default json browser v0 option json http localhost 8090 v0 option json download file json format v0 option csv http localhost 8090 v0 option csv csv file v0 option tsv http localhost 8090 v0 option tsv tsv tab separated value http wikiless org wiki tab separated value v0 option btc csv http localhost 8090 v0 option btc csv btc based option csv v0 option 2022 06 csv http localhost 8090 v0 option 2022 06 csv option expiring june 2022 csv current supported format json csv http wikiless org wiki comma separated value comma separated value tsv http wikiless org wiki tab separated value tab separated value depending user request format may supported json ld http github com piprate json gold json linked data json line http jsonlines org example jsonl ndjson http github com ndjson ndjson github io issue 1 issuecomment 109935996 newline delimited json see json streaming http wikiless org wiki json 20streaming line delimited json avro http github com linkedin goavro parquet http github com xitongsys parquet go dataframe http github com rocketlaunchr dataframe go excel http github com qax excelize google sheet doc http github com iwark spreadsheet http header accept http header also supported curl localhost 8090 v0 option h accept application json curl localhost 8090 v0 option h accept text csv curl localhost 8090 v0 option h accept text tsv example response json format j name eth 2021 10 29 23 59 59 3200 put expiry 2021 10 29 23 59 59 type put asset eth eth btc sol strike 3200 exchange dex type cex dex chain solana ethereum solana layer l1 provider psyoptions opyn lyra deribit currency usdc quote currency btc bid px 13 3 abbreviation price size 5 variant quantity px 13 1 size 10 ask px 15 12 size 5 px 15 25 size 9 example response csv format csv tsv format limited two best order book bid 1 bid 2 ask 1 ask 2 csv curl localhost 8090 v0 option csv name expiry asset currency strike type provider layer chain bid price 1 bid size 1 bid price 2 bid size 2 ask price 1 ask size 1 ask price 2 ask size 2 sol 2022 04 01 08 00 00 120 call 2022 04 01 08 00 00 sol usdc 120 call zeta l1 solana 0 9238 285 24 0 73 300 1 0463 285 24 1 1 300 sol 2022 04 01 08 00 00 130 call 2022 04 01 08 00 00 sol usdc 130 call zeta l1 solana 0 2187 285 24 0 09 300 0 3486 285 24 0 37 300 btc 29apr22 40000 p 2022 04 29 08 00 00 btc btc 40000 put deribit 736 51598 62 2 712 7574000000001 28 7 807 7917200000002 118 2 831 5503000000001 30 3 btc 8apr22 44000 p 2022 04 08 08 00 00 btc btc 44000 put deribit 617 72308 0 1 593 9645 49 8 641 48166 32 5 665 2402400000001 31 1 btc 1apr22 42000 p 2022 04 01 08 00 00 btc btc 42000 put deribit 71 27574000000001 0 1 47 517160000000004 75 4 95 03432000000001 82 7 118 79290000000002 50 9 v0 bff cp endpoint ha inspired bff pattern http blog bitsrc io e4fa965128bf backend frontend pattern simplify front end processing endpoint used api user may drop release j asset eth expiry dec 31 provider deribit call bid px 1805 size 24 ask px 1830 size 459 strike 4400 put bid px 1305 size 26 ask px 1330 size 37 asset eth expiry dec 31 provider deribit call bid px 1140 size 258 ask px 1160 size 33 strike 5200 put bid px 1235 size 80 ask px 0 size 0 asset btc expiry nov 26 provider deribit call bid px 2045 size 7 5 ask px 2105 size 5 3 strike 50000 put bid px 125 size 27 2 ask px 135 size 70 2 v0 graphql endpoint currently designed meet requirement frontend endpoint yet used api user may drop release however website display rainbow screener using graphql api please contact u v0 graphiql interactive graphql endpoint used developer mode tune front end graphql query need something else please share thought suggest idea request feature contact u join effort build awesome tool github issue http github com teal finance rainbow issue teal finance pm twitter tealfinance http twitter com tealfinance
/DePayFi/widgets,JavaScript,installation either load depay widget package via cdn script defer async src http integrate depay com widget v7 j script install depay widget via package manager choice ship part application bundle yarn add depay widget npm install depay widget save load depaywidgets package wherever need import depaywidgets ' depay widget ' demo easily configure depay payment widget please use configurator http app depay com integration new low key technical example demo page look http depayfi github io widget dev bundle html support blockchains ethereum http ethereum org bnb smart chain http www binance org smartchain polygon http polygon technology wallet depay support popular crypto wallet metamask http metamask io coinbase wallet http wallet coinbase com 100 additional wallet via walletconnect http walletconnect org trust wallet http trustwallet com defi wallet crypto com http crypto com defi wallet 1inch wallet http 1inch io wallet imtoken wallet http www token im tokenpocket http www tokenpocket pro en pillar http www pillar fi math wallet http mathwallet org ledger live http www ledger com ledger live argent wallet http www argent xyz alphawallet http alphawallet com unstoppable wallet http unstoppable money atomic wallet http atomicwallet io rainbow http rainbow depay payment depay payment allows accept perform crypto payment preparation order receive decentralized payment blockchain need wallet particular blockchain first create ethereum wallet http ethereum org en wallet create bsc wallet http academy binance com en article get started binance smart chain bsc create polygon wallet http wallet polygon technology quick start depaywidgets payment accept blockchain ' ethereum ' amount 20 token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' configuration need pas configuration object depaywidgets payment need least contain accept field javascript depaywidgets payment accept blockchain ' ethereum ' amount 20 token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' also accept multiple payment multiple blockchains javascript depaywidgets payment accept 20 usdt ethereum blockchain ' ethereum ' amount 20 token ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' 20 busd bsc blockchain ' bsc ' amount 20 token ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' receiver ' 0x552c2a5a774ccaeec036d41c983808e3c76477e6 ' 20 usdc polygon blockchain ' polygon ' amount 20 token ' 0x2791bca1f2de4661ed88a30c99a7a9449aa84174 ' receiver ' 0x552c2a5a774ccaeec036d41c983808e3c76477e6 ' accept blockchain blockchain want receive payment currently supported ethereum bsc binance smart chain polygon token address token want receive use payment configurator http depay com documentation payment payment configurator order simplify configuring amount optional amount token want receive need passed human readable number e g 20 bignumber amount calculated internally including finding right amount decimal given token please pas amount human readable form number decimal e g 20 20 usdt 20 25 etc pas amount user able select amount within widget receiver address receiving payment always double check ' set right address amount fixed currency amount want widget fix payment amount currency use currency fix currency example charge u 5 20 amount currency ' usd ' fix 5 20 make sure pas amount accept use fix currency amount widget still display local currency conversion user want change see currency configuration amount selection changable amount want control amount selection behaves pas amount configuration object alongside value start min step start amount initially selected min minimum amount selectable step number wich increment decremten change amount receiver payment receiver either wallet address also smart contract order smart contract receive payment need pas object receiver containing following attribute javascript depaywidgets payment accept receiver address toaddress signature ' claim address uint256 bool ' params ' true ' address address smart contract signature signature smart contract method want call part payment params additional params forwarded smart contract method checkout depay web3 payment http github com depayfi depay web3 payment pay smart contract depay router smart contract http github com depayfi depay evm router detail fee configure fee applied every payment ' dedicated fee receiver address fee taken target token target amount swap depending accept configuration amount either percentage e g 5 absolute amount bignumber string ' 100000000000000000 ' pure number 2 5 receiver address supposed receive fee javascript depaywidgets payment accept fee amount ' 3 ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' fromtoken fromamount totoken case want configure payment based source token amount rather target token amount pas fromtoken fromamount totoken accept case make sure configure token amount javascript depaywidgets payment accept blockchain ' bsc ' fromtoken ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' fromamount 0 1 totoken ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' receiver ' 0x08b277154218ccf3380cae48d630da13462e3950 ' open payment widget send 0 1 busd receiver converting bnb along way preload optimize initialization speed payment widget preload payment route soon become aware user wallet address typically right user conncets wallet case user ha wallet already connected preload immediatelly javascript let address ' 0x4ad374e0836c26bec213a19d3e030f8b3a8acde4 ' e g retrieve right perform wallet connect depaywidgets payment preload account address accept blockchain ' ethereum ' amount 10 token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' blockchain ' bsc ' amount 10 token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' track track allows track payment confirmation validation via depay api trigger callback existing system javascript depaywidgets payment track endpoint ' track payment ' endpoint forward payment tracking payment api payment ha submitted widget call configured endpoint post track payment body blockchain ethereum transaction 0x4311a9820195c2a5af99c45c72c88848ed403a4020863c913feed81d15855ae4 sender 0x769794c94e9f113e357023dab73e81dbd6db201c nonce 103 block 13230369 token 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 amount 1100000000000000000 decimal 18 token 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 amount 1000000000000000000 decimal 18 fee amount 100000000000000000 alternatively pas method track performs tracking request backend need handle request e g add additional header etc javascript depaywidgets payment track method payment return fetch ' track payment ' method ' post ' body json stringify payment header content type application json x csrf token document queryselector ' name csrf token ' content case pas tracking method need return promise endpoint need make sure forward payment tracking api http depay com documentation api payment also make sure add token amount confirmation forwarding request payment api value supposed set backend widget fronted user could set value liking otherwise confirm payment amount token ' intend receive make sure read payment tracking api http depay com documentation api payment detail integrate payment tracking payment tracking request attempted 3 time widget display payment tracking failed user widget wa able start payment tracking via given endpoint 3 attempt failed payment tracking also call error callback error code tracking failed asynchronous validation improving user experience recommend performing payment validation asynchronously certain situation take multiple minute configure widget track validate payment asynchronously javascript depaywidgets payment track endpoint ' track ' async true release user right payment ha confirmed user ' machine still track validates payment asynchronously call back endpoint soon ha validated allows release user immediately showing confirmation reconfirming payment asynchronous step like notification email additional polling order ensure 100 coverage user released forwarded within payment flow need implement polling addition tracking track poll configuration either take enpoint method similiar track use endpoint method request release every 5 second need make sure respond request status 404 case user released yet payment processing side complete yet 200 payment ha completed processing side done user released forwarded withing payment flow case want redirect user next step system poll endpoint need respond body containing json like forward ' http example com next step url ' enough rely setting forward initially tracking request also need respond forward implementing polling entire reason polling cover case websockets fail initial forward communicated client connected connected function called user connects wallet function called connected wallet address main argument javascript depaywidgets payment connected address something address closed closed function called user close widget matter payment javascript depaywidgets payment closed something user closed widget function called payment handed wallet allows stop payment method return false javascript depaywidgets payment payment alert ' something went wrong ' return false stop payment sent sent function called payment ha sent network still need mined confirmed widget call function transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets payment sent transaction called payment transaction ha sent network confirmed confirmed function called payment ha confirmed network client side widget call function passing transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets payment confirmed transaction called payment transaction ha confirmed network validated validated function called payment ha validated depay apis server side javascript depaywidgets payment validated successful successful true false failed failed function called payment execution failed blockchain ha sent submitted widget call function passing transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets payment failed transaction called payment transaction failed blockchain handled widget need display anything critical critical function called widget throw critical internal error ' handle display ' javascript depaywidgets payment critical error render display error error tostring error error function called widget throw non critical internal error handle display ' javascript depaywidgets payment error error maybe internal tracking error tostring need display anything widget take care displaying error provider allows set provider used making rpc call individiual blockchains javascript depaywidgets payment provider ethereum ' http localhost 8545 ' bsc ' http localhost 8545 ' polygon ' http localhost 8545 ' currency allows enforce displayed local currency instead automatically detecting javascript depaywidgets payment currency ' usd ' whitelist allows configured token eligible mean payment sender javacript depaywidgets payment whitelist ethereum ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' eth ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' usdt ' 0x6b175474e89094c44da98b954eedeac495271d0f ' dai bsc ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' bnb ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' busd ' 0x55d398326f99059ff775485246999027b3197955 ' bsc usd polygon ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' matic ' 0x2791bca1f2de4661ed88a30c99a7a9449aa84174 ' usdc blacklist allows blacklist token suggested mean payment sender javacript depaywidgets payment blacklist ethereum ' 0x82dfdb2ec1aa6003ed4acba663403d7c2127ff67 ' akswap ' 0x1368452bfb5cd127971c8de22c58fbe89d35a6bf ' jntr e ' 0xc12d1c73ee7dc3615ba4e37e4abfdbddfa38907e ' kick bsc ' 0x119e2ad8f0c85c6f61afdf0df69693028cdc10be ' zepe ' 0xb0557906c617f0048a700758606f64b33d0c41a6 ' zepe ' 0x5190b01965b6e3d786706fd4a999978626c19880 ' theever ' 0x68d1569d1a6968f194b4d93f8d0b416c123a599f ' aabek ' 0xa2295477a3433f1d06ba349cde9f89a8b24e7f8d ' aax ' 0xbc6675de91e3da8eac51293ecb87c359019621cf ' air ' 0x5558447b06867ffebd87dd63426d61c868c45904 ' bnbw ' 0x569b2cf0b745ef7fad04e8ae226251814b3395f9 ' bsctoken ' 0x373233a38ae21cf0c4f9de11570e7d5aa6824a1e ' alpaca ' 0x7269163f2b060fb90101f58cf724737a2759f0bb ' pupdoge ' 0xb16600c510b0f323dee2cb212924d90e58864421 ' flux ' 0x2df0b14ee90671021b016dab59f2300fb08681fa ' safemoon ' 0xd22202d23fe7de9e3dbe11a2a88f42f4cb9507cf ' mneb ' 0xfc646d0b564bf191b3d3adf2b620a792e485e6da ' piza ' 0xa58950f05fea2277d2608748412bf9f802ea4901 ' wsg ' 0x12e34cdf6a031a10fe241864c32fb03a4fdad739 ' free event event set ifswapped emits payment event http github com depayfi depay evm router depayrouterv1paymentevent02 payment routed router smart contract http github com depayfi depay evm router payment routed depaypaymentrouter swapping token required order perform payment payment routed router e g direct transfer event emited event set ifswapped javascript depaywidgets payment event ' ifswapped ' container container allows pas container element supposed contain widget javascript depaywidgets payment container document getelementbyid ' container ' make sure set cs value position relative container element otherwise contain widget react example javascript let customcomponentwithwidget prop let container useref useeffect container current depaywidgets payment defaultarguments document container container current container return div ref container style position ' relative ' border ' 1px solid black ' width 600px height 600px div style style allows change style widget javascript depaywidgets payment style color primary ' ffd265 ' text ' e1b64a ' buttontext ' 000000 ' icon ' ffd265 ' fontfamily ' cardo serif important ' cs import url http font googleapis com css2 family cardo wght 400 700 display swap reactdialogbackground background rgba 0 0 0 0 8 color color allows set color value javascript depaywidgets payment style color primary ' ffd265 ' text ' ffd265 ' buttontext ' 000000 ' icon ' ffd265 ' fontfamily fontfamily allows set font family javascript depaywidgets payment style fontfamily ' cardo serif important ' cs cs allows inject cs javascript depaywidgets payment style cs import url http font googleapis com css2 family cardo wght 400 700 display swap reactdialogbackground background rgba 0 0 0 0 8 unmount unmount allows unmount react safe way entire widget outside javascript let unmount await depaywidgets payment unmount recover recover allows recover previous made payment e g useful need continue show pending payment progress user rearrives reloads payment page javascript depaywidgets payment recover blockchain ' ethereum ' transaction ' 0x081ae81229b2c7df586835e9e4c16aa89f8a15dc118fac31b7521477c53ed2a9 ' sender ' 0x317d875ca3b9f8d14f960486c0d1d1913be74e90 ' nonce 2865 afterblock 14088130 token ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' amount 0 0001 recovered payment still result confirmed failed payment also call one callback also created recover closable closable make widget unclosable javascript depaywidgets payment closable false integration integration label payment track per integration javascript depaywidgets payment integration ' fe690fbc 1740 4894 b12c 23a72abec54d ' depay sale depay sale allows sell token directly website dapp automatic payment conversion people use token buying token directly website dapp preparation order sell token decentralized way token need liquidity pool decentralized exchange create uniswap v2 liquidity pool http app uniswap org add v2 eth create uniswap v2 liquidity pool polygon http app uniswap org add v2 eth chain polygon create pancakeswap liquidity pool http pancakeswap finance add quick start javascript depaywidgets sale sell ' ethereum ' ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' configuration need pas configuration object depaywidgets sale need least contain sell field javascript depaywidgets sale sell ' ethereum ' ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' also sell multiple blockchains javascript depaywidgets sale sell ' ethereum ' ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' ' bsc ' ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' sell blockchain token blockchain currently supported blockchains ethereum bsc binance smart chain token address token want sell use sale configurator http depay com documentation sale sale configurator order simplify configuring amount want control amount selection behaves pas amount configuration object alongside value start min step start amount initially selected min minimum amount selectable step number wich increment decremten change amount token set true want amount selection denominated token ' selling e g javascript depaywidgets sale sell amount token true connected connected function called user connects wallet called connected wallet address main argument javascript depaywidgets sale connected address something address closed closed function called user close widget matter payment javascript depaywidgets sale closed something user closed widget sent sent function called payment ha sent network still need mined confirmed widget call function transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets sale sent transaction called payment transaction ha sent network confirmed confirmed function called payment ha confirmed network widget call function passing transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets sale confirmed transaction called payment transaction ha confirmed network failed failed function called payment execution failed blockchain ha sent submitted widget call function passing transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets sale failed transaction called payment transaction failed blockchain handled widget need display anything critical critical function called widget throw critical internal error ' handle display ' javascript depaywidgets sale critical error render display error error tostring error error function called widget throw non critical internal error handle display ' javascript depaywidgets sale error error maybe internal tracking error tostring need display anything widget take care displaying error provider allows set provider used making rpc call individiual blockchains javascript depaywidgets sale provider ethereum ' http localhost 8545 ' bsc ' http localhost 8545 ' currency allows enforce displayed local currency instead automatically detecting javascript depaywidgets sale currency ' usd ' blacklist allows blacklist token suggested mean payment sender javacript depaywidgets sale blacklist ethereum ' 0x82dfdb2ec1aa6003ed4acba663403d7c2127ff67 ' akswap ' 0x1368452bfb5cd127971c8de22c58fbe89d35a6bf ' jntr e ' 0xc12d1c73ee7dc3615ba4e37e4abfdbddfa38907e ' kick bsc ' 0x119e2ad8f0c85c6f61afdf0df69693028cdc10be ' zepe ' 0xb0557906c617f0048a700758606f64b33d0c41a6 ' zepe ' 0x5190b01965b6e3d786706fd4a999978626c19880 ' theever ' 0x68d1569d1a6968f194b4d93f8d0b416c123a599f ' aabek ' 0xa2295477a3433f1d06ba349cde9f89a8b24e7f8d ' aax ' 0xbc6675de91e3da8eac51293ecb87c359019621cf ' air ' 0x5558447b06867ffebd87dd63426d61c868c45904 ' bnbw ' 0x569b2cf0b745ef7fad04e8ae226251814b3395f9 ' bsctoken ' 0x373233a38ae21cf0c4f9de11570e7d5aa6824a1e ' alpaca ' 0x7269163f2b060fb90101f58cf724737a2759f0bb ' pupdoge ' 0xb16600c510b0f323dee2cb212924d90e58864421 ' flux ' 0x2df0b14ee90671021b016dab59f2300fb08681fa ' safemoon ' 0xd22202d23fe7de9e3dbe11a2a88f42f4cb9507cf ' mneb ' 0xfc646d0b564bf191b3d3adf2b620a792e485e6da ' piza ' 0xa58950f05fea2277d2608748412bf9f802ea4901 ' wsg ' 0x12e34cdf6a031a10fe241864c32fb03a4fdad739 ' free tokenimage tokenimage allows set token image used widget represent purchased token javascript depaywidgets sale tokenimage ' http depay com favicon png ' style style allows change style widget javascript depaywidgets sale style color primary ' ffd265 ' text ' e1b64a ' buttontext ' 000000 ' icon ' ffd265 ' fontfamily ' cardo serif important ' cs import url http font googleapis com css2 family cardo wght 400 700 display swap reactdialogbackground background rgba 0 0 0 0 8 color color allows set color value javascript depaywidgets sale style color primary ' ffd265 ' text ' ffd265 ' buttontext ' 000000 ' icon ' ffd265 ' fontfamily fontfamily allows set font family javascript depaywidgets sale style fontfamily ' cardo serif important ' cs cs allows inject cs javascript depaywidgets sale style cs import url http font googleapis com css2 family cardo wght 400 700 display swap reactdialogbackground background rgba 0 0 0 0 8 unmount unmount allows unmount react safe way entire widget outside javascript let unmount await depaywidgets sale unmount closable closable make widget unclosable javascript depaywidgets sale closable false integration integration label sale track per integration javascript depaywidgets sale integration ' fe690fbc 1740 4894 b12c 23a72abec54d ' depay donation depay donation allows accept donation payment made thousand different crypto currency preparation order receive decentralized donation payment blockchain need wallet particular blockchain first create ethereum wallet http ethereum org en wallet create bsc wallet http academy binance com en article get started binance smart chain bsc quick start javascript depaywidgets donation accept blockchain ' ethereum ' token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' configuration need pas configuration object depaywidgets donation need least contain accept field javascript depaywidgets donation accept blockchain ' ethereum ' token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' also accept donation multiple blockchains javascript depaywidgets donation accept blockchain ' ethereum ' token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' blockchain ' bsc ' token ' 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' accept blockchain blockchain want receive payment currently supported ethereum bsc binance smart chain token address token want receive use donation configurator http depay com documentation donation donation configurator order simplify configuring receiver address receiving donation always double check ' set right address amount want control amount selection behaves pas amount configuration object alongside value start min step start amount initially selected min minimum amount selectable step number wich increment decremten change amount connected connected function called user connects wallet called connected wallet address main argument javascript depaywidgets donation connected address something address fee configure fee applied every payment ' dedicated fee receiver address fee taken target token target amount swap depending accept configuration amount either percentage e g 5 absolute amount bignumber string ' 100000000000000000 ' pure number 2 5 receiver address supposed receive fee javascript depaywidgets donation accept fee amount ' 3 ' receiver ' 0x4e260bb2b25ec6f3a59b478fcde5ed5b8d783b02 ' closed closed function called user close widget matter payment javascript depaywidgets donation closed something user closed widget sent sent function called payment ha sent network still need mined confirmed widget call function transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets donation sent transaction called payment transaction ha sent network confirmed confirmed function called payment ha confirmed network client side widget call function passing transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets donation confirmed transaction called payment transaction ha confirmed network validated validated function called payment ha validated depay apis server side javascript depaywidgets payment validated successful successful true false failed failed function called payment execution failed blockchain ha sent submitted widget call function passing transaction single argument see depay web3 wallet http github com depayfi depay web3 wallet transaction detail javascript depaywidgets donation failed transaction called payment transaction failed blockchain handled widget need display anything critical critical function called widget throw critical internal error ' handle display ' javascript depaywidgets donation critical error render display error error tostring error error function called widget throw non critical internal error handle display ' javascript depaywidgets donation error error maybe internal tracking error tostring need display anything widget take care displaying error provider allows set provider used making rpc call individiual blockchains javascript depaywidgets donation provider ethereum ' http localhost 8545 ' bsc ' http localhost 8545 ' currency allows enforce displayed local currency instead automatically detecting javascript depaywidgets donation currency ' usd ' whitelist allows configured token eligible mean payment sender javacript depaywidgets donation whitelist ethereum ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' eth ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' usdt ' 0x6b175474e89094c44da98b954eedeac495271d0f ' dai bsc ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' bnb ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' busd ' 0x55d398326f99059ff775485246999027b3197955 ' bsc usd polygon ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' matic ' 0x2791bca1f2de4661ed88a30c99a7a9449aa84174 ' usdc blacklist allows blacklist token suggested mean payment sender javacript depaywidgets donation blacklist ethereum ' 0x82dfdb2ec1aa6003ed4acba663403d7c2127ff67 ' akswap ' 0x1368452bfb5cd127971c8de22c58fbe89d35a6bf ' jntr e ' 0xc12d1c73ee7dc3615ba4e37e4abfdbddfa38907e ' kick bsc ' 0x119e2ad8f0c85c6f61afdf0df69693028cdc10be ' zepe ' 0xb0557906c617f0048a700758606f64b33d0c41a6 ' zepe ' 0x5190b01965b6e3d786706fd4a999978626c19880 ' theever ' 0x68d1569d1a6968f194b4d93f8d0b416c123a599f ' aabek ' 0xa2295477a3433f1d06ba349cde9f89a8b24e7f8d ' aax ' 0xbc6675de91e3da8eac51293ecb87c359019621cf ' air ' 0x5558447b06867ffebd87dd63426d61c868c45904 ' bnbw ' 0x569b2cf0b745ef7fad04e8ae226251814b3395f9 ' bsctoken ' 0x373233a38ae21cf0c4f9de11570e7d5aa6824a1e ' alpaca ' 0x7269163f2b060fb90101f58cf724737a2759f0bb ' pupdoge ' 0xb16600c510b0f323dee2cb212924d90e58864421 ' flux ' 0x2df0b14ee90671021b016dab59f2300fb08681fa ' safemoon ' 0xd22202d23fe7de9e3dbe11a2a88f42f4cb9507cf ' mneb ' 0xfc646d0b564bf191b3d3adf2b620a792e485e6da ' piza ' 0xa58950f05fea2277d2608748412bf9f802ea4901 ' wsg ' 0x12e34cdf6a031a10fe241864c32fb03a4fdad739 ' free container container allows pas container element supposed contain widget javascript depaywidgets dontaion container document getelementbyid ' container ' make sure set cs value position relative container element otherwise contain widget react example javascript let customcomponentwithwidget prop let container useref useeffect container current depaywidgets payment defaultarguments document container container current container return div ref container style position ' relative ' border ' 1px solid black ' width 600px height 600px div style style allows change style widget javascript depaywidgets donation style color primary ' ffd265 ' text ' e1b64a ' buttontext ' 000000 ' icon ' ffd265 ' fontfamily ' cardo serif important ' cs import url http font googleapis com css2 family cardo wght 400 700 display swap reactdialogbackground background rgba 0 0 0 0 8 color color allows set color value javascript depaywidgets donation style color primary ' ffd265 ' text ' ffd265 ' buttontext ' 000000 ' icon ' ffd265 ' fontfamily fontfamily allows set font family javascript depaywidgets donation style fontfamily ' cardo serif important ' cs cs allows inject cs javascript depaywidgets donation style cs import url http font googleapis com css2 family cardo wght 400 700 display swap reactdialogbackground background rgba 0 0 0 0 8 unmount unmount allows unmount react safe way entire widget outside javascript let unmount await depaywidgets donation unmount closable closable make widget unclosable javascript depaywidgets donation closable false integration integration label donation track per integration javascript depaywidgets donation integration ' fe690fbc 1740 4894 b12c 23a72abec54d ' depay connect depay connect allows user connect crypto wallet dapp website return connected account account wallet return javascript let account account wallet await depaywidgets connect see depay web3 wallet http github com depayfi depay web3 wallet detail returned wallet rejection 1 reject user close dialog without connecting wallet javascript depaywidgets connect catch error error user closed dialog depay login depay login allows perform web3 wallet logins ease return account succesfully signed recovered log message javascript let message sign login let account await depaywidgets login message connects wallet instructs connected wallet sign message afterwards sends signature message post login endpoint defined post login body message sign login signature 0x123456 raw signature login endpoint need recover address message signature need return response post login response 0xd8da6bf26964af9d7eed9e03e53415d37aa96045 resolve depaywidgets login request resolved account javascript account 0xd8da6bf26964af9d7eed9e03e53415d37aa96045 also pas recover function take care signature recovery javascript depaywidgets login message recover message signature return new promise resolve reject fetch ' http example com login ' method ' post ' body json stringify message signature response response status 200 response text account resolve account catch reject else response text text reject text ' recovering login signature failed ' catch reject rejection 1 reject user close dialog without connecting wallet javascript depaywidgets login catch error error user closed dialog depay select depay select widget allows open dialog allows select thing like token etc resolve ha selected user javascript let token await depaywidgets select ' token ' token address 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb blockchain ethereum decimal 18 logo http raw githubusercontent com trustwallet asset master blockchains ethereum asset 0xa0bed124a09ac2bd941b10349d8d224fe3c955eb logo png name depay symbol depay example react depay payment javascript import react ' react ' import depaywidgets ' depay widget ' export default prop let unmount const openpaymentwidget async unmount await depaywidgets payment useeffect return make sure open widget get closed unmounted part component unmount unmount return button onclick openpaymentwidget type button pay button development quick start yarn install yarn dev testing debug cypress start cypress headed exit test cypress debug test debug single cypress file yarn test cypress debug spec cypress e2e payment amount j release new version npm npm login npm publish web3 payment future web3 payment http depay com web3 payment blockchains hold potential faster simpler smarter payment web3 payment borderless peer peer support multiple token blockchains accept asset type customer already wallet depay http depay com blockchain agnostic time extended blockchain specific plugin interoperability scalability flexibility cornerstone protocol accepting asset user already wallet matter blockchain held reduces friction performing decentralized payment chain agnostic multichain interoperability key principle infrastructure built depay http depay com extensible around blockchain ensuring competitive cross chain future permissionless interoperability key principle infrastructure built depay http depay com extensible around blockchain ensuring competitive cross chain future trustless web3 payment provider processor receive payment wallet manage intermediate step payment paid seller depay http depay com doe act intermediary every intermediate step replaced smart contract connected decentralized liquidity pool result trust longer required easy use ambition wa create even easier user experience ' used shopping current non crypto e commerce store think ' done good job open source feel free use contribute codebase ' happy look hood depay http depay com protocol always remain open source multichain depay http depay com calculates payment route multiple blockchains simultaneously despite wallet currently connected software automatically detects switch network required
/opynfinance/Gamma-Liquidator,TypeScript,opyn liquidator liquidation bot automatically liquidate undercollateralized opyn naked margin vault usage docker requires running docker http docker com engine docker run v db db env bot private key 0xd89d228bb0fe8bd9b28de542827d7e5eccd26cbeb159ce263488a6a54b88bdcf env ethereum node url http mainnet infura io v3 infura key env run command node build src index j opyn liquidator overview service automatically liquidate undercollateralized naked margin vault opyn information running liquidator bot see doc todo configuration environment variable env variable description bot minimum ether balance minimum balance ether bot ' wallet posse denominated wei default 0 bot private key required defines wallet bot use generate seed ether running bot deribit max spread multiplier amount multiply calculated deribit max spread given option determining liquidation profitability default 4 deribit max spread amount multiply deribit delta given option determining liquidation profitability defined decimal percent default 0 04 deribit min spread minimum spread given deribit option determining liquidation profitability defined decimal percent default 0 01 deribit price multiplier amount multiply deribit best ask price given option determining liquidation profitability default 1 1 ethereum node url required ethereum node url use e infura url expired transaction gas price multiplier amount multiply fastest ethgasstation info http www ethgasstation info gas price retrying timed transaction multiplied chain median gas price fallback default 1 1 expired transaction timeout long wait retrying transaction higher gas price denominated microsecond default 60000 gamma controller address address deployed opyn controller contract used monitoring liquidating vault default 0x4ccc2339f87f6c59c6893e1a678c2266ca58dc72 http etherscan io address 0x4ccc2339f87f6c59c6893e1a678c2266ca58dc72 eth gasstation gas price multiplier amount multiply fastest ethgasstation info http www ethgasstation info gas price sending transaction default 1 0 log output log stdout default true margin calculator address address deployed opyn margin calculator contract used calculate margin requirement partially collateralized vault default 0xfaa67e3736572645b38af7410b3e1006708e13f4 http etherscan io address 0xfaa67e3736572645b38af7410b3e1006708e13f4 margin pool address address deployed opyn margin pool contract used transfer collateral liquidation default 0x5934807cc0654d46755ebd2848840b616256c6ef http etherscan io address 0x5934807cc0654d46755ebd2848840b616256c6ef minimum collateral liquidate minimum percent amount vault collateral bot liquidate defined decimal percent used liquidating non deribit priced option default 0 95 minimum liquidation price lowest liquidation price bot liquidate denominated formatted usd default 5 00 minimum strike price asset balance minimum balance strike price asset liquidator account access denominated strike price asset decimal default 0 minimum underlying asset balance minimum balance underyling asset liquidator account access denominated underlying asset decimal default 0 chain gas price multiplier amount multiply chain median gas price fallback default 1 5 pagerduty routing key routing key triggering sending critical error message pagerduty sentry dsn dsn url monitoring sending error message sentry settlement frequency frequently fetch settlement vault attempt settle denominated microsecond default 86400000 every 24 hour slack webhook webhook sending error message slack channel run command required entry point used bot ' docker container startup
/BerkeleyBlockchain/dev-decal-sp21,Jupyter Notebook,c 198 077 blockchain developer decal spring 2021 blockchain berkeley http blockchain berkeley edu repo consists homework solution c 198 077 blockchain developer decal http blockchain berkeley edu course spring 2021 developer decal taught uc berkeley spring 2020 blockchain berkeley education department http blockchain berkeley edu education course website slide found http blockchain berkeley edu spring 2021 developer decal slide updated weekly goal course aim teach student fundamental blockchains development solidity programming language well industry relevant tool metamask http github com metamask infura http infura io truffle http github com trufflesuite truffle ganache http github com trufflesuite ganache student equipped industry relevant experience accessible collaborative environment hope course student become confident ability develop deploy blockchain based solution important industry issue homework repository find homework code homework code posted corresponding lecture detailed installation set guide homework consist filling skeleton code answer short question solution released week subsequent lecture important policy regarding plagiarism plagiarism academic dishonesty strictly prohibited treated automatic failure course working collaboratively discussing idea encouraged please post solution public repository site github gitlab please make local set private repository question please feel free contact course staff question please feel free email u dev decal blockchain berkeley edu open issue github repo like content would great star repo
/BerkeleyBlockchain/dev-decal-sp20,Jupyter Notebook,c 198 077 blockchain developer decal spring 2020 blockchain berkeley http blockchain berkeley edu repo consists homework solution c 198 077 blockchain developer decal http blockchain berkeley edu spring 2020 developer decal taught uc berkeley spring 2020 blockchain berkeley education department http blockchain berkeley edu education course website slide found http blockchain berkeley edu spring 2020 developer decal slide updated weekly update may 2020 solution homework ha posted well goal course aim teach student fundamental blockchains development solidity programming language well industry relevant tool metamask http github com metamask infura http infura io truffle http github com trufflesuite truffle ganache http github com trufflesuite ganache student equipped industry relevant experience accessible collaborative environment hope course student become confident ability develop deploy blockchain based solution important industry issue homework format repository find homework code solution homework code posted corresponding lecture detailed installation set guide homework consist filling skeleton code answer short question finished please ask course staff check person cannot finish homework class next week ' lecture finish solution released week subsequent lecture important policy regarding plagiarism plagiarism academic dishonesty strictly prohibited treated automatic failure course working collaboratively discussing idea encouraged please post solution public repository site github gitlab please make local set private repository question please feel free contact course staff contributor course staff consists minxing chen http github com chenmx00 simon zirui guo http github com simonguozirui grace kull http github com gracekull21 janice ng http github com janice 23 haena lee http github com cactu question please feel free email u dev decal blockchain berkeley edu open issue github repo like content would great star repo
/gg2001/flashloans,Solidity,flash loan example ci http github com gg2001 flashloans workflow ci badge svg implementation aave dydx uniswap flash loan test aave weth 291618 07178644277661004 fee 262 456264607798498949 usdc 44717206 41467 fee 40245 485773 dai 21602903 717869620560047272 fee 19442 613346082658504042 dydx weth 120695 19440535901869926 fee 0 000000000000000002 usdc 14646088 247365 fee 0 000000000000000002 dai 8115907 878251847787692695 fee 0 000000000000000002 gas usage method 100 gwei gas 2008 42 usd eth contract method min max avg call usd avg aave flashloan 189505 209340 196480 3 39 46 dydx flashloan 208084 223325 214171 3 43 01 uniswap flashloan 78499 101776 87878 4 17 65 deployment limit aave 507102 5 3 101 85 dydx 779953 8 2 156 65 uniswap 525210 5 5 105 48
/Kwenta/kwenta,HTML,kwenta ci http github com synthetixio kwenta workflow kwenta 20ci badge svg branch master discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow kwenta io svg label kwenta io style social http twitter com kwenta io kwenta dapp enabling derivative trading infinite liquidity powered synthetix protocol trading ui available kwenta io http kwenta io br en link kwenta eth http app en domain name kwenta eth tech stack next j react react query recoil unstated next styled component immer ethereum stack ether j v5 ethereum wallet implementation blocknative onboard ethereum wallet connectivity synthetixio contract interface http github com synthetixio j monorepo tree master package contract interface interaction synthetix protocol synthetixio query http github com synthetixio j monorepo tree master package query historical data powered thegraph http thegraph com development install dependency bash npm install legacy peer deps set environment variable copy env local example file directory env local ignored git bash cp env local example env local open env local add missing environment variable required next public portis app id portis app id get portis io http www portis io next public bn onboard api key blocknative onboard api key get blocknative com http blocknative com next public provider id specifies default provider option infura blast api optional next public infura project id infura project id get infura io http infura io next public blastapi project id blast api project id get blastapi io http blastapi io run bash npm run dev open http localhost 3000 http localhost 3000 view browser build bash npm run build npm start end 2 end testing order run fully automated end 2 end e2e test kwenta us synpress http github com synthetixio synpress wrapper around cynpress http www cypress io constraint current e2e test written run optimistic kovan using chrome browser setup download install google chrome setup test wallet optimistic kovan fund plenty eth pay gas susd prior running test must set environment variable shell npm started unfortunately time method set said environment variable eg env local ' work conjunction synpress bash private key insertprivatekey network name optimistickovan rpc url http kovan optimism io chain id 69 block explorer http kovan optimistic etherscan io testnet true bash convenience script setting environment bash convenience script ha made available http gist github com raffiegang b24a6b97bcd054645abf59be852bc88d open bash copy private key test wallet file synpress privatekey folder location script using method please ' forget update gitignore file prevent private key leaked run following command source synpress envsetter sh run test bash npm run build npm start npm run test e2e test contributing kwenta welcome contributor regardless time available everyone provide meaningful contribution project submitting bug report feature request even smallest fix submit contribution please fork fix commit create pull request describing work detail detail please look contribution guideline contributing md contact join community kwenta discord server http discord gg hupyq63tff
/Aymen1001/uniswap-sushiswap-arbitrage,Solidity,uniswap sushiswap arbitrage smart contract performing arbitrage uniswap sushiswap feature smart contract simplearbitrage alows user deposit weth make arbitrage 2 exchange ensures operation always profitable checking price difference always higher payed fee usage installation setup 1 installing brownie brownie python framework smart contract development testing deployment ' quit like hardhat http hardhat org us python writing test deployements script instead javascript simple way install brownie pip install user pipx pipx ensurepath restart terminal pipx install eth brownie ' get pipx work via pip ' recommended use pipx pip install eth brownie install ganache cli http www npmjs com package ganache cli sh npm install g ganache cli 3 clone repo sh git clone http github com aymen1001 uniswap sushiswap arbitrage git cd uniswap sushiswap arbitrage 4 set environment variable able deploy real testnets need add private key find private key ethereum wallet like metamask infura project id create infura account ' free env file private key private key web3 infura project id infura project id run start arbitrage mainnet fork testing purpose also use kovan testnet need run command sh brownie run script arbitrage py network mainnet fork testing test smart contract found test folder run test sh brownie test test function individualy sh brownie test k function name
/kevinheavey/solders,Rust,div align center img src http raw githubusercontent com kevinheavey solder main doc logo jpeg width 50 height 50 div action status http github com kevinheavey solder workflow ci badge svg http github com kevinheavey solder action query workflow 3aci pypi version http badge fury io py solder svg http badge fury io py solder license mit http img shield io badge license mit yellow svg http github com kevinheavey solder blob maim license code style black http img shield io badge code 20style black 000000 svg http github com psf black solder solder python binding solana rust sdk http doc r solana sdk latest solana sdk provides robust high performance solution core solana task transaction signing serialization save u reimplementing solana logic pure python installation pip install solder note requires python 3 7 example usage python solder message import message solder keypair import keypair solder instruction import instruction solder hash import hash solder transaction import transaction solder pubkey import pubkey program id pubkey default arbitrary instruction data byte 1 account instruction instruction program id arbitrary instruction data account payer keypair message message instruction payer pubkey blockhash hash default replace real blockhash tx transaction payer message blockhash development setup 1 install poetry http python poetry org 2 install dev dependency poetry install 3 activate poetry shell sh poetry shell testing 1 run maturin develop compile rust code 2 run make fmt make lint make test
/DeFi-PortfolioManagement/defi-portfolio,Java,defi portfolio use defi portfolio export analyse visualize transaction reward commission liquidity mining pool dex transaction interact defichain http defichainportfolio documentation getting started getting started information information u u donate like application support project dfi defichain token dfi dmswtqwd43s9yu1m4lix3qypl2bas7d37v donate src icon donateqr png getting started b setup b 1 download http github com defi portfoliomanagement defi portfoliomanager release latest defi portfolio setup vx x x exe defi portfolio x x x mac tar defi portfolio x x x linux tar 2 installation manual functionality description found defi wiki http defichain wiki com wiki defichain portfolio u daniel klaiber http danielklaiber http twitter com danielkolibri arthur eisener http arthureisener http twitter com arthureisener license defi portfolio released term mit license information see http opensource org license mit
/ergolabs/ergo-dex-frontend,TypeScript,prod http github com ergolabs ergo dex frontend action workflow release yml badge svg branch master test http github com ergolabs ergo dex frontend action workflow test yml badge svg branch test dev http github com ergolabs ergo dex frontend action workflow dev yml badge svg branch dev learn project logo br p align center href http github com ergolabs ergo dex frontend img src src asset image logo svg alt logo width 150 h3 align center calamity h3 p align center front end br href http github com ergolabs ergo dex frontend strong explore doc strong br br href http github com ergolabs ergo dex frontend issue report bug href http github com ergolabs ergo dex frontend issue request feature p p table content detail open open summary h2 style display inline block table content h2 summary ol li href project project li li href usage usage li li href roadmap roadmap li li href contributing contributing li li href license license li li href http discord gg mp7uajempp contact li li href acknowledgement acknowledgement li ol detail project project please see ergodex protocol http github com ergolabs ergo dex repository full description usage example launch locally 1 clone checkout dev branch 2 yarn 3 yarn start 4 open localhost 3000 chrome contributing contributing contribution make open source community amazing place learn inspire create contribution make greatly appreciated 1 fork project 2 create feature branch git checkout b feature amazingfeature 3 commit change git commit ' add amazingfeature ' 4 push branch git push origin feature amazingfeature 5 open pull request license license distributed mit license see license information markdown link image http www markdownguide org basic syntax reference style link contributor shield http img shield io github contributor ergomixer ergomixback svg style badge contributor url http github com ergolabs ergo dex frontend graph contributor fork shield http img shield io github fork ergomixer ergomixback svg style badge fork url http github com ergolabs ergo dex frontend network member star shield http img shield io github star ergomixer ergomixback svg style badge star url http github com ergolabs ergo dex frontend stargazer issue shield http img shield io github issue othneildrew best readme template svg style badge issue url http github com ergolabs ergo dex frontend issue license shield http img shield io github license othneildrew best readme template svg style badge license url http github com ergolabs ergo dex frontend blob master license txt
/michael-spengler/decentralized-finance,TypeScript,decentralized finance nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp nbsp img src http raw githubusercontent com michael spengler decentralized finance main logo v2 svg alt drawing width 200 http www npmjs com package decentralized finance defi package provides distributed ledger based banking feature like payment deposit loan automated investment pattern connect typescript based project smart contract ethereum blockchain checking usage example package shall increase freedom increase freedom npm downloads http img shield io npm dw decentralized finance defi http www npmjs com package decentralized finance defi chat http img shield io discord 799926751039979520 http discord gg 6matkxmf3z maintained http img shield io maintenance maintained 2021 http github com michael spengler decentralized finance usage example payment http github com michael spengler decentralized finance wiki feature area transfer ether require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const fromwalletaddress process env sender wallet address const towalletaddress process env receiver wallet address const amountineth 1 const senderprivatekey process env sender wallet private key await defiservice transferether fromwalletaddress towalletaddress amountineth senderprivatekey deposit http github com michael spengler decentralized finance wiki feature area deposit ether compound also test feature via compound finance http compound finance user interface require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const amountofethertobedeposited 1 const senderprivatekey process env sender wallet private key const gaslimit 250000 gwei 0 00025 eth currently january 15th 2021 const web3providerurl process env provider url e g http mainnet infura io v3 yourinfuraprojectid await defiservice depositethertocompound amountofethertobedeposited senderwalletprivatekey gaslimit web3providerurl loan http github com michael spengler decentralized finance wiki feature area borrow ether compound also test feature via compound finance http compound finance user interface require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const amountofdaitobeborrowed 100 const walletprivatekey process env sender wallet private key const gaslimit 250000 const web3providerurl process env provider url e g http mainnet infura io v3 yourinfuraprojectid await defiservice borrowdaifromcompound amountofdaitobeborrowed walletprivatekey gaslimit web3providerurl redeem asset compound also test feature via compound finance http compound finance user interface require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const walletaddress process env sender wallet address const walletprivatekey process env sender wallet private key const gaslimit 250000 const web3providerurl process env provider url e g http mainnet infura io v3 yourinfuraprojectid const amount 1 redeem 1 ceth await defiservice redeemassetfromcompound walletaddress walletprivatekey gaslimit web3providerurl amount account management http github com michael spengler decentralized finance wiki feature area get compound account data also test feature via compound finance http compound finance user interface const defiservice require decentralized finance defi const walletaddress ' 0xa63cd0d627c34ce3958c4a82e6bb12f7b9c1c324 ' const accountinfo await defiservice getcompoundaccountdata walletaddress console log collateral value eth accountinfo total collateral value eth value exchange feature http github com michael spengler decentralized finance wiki feature area swap dai ether via uniswap also test feature via uniswap org http uniswap org user interface require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const amountofdaitobeswapped 50 const walletaddress process env sender wallet address const walletprivatekey process env sender wallet private key const web3providerurl process env provider url e g http mainnet infura io v3 yourinfuraprojectid await defiservice swapdaitoeth amountofdaitobeswapped walletaddress walletprivatekey web3providerurl leverage investing http github com michael spengler decentralized finance wiki feature area binance based leverage investment require ' dotenv ' config ensures process env contains env file configuration value const gambler require decentralized finance defi const liquidityratiotobuy 0 95 example const liquidityratiotosell 0 45 example const reinvestat 10 example const investmentamount 20 example const binanceapikey process env binance api key check profile binance com api management const binanceapisecret process env binance api secret check profile binance com api management gambler gamble lrtobuy lrtosell reinvestat investmentamount binanceapikey binanceapisecret get account info dydx exchange also test feature via dydx exchange http dydx exchange user interface require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const walletaddress process env sender wallet address const result await defiservice getdydxperpetualaccountbalances walletaddress console log result neural network http github com michael spengler decentralized finance wiki feature area explore feedforward neural net backpropagation one experimental mode check code check whether fine const defiservice require decentralized finance defi defiservice charteratrader observe console output crypto currency insight http github com michael spengler decentralized finance wiki feature area get price data timestamp coinmarketcap api key required compare result via coinmarketcap com http coinmarketcap com user interface require ' dotenv ' config ensures process env contains env file configuration value const defiservice require decentralized finance defi const priceswithtimestamp defiservice getpricedatawithtimestamp process env coinmarketcap api key eth console log priceswithtimestamp 1 distributed ledger insight http github com michael spengler decentralized finance wiki feature area get current gas price info const defiservice require decentralized finance defi const gaspriceinfo await defiservice getgaspriceinfo console log gaspriceinfo fastest feature find example defi service http github com michael spengler decentralized finance blob main src defi service file looking anything specific feel free check corresponding folder class definition within src http github com michael spengler decentralized finance tree main src folder found looking feel free raise issue http github com michael spengler decentralized finance issue new even better raise pull request smart contract development find simple example solidity based smart contract development project within smart contract development http github com michael spengler decentralized finance tree main src smart contract development folder general recommendation might also check aave com http aave com compound finance http compound finance want get general overview defi service might check defipulse com http defipulse com distributed domain name service provide user interface sustainable way might check en domain http en domain want try might check tutorial http www youtube com watch v oa4ooy5zgu0 blockchain based deployment permaweb deployment might check argoapp live http argoapp live tested vuejs frontend project work pretty straight forward already general fan decentralized web dweb might also check new 2021 ipfs browser standard http brave com brave integrates ipfs fund contribution see issue defi space want see solved consider funding solution via gitcoin co http gitcoin co openbits based open source incentive engineering package also explore feature openbits world http openbits world want support adventure consider installing package via sh openbits install decentralized finance defi find background information via http openbits world explore openbit decentralized finance defi deno based defi prepared corresponding deno module http deno land x defi wait dependency package hand ready deno http deno land resp nest land http nest land gdpr related data privacy order comply general data protection guideline might consider providing built transaction anonymization service user one option described tutorial http www youtube com watch v dv9jioc8koy leveraging tornadocash eth link http tornadocash eth link depending specific jurisdiction might check tornadocash eth link compliance http tornadocash eth link compliance security see security policy http github com michael spengler decentralized finance blob main security md protect postinstall exploit safe side even dependency dependency dependency try exploit potential postinstall weak spot http github com michael spengler decentralized finance issue 2 recommend adhere following pattern sh npm config set ignore script true npm install npm config set ignore script false philosophy package shall increase freedom increase freedom action weak shall private action powerful shall transparent open source defi coin construction tokenomics challenge define max supply problem might one point le le transaction many owner decide hodl clearly define incentive create add liquidity pool could process collecting wallet address want participate look like support open source contribution like work might download brave browser via promotion link http brave com fan464 http brave com fan464 enjoy new 2021 ipfs browser standard http brave com brave integrates ipfs http brave com http brave com wp content uploads 2019 01 logotype full color svg
/PumpkingWok/DeFi-War,Python,defi war let plan dark impenetrable night move fall like thunderbolt sun tzu art war description defi war tool retrieve info dex chain using official api directly chain using smart contract manage main defi action open cdp lend borrow token coming soon open manage flash loan coming soon install install dex supported 0x 1inch aave bancor compound curve dydx kyber oasis radar relay synthetix uniswap contribute feel free open issue contribute welcome
/OctoFi/octofi-app-aquafarm,JavaScript,octofi dapp p href img alt release src http img shield io badge release v4 1 brightgreen svg href http www npmjs com package npm img alt npm version src http img shield io badge react 17 0 1 blue svg href http www npmjs com package npm img alt npm version src http img shield io badge web3 1 3 4 blue svg p p strong octofi dapp strong dashboard tracking defi portfolio finding new investment opportunity buy sell directly wrap tentacle around sea gain built interface mission mind creating something simple use adding salt pepper defi revolution p launch octofi dapp dapp feature strong simple strong even shrimp understands strong overview strong help get better real time overview investment strong powerful strong invest 6300 defi opportunity strong responsive strong made mobile responsive strong live strong deployed github page github page secured cloudflare cloudflare community feedback octofi community den changelog changelog changelog roadmap roadmap post roadmap development overview overview development priority priority upcoming release milestone contributing please read contributing md contributing file detail get involved project well process submitting bug pull request getting started instruction get copy project running local machine development testing purpose installing create fork repository clone install dependency git clone http github com username octofi app aquafarm git cd octofi app aquafarm yarn yarn start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console yarn test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information yarn deploy build app production using yarn build command br commits output gh page branch deployed github page yarn eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready use template ' like use project template create dapp give need start 1 open terminal enter command git clone b main http github com octofi octofi app aquafarm git 2 open package json file change following part homepage http github username github io github repo name 3 open public directory delete cname 4 use edit env production starter file environment variable put local env local file 5 go back terminal enter following command br rm rf git br yarn cache clean br yarn install ignore engine ignore script network timeout 600000 br yarn add node sas 4 14 0 br npm rebuild node sas 4 14 0 br npx browserslist latest update db br rm rf git br yarn start build br git init br git remote add origin github repository url git br yarn deploy br built github page react versioning use semantic versioning semver software version project list version available see tag tag release release repository author see list contributor contribs participated project make sure update url link organization http github com octofi overview http github com orgs octofi project 1 priority http github com orgs octofi project 2 tag http github com octofi octofi app aquafarm tag release http github com octofi octofi app aquafarm release contribs http github com octofi octofi app aquafarm contributor milestone http github com octofi octofi app aquafarm milestone contributing contributing md dapp http app octo fi den http den octo fi feedback homepage http octo fi changelog http log octo fi roadmap http todo octo fi semver http semver org github page http page github com cloudflare http www cloudflare com
/Veridise/Eurus,Racket,div align left h1 img src resource eurus white png width 50 &#9; eurus precise attack synthesis defi apps h1 div eurus open source general framework smart contract verification synthesis eurus performs reasoning using builtin symbolic virtual machine based yul http doc soliditylang org en latest yul html intermediate language solidity eurus still active development please see different branch history version e g demo version building docker bash docker build eurus v0 docker run rm eurus v0 bash building source python 3 6 anaconda3 highly recommended otherwise may missing package set alias python environment python3 pysha3 http github com tiran pysha3 http github com tiran pysha3 pip install pysha3 1 0 2 temporarily required supporting keccak 256 hashing computation eth abi http github com ethereum eth abi http github com ethereum eth abi pip install eth abi 2 1 1 easy abi encoding racket 8 0 http racket lang org http racket lang org rosette 4 0 http github com emina rosette http github com emina rosette raco pkg install rosette bv package running racket version interpreter http github com pmatos racket bv http github com pmatos racket bv raco pkg install bv sha package raco pkg install sha solidity solc 0 8 14 required older version known yul support issue http soliditylang org http soliditylang org solc select recommended http github com crytic solc select http github com crytic solc select antlr 4 8 required compatible version http github com antlr antlr4 python target setup http github com antlr antlr4 blob master doc python target md pip install antlr4 python3 runtime 4 8 also need antlr backend ubuntu run sudo apt get install antlr4 system please check antlr homepage http www antlr org http www antlr org python yul parser par yul source code json representation generates helper configuration file includes mapping call code function name signature bash usage yul parser py h yul yul verbose verbose optional argument h help show help message exit yul yul input yul file verbose verbose show info debugging automatically output filename json filename config json folder example usage two set example example showing use eurus perform concrete symbolic execution verification performed ex corresponds concrete reasoning part eurus symex corresponds symbolic reasoning part run ' need first prepare running bash cd example bash prepare ex sh bash prepare symex sh run different eurus script perform different task bash racket test ex5 rkt racket test symex1 rkt find detail reading ex ex sol symex symex sol well test rkt eurus script documentation way detailed step please see command section command automatically generate core yul parser bash cd utils yulantlr antlr4 dlanguage python3 yul g4 compile solidity source code yul bash ex example solc example ex ex sol ir overwrite example ex translate original yul eurus yul bash example python utils yul translator py yul example ex ex0 yul python utils yul translator py yul example ex ex1 yul python utils yul translator py yul example ex ex2 yul python utils yul translator py yul example ex ex3 yul pre process yul code generated parsed json config bash example python utils yul parser py yul example ex ex0 eurus yul python utils yul parser py yul example ex ex1 eurus yul python utils yul parser py yul example ex ex2 eurus yul python utils yul parser py yul example ex ex3 eurus yul run test script bash racket test ex5 rkt external abi encoding bash python utils abiencode py ' string ' ' abcd ' external abi decoding bash python utils abidecode py ' string ' b ' x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x20 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x06 x6d x79 x6e x61 x6d x65 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 x00 ' external keccak256 bash python utils keccak256 py fun uint256 bool
/Linear-finance/linear,TypeScript,linear finance github package json version http img shield io github package json v linear finance linear github top language http img shield io github language top linear finance linear test hardhat http github com linear finance linear action workflow hardhat test yml badge svg http github com linear finance linear action workflow hardhat test yml smart contract implemented solidity linear finance introduction linear finance cross chain compatible decentralized delta one asset protocol cost effectively instantly create manage trade synthetic asset unlimited liquidity linear finance linear non custodial cross chain compatible delta one asset protocol linear ' long term defi vision increase inclusiveness democratize access investment asset digital traditional tremendous value exists ability investor easily quickly invest save fee secure asset fair market value linear combine substantial technical experience numerous crypto project extensive financial experience exotic structured asset traditional global asset management firm bring market one first defi project built upon ethereum cross chain compatibility linear allow user build manage spot portfolio exposure slew innovative digital traditional financial product prerequisite recent version node j http nodejs org yarn http yarnpkg com required compile contract run test compiling build smart contract using hardhat http hardhat org following command sh yarn install yarn compile find compiled contract artifact folder upon successful compilation testing run test case hardhat http hardhat org sh yarn test community discord http img shield io discord 738363983031173151 label discord logo discord style plastic http discordapp com channel 738363983031173151 twitter follow http img shield io twitter follow linearfinance label linearfinance style social http twitter com linearfinance chat telegram http img shield io badge telegram brightgreen svg logo telegram color 234b4e52 http joinchat tb3iahumzsyfspxhewqlvw license code repository licensed mit license
/studydefi/dedge,TypeScript,dedge package status smart contract circleci http circleci com gh studydefi dedge svg style svg http circleci com gh studydefi dedge http dedge exchange monorepo decentralized hedging protocol allows 1 swap supplied borrowed asset compound 2 import makerdao vault 3 exit compound position ethereum telegram http dedgeexchange known issue 1 exit position fail likely due high slippage e convert many token might need borrow token change 105 125
/Wallet3/Wallet3-Desktop,TypeScript,wallet 3 secure wallet web3 era wallet 3 secure crypto wallet desktop user ha simple ux friendly design user walletconnect user experience powerful defi ecosystem cutting edge security wallet 3 utilizes latest macos security feature protect user private key stored keychain secured secure enclave inaccessible anyone user wallet 3 trust user ' desktop environment wallet 3 launchd app creates secure pipline inter process communication sensitive data resident memory hardware wallet wallet 3 provides 12 24 seed phrase user according apple security document kernel cprng seeded multiple entropy source boot lifetime device include contingent availability br secure enclave hardware trng br timing based jitter collected boot br entropy collected hardware interrupt br seed file used persist entropy across boot br intel random instruction example rdseed rdrand intel based mac br br source http support apple com en ie guide security seca0c73a75b web wallet 3 utilize advanced security mechanism protect digital asset desktop user feature 0 built security 1 support layer 2 evm compatible chain 2 connect defi apps walletconnect 3 ux friendly design 4 support touchbar 5 real time gas price mac user 6 multi account support 7 support deeplink wallet3 deeplink v1 4 0 wallet 3 support deeplink developer launch wallet 3 url start wallet3 walletconnect uri ethereum ethereum decentralized open source blockchain smart contract functionality ether eth native cryptocurrency platform vision ethereum grant ambitious possibility disrupt central bank yes also replace private bank protocol turn bank function code central private saving lending borrowing tradingthe entire money systemall bankless long central bank monetary policy remain competitive encode money public settlement network thats point anyone ethereum network open neutral like internet source bankless http newsletter banklesshq com p tale two money system defi term defi stand decentralized finance move shift away traditional centralized financial system bank brokerage exchange facilitate transaction secure peer peer service model without need transactional intermediary localization wallet 3 available following language english japanese traditional chinese simplified chinese development setup 1 clone repo http github com wallet3 wallet3 git 2 install dependency yarn install 3 copy src common wallet3 rc example json src common wallet3 rc json fill valid rpc url 4 copy sign appsign example j sign appsign j sign winsign example j sign winsign j 5 launch yarn start copyright copy 2021 2022 chainbow co ltd
/ericglau/defi-ls,TypeScript,ethereum defi language support ethereum defi support nodejs application v code feature token list http tokenlists org support market data coingecko api http www coingecko com en api address information amberdata http amberdata io image token gif feature diagnostics quick fix address checksum failure non checksum address code completion ethereum token address name hover token address live data including price market cap daily volume code lens ethereum address etherscan link mainnet testnets hover ethereum address live data including eth token balance dollar value automatic en name resolution reverse resolution quick fix convert address en name vice versa code snippet defi application ptokens uniswap v2 sdks erc20 contract abi highlight contract address generate abi etherscan verified contract click demo md demo feature setup go v code setting search following setting enter required value code lens enable infura enter infura project id project secret http infura io amberdata enter amberdata api key http amberdata io etherscan enter etherscan api key http etherscan io token list url json file compatible token list standard http tokenlists org default uniswap default list http gateway ipfs io ipns token uniswap org secret api key strictly required needed want enable full functionality extension
/FUSIONFoundation/efsn,Go,div align center img src http imgur com lixykze png height 100px div go efsn fusion would like extend gratitude ethereum foundation fusion ha used official open source golang implementation ethereum protocol automatic node setup fastest way get node running start staking automatically using fusion node manager script execute following command ubuntu 18 04 newer press 1 answer question bash c curl fssl http raw githubusercontent com fusionfoundation efsn master quicknodesetup fsnnode sh node manager script example video also found link quick setup http github com fusionfoundation efsn tree master quicknodesetup video show quickly setup staking node manual node setup run miner change parameter yourdirectory local directory install docker first e g ubuntu sudo apt get install docker io pull miner image repository docker pull fusionnetwork efsn latest run miner image 1 ticket auto buy disabled docker run p 40408 40408 v yourdirectory fusion node fusionnetwork efsn u account unlock e myfusionminer 2 ticket auto buy enabled docker run p 40408 40408 v yourdirectory fusion node fusionnetwork efsn u account unlock e myfusionminer build miner image optional docker build file dockerfile docker hub id efsn run miner using image docker run p 40408 40408 v yourdirectory fusion node fusionnetwork efsn u account unlock e myfusionminer remember 1 replace docker hub id valid docker hub id 2 save keystore file yourdirectory utc 3 save password txt yourdirectory password txt 4 optional add flag autobt enable ticket auto buy 5 optional add flag tn testnet connect public testnet note password file must named password txt keystore file name must start utc run gateway change parameter yourdirectory local directory install docker first e g ubuntu sudo apt get install docker io pull gateway image repository docker pull fusionnetwork gateway latest run gateway image 1 connect mainnet docker run p 9000 9000 p 9001 9001 p 40408 40408 v yourdirectory fusion node fusionnetwork gateway 2 connect testnet docker run p 9000 9000 p 9001 9001 p 40408 40408 v yourdirectory fusion node fusionnetwork gateway tn build gateway image optional docker build file dockerfile gtw docker hub id gateway run gateway using image docker run p 9000 9000 p 9001 9001 p 40408 40408 v yourdirectory fusion node docker hub id gateway remember replace docker hub id valid docker hub id connect websocket api via w localhost 9001 note creates public gateway unless system protected external firewall additional configuration step taken ensure security integrity api communication like setting encryption e g via nginx proxy run purely local gateway testing use docker run p 127 0 0 1 9000 9000 p 127 0 0 1 9001 9001 p 40408 40408 v yourdirectory fusion node docker hub id gateway run minerandlocalgateway change parameter yourdirectory local directory install docker first e g ubuntu sudo apt get install docker io pull minerandlocalgateway image repository docker pull fusionnetwork minerandlocalgateway latest run minerandlocalgateway image 1 ticket auto buy disabled docker run p 127 0 0 1 9000 9000 p 127 0 0 1 9001 9001 p 40408 40408 v yourdirectory fusion node fusionnetwork minerandlocalgateway u account unlock e myfusionminerandlocalgateway 2 ticket auto buy enabled docker run p 127 0 0 1 9000 9000 p 127 0 0 1 9001 9001 p 40408 40408 v yourdirectory fusion node fusionnetwork minerandlocalgateway u account unlock e myfusionminerandlocalgateway build minerandlocalgateway image optional docker build file dockerfile minerlocalgtw docker hub id minerandlocalgateway run minerandlocalgateway using image docker run p 127 0 0 1 9000 9000 p 127 0 0 1 9001 9001 p 40408 40408 v yourdirectory fusion node docker hub id minerandlocalgateway u account unlock e myfusionminerandlocalgateway remember 1 replace docker hub id valid docker hub id 2 save keystore file yourdirectory utc 3 save password txt yourdirectory password txt 4 optional add flag autobt enabled ticket auto buy note password file must named password txt keystore file name must start utc connect websocket api via w localhost 9001 api reference api reference found http fusionapi readthedocs io en latest building source building efsn requires go version 1 11 later c compiler install using favourite package manager ubuntu 18 04 run command build efsn add apt repository ppa longsleep golang backports apt get update apt get install golang go build essential git clone http github com fusionfoundation efsn git cd efsn make efsn executables fusion project come wrapper executable found cmd directory command description efsn main fusion cli client entry point fusion network main test private net capable running full node default archive node retaining historical state used process gateway fusion network via json rpc endpoint exposed top http websocket ipc transport see efsn help command line option running fusion going possible command line flag scope please see efsn help ' enumerated common parameter combo get speed quickly run efsn instance interacting fusion network far common scenario people wanting simply interact fusion network create swap transfer time locked asset deploy interact contract run efsn console command start efsn ' built interactive javascript console invoke official web3 method http github com ethereum wiki wiki javascript api well fusion ' apis http fusionapi readthedocs io en latest tool optional leave always attach already running efsn instance efsn attach programmatically interfacing fusion developer sooner rather later ' want start interacting efsn fusion network via program manually console aid efsn ha built support json rpc based apis standard apis http github com ethereum wiki wiki json rpc fusion rpc apis http github com fusionfoundation efsn wiki fsn rpc api exposed via http websockets ipc unix socket unix based platform ipc interface enabled default expose apis supported efsn whereas http w interface need manually enabled expose subset apis due security reason turned configured ' expect http based json rpc api option http enable http rpc server http addr http rpc server listening interface default localhost http port http rpc server listening port default 8545 http api api ' offered http rpc interface default eth net web3 http corsdomain comma separated list domain accept cross origin request browser enforced w enable w rpc server w addr w rpc server listening interface default localhost w port w rpc server listening port default 8546 w api api ' offered w rpc interface default eth net web3 w origin origin accept websockets request ipcdisable disable ipc rpc server ipcapi api ' offered ipc rpc interface default admin debug eth miner net personal txpool web3 ipcpath filename ipc socket pipe within datadir explicit path escape ' need use programming environment ' capability library tool etc connect via http w ipc efsn node configured flag ' need speak json rpc http www jsonrpc org specification transport reuse connection multiple request note please understand security implication opening http w based transport hacker internet actively trying subvert fusion node exposed apis browser tab access locally running webservers malicious webpage could try subvert locally available apis operating private network maintaining private network complicated lot configuration taken granted official network need set manually defining private genesis state first ' need create genesis state network node need aware agree upon consists small json file e g call genesis json json config chainid 0 homesteadblock 0 eip155block 0 eip158block 0 alloc coinbase 0x0000000000000000000000000000000000000000 difficulty 0x20000 extradata gaslimit 0x2fefd8 nonce 0x0000000000000042 mixhash 0x0000000000000000000000000000000000000000000000000000000000000000 parenthash 0x0000000000000000000000000000000000000000000000000000000000000000 timestamp 0x00 field fine purpose although ' recommend changing nonce random value prevent unknown remote node able connect ' like pre fund account easier testing populate alloc field account configs json alloc 0x0000000000000000000000000000000000000001 balance 111111111 0x0000000000000000000000000000000000000002 balance 222222222 genesis state defined json file ' need initialize every efsn node prior starting ensure blockchain parameter correctly set efsn init path genesis json creating rendezvous point node want run initialized desired genesis state ' need start bootstrap node bootnode others use find network internet clean way configure run dedicated bootnode bootnode genkey boot key bootnode nodekey boot key bootnode online display enode url http github com ethereum wiki wiki enode url format node use connect exchange peer information make sure replace displayed ip address information probably externally accessible ip address get actual enode url note could also use full fledged efsn node bootnode recommended way starting member node bootnode operational externally reachable try telnet ip port ensure ' indeed reachable start every subsequent efsn node pointed bootnode peer discovery via bootnodes flag probably also desirable keep data directory private network separated also specify custom datadir flag efsn datadir path custom data folder bootnodes bootnode enode url note since network completely cut main test network ' also need configure miner process transaction create new block contribution thank considering help source code welcome contribution anyone internet grateful even smallest fix ' like contribute fusion please fork fix commit send pull request maintainer review merge main code base wish submit complex change though please check core devs first telegram channel http fsndevcommunity ensure change line general philosophy project get early feedback make effort much lighter well review merge procedure quick simple please make sure contribution adhere coding guideline code must adhere official go formatting http golang org doc effective go html formatting guideline e us gofmt http golang org cmd gofmt code must documented adhering official go commentary http golang org doc effective go html commentary guideline pull request need based opened master branch license efsn go ethereum library e code outside cmd directory licensed gnu lesser general public license v3 0 http www gnu org license lgpl 3 0 en html also included repository copying lesser file efsn go ethereum binary e code inside cmd directory licensed gnu general public license v3 0 http www gnu org license gpl 3 0 en html also included repository copying file
/MrChico/stablecoin.services,JavaScript,stablecoin service today introducing stablecoin service allows common dai chai operation performed gas free convenience promotes dai chai first class token ethereum network allowing user transact currency without ever holding ether launch following operation supported dai chai transfer dai eth chai eth uniswap trade dai chai conversion head stablecoin service http stablecoin service give spin alfred assist image butler http imgur com kwov1k7 png relaying api provided api stablecoin service http github com mrchico stablecoin service blob master api doc md integrated dapps interested offering gas free convenience user doe work initiate action user sign message specifying detail operation performed authorizes relayer process transaction behalf relayer submits message blockchain operation processed fee delivered relayer reimburse gas cost heart process sits smart contract called dai automated clearing house dach http etherscan io address 0x64043a98f097fd6ef0d3ad41588a6b0424723b3a code short first time use stablecoin service asked sign message permit contract operate behalf study contract carefully determines term engagement relaying service specifies set message type one action offered stablecoin service corresponding function executes operation specified message made possible permit function http github com makerdao ds blob master src dai sol l117 dai chai contract allows approval done signed message instead transaction relying msg sender hope stablecoin service serf example power extensibility permit construction encourage future token designer adopt similar pattern processing fee suggested front end calculated according following formula operation fee 1 1 gas per operation fast gas price eth price dai chai fast gas price provided gas station network risk dach contract ha yet undergone audit fairly small straightforward contract written reviewed experienced smart contract developer smart contract make risk assessment engaging assuming contract work intended neither relayer dach contract hold custody user asset simply granted permission execute action specified signed message user worst withhold processing operation submit user give mitigate message equipped expiration date longer processed time live message signed using stablecoin service 10 minute message also equipped nonce replay protection enable overwriting stale message resource code dach contract found github com dapphub dach http github com dapphub dach etherscan live deployment http etherscan io address 0x64043a98f097fd6ef0d3ad41588a6b0424723b3a code code stablecoin service front end hosted github com mrchico stablecoin service http github com mrchico stablecoin service distributed agpl license pixel art abbey titcomb documentation relaying api provided api stablecoin service http api stablecoin service martin lundfall andrew cassetti lev livnev
/alpha-fi/clp-contracts,HTML,logo asset logo clp png near clp set protocol decentralized finance ground research solid experience smart contract development define mission develop sustainable foundation defi ecosystem near blockchain creating building block defi secure reliable sustainable use ethereum near rainbow bridge provide better service ethereum asset check note bridging ethereum detail protocol nearswap doc nearswap md automated market maker continious liquidity provider otc trading doc otc trading md status alpha basic functionality implemented tested however known exploit ' handle edge case yet please use testing playing demo video 1 http www youtube com watch v 3j9yzf1tmg rainbow bridge integration moving erc20 nearswap smart contract creating nearswap pool adding liquidity pool trading token pool using web ui video 2 http www youtube com watch v dxv5fa r2ue command line interface flash loan doc clp flash loan md tl dr feasible current design near blockchain bco bonding curve coin offering hear ico uniswap offering bco moving next level automated token release mechanism status research development tbd garage product share later research analyze different approach slowly releasing content research doc research md document usage please refer specific protocol documentation page see available tool webapp functionality principal tool webapp provides integration basic feature near cli http github com near near cli tool make generic transaction operation near blockchain runtime near clp cli http github com luciotato near clp beta cli cli crafted nearswap api defi background structure global finance ha remained largely since start industrial era heavy reliance financial intermediary despite major advancement software technology huge part existing financial infrastructure remain archaic burdensome many fintech product sprouted existence last decade fill gap need plugged existing financial system function leaving control fund charging intermediation fee incumbent benefit defi major across developed emerging market developed market defi provide greater choice consumer reduce cost legacy financial system bring greater liquidity product innovation financial market emerging market defi provide secure store value rise stablecoins offer financial service billion adult lack access existing financial system transferring trust layer financial intermediary software code blockchain defi provide universal access financial service represents paradigm shift trust minimized user experience possible era control user data digital activity might liability defi able provide much better product service scale traditional finance source defiant macro economy economy heavily depend following factor production supply chain financial service latter one enable growth economy new level aspect asset management financial derivative heart financial service arrange everything saving account synthetic collateralized debt obligation access asset obligation key scale asset management blockchain move financial service new level decentralized finance noted access asset obligation key scale economy principal solution liqidity service automated market making protocol level investment fund letting working defi protocol direct payment remove market dependency huge tech unicorn google amazon fb access wallet getting intermediation fee case ' necessary build near clp fulfill goal open decentralized manner goal focus liquidity pool amm eliminate side market incentive side market entity could change behavior clp amm protocol shift benefit potentially manipulate whole market highly predictable behavior designed main blockchain principle trustless smart contract without susceptible governance near thriving defi ecosystem need 1 robust layer 1 enable composability different contract defi lego 2 secure platform adjustable throughput storage capability defi ' take risk unreliable corruptible layer 2 near providing solution requirement today ' unique set feature scaling potential aspires significant player new decentralize finance world bridging ethereum today valuable asset hosted ethereum fact today defi ethereum domain ha biggest ecosystem developer tool dapps ' also secure however ethereum ha important pain point ' scale layer 2 solution complex composable evm execution model unsafe want enable people use ethereum based asset asset management near using near growing ecosystem inter blockchain bridge near provide scale ability current ethereum defi ecosystem robust smart contract runtime license create foundation defi hence open access key build open source software knowledge base work licensed gpl 3 0 refer license license term copyright c 2020 robert zaremba contributor contact leave note using github issue contributor http github com robert zaremba near clp graph contributor hack rainbow team hack rainbow http near org blog hack rainbow f0 9f 8c 88 nears first massive open online hackathon aka mooh nears first massive open online hackathon robert zaremba http zaremba ch contact html lucio tato http github com luciotato amit yadav http github com amityadav0 jameson hodge http github com jamesondh
/Idle-Labs/idle-tranches,Solidity,idle perpetual yield tranche intro aim idle perpetual yield tranche pool capital user eg dai deposit lending provider split interest received 2 class user different risk profile one gain interest risky bb junior tranche lower apr safety aa senior tranche case hack loss fund lending provider integrated protocol integrated provider fund still available used refund senior tranche holder first aim making whole remaining fund junior holder locking period epoch user free enter exit time interest earned governance token partially sold market split two class according either predefined ratio called trancheaprsplitratio eg 20 interest aa holder 80 bb adaptive ratio depending pool selected apr variable class tranche doc http doc idle finance developer perpetual yield tranche architecture main contract used user idlecdo allow deposit underlying mint tranche token erc20 either aa bb redeem principal interest idlecdo us iidlecdostrategy interacting specific lending protocol governance token collected reward redistributed user directly idlecdo contract rather sold market harvest method underlyings reinvested downstream lending provider possibile token eg idle ' sold token liquid market get redistributed people staked tranche separate stakingrewards contract one aa one bb main contract used idlecdo sol contract hold user pooled asset underlyings eg dai interest bearing token eg cdai adai entry point user mint tranche token burn redeem principal interest user deposit cdo update global accounting system ie split accrued reward mint choosen tranche token fund ' get put lending right away harvest method called periodically put new deposit lending get fee update accounting harvest call predefined reward sold market via uniswap released linearly x currently set 6400 block increase value tranche holder part gov token sent stakingrewards contract set redeem user burn tranche token get underlyings back stakingrewards sol forked version synthetix staking reward contract staking tranche token getting reward harvest depositreward called transfer reward released linearly x currently set 6400 block idlecdotrancherewards sol used dai fei idlecdos contract staking tranche token getting reward harvest depositreward called transfer reward released linearly x currently set 1500 block idlecdotranche sol erc20 representing specific either aa bb tranche token idlecdo contract mint burn tranche token strategy sol strategy lending asset different lending provider setup yarn install forge install foundry setup http book getfoundry sh getting started installation html testing hardhat unit test run yarn test integration test copy env public new env file fill key terminal export alchemy api key xxxx uncomment following hardhat config j sure pinned block forking url http eth mainnet alchemyapi io v2 process env alchemy api key blocknumber xxxxx run yarn test integration running task npx hardhat task name test foundry foundry test located test foundry run forge test fork url http eth mainnet alchemyapi io v2 alchemy api key fork block number xxxxx vvv match contract mytestcontract deploy hardhat npx hardhat deploy factory params network configured network cdoname cdo name cdo name name key deploytokens object utils address j params deployment example config deploying idlecdo lido strategy lido underlying mainnetcontracts steth underlying token idlecdo decimal 18 underlying token decimal proxycdoaddress cdos idledai cdoaddr address another idlecdo get implementation use strategyname ' idlelidostrategy ' name strategy contract strategyparams strategy params initialize call mainnetcontracts wsteth mainnetcontracts steth ' owner ' string ' owner ' used replace specific address deployer strategy aastaking false reward distributed idlecdo aa holder bbstaking false reward distributed idlecdo bb holder stkaaveactive false idlecdo need manage stkaave limit ' 1000000 ' deposit limit idlecdo aaratio ' 10000 ' interest rate split aa holder 100000 mean 100 aa testing deployment foundry hardhat start anvil f http eth mainnet alchemyapi io v2 alchemy api key fork block number xxxxx run deployment hardhat script deploy everything anvil network npx hardhat deploy factory params cdoname cpwinusdc network local run forge test anvil network using deployed idlecdo address forge test fork url http 127 0 0 1 8545 match contract mytest vvv coverage npx hardhat coverage code contribution note repo wa built using hardhat test script j foundry wa also recently integrated encourage new contribution feature tested using foundry toolkit welcome new contributor code contribution open arm please sure follow contribution guideline http github com idle lab idle tranche blob master contributing md proposing new code idle finance decentralized protocol managed decentralized governance new code contribution likely accepted future deployment proposal openly discussed within community first forum http gov idle finance
/dfinance/dnode,Go,dfinance blockchain relay part dfinance blockchain dn based cosmos sdk http github com cosmos cosmos sdk work progress yet support following feature pegzone peg zone ethereum blockchain oracle price feed smart contract move vm integration staking cosmos sdk based staking motivation allowing implement defi product without headache current repository contains source code dnode dfinance block node dncli command line interface iterate dnode related repository dvm http github com dfinance dvm move vm compiler pegzone http github com dfinance eth peg zone pegzone smart contract oracleapp http github com dfinance oracle app oracle node fetch price feed exchange doc usage doc http doc dfinance co read use dnode dncli connect testnet etc dev doc doc read local testnet contribute current repository contributor project ha following contributor http github com dfinance dnode graph contributor help project always open issue http github com dfinance dnode pull fork change fork open pull request http github com dfinance dnode pull also look developer documentation doc testnet license copyright 2020 wing stiftung see license license file
/fturkyilmaz/react-native-defi-app,JavaScript,react native ethereum defi decentralized application dapps uygulamas p align center img src http moralis io wp content uploads 2021 07 21 07 eth dapps jpg height 400 width 100 title hover text p ethereum decentralized finance defi bu proje ethereum network uzerinde defi decentralized finance dapps p2p peer peer para transferi yapan bir app gelistirmesi yapmamz saglar ornek bir akll sozlesme bu sozlesme icin bir test bu sozlesmeyi dagtan ornek bir komut dosyas yalnzca kullanlabilir hesaplar listeleyen bir gorev uygulamas ornegi ile birlikte gelir asagdaki yonergelerle uygulamay calstrmay deneyin uygulamada oncelikle hardhat kullanarak blockchain network komutla npx hardhat node olusturmalsnz uygulamay kullandgnz platform io ise yarn io yada npm run io android ise yarn android yada npm run android komutlaryla calstrabilirsiniz hardhat icin kullanabileceginiz komutlar shell npx hardhat account npx hardhat compile npx hardhat clean npx hardhat test npx hardhat node node script sample script j npx hardhat help contact u im currently learning solidity regularly write article http www linkedin com furkanturkyilmaz detail recent activity share http www linkedin com furkanturkyilmaz detail recent activity share develop dapps project react javascript react native love web 3 0 technology ' mentor javascript react react native blockchain solidity web 3 ask react j react native javascript solidity blockchain web 3 email trkyilmazfurkan gmail com href http linkedin com furkanturkyilmaz target blank img align center src http raw githubusercontent com rahuldkjain github profile readme generator master src image icon social linked alt svg alt furkanturkyilmaz height 20 width 20 linkedin http www linkedin com furkanturkyilmaz href http linkedin com furkanturkyilmaz target blank img align center src http cdn jsdelivr net npm simple icon 3 0 1 icon github svg alt furkanturkyilmaz height 20 width 20 github http github com fturkyilmaz react native ucretsiz egitim icerikleri react native react j duzenlemis oldugum bootcamp coding challenge kaytlarn sizlere paylasyorum react native bootcamp http www youtube com playlist list plt phf0difdmx1agnnouqrko9fvloedxg http www youtube com playlist list plt phf0difdmx1agnnouqrko9fvloedxg react native coding challenge http www youtube com playlist list plt phf0difdmvewldsen dd l9yvq1xbm http www youtube com playlist list plt phf0difdmvewldsen dd l9yvq1xbm nbsp nbsp react native react j web 3 0 bootcamp workshop duzenlemek isterseniz benimle iletisime gecebilirsiniz nbsp react native react j javascript ekosisteminde ucretli mentorluk hizmeti vermekteyim nbsp web3 javascript blockchain reactnative reactjs solidity web3
/kadena-io/kadenaswap,JavaScript,kadenaswap multi protocol dex house smart contract ui code kadenaswap decentralized exchange building javascript todo building pact 1 install pact http github com kadena io pact installing pact note kadenaswap requires least pact 3 7 2 optional install atom pact ide http github com kadena io pact atom 3 test exchange repl 4 todo installing pact testnet etc
/NebraLtd/Helium-Guides,Shell,helium hotspot guide documentation get started nebra hotspot helium longfi helium longfi nebra unit available purchase following link nebra indoor hnt hotspot miner http nebra io hntin nebra indoor hnt hotspot miner rock pi version http www nebra com product nebra hnt indoor hotspot miner rock pi version nebra outdoor hnt hotspot miner http nebra io hntout nebra hnt 5g ready hotspot miner http www nebra com product nebra hnt 5g ready hotspot miner also purchase growing list distributor distributor md sure region require helium hotspot use nebra region tool http region nebra com find contributing see contributor section contributor github issue page http github com nebraltd helium guide issue documentation generated extensive global community gladly welcome issue report typo fix documentation improvement entire documentation translation created couple informational page help get started formatting pull request check contributing overview contributing overview md translation contributing translation md contribution given freely unconditionally licensed permissive open source license shown github repo http github com nebraltd helium guide blob main license question contributing documentation please feel free reach u via one method shown support page support md contributor big round applause contributor href http github com nebraltd helium guide graph contributor img src http contrib rock image repo nebraltd helium guide made contributor img http contrib rock
/Idle-Labs/idle-contracts,JavaScript,idle contract discord http img shield io discord 606071749657755668 color 768ad4 label discord http discord com channel 606071749657755668 twitter http img shield io twitter follow idlefinance style social http twitter com idlefinance live version http idle finance http idle finance introduction idle decentralized protocol dedicated bringing automatic asset allocation aggregation interest bearing token economy protocol bundle stable crypto asset stablecoins tokenized basket programmed automatically rebalance based different management logic doc developer idle finance http developer idle finance test run test first spin ganache cli instance unlimited contract size flag ganache cli allowunlimitedcontractsize truffle test contributing idle protocol always open new contributor community check idle grant program http idlelabs notion site idle grant program f9242236e1ea4d19abe6a3b0e161e85e discussion concern protocol open issue visit u discord http discord gg fjabyms discus security concern please email security idle finance mailto security idle finance
/fremantle-industries/prop,Elixir,prop build status http github com fremantle industry prop workflow test badge svg branch main http github com fremantle industry prop action query workflow 3atest hex pm version http img shield io hexpm v prop svg style flat http hex pm package prop defi cefi tradfi prop open opinionated trading platform using productive familiar open source library tool strategy research execution operation install 1 install rust build rustler dependency bash curl proto ' http ' tlsv1 2 ssf http sh rustup r sh 2 add prop list dependency mix ex elixir def deps prop 0 0 5 end 3 copy env example env configure application running docker compose 4 start application docker make start usage starting server docker bash make start start service outlined docker compose yml docker compose yml visit prop localhost http prop localhost running application docker compose need enter basic auth development credential username admin password password see makefile makefile detail individual command run download data history http github com fremantle industry history request download candle need import product supported venue navigate history localhost product http history localhost product click import wait history finish adding product supported venue go history localhost data candle job http history localhost data candle job input product would like download data click download wait data finish watching status column note ftx based product currently download check availability platform history readme http github com fremantle industry history blob main readme md visualize data grafana http grafana com navigate grafana localhost dashboard http grafana localhost dashboard select candle general folder set period min 1 whatever timeframe downloaded candle see plotted chart explore data livebook http github com livebook dev livebook navigate livebook localhost http livebook localhost open notebook clicking new notebook top right pull dependency explore individual package elixir mix install history 0 0 23 conveniently setup runtime us context current application using runtime configure mix standalone attached node requirement prop requires elixir 1 13 erlang otp 22 rust recommend using asdf http github com asdf vm asdf manage language requirement http github com asdf vm asdf erlang http github com asdf vm asdf erlang http github com asdf vm asdf elixir http github com asdf vm asdf elixir http github com asdf community asdf rust http github com asdf community asdf rust prop http prop localhost http prop localhost home doc home dashboard png beta doc beta dashboard png station doc prop station png gainer loser doc gainer loser png workbench http workbench localhost http workbench localhost idea execution manage trading operation across distributed cluster stream realtime order http github com fremantle industry workbench blob main doc stream realtime order png http github com fremantle industry workbench history http history localhost http history localhost download warehouse historical trading data history job http github com fremantle industry history blob main doc predicted funding rate download png http github com fremantle industry history rube http rube localhost http rube localhost multi chain defi development toolkit rube poc overview http github com fremantle industry rube blob main doc rube poc overview thumbnail png http youtu f2phgfzrh80 slurpee http slurpee locahost http slurpee localhost gui frontend manage blockchain ingestion slurp recent head block http github com fremantle industry slurpee blob main doc recent block event png http github com fremantle industry slurpee explore data livebook http livebook localhost http livebook localhost livebook doc livebook png grafana http grafana localhost http grafana localhost dashboard beam vm health http github com fremantle industry workbench blob main doc grafana dashboard beam vm health png prometheus http prometheus localhost http prometheus localhost prometheus doc prometheus png tool workbench http github com fremantle industry workbench manage trading operation across distributed cluster history http github com fremantle industry history download warehouse historical trading data tai http github com fremantle capital tai composable real time market data trade execution toolkit rube http github com fremantle industry rube multi chain defi development toolkit elixir slurpee http github com fremantle industry slurpee gui frontend manage blockchain ingestion slurp slurp http github com fremantle industry slurp blockchain ingestion toolkit livebook http github com elixir nx livebook livebook web application writing interactive collaborative code notebook built phoenix liveview grafana http grafana com dashboard monitoring store visualize metric timescaledb http www timescale com relational database time series data supercharged postgresql prometheus http prometheus io open source monitoring system dimensional data model flexible query language efficient time series database modern alerting development initial setup installs hex npm dependency generates migration history workbench tai run migration seed database bash make start development see makefile makefile detail test bash make test see makefile makefile detail ecto database reset drop db creates new db run migration bash mix ecto reset migrate bash mix ecto migrate migrate bash last migration mix ecto rollback last 3 migration mix ecto rollback n 3 debugging could compile dependency ex keccak ensure rust installed rustler build dependency curl proto ' http ' tlsv1 2 ssf http sh rustup r sh nginx emerg host found upstream grafana either run grafana first docker compose grafana followed docker compose run normal docker compose followed docker compose restart grafana dbconnection connectionerror usually related previous issue ensure reverse proxy running use docker network l docker network inspect container name sanity check network expect postgrex error fatal 3d000 invalid catalog name database prop dev doe exist rerun migration using mix ecto reset mix ecto migrate ensure pas successfully mix could start application master proxy masterproxy application start normal returned error shutdown failed start child ranch listener sup http exit shutdown failed start child ranch acceptor sup exit listen error http eacces ranch cannot run protected port without permission configure different port e g ranch http port 4000 iex mix phx server author alex kwiatkowski alex git fremantle io license prop released mit license license md
/dsam82/Degenmate,Solidity,degenmate degen solidity lib solmate ' rejected pr welcome someone ' pain another man ' treasure experimentation understand solidity protocol deep doe contain audited code please use production degen implemetations degenerc20 src erc20 degenerc20 sol assembly implementation erc20 standard degenerc721 src erc721 degenerc721 sol assembly implementation erc721 standard implementation erc20 src erc20 erc20 sol erc721 src erc721 erc721 sol erc721enumerable src erc721 erc721enumerable sol erc20permit src erc20 erc20permit sol erc1155 src erc1155 erc1155 sol erc4626 src erc4626 erc4626 sol rps game http github com dsam82 rps uniswapv2 http github com dsam82 unifap v2 simple registry http github com dsam82 sol tuts blob master src registry sol collateralizedvault http github com dsam82 sol tuts blob master src collateralizedvault sol multicollateralvault http github com dsam82 sol tuts blob master src multicollateralvault sol future implementation x uniswapv2 http github com dsam82 unifap v2 x en http github com dsam82 sol tuts blob master src registry sol x uniswapv3 http github com dsam82 uniswap v3 example compound superfluid acknowledgment solmate http github com rari capital solmate openzeppelin http github com openzeppelin openzeppelin contract uniswapv2 http github com uniswap v2 core note repo us foundry http github com foundry r foundry test
/yearn/yearn-meta,JavaScript,deprecated package ha deprecated part ydaemon please check meta directory ydaemon information http github com yearn ydaemon tree main data meta yearn metadata storage validation http github com iearn finance yearn meta workflow validation badge svg http github com iearn finance yearn meta action query workflow 3avalidation deployment http github com iearn finance yearn meta workflow deployment badge svg http github com iearn finance yearn meta action query workflow 3adeployment styled prettier http img shield io badge code style prettier ff69b4 svg http prettier io repo contains metadata yearn ecosystem content data data directory synced ipfs storage accessible gateway meta yearn network http meta yearn network consistency stored data verified small script schema adding document document added data data directory special check ensure consistency ease accessibility json file share name file schema schema directory must follow defined schema otherwise verification fail folder begin 0x considered address address must checksummed otherwise verification fail file named index json ignored git overwritten indexing process see indexing index yearn ha also naming standard doc naming standard md enforced programmatically followed adding schema schema created root schema schema folder syntax take look json schema spec http json schema org ajv http github com ajv validator ajv library used validate data provided schema syncing ipfs commit master direct result merged pull request sync ipfs triggered upload complete meta yearn network http meta yearn network updated automatically point latest ipfs cid rely pinata cloud http pinata cloud ipfs hosting cloudflare http cloudflare ipfs com gateway proxy index deployment data data directory scanned index json file generated inside directory root included file follows index json schema schema index json contain information file folder stored directory example see meta yearn network index json http meta yearn network json translation anything protocol strategy token able translated json file listed locale code english text translated name applicable description translated dont see locale code make issue added manually update new json ' locale information run python script tolocale py located script folder helpful link live site http yearn network governance forum http gov yearn finance documentation http doc yearn finance contributing code style follows prettier convention yarn format commit message follow conventional commits http www conventionalcommits org en v1 0 0
/1poolfinance/1Pool-Strategy,Solidity,project document 1pool finance smart contract deployed ethereum mainnet
/PancakeBunny-finance/qubit-finance,Solidity,qubit finance http qbt fi dapp http qbt fi project overview doc http qubit finance gitbook io qubit finance br bsc mainnet contract proxyadmin 0x40151e5d012e7de6000f7144288ef50af78882be http bscscan com address 0x40151e5d012e7de6000f7144288ef50af78882be qubittoken 0x17b7163cf1dbd286e262ddc68b553d899b93f526 http bscscan com address 0x17b7163cf1dbd286e262ddc68b553d899b93f526 qore 0xf70314eb9c7fe7d88e6af5aa7f898b3a162dcd48 http bscscan com address 0xf70314eb9c7fe7d88e6af5aa7f898b3a162dcd48 qvalidator 0x0cd79409ed80d8a153a3c729aa1f8b5d44a29282 http bscscan com address 0x0cd79409ed80d8a153a3c729aa1f8b5d44a29282 qubitlocker 0xb8243be1d145a528687479723b394485ce3ce773 http bscscan com address 0xb8243be1d145a528687479723b394485ce3ce773 qdistributor 0x67b806ab830801348ce719e0705cc2f2718117a1 http bscscan com address 0x67b806ab830801348ce719e0705cc2f2718117a1 dashboardbsc 0x3bf0ebf0b846fff73df543bacacc542a6ce9fc15 http bscscan com address 0x3bf0ebf0b846fff73df543bacacc542a6ce9fc15 qubitreservoir 0xa7bc9a205a46017f47949f5ee453cebfcf42121b http bscscan com address 0xa7bc9a205a46017f47949f5ee453cebfcf42121b qubitdevreservoir 0xb224ed67c2f89ae97758a9db12163a6f30830eb2 http bscscan com address 0xb224ed67c2f89ae97758a9db12163a6f30830eb2 qubit market asset contract address bnb 0x3a783ace7fd7403584b89fb7979c536b22c2495c http bscscan com address 0x3a783ace7fd7403584b89fb7979c536b22c2495c btcb 0xf309025cba96e48205fb00b97520dcc432cf5690 http bscscan com address 0xf309025cba96e48205fb00b97520dcc432cf5690 eth 0x7d80d724574a1de5d5dfcba4b0abdb7940e9d619 http bscscan com address 0x7d80d724574a1de5d5dfcba4b0abdb7940e9d619 usdt 0xeaf1da1d139cb5d510f42a28316331e9447be278 http bscscan com address 0xeaf1da1d139cb5d510f42a28316331e9447be278 busd 0xefb6200ff7cb8c7db063677bfdcc5644ecd0807c http bscscan com address 0xefb6200ff7cb8c7db063677bfdcc5644ecd0807c usdc 0xd274a1b63b96ef7a3e62a988e4fed7beaa029f91 http bscscan com address 0xd274a1b63b96ef7a3e62a988e4fed7beaa029f91 dai 0xc33908b12064538960e9080e32dc8eb98f93dd79 http bscscan com address 0xc33908b12064538960e9080e32dc8eb98f93dd79 cake 0x93b4c48d54f9ccb7ea6032fce0c8bfbd12834307 http bscscan com address 0x93b4c48d54f9ccb7ea6032fce0c8bfbd12834307 qbt 0xed6f544b495159739676354dcb525a887359681a http bscscan com address 0xed6f544b495159739676354dcb525a887359681a bunny 0xd0cecf8ca3969178795123d89c3f50c8d2891665 http bscscan com address 0xd0cecf8ca3969178795123d89c3f50c8d2891665 br bsc testnet contract proxyadmin 0x40151e5d012e7de6000f7144288ef50af78882be http testnet bscscan com address 0x40151e5d012e7de6000f7144288ef50af78882be qubittoken 0xf523e4478d909968090a232eb380e2dd6f802518 http testnet bscscan com address 0xf523e4478d909968090a232eb380e2dd6f802518 qore 0xb3f98a31a02d133f65da961086ecda4133bdf48e http testnet bscscan com address 0xb3f98a31a02d133f65da961086ecda4133bdf48e qvalidator 0xf512c21e691297361df143920d4ec2a98b17cc07 http testnet bscscan com address 0xf512c21e691297361df143920d4ec2a98b17cc07 qubitlocker 0xea34f39df510eaffb789d575c9aa800d61476256 http testnet bscscan com address 0xea34f39df510eaffb789d575c9aa800d61476256 qdistributor 0xa2897bede359e56f67d06f42c39869719e59becc http testnet bscscan com address 0xa2897bede359e56f67d06f42c39869719e59becc dashboardbsc 0x5ba1b272d60f46371279ae7a1c13227fb93f99c1 http testnet bscscan com address 0x5ba1b272d60f46371279ae7a1c13227fb93f99c1 qubitreservoir 0x21824518e7e443812586c96ab5b05e9f91831e06 http testnet bscscan com address 0x21824518e7e443812586c96ab5b05e9f91831e06 qubitdevreservoir 0x0cd79409ed80d8a153a3c729aa1f8b5d44a29282 http testnet bscscan com address 0x0cd79409ed80d8a153a3c729aa1f8b5d44a29282 qubit market asset contract address bnb 0x80d1486ef600cc56d4df9ed33baf53c60d5a629b http testnet bscscan com address 0x80d1486ef600cc56d4df9ed33baf53c60d5a629b eth 0x9e980e2c702268e6b97400da1ab1ee6ccc238f52 http testnet bscscan com address 0x9e980e2c702268e6b97400da1ab1ee6ccc238f52 usdt 0xb8243be1d145a528687479723b394485ce3ce773 http testnet bscscan com address 0xb8243be1d145a528687479723b394485ce3ce773 busd 0x38e2ab4cadd92b87739aa5a71847e0b70bd4e631 http testnet bscscan com address 0x38e2ab4cadd92b87739aa5a71847e0b70bd4e631 dai 0x1771fe35b71bbf5ff7328ef5836e896850709f24 http testnet bscscan com address 0x1771fe35b71bbf5ff7328ef5836e896850709f24 qbt 0x67b806ab830801348ce719e0705cc2f2718117a1 http testnet bscscan com address 0x67b806ab830801348ce719e0705cc2f2718117a1 br contact u twitter qubitfin http twitter com qubitfin discord http discord gg jgjbwrxx2y http discord gg jgjbwrxx2y telegram http qubitfinofficial http qubitfinofficial email hello qbt fi mailto hello qbt fi
/augmented-finance/augmented-finance-protocol,TypeScript,augmented finance protocol repository contains smart contract source code market configuration augmented finance protocol augmented finance augmented finance defi liquidity protocol high yield lending low interest borrowing digital asset augmented finance mission help everyone achieve secure financial independence trusted long term source income liquidity tokenomics total supply 100 000 000 agf released 30 year fair launch pre mine pre sale ico vc allocation unlike aave compound majority token distributed ico participant venture capital fund almost agf token distributed augmented finance protocol ' user actively use protocol borrow supply stake lock pool pool total agf protocol user 69 referral reward 1 dev fund 10 ecosystem fund 20 augmented finance tokenomics engineered benefit protocol ' user increase protocol total value locked tvl bolster protocol ' resilience market cycle agf augmented finance token agf native token augmented finance ecosystem foundation economics governance safety protocol user lock agf period 1 week 4 year receive xagf unlock following use case 1 boost yield 4x supply borrow asset staked agtokens augmented finance ' interest bearing token staked dex lp 2 profit share treasury fund 3 vote various dao proposal protocol parameter supply borrow supplier lender earn high apy supported asset supplied protocol highest safety e g supply usdc earn interest usdc receive liquidity mining reward agf borrower pay low interest supported asset borrowed protocol highest safety e g borrow usdc pay interest usdc receive liquidity mining reward agf stake stake agf eth uni v2 lp token deposit agf eth agf eth pool uniswap v2 get agf eth uni v2 lp uniswap liquidity pool token earn trading fee stake uni agf eth lp augmented finance staking module earn agf increase safety augmented finance protocol stake agtokens supply supported asset protocol stake agtokens augmented finance interest bearing token augmented finance staking module receive agf increase safety augmented finance protocol stake agf boost yield earn staking reward stake lockup agf period 1 week 4 year receive xagf receive staking reward boost holding xagf give boost 4x agf reward actively use protocol supply borrow supported asset stake agtokens augmented finance ' interest bearing token stake dex lp e g uniswap liquidity pool token user lock agf actively use protocol get maximum amount agf reward trade trade agf largest decentralized exchange dex uniswap pancakeswap soon exchange decentralized centralized added later security augmented finance protocol security safety high level 1 protocol code open thoroughly audited peckshield launch link http github com peckshield publication blob master audit report peckshield audit report augmented v1 0 pdf 2 bug bounty program started 3 fast customer support security alert augmented finance team ha developed world class lending borrowing protocol meet existent need user unlock intelligent defi era join u unlock new level innovation defi power brand new generation decentralized intelligent financial service license program free software redistribute modify term gnu affero general public license published free software foundation either version 3 license later version project wa inspied includes modifies code following project 1 curve dao http github com curvefi curve dao contract 2 aave protocol v2 http github com aave protocol v2 3 compound protocol http github com compound finance compound protocol 4 openzeppelin http github com openzeppelin openzeppelin contract question faq http doc augmented finance glossary faq faq discord http discord gg bjgtwv8j7m twitter http twitter com augmentedfin telegram http augmentedfin medium http augmentedfinance medium com reddit http www reddit com user augmentedfinance
/scottstirling/bitcloutDAO,JavaScript,decentralized social network money fraud daos bitclout deso twetch peakd steemit update 9 29 2021 http www theblockcrypto com post 118133 bitclout creator decentralized social blockchain 200 million funding a16z others http www coindesk com wyoming dao llc law passed http coingeek com wyoming senate pass dao law project relevance similar macro crypto structure bitclout dust algorand singularitynet agi cardano many many read white paper look actual source code repeat give wake bitclout peakd twetch steemit ersatz twitter style cryptocurrency dao platform similar look concept one another related copying code idea main commonality fraud centralized decentralized system designed extracting money user premium fee execute blockchain transaction rudimentary version feature user today twitter google ' content indexing storage delivery network example persuading user tricking downloading distributing stripped binary dissimulating open source peer peer dark net running laptop mobile device server public cloud etc harvesting unsuspecting user ' fiat money bitcoin remaining anonymous case openly acting bridge gap law see wyoming dao law upcoming refer bitclout ' term service search wyoming mislead user many fraudulent way including promoting overloaded confusing meaning decentralized open source currency use public private blockchain tech apis open source project code produced company google content delivery security victim service cloudflare perpetrate financial fraud open bitclout ha promoted open source since launch fact core code remains closed source day explorer desktop app available github peripheral twetch based buying spending bitcoin sv micro fee transaction fee require use software wallet key running web browser bitclout based charging bitcoin fee additional cost transaction involving bitclout twetch bsv coin required spent fee paid spend every action app creator coin token also manages key wallet web browser site released auspicious promise alpha beta quality hottest new thing developed fast furiously stable secure usable bluntly bullshit fraudulent scam tip toe completely lack professionalism security feature user protecting bitclout twetch operator data bitclout src asset img camelcase logo svg project gather bitclout ' code offer analysis apis 3rd party integration architecture bitclout pay play social network game scam considered sold promoted financial investment bitclout thought game vending machine accepts bitcoin irreversibly exchange game currency called bitclout token called creator coin one buy token bitclout one buy either bitcoin impossible refund withdraw bitcoin back system declaration intention ever make otherwise one pager pdf term service linked second screen signup flow avaialable http bitclout com term service source code main j documented doc bitclout term service extract md bitclout game cost bitcoin valid phone number play completing profile minimum requires phone number receive text message confirmation allegedly one pay 60 bitcoin alternative tested image content posted user stored accessible via public cloud storage imgur com registered user like follow post promote account ' content spend bitcoin bitclout send bitclout wallet bitclout network cost minimum verified phone number price bitcoin transaction fee premium market rate plus percentage increase bitclout add 1 5 priority fee price currently 4 23 2021 bitcoin ha used purchase bitclout update 4 9 2021 reclouting retweeting functionality appeared overnight new code wa deployed following function cost bitcoin get started price set current cost bitcoin transaction fee posting content following account creating saving changing profile image creating saving updating profile content action really based blockcypher com vendor service technology apis make setting technology bitclout primarily orchestration service apis tied together web ui strongest technical aspect bitclout based cloudflare angular blockcypher com imgur com various 3rd party library see godaddy ' http domainsbyproxy com subpoena policy posted public site obscuring owner creator behind bitclout admittedly mastery orchestrating component bitclout solution carrying far respectable bitclout one pager whitepaper 7 page masterwork rhetoric enthymemes trigger encourage reader jump conclusion confirm bias desired outcome act positive emotional response rather careful analysis partial list project service referenced used bitclout ' angular code github project http github com bitclout explorer bitclout ' blockchain explorer user interface http github com bitclout desktop electron http github com electron electron shell around bitclout url http github com bitclout run script config file download docker image pre compiled binary configure run http ghcr io bitclout core obf http ghcr io bitclout frontend localhost insecure http port without required api ssl key http github com bitcoin bips blob master bip 0039 mediawiki bitcoin bip describes implementation mnemonic code mnemonic sentence group easy remember word generation deterministic wallet http github com bitcoinjs bitcoinjs lib javascript bitcoin library node j browser http github com browserify browserify build bundle serve browser single script tag http github com crypto browserify createhmac node style hmacs use browser hash based message authentication code hmac http github com crypto browserify browserify rsa rsa private decryption signing http github com crypto browserify crypto browserify port node ' crypto module browser http github com crypto browserify parse asn1 utility library parsing asn1 file use browserify sign http github com crypto browserify randombytes randombytes node j browser apps http github com google closure library used many google web application google search gmail google doc google google map others http github com google libphonenumber google ' common java c javascript library parsing formatting validating international phone number http github com indutny bn j bignum pure javascript http github com indutny elliptic fast elliptic curve cryptography plain javascript http github com popperjs popper core popper automatically put tooltip right place near button tooltip management http github com sweetalert2 sweetalert2 replacement javascript ' popup box http github com twitter twemoji twemoji library offer support 3 304 emojis product project service used code refrenced code http amp bitclout com endpoint gathering analytics user activity transaction send amplitude http www amplitude com account http api blockchain info mempool fee used obtain premium fee bitclout transaction http api blockcypher com v1 btc main addrs e full token see blockcypher public api doc http api blockcypher com v1 btc test3 addrs e full token test endpoint http bitcoinfees earn com api v1 fee recommended get current price transaction fee transacted bitclout http blockchain info ticker api used obtain exchange rate bitcoin usd every 1 second background http electrum org bitcoin wallet software mentioned link ui http iancoleman io bip39 menomic code converter bitcoin bip 39 http twitter com intent tweet text user click setting bitclout tweet http wallet mycelium com bitcoin wallet software mentioned link ui http api imgur com 3 image 8156989fa971a3b client id header upload imgur http imgur com name ext image pic posted user http fontawesome com font logo http font gstatic com http font googleapis com font possible source bitclout ' http explorer bitclout com http github com blockcypher explorer blockcypher ' open source blockchain explorer project todo related site referenced code http api bitclout green http api bitclout blue http api bitclout navy different api endpoint megamoons com unknown tbd http api bitpop dev protected cloudflare seems used logging activity ui bitpop cash parent domain potential central organization participant collecting fee bitclout transaction bitclout fun unknown use purpose tbd bitclout localhost alias listing bitclout ' apis dervived main j see http github com scottstirling bitclout issue 20 bitclout architecture overview diagram bitclout architecture doc diagram bitclout arch diagram 2021 04 08 png related work began reddit thread r bitclout http www reddit com r bitclout comment mhpwjx reverse engineering bitclout increasing awareness scam selected resource bitclout http www thedailybeast com bitclout shady crypto start selling share celebs http www techtimes com article 258837 20210407 bitclout remove singapore prime minister crypto platform htm http finance yahoo com news controversial crypto project bitclout face 233043748 html http youtu nbz4v2 xynu http youtu sserrf39yim coffeezilla youtube channel episode bitclout http en wikipedia org wiki bitclout peakd http peakd com steemit http www quora com steemit scam twetch http medium com austerity suck signed bsvs twetch social medium platform 462f0db8b614 related scam economy bitclout ecosystem emerging regulation vacuum http withdrawbitclout com http www giftclout com http github com barrymode awesome bitclout list list bitclout related arcanum much link site http bitswap network http bitswap network whitepaper proposes exchanging bitclout ethereum via escrow plus gas fee analysis related info twitter http twitter com scottmstirling
/Ashburton-Finance/flash-aggregator,TypeScript,archived project archived doe make much sense aggregate best flash loan provider chain easier offchain loan fee well known prior transaction major limiting factor compute limit solana restricts much computation occur single transation likely operation flash borrowing passing loan passing back lender breach compute limit 18 july 2022 implementation flash aggregator incomplete implement simple function borrow solend devnet behalf caller flash aggregator flash aggregator brings cheapest flash loan solana aggregate existing flash loan provider return flash loan lowest possible fee platfrom currently access reserve port finance http port finance solend http solend fi compatible reserve added future single cross program invocation http doc solana com developing programming model calling program cross program invocation smart contract flash borrow combined holding flash loan enabled reserve allows anyone borrow 2 5 billion usd worth token combined holding port finance http port finance solend http solend fi lending protocol added future increase amount borrowed application flash loan 1 arbitrage 2 debt refinancing 3 source fund liquidation 4 many undiscovered application advantage offload updating list flash loan provider flash aggregator smart contract need change source code caller smart contract another flash loan provider come online go bust additional logic required caller smart contract borrow multiple flash loan provider single function call flash aggregator borrow available source method operation borrower smart contract request certain amount fund flash aggregator smart contract borrows much possible pool lowest fee borrowed ha borrowed pool enough fund flash borrowed next cheapest pool go requested amount fund flash borrowed fund passed borrower borrower must return principle along fee order transaction succeed inter program function call made cross program invocation borrowing sequence http mermaid ink img pako enp9kt1uwjamhv fytxquhfojqt9smvdcbsjmcytew1shidpqrz7xeqhbtny08g65 oxm4opointmks7tkgin48ny doa jpkcvxvscg8bkz4ycxylrcl50q4dugyazk1ls3mdyrbbqmbiwezo9ddz4vtb8gu4eh fyauujdshqrbcrwbxk3faralmbtorsj1zyltdasebg3cbnjdd qosacpbazbbgxh1ei4l5nndzfbacffattknv5fmijegwztdepznip1dk4gkc1zwf57vxauagt32xvuhwmoeujslgeynqmkcq o2gszohxwmad0qztmi64q 0px8glduk78iauq oasytwgpduaw51wy0cf6ppqyxtvqyzbkxx6eypxcmsxr k2fv8rv5ndna http mermaid j github io mermaid live editor edit pako enp9kt1uwjamhv fytxquhfojqt9smvdcbsjmcytew1shidpqrz7xeqhbtny08g65 oxm4opointmks7tkgin48ny doa jpkcvxvscg8bkz4ycxylrcl50q4dugyazk1ls3mdyrbbqmbiwezo9ddz4vtb8gu4eh fyauujdshqrbcrwbxk3faralmbtorsj1zyltdasebg3cbnjdd qosacpbazbbgxh1ei4l5nndzfbacffattknv5fmijegwztdepznip1dk4gkc1zwf57vxauagt32xvuhwmoeujslgeynqmkcq o2gszohxwmad0qztmi64q 0px8glduk78iauq oasytwgpduaw51wy0cf6ppqyxtvqyzbkxx6eypxcmsxr k2fv8rv5ndna pseudo code aggregation function python list sorted lowest flash fee highest flash fee flash provider list solend port finance flash provider 3 flash provider 4 flash provider list length len flash provider list def get flash loan token expected amount token borrowed amount 0 provider index 0 go flash loan provider ' reserve borrow required amount ha accumulated borrowed amount expected amount borrow max possible amount given token flash loan provider borrowed amount flash borrow max flash provider list provider index token provider index 1 exit run flash loan provider pas got provider index flash provider list length break pas borrowed token caller smart contract getting unique id program run anchor test first generate key pair run solana address k target deploy flashaggregator keypair json bnn9nvw3ebscqpxvva6yvbsjwhiu7xamzblpvuyy9wnq program flashaggregator src lib r anchor toml change program id address got previous step program flashaggregator src lib r declare id program id anchor toml program devnet flashaggregator program id airdropping sol solana airdrop 1 bb3o71s7shufvq7kixlq1uapbu885rjvdpqxzsm7ubbp url http api devnet solana com running test run integration test directly devnet order interact existing chain program bash anchor test run unittests bash cargo test useful debugging tool find program data length shell solana program show gt2jznyzjmkv4uufjphprstkmqkqet5ojyhmcacfxb4m program id gt2jznyzjmkv4uufjphprstkmqkqet5ojyhmcacfxb4m owner bpfloaderupgradeab1e11111111111111111111111 programdata address 6vxqzdhhgqqs8ebejdcgc4h8m4huqxwtdshcnt1hma65 authority 711gc5irvrucjd17veddjkcqm7wbe71fmfngrncwfukt last deployed slot 95293605 data length 437280 0x6ac20 byte balance 3 04467288 sol calculate rent shell solana rent 437280 rent per byte year 0 00000348 sol rent per epoch 0 00833518 sol rent exempt minimum 3 04435968 sol dump elf file shell cargo build bpf dump
/tulipdex/stock-dex,JavaScript,tulip decentralized stock exchange tulipdex video started http www youtube com watch v tcr egkite0 join discord help contribute http discord gg bgxnd5ynp6 join telegram http tulipdex update march 2020 renamed project tulip tulip dex move project built polkadot blockchain however keep code written solidity support ethereum well update august 2022 year dilligent research 8 month planning going launch demo january 28th 2023
/thales-markets/contracts,JavaScript,thales circleci http circleci com gh thales market contract tree main svg style svg http circleci com gh thales market contract tree main codecov http codecov io gh thales market contract branch main graph badge svg token m2e5x0vjrq http codecov io gh thales market contract npm version http badge fury io j thales contract svg http badge fury io j thales contract discord http img shield io discord 906484044915687464 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discord gg dhebdqqqad twitter follow http img shield io twitter follow thalesmarket svg label thalesmarket style social http twitter com thalesmarket thales decentralized protocol allows user take part peer peer parimutuel market ethereum simple powerful smart contract foundation thales market allow speculate price different crypto asset ' beginning real world outcome tracked chain data feed used create market thales latest system documentation see doc thalesmarket io http doc thalesmarket io everything thales token http thalesmarket io article token dapps thales market http thalesmarket io exotic market http exoticmarkets xyz overtime sport market http overtimemarkets xyz community discord http img shield io discord 906484044915687464 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discord gg dhebdqqqad twitter follow http img shield io twitter follow thalesmarket svg label thalesmarket style social http twitter com thalesmarket repo guide audit http www certik com project thales http iosiro com audit thales airdrop staking smart contract audit http iosiro com audit thales binary option market smart contract audit contract list deployed contract listed http contract thalesmarket io testing circleci http circleci com gh thales market contract tree main svg style svg http circleci com gh thales market contract tree main codecov http codecov io gh thales market contract branch main graph badge svg token m2e5x0vjrq http codecov io gh thales market contract module usage npm version http badge fury io j thales contract svg http badge fury io j thales contract repo may installed via npm install support node j scripting application solidity contract development
/syscoin/pali-wallet,TypeScript,pali wallet browser extension started web extension starter http github com abhijithvijayan web extension starter learn develop pali wallet compatible application visit documentation http pali doc vercel app getting started ensure node j http nodejs org 10 later installed yarn http yarnpkg com v1 v2 installed run following yarn install install dependency yarn run dev chrome start development server chrome extension yarn run dev firefox start development server firefox addon yarn run dev opera start development server opera extension yarn run build chrome build chrome extension yarn run build firefox build firefox addon yarn run build opera build opera extension yarn run build build pack extension build directory development yarn install install dependency watch file change development chrome yarn run dev chrome firefox yarn run dev firefox opera yarn run dev opera load extension browser chrome go browser address bar type chrome extension check developer mode button enable click load unpacked extension button select extension extracted directory firefox load add via debugging temporary add choose manifest json file extracted directory opera load extension via opera extension check developer mode load unpacked extension extracted directory production yarn run build build extension browser build browser directory respectively note default manifest json set version 0 0 0 webpack loader update version build package json version order release new version update version package json run script
/NescienceSoftware/Nescience-Indexing-CLI,Tcl,project image http nescience io wp content uploads 2020 01 official png software solution alpha seeking portfolio management whitepaper http nescience io wp content uploads 2019 11 nescience rebalance whitepaper pdf table content description description setup use operation operation build instruction build company information nescience software capital llc description open source portfolio management tool investor previous experience apply variety automated portfolio rebalancing strategy portfolio due entirely client side application able ensure transaction security offer secure portfolio management tool available upfront cost user demo tool found operating 24 7 twitch channel nesciencesoftware http www twitch tv nesciencesoftware medium mission statement http nescience io wp content uploads 2019 11 nescience cover pdf rebalancing whitepaper http nescience io wp content uploads 2019 11 nescience rebalance whitepaper pdf demo http www twitch tv nesciencesoftware setup compatable window 64 bit installation installation form executable relatively straightforward download recent release unzip file run nescience rebalance exe alternatively one feel need verify integrity release follow build build guide provided api configuration properly set tool first step create api key enable proper key authorization process different exchange exchange unique restriction exchange specific instruction pick exchange list binance binance bitfinex bitfinex bittrex bittrex coinbase pro coinbasepro gemini gemini huobi huobi kraken kraken kucoin kucoin liquid liquid luno luno okex okex poloniex poloniex upbit upbit ally ally alpaca alpaca robinhood robinhood note legal reason provide level support utilizing traditional market clearinghouses broker use product doe constitute liability operation 1 start nescience rebalance exe folder nescience rebalance note message question origin exe worry getting proper microsoft liscence asap 2 prompted type exchange selection 3 determine enter number asset rebalancing portfolio 4 determine currency wish trade e g btc x btc usdt x usdt eth x eth 5 input asset selection based symbol e g bitcoin btc tether usdt omisego omg 6 select either periodic rebalancing threshold rebalancing 7 depending selection determine threshold e g 15 15 period e g daily daily 8 enter api key api secret prompted 9 done enter threshold period algorithm query balance begin allocation maitenence back top table content api setup binance api instruction 1 go dashboard 2 click setting 3 go api management 4 name api key click create enter 2 factor authentication key 5 approve api creation email 6 edit restriction next page pop 7 enable ip whitelisting google ip address copy paste ip address whitelist ensure ip address able use api key 8 enable api withdrawal 9 save key secret somewhere safe back top table content bitfinex api instruction 1 nagivate account page 2 navigate api 3 click create new key 4 ensure account privilege enabled importantly read write capability order wallet withdrawal 5 name api key click generate confirm api key creation using link sent email 6 navigated api key page save api key api secret somewhere safe back top table content bittrex api instruction 1 go account page 2 site setting click api key 3 click new key 4 ensure account privilege enabled read trade 5 click save enter 2 factor authentication key 6 save key secret somewhere safe back top table content coinbase pro configuration work coinbase pro gdax coinbase prime api instruction 1 go profile 2 go api setting 3 click new api key upper right 4 ensure account privilege enabled view trade transfer enabled 6 create save api password 7 google ip address copy paste ip address whitelist ensure api key accessed ip 8 click save enter 2 factor authentication key 9 api secret pop api key main api page save secret key password somewhere safe back top table content gemini api instruction 1 click account upper right 2 account click api setting 3 primary account click create new api key 4 enter 2 factor authentication key 4 ensure proper account privilege enabled fund management trading 6 save secret key somewhere safe back top table content huobi api instruction 1 upper right corner hovering profile click api management 2 left side click api management 3 name key note enable api privilege read withdraw trade 4 google ip address copy paste ip address ip bind field ensure api key accessed using ip address 5 click create create api key 6 click send code enter code sent email addition 2 factor authentication key 7 save api key api secret somewhere safe back top table content kraken api instruction 1 upper right corner hover account name click setting 2 setting click api 3 click generate new key 4 name api key enable privilege fund control trading including withdrawal 5 save api key api secret somewhere safe back top table content kucoin api instruction 1 go user profile 2 left side click api management 3 click create api 4 chose save api name api password 5 enter trading password note login api password 6 digit password required make trade 6 click send code enter code sent email addition 2 factor authentication key 7 api key ha created click change right api key 8 ensure proper account privilege enabled general trade 9 google ip address enable ip whitelisting copy paste ip address whitelist ensure api key accessed using ip address back top table content liquid api instruction 1 go user profile 2 profile navigate api token 3 ip whitelist click add ip address 4 copy paste ip address field google ip address select api token ensure api key accessed using ip address 5 enter 2 factor authentication key 6 back api token page click create api token 7 ensure account privilege enabled read write 8 enter 2 factor authentication key click create token 9 save api key id api secret safe place luno due jurisdiction restriction currently unable provide specific instruction api creation exchange back top table content okex due jurisdiction restriction currently unable provide specific instruction api creation exchange back top table content poloniex api instruction 1 upper right corner hover wrench click api key 2 already enabled api access click enable confirm using 2fa link sent email 3 next back api key page click create new key confirm using 2fa link sent email 4 save api key api secret somewhere safe 5 enable withdrawal confirming using link sent email 6 added safety want enable ip restriction ensure api key accessed using ip address 7 use drop enable ip restriction confirming using 2fa link sent email 8 copy paste ip address provided field click save confirming using 2fa link sent email back top table content upbit due jurisdiction restriction currently unable provide specific instruction api creation exchange back top table content ally ally ha unique api key schema requiring 2 different api key secret pair api instruction 1 log ally invest portfolio 2 bar top click tool 3 select api 4 navigating api page click create new application 5 select personal application enter information application name nescience indexing tool 6 click create 7 back api page click nescience indexing tool developer application 8 copy four api key secret save safe place alpaca alpaca exchange clearinghouse traditional equity primarily support algorithmic trading interested http doc alpaca market remember save api key api secret somewhere safe back top table content robinhood robinhood allows user take advantage fractional share allowing precise maitenence given index portfolio unlike exchange robinhood doe authenticate using api key using traditional username password schema back top table content operation set ai tool operate stopped done either stopping application keyboard command ctrl c exiting application command provides safest shutdown ai tool run multiple instance executable provided one instance per exchange need multiple instance exchange need unique installation ai tool important adding money portfolio ha already configured ensure reconfigure algorithm built profit tracking able detect new deposit instead think profit generated algorithm resulting unnecessary donation reconfiguring ensures new baseline established issue inquiry directed support nescience io back top table content build ensure recent release genuine check pgp signature signature txt gpg nescience software capital fingerprint always available website ' home page best way validate new release build compile application based python script provided script folder inspecting new change requires python 3 5 number dependency done following step 1 already python 3 5 install appropriate version found http www python org downloads 2 open command prompt using command download install pip python package installation tool curl http bootstrap pypa io get pip py get pip py python get pip py 3 ensure dependency listed dependency txt installed using pip pip install ' package version 4 exchange would like use script folder generate additional folder name exchange coinbase gdax binance binance kucoin kucoin kraken kraken etc 5 folder create 3 json file following title following content 1 title config content configcheck 2 title initial content initialcheck 3 title performance content initialcheck2 point script function called using python run nescience rebalance py chose exchange would like complete executable follow one guide step different depending system specific packaging tool chosen pyinstaller http pyinstaller readthedocs io en stable cxfreeze http cx freeze readthedocs io en latest py2exe http python101 pythonlibrary org chapter40 py2exe html note using packaging tool choice target main script nescience rebalance script compiled tool chosen doe recursively search module ensure script script folder included folder created included ensure located folder nescience rebalance python script executable using pyinstaller found strptime py commonly imported run issue simply add strptime py data field spec file back top table content nescience software capital llc nescience software capital portfolio management firm focused advanced cryptocurrency portfolio management tool facilitating investment significantly reduced risk consistent long term growth website nescience software capital llc http nescience io twitch nesciencesoftware http www twitch tv nesciencesoftware twitter nesciencesc http twitter com jamesqquick facebook nesciencesoftware http www facebook com nesciencesoftware reddit nescience http www reddit com r nescience back top table content
/SwipeWallet/Swipe-Network,JavaScript,sxp staking contract install use yarn 1 install node j http nodejs org en download yarn http yarnpkg com getting started install ' yet build test 1 install node j http nodejs org en download yarn http yarnpkg com getting started install ' yet 2 clone repo sh git clone http github com swipewallet staking contract 3 go downloaded folder install dependency sh yarn 4 compile contract run test sh yarn test contribute need help open issue http github com swipewallet staking contract issue found bug security vulnerability open issue http github com swipewallet staking contract issue feature request open issue http github com swipewallet staking contract issue want contribute submit pull request http github com swipewallet staking contract pull license project available mit license see license http github com swipewallet staking contract blob master license detail
/fremantle-industries/rube,Elixir,rube build status http github com fremantle industry rube workflow test badge svg branch main http github com fremantle industry rube action query workflow 3atest hex pm version http img shield io hexpm v rube svg style flat http hex pm package rube multi chain defi development toolkit elixir build upon configuration dsl provided slurp http github com fremantle industry slurp control chain event transaction subscription via slurpee http github com fremantle industry slurpee rube gui ' rube poc overview doc rube poc overview thumbnail png http youtu f2phgfzrh80 protocol supported planned erc20 token x chainlink x amm ' uniswap sushiswap pancakeswap etc x money market aave compound c r e etc x keep3r x perpetual protocol x futureswap x vega protocol x injective protocol x install add rube list dependency mix ex elixir def deps rube 0 0 4 end development run app natively host http rube localhost 4000 bash mix setup mix phx server within docker compose http rube localhost docker compose running application docker compose need enter basic auth development credential username admin passowrd password test bash mix test help wanted think rube thing might worthwhile ' see feature would love contribution add feel free drop u email open github issue author alex kwiatkowski http github com rupurt alex git fremantle io license rube released mit license license md
/nicholashc/uniswap-skim-v2,JavaScript,uniswap skim v2 version 2 confusingly popular uniswap skim repo http github com nicholashc uniswap skim well quite almost featuring brand new tool like sync imbalanced cross chain asset mode powerful lp token analysis sortable table display box support 7 evm chain 160 protocol mostly clone still 700 000 token pair returning favorite version 1 uncommented code emojis terminal moral dilemas best everything still 100 antique uniswapv2 time may changed real uniswapv2 connoisseur still enjoy amms capital inefficient copied immunity leaking mev place code available curious scholar including extensive datasets factory pair list lucky may spot near extinct skim wild coming day expect finalize migration local environment public repo private key included x extensive cli help page put man manifesto detailed installation usage instruction readme maybe even syntax highlighting refactoring entirely unnecessary code duplication figuring upload enormous pancakeswap pair file ' 100 mb comment code add ipc path support local node
/D3LAB-DAO/d3lab-tube,Solidity,d3lab tube welcome repository uploads file tv d3lab youtube channel http www youtube com c d3lab schedule date date book title every sat blockchain every mon artificial intelligence v log infrequently playlist book title paperclip playlist blockchain link http www youtube com playlist list plarb0sinpz85zc3vgwpcrcrnseiw6zmjk artificial intelligence link http www youtube com playlist list plarb0sinpz866obdufbk3xowd0jqy3pnw generative adversarial network link http www youtube com playlist list plarb0sinpz86f3rpa3l z pbhjijdtsnp federated learning link http www youtube com playlist list plarb0sinpz86jofjz qq4bqmzp51by1vl blockchain scalability link http www youtube com playlist list plarb0sinpz85xppzpfstyum7ibqlogwl6 zero knowledge protocol link http www youtube com playlist list plarb0sinpz860x42jbhsnrzqhpavsi 5m defi link http www youtube com playlist list plarb0sinpz86cscirvzs68gqxx7 rqaq8 content may 03 2020 amd ryzen 3400g pc maplestory link http youtu rsnfztaitoy vlog may 17 2020 forest endurance gomoku coffee link http youtu svay9c2msoe vlog book title tv video floppy disk file pushpin category blockchain transaction link http youtu on3uqi7sd e download lecture blockchain transaction pdf blockchain blockchain block chain link http youtu qjzhpncubbq full http youtu usgz8etoohg download lecture blockchain block chain pdf blockchain gan like ' five link http youtu cck0kj xiti 1 lecture nn tensor basic pdf 2 lecture gan basic dcgan pdf ai gan blockchain node assumption link http youtu 5duqf8kxy k full http youtu xtuvzdpkctw download lecture node assumption pdf blockchain improved gan cgan wgan link http youtu yk7r8wbwqxi download lecture cgan wgan pdf ai gan overview blockchain scalability link http youtu ym5v9oktfpq full http youtu xtuvzdpkctw download lecture blockchain scalability pdf blockchain scalability visualizing loss function link http youtu sqdamdi2ssc full http youtu flthals6rpm download lecture visualizing loss function pdf ai chain transaction channel 1 http youtu yvvtm2dwnq8 2 http youtu nbuskdkcgs 3 http youtu ey2g7wzrcx8 1 full http youtu dcvybyrkm7o 2 full http youtu 99y462vicw0 1 lecture channel 1 pdf 2 lecture channel 2 pdf 3 lecture routing pdf blockchain scalability wgan wgan gp z 1 http youtu fgp20ciuxlo 2 http youtu b15xtuqwglc full http youtu h0qhsw5cuf4 1 lecture divergence pdf 2 lecture wgan wgan gp pdf ai gan asic resistant pow ethash link http youtu vtfduopoyoo full http youtu s4dnbtifkd8 download lecture asic resistant pdf blockchain improved gan lsgan acgan link http youtu bqxfcrihf0i full http youtu d6tlfx355rs download lecture lsgan acgan pdf ai gan watch convolution link http youtu ehyr9ugacl0 full http youtu bgwjgdz4y0w download lecture watch conv pdf ai zero knowledge protocol link http youtu podxhdgopyi full http youtu v89wkes6v0s download lecture zero knowlegde proof pdf blockchain zk gradvis visualization loss landscape second order info link http youtu ci8ni45bsge download lecture viz eigen vec pdf ai commit chain link http youtu p8yegmlam1g full http youtu 45jf83pc0dw download lecture commit chain pdf blockchain scalability adaptive optimizers federated learning 1 http youtu otdu3ha6erw 2 http youtu zf20quyysca full http youtu owd4z4dchxs download lecture adaptive federated optimization pdf ai fl semi layer 2 protocol 1 http youtu hz5suxps60o 2 http youtu ujvmbvltow full http youtu qxjngwq5mrm download lecture semi layer 2 protocol pdf blockchain scalability federated learning matched averaging 1 http youtu okgp0oujehk 2 http youtu c9jwmsetgz4 1 lecture fl matched averaging pdf 2 lecture fl matched averaging 2 pdf ai fl decreasing scalability functionality escape velocity link http youtu jgtaditcyva 1 lecture decreasing scalability pdf 2 lecture functionality escape velocity pdf blockchain scalability blockchain data availability link http youtu kkweuqg uya download lecture data availability pdf blockchain scalability infogan link http youtu trgcb9cr6ve download lecture infogan pdf ai gan blockchain fraud proof link http youtu ok1xlwj9a download lecture fraud proof pdf blockchain scalability generalized byzantine torelant sgd link http youtu aujygjb1bxg download lecture byzantine tolerant sgd pdf ai fl overview federated learning research link http youtu rgx5uc1pg5k 1 lecture fl summary short pdf full lecture fl summary full pdf ai fl zkp bulletproofs workshop 1 http youtu 4t56vvtuoe0 2 http youtu h9cs95hlvsy 3 http youtu xik8biai0ru full lecture zkp bulletproofs pdf 1 lecture bulletproofs 1 pdf 2 lecture bulletproofs 2 pdf 3 lecture bulletproofs 3 pdf blockchain zk fedmd fl via model distillation link http youtu vxe9kx3far8 download lecture fedmd pdf ai fl sgan stacked gan link http youtu jwcherzuoy8 download lecture sgan pdf ai gan cat2vec category vector link http youtu ot8nibw fgs download lecture cat2vec pdf ai knowledge distillation link http youtu xmfc mxozi8 download lecture knowledge distillation pdf ai average top k loss link http youtu jhvvsjkq fk download lecture average top k loss pdf ai data distillation link http youtu n hw7xrruu8 download lecture data distillation pdf ai uniswap protocol 1 http youtu rblal6krjti 2 http youtu gv9lccq1faw download lecture uniswap pdf blockchain defi quadratic voting link http youtu injxnra1fds download lecture quadratic 20voting pdf blockchain foolsgold sybil attack federated learning 1 http youtu 3djhsogly1s 2 http youtu 5qydm5agh2s download lecture mitigating sybils fl pdf ai fl blockflow federated learning based blockchain 1 http youtu plhjoi pydg 2 http youtu 6lrcnvl85k4 3 http youtu g2l1b0yyucq download lecture blockflow pdf blockchain ai fl probabilistic quadratic voting link http youtu q0fp2c0l3oy download lecture pqv pdf blockchain baffle blockchain based aggregator free federated learning link http youtu hkqpvogdkv4 download lecture baffle pdf blockchain ai fl eth2vec code representation ethereum smart contract link http youtu pm7t9hn ha download lecture eth2vec pdf blockchain ai fedcoin peer peer payment system federated learning 1 http youtu bkur wdbnag 2 http youtu vujksa7675c download lecture fedcoin pdf blockchain ai fl fedgkt federated group knowledge transfer link http youtu bmq0ikwzq84 download lecture fedgkt pdf ai fl selective deletion blockchain link http youtu cj5p8g5oc download lecture selective deletion pdf blockchain empirical analysis eip 1559 transaction fee waiting time consensus security link http youtu rrsewpewluc download lecture eip1559 pdf blockchain data availability proof blockchain useful external link d3lab http d3lab xyz lab819 http lab819 xyz curg seoul http curg xyz question click http github com d3lab dao d3lab tube issue visit issue tab please feel free ask question contact email d3lab dao gmail com
/sambacha/prettier-config-solidity,Solidity,h1 align center br prettier config solidity h1 p align center conformant prettier configuration solidity p nodejs http github com sambacha prettier config solidity action workflow nodejs yml badge svg http github com sambacha prettier config solidity action workflow nodejs yml codecov http codecov io gh sambacha prettier solidity config branch master graph badge svg token 1k3oyjal8c http codecov io gh sambacha prettier solidity config quickstart quickstart overview overview motivation motivation reducing ast churn whitespace whitespace whitespace arrow parens arrow parens one var one var install install prettier prettier solhint solhint license license quickstart see dappspec format http github com sambacha dappspec additional style guide directive prettier plugin config warning major semver release prettier upcoming ensure using compatible version bash npm prettier 2 prettier plugin solidity latest prettier config solidity latest save exact create prettier config j file javascript ' use strict ' const prettierconfig require ' prettier config solidity ' module export prettierconfig editorconfig cfg stop editor looking editorconfig file parent directory root true non configurable prettier behavior charset utf 8 insert final newline true caveat prettier wont trim trailing whitespace inside template string editor might trim trailing whitespace true configurable prettier behavior change prettier config differs end line lf indent style space indent size 2 max line length 80 solidity http github com sambacha prettier config solidity sol indent size 4 indent style space ignore fixture vendored file dist artifact vendor test fixture test cache snapshot charset unset end line unset indent size unset indent style unset insert final newline unset trim trailing space unset overview prettier configuration solidity motivation configuration optimized reduce diff churn improve ast result following rule employed specific reasoning choice source airbnb style guide printwidth behavior printwidth located prettier solidity prettier plugin solidity blob b504261047d0019c924d53a2b9ab0738b1e05703 src node functiondefinition j l99 http github com prettier solidity prettier plugin solidity blob b504261047d0019c924d53a2b9ab0738b1e05703 src node functiondefinition j l99 see prettier plugin solidity issue 474 issuecomment 823670541 http github com prettier solidity prettier plugin solidity issue 474 issuecomment 823670541 whitespace source airbnb javascript whitespace brace http github com airbnb javascript whitespace brace 19 12 add space inside curly brace eslint object curly spacing jsx bad const foo clark ' kent ' good const foo clark ' kent ' arrow parens 8 4 always include parenthesis around argument clarity consistency eslint arrow parens source airbnb javascript arrow one arg parens http github com airbnb javascript arrow one arg parens minimizes diff churn adding removing argument jsx bad 1 2 3 map x x x good 1 2 3 map x x x bad 1 2 3 map number long string number long dont want take space map line good 1 2 3 map number long string number long dont want take space map line bad 1 2 3 map x const x 1 return x good 1 2 3 map x const x 1 return x one var 13 2 use one const let declaration per variable assignment eslint one var easier add new variable declaration way never worry swapping introducing punctuation diffs also step declaration debugger instead jumping ref eslint rule one var http eslint org doc rule one var jsx bad const item getitems gosportsteam true dragonball ' z ' bad compare try spot mistake const item getitems gosportsteam true dragonball ' z ' good const item getitems const gosportsteam true const dragonball ' z ' 20 2 additional trailing comma yup eslint comma dangle lead cleaner git diffs also transpilers like babel remove additional trailing comma transpiled code mean dont worry trailing comma problem legacy browser diff bad git diff without trailing comma const hero firstname ' florence ' lastname ' nightingale ' lastname ' nightingale ' inventorof ' coxcomb chart ' ' modern nursing ' good git diff trailing comma const hero firstname ' florence ' lastname ' nightingale ' inventorof ' coxcomb chart ' ' modern nursing ' 8 6 enforce location arrow function body implicit return eslint implicit arrow linebreak j bad foo bar foo bar good foo bar foo bar foo bar install prettier bash npm prettier prettier plugin solidity latest prettier config solidity save exact bash npm prettier prettier plugin solidity latest prettier config solidity save exact legacy peer deps bash yarn add prettier prettier plugin solidity latest prettier config solidity save exact solhint bash npm install save dev solhint solhint plugin prettier prettier prettier plugin solidity save exact json plugins prettier rule prettier prettier error license spdx license identifier apache 2 0
/bsc-predict/bsc-prediction-market,TypeScript,binance prediction market pancakeswap prediction market http pancakeswap finance prediction alternative front end available http bscpredict com http bscpredict vercel app
/bsc-predict/bsc-predict-bot,Python,pancakeswap prediction market starter bot starter bot bscpredict http bscpredict com official ui interface pancakeswap prediction market http pancakeswap finance prediction product use discretion strategy provided demonstration purpose lose money quick start 1 setup virtual environment python3 venv venv source venv bin activate pip install r requirement 2 copy env sample env update account secret key sup 1 sup 3 see strategy simplebot py simple follow strategy copy last available winner edit logic sup 2 sup 4 run bot python main py strategy simplebot size 0 001 sup 3 sup 5 press ctrl c cancel sub 1 see security section sub sub 2 simplebot strategy merely demonstration purpose ' run strategy surely lose money sub sub 3 run bot bet 0 001 eth per bet sub background prediction market 5 minute binary option bnb busd price hosted binance smart chain user predict whether think price bnb go 5 minute interval contract found http bscscan com address 0x18b2a687610328590bc8f2e5fedde3b582a49cda see documentation http doc pancakeswap finance product prediction adding new strategy see simplebot example strategy copy alter run new class name strategy defined class extends baseclass single function implementation get bet self upcoming round optional bet function return either none bet dataclass ' defined follows class direction enum bull 0 bear 1 dataclass class bet class specifying bet direction direction amount eth int epoch int instance want create strategy always bet bull class bot basebot def get bet self upcoming round optional bet return bet direction direction bull amount eth self bet size eth epoch upcoming epoch additional configuration config py ha additional configuration none crucial security never share private key anyone anyone ha access private key steal fund ' able anything order bot work input private key see metamask help http metamask zendesk com hc en u article 360015289632 export account private key exporting private key account corresponding private key need updated env file never check file version control share anyone basebot class strategy inherits initialized private key private key passed function claim make bet contract utils py review basebot function carefully understand whats happening private key useful link bsc predict blog http bscpredict com blog prediction market documentation http doc pancakeswap finance product prediction
/stefanmendoza/uniswap-price-feed,TypeScript,uniswap price feed real time price feed uniswap leveraging infura setup install dependency needed run project yarn getting token feed index j file add entry http github com stefanmendoza uniswap price feed blob wip src index j l26 token want use pair key symbol want displayed value token address pair address get live data feed given pair run following command yarn start base quote base token care quote asset token denominated example wanted track eth swap term usdc would yarn start eth usdc ' worry token ' order uniswap pair pair information able retrieved regardless ' demoninating swap opposite asset uniswap cool future improvement dynamic price chart using something like matplotlib build live price feed visualization clean web page show pending transaction volume could useful know incoming buying selling
/freight-chain/defi-sec,JavaScript,moved freight trust defi threat http github com freight trust defi threat
/DeFiCh/scan,TypeScript,ci http github com defich scan action workflow ci yml badge svg http github com defich scan action workflow ci yml scan http img shield io endpoint url http dashboard cypress io badge count oa9mrn main style flat logo cypress http dashboard cypress io project oa9mrn run codecov http codecov io gh defich scan branch main graph badge svg token gze1b7l9ra http codecov io gh defich scan maintainability http api codeclimate com v1 badge 9e2e89a0c9cfa93478eb maintainability http codeclimate com github defich scan maintainability defi scan http defiscan live http defiscan live netlify status http api netlify com api v1 badge 7c8f536f 028f 493f 953f 293dcde36f89 deploy status http app netlify com site defi scan deploys defi scan everything one stop location defi blockchain powered defi jellyfish http github com defich jellyfish ocean network developing contributing thanks contributing appreciate help get feel free make pull request guide along way make mergeable documented contributing guideline contributing md use npm 7 project ' required set npm workspace http doc npmjs com cli v7 using npm workspace shell npm install getting started first run development server bash npm run dev open http localhost 3000 http localhost 3000 browser see result next j learn next j take look following resource next j documentation http nextjs org doc learn next j feature api learn next j http nextjs org learn interactive next j tutorial netlify plugin nextjs http github com netlify netlify plugin nextjs ssr enabled default project structure txt scan github content public src component layout page slug tsx index tsx store style cypress defi scan project structured 2 core directory pull request likely carry significant change directory directory description github workflow shift left automation content static code based content management system type safety public static resource src component top level component shared design language src layout top level layout shared page layout component src page page associated route based file name src store global state used least app style tailwind cs style configuration cypress e2e testing end end testing end end testing test entire lifecycle defi scan component screen integrated together expected real use case test written real usage narrative normal consumer would placed cypress directory use cypress http github com cypress io cypress facilitate testing cypress modern end end testing framework web us sequential jest like approach testing automatic wait retrofitted many utility great testing quality life utility customized defi scan construct set web environment run end end testing together local playground http github com defich playground facilitate fast ephemeral testing culture use defi playground http github com defich playground defi playground specialized testing blockchain isolated mainnet testing defi application us regtest hood npm run playground local playground environment let default remote asset real minted anyone block generated every 3 second chain reset daily remote playground intellij idea intellij idea ide choice writing maintaining library intellij ' file included convenience basic toolchain setup use intellij totally optional security issue discover security vulnerability defi scan please see submit privately http github com defich github blob main security md license disclaimer using defi scan repo user agree bound term license license
/alexgo-io/alex-v1,Clarity,alex open source defi protocol built stack blockchain modelled world financial market see http doc alexgo io want find run use custom dependency management tool please run following cd project root clarity sh script clarinet manager sh update alex dao main sh script clarinet manager sh install alex dao list dependency required available http github com alexgo io alex v1 blob main clarity clarinet json
/Daichotomy/UpSideDai,Vue,upsidedai circleci http circleci com gh daichotomy upsidedai tree master svg style svg http circleci com gh daichotomy upsidedai tree master coverage status http coverall io repos github daichotomy upsidedai badge svg branch master http coverall io github daichotomy upsidedai branch master src asset logo png resource live platform http upsidedai com pitch deck http doc google com presentation 1qztuz2vuh k8atwuea444 uhod8dlzgenahmmxuohmu figma mockups http www figma com file 561c0ec33s556epvkybzg2 eth denver node id 8 3a0 youtube demo http youtu zfaq1ypdmdo ethdenver 2020 winner open track winner http alchemy xdai daostack io dao 0xe248a76a4a84667c859eb51b9af6dea29e52f139 crx proposal 0xc2584683cbf5f10af39fb2b79b62ff967608a9e179241e0fce9c8f6dbd6a579a defi rate shoutout http defirate com ethdenver defi theblock write highlight http www theblockcrypto com post 56159 ethdenver defi project highlight daostack tweet http twitter com daostack status 1229840533666893826 table content upsidedai upsidedai team team financial engineering financial engineering chain price dai usd chain price dai usd calculating settlement price cdf calculating settlement price cdf incentive market maker incentive market maker transaction flow transaction flow local development setup local development setup testing testing code linting code linting network network mainnet mainnet technical description technical description upsidedai upsidedai highly leveraged contract difference cfd built dai uniswap maker mechanism enables trader speculator bet hedge price fluctuation dai buying leveraged long short position cfd construction enables high leverage 20x remaining capital efficient requiring high margin requirement 100 collateralization position priced market observable dai usd price using combination maker oracle uniswap upsidedai ' cfd us two token within platform updai downdai represent long short position price dai market maker deposit 2 dai platform create 1 updai 1 downdai dai trading par dollar 1dai 1usd 1 updai 1 downdai 1 dai 1 usd price dai fluctuates around 1 usd value flow updai downdai token sum updai downdai token always equal netting price action token mean irrespective price dai pair updai downdai token yield 2 dai underlying example price dai trading 1 02 usd long token worth 1 4 dai downdai worth 0 6 dai price dai fluctuate around peg bounded leverage used cfd upsidedai ' 20x leverage place bound price dai 1 05 0 95 usd per dai bound reasonable dai ha broken bound year however dai wa hit one bound say ' trading 1 05 long token worth 2 dai short dai worth 0 dai wider bound wanted either le leverage used collateralization required team alex scott smart contract integration diego mazo product front end design chris maree financial engineering front end haythem sellami smart contract front end financial engineering contract difference contract two party stipulating buyer pay seller difference current value asset value contract time upsidedai ' implementation pay difference price dai 1 usd 20x leverage cfd synthetic contract representing synthetic price exposure underlying fictitious asset requires maturity token redeemed underlying ensures price token secondary market ha low tracking error underlying price feed chain price dai usd settlement price dai usd needed define much updai downdai token redeemable could build using oracle chose rather find trustless chain representation price dai found getting eth usd price maker medianzer eth dai price uniswap uniswap price divided maker medianizer price yield current chain price dai without needing oracle external price feed numerically defined follows diagram priceofdai gif calculating settlement price cdf contract upsidedai run one month maturity settlement token holder redeem updai downdai representative amount underlying dai amount dai redeem payout function many updai downdai hold settlement price dai usd p leverage l market fee f expressed follows diagram payout gif token holder ha updai downdai yield commensurate amount position market maker hold equal amount token yield full underlying fee interest next section incentive market maker key element upsidedai incentive mechanism encourage liquidity provision market maker done number way 1 underlying invested dsr using chai yield interest deposit life span contract redeemable market maker redeem maturity contract 2 uniswap pool generate 0 3 fee trade given market maker 3 redemption cdf charge fee f 0 3 also go market maker three source revenue make liquidity provider upsidedai profitable investing money market dsr minimum risk transaction flow time new contract difference get created new updai long token downdai short token token get created uniswap exchange one fee leverage settlement date configurable parameter deployment time local development setup local development recommended use ganache http truffleframework com ganache run local development chain using ganache simulator full ethereum node required pre requisite need node j npm clone project install dependency git clone git github com daichotomy upsidedai git cd upsidedai install project dependency npm compile solidity contract npm run compile new terminal launch ethereum rpc client use default ganache cli command configure run local development ganache npm run ganache switch back terminal deploy contract npm run migrate development make sure setup deployment parameter migration deployment config json file testing run test npm run test code linting linting setup javascript eslint http eslint org solidity solhint http protofire github io solhint lint solidity contract npm run lint contract lint test npm run lint test code style enforced ci test process build fail ' linting error network mainnet contract address deployed mainnet mainnet contract address upsidedai 0xae2f528965280278a4653dc0092779d3016fcda6 http etherscan io address 0xae2f528965280278a4653dc0092779d3016fcda6 cfd 0xdb3ff384baff85a734def4888576fa54010050d4 http etherscan io address 0xdb3ff384baff85a734def4888576fa54010050d4 updai 0x78ff871ecdbc2dab4212772192b48cae1ec74b8e http etherscan io address 0x78ff871ecdbc2dab4212772192b48cae1ec74b8e downdai 0xbc95fd0847e5982052f246402c9ca07d6b147139 http etherscan io address 0xbc95fd0847e5982052f246402c9ca07d6b147139 updai uniswap exchange 0x1f4488e2569b78c5df38c0eefdbc25a205931305 http etherscan io address 0x1f4488e2569b78c5df38c0eefdbc25a205931305 downdai uniswap exchange 0x70e76de7a90a77f2bdaa3a6fe7950c247591c5ba http etherscan io address 0x70e76de7a90a77f2bdaa3a6fe7950c247591c5ba uniswap factory 0xc0a47dfe034b400b47bdad5fecda2621de6c4d95 http etherscan io address 0xc0a47dfe034b400b47bdad5fecda2621de6c4d95 makerdao medianizer 0xe3774af455602c5a0eacc1b0f93e3ce0f65236ce http etherscan io address 0xe3774af455602c5a0eacc1b0f93e3ce0f65236ce technical description diagram upsidedai png find smart contract documentation doc cfd md
/jontstaz/BSC-DEX-Prediction-Bot,TypeScript,dexpredictionbot bot fetch overall consensus 5min 1min bnb usdt chart based number ta signal provided trading view determines consensus buy sell prior prediction round place bet pancakeswap candlegenie accordingly use 1 edit env example private key desired bet amount rename env 2 run npm install 3 pancakeswap run npm run start candlegenie run npm run candle 4 profit advice set bet amount higher 1 10th available bnb balance disclaimer nothing contained program script code repository construed investment advice every time bot win donates small portion winning developer bot delicious meal dinner investment strategy investment involve risk loss using program accept liability claim made developer others connected program credit modagavr original build extended bot greatly make much smarter opposed following going trend bettor
/akropolisio/vortex,Python,vortex asset vortex png vortex vortex chain basis trading strategy aim generate long term sustainable rewarding yield remaining market neutral advantage using vortex market neutrality vortex allows user generate yield without exposed directional price risk regardless whether bull bear crab season vortex generate sustainable yield rewarding yield vortex underlying strategy ha proven profitable across market condition ha historically outperformed many market neutral strategy higher risk yield farm single asset vortex requires user deposit single asset usdc make vortex effective alternative lending farming stablecoins low maintenance vortex passive strategy user actively managed strategist maintenance risk management return generated vortex also periodically compounded enhancing yield ecosystem benefit vortex provides liquidity crucial decentralized derivative exchange offer perpetual contract function please see vortex documentation http akropolis gitbook io akropolis product vortex development clone repository clone using http bash git clone http github com akropolisio vortex git ssh bash git clone git github com akropolisio vortex git change directory vortex bash cd vortex setup environment vscode docker recommended install docker http doc docker com get docker install vscode http code visualstudio com install remote container http marketplace visualstudio com item itemname vscode remote remote container vscode extension open cloned vortex repository vscode click f1 run remote container reopen container wait dependency installed see message done press key close terminal terminal configuring manual need python 3 8 node j 14 x install ganache bash npm install g ganache install python virtual environment dependency bash make install python virtual environment activate default environment bash source venvs default bin activate activate ape safe environment used deploy script via multisig bash source venvs ape safe bin activate setup env run cp example env env insert key env run test run arbitrum test provide print output test suite us visualise yield bash brownie test run bsc test bash brownie test network bsc main fork
/chainhop-dex/chainhop-contracts,Solidity,chainhop contract
/bloq/sol-mass-payouts,JavaScript,sol mass payouts utility enabling mass distribution asset single funding transaction summary example funder yield farming distribution wish distribute 1 000 000 xyz token 50 000 address chain funder build merkle tree address amount pair xyz payouts funder sends 1 000 000 xyz token merkle root hash merklebox contract secure storage time user may claim xyz token providing merkle proof address amount end result aggregating payouts single blockchain transaction funder user must still individually issue claim transaction public operation apis anyone validate claim validate supplied merkle receipt associated valid unspent claim anyone claim token present valid merkle receipt account associated transfer associated token given account provided account address must address claim claim must unspent funder create new claim group store merkle root associated erc20 fund chain must provide withdraw unlock time value must atleast 30 day higher claim group create time also provide memo string adding arbitrary note group warning chain validation fund supplied equal fund required fully satisfy claim funder may fund funder claim token via claim anyone add fund claim group supply additional quantity asset claim group usually funder call operation requirement claim group created anyone may supply additional fund funder withdraw fund claim group funder owner may withdraw fund claim group withdraw unlock time reached anyone chain erc20 mass send separate multitransfer contract provided provides simple utility 1 receive n amount erc20 token 2 send token list address amount pair contract function tied way merkle related operation provided alternate mass pay operation erc20 token security note funding appears prohibitively expensive validate holding fully funded solution welcome consequence possible fund claim group withdraw locking withdraw lock feature permit disabling withdrawal specified time atleast 30 day withdraw locking permanently lock fund set lock time maximum arbitrary time million year future setup 1 install package npm g truffle npm 2 update provider url config default json 3 set deployment account key env create env file root deployment account key mnemonic phrase 4 deploy contract want arb truffle migrate reset network mainnet ropsten test create env file define node base url deployment account key sh source env npm run fork start npm test npm run fork stop
/yearn/zap,JavaScript,documentation iearn finance http doc iearn finance smart contract interface contract abi address uniswap eth cdaizap json http github com iearn finance zap blob master build contract uniswap eth cdaizap json 0xb82674cfa16bb28d9b70bec830ff24baec6b1337 http etherscan io address 0xb82674cfa16bb28d9b70bec830ff24baec6b1337 code zap interface tab tab title iuniswap eth cdaizap sol javascript solidity interface interface iuniswap eth cdaizap function getexpectedreturn uint256 eth external view return uint256 function letsinvest address towhomtoissue uint256 minreturn external payable return uint function getuniswapexchangecontractaddress external view return address function redeem address payable towhomtosend uint256 amount external stopinemergency return uint function getmaxtokens address uniswapexchangecontractaddress ierc20 erc20tokenaddress uint value external view return uint function getethbalance address uniswapexchangecontractaddress external view return uint function gettokenreserves address uniswapexchangecontractaddress ierc20 erc20tokenaddress external view return uint function gettotalshares address uniswapexchangecontractaddress external view return uint function getreturn address uniswapexchangecontractaddress ierc20 erc20tokenaddress uint value external view return uint uint uint function calcreturnethfromshares uint value external view return uint uint uint function unibalanceof address owner external view return uint function cbalanceof address owner external view return uint function calcreturnsharesfrometh uint value external view return uint function gettokentoethoutputprice uint token external view return uint function getsharesreturn address uniswapexchangecontractaddress ierc20 erc20tokenaddress uint ethvalue external view return uint endtab endtabs
/NestedFi/nested-core-lego,TypeScript,div align center img width 400 src http user image githubusercontent com 32484870 169264834 35b0831e c6fd 417e 9675 477424488c60 jpeg div br div align center href http nested fi http nested fi div introduction nested decentralized protocol providing customizable financial product form nfts platform allows user put several digital asset e erc20 token inside nft abbreviated nestednft br nestednft backed underlying asset purchased sold decentralized exchange amm collected earned adding liquidity staking exchanged minted protocol decentralized exchange main idea allow adding module operator interact new protocol enable new asset without deploying token stored self custodian smart contract end creation process user receives nft allows control underlying asset portfolio furthermore allow user copy user nestednfts creator initial nestednft earns royalty documentation detail found http doc nested finance architecture image http user image githubusercontent com 22816913 152804262 e8879475 8873 43a9 9a53 18da1517b3fd png core contract name purpose nestedfactory entry point protocol hold business logic responsible interaction operator submit order nestedasset collection erc721 token called nestednft across codebase nestedreserve hold fund user transferred nestedfactory nestedrecords track underlying asset nestednfts amount nestedreserve feesplitter receives payment erc20 token factory fee sent allows party claim amount due nestedbuybacker pull token feesplitter buy back nst token market burn part upgradability contract nestedasset nestedreserve nestedrecords whitelisting multiple factory create nfts update record withdraw reserve however also using transparentupgradeableproxy http github com openzeppelin openzeppelin contract blob master contract proxy transparent transparentupgradeableproxy sol nestedfactory user ' approve multiple time kept mechanism get best flexibility lock user lock nfts certain date timestamp calling updatelocktimestamp feature allows hold design operator modularization operator nestedfactory main smart contract ' work without operator mentioned introduction designed protocol modular want able interact protocol exchange erc20 token deal two issue interact 5 10 20 protocol without blowing bytecode size much logic add new interaction without redeploying nestedfactory contract solution called operator new interaction new operator added fly kind work like library http doc soliditylang org en v0 8 9 contract html library since ' want redeploy factory contract called via delegatecall referenced operatorresolver operator resolver operator allows performing precise action like swap token token b specific function operator interface change depending action context interact new operator fly must expose new interface factory operatorresolver whitelist operator address selector bytes4 since ' trust caller provide information javascript struct operator address implementation bytes4 selector caller send imported bytes32 name operator function example zeroex performswap operatorresolver return address selector call whitelisted revert storage since operator called via delegatecall store retrieve useful data br fact cannot trust factory provide data like address protocol must stored managed owner deploying operator also deploy storage contract transfer ownership msgsender diagram image http user image githubusercontent com 22816913 152804758 98de74eb e09c 44ac 8504 32b40c3624ae png contract name purpose operatorresolver allows factory identify operator interact mixinoperatorresolver abstract contract load authorized operator cache zeroexoperator performs token swap 0x read contract operator zeroex readme md zeroexstorage zeroexoperator storage contract must store 0x swaptarget flatoperator handle deposit withdraws interaction third party read contract operator flat readme md beefyvaultoperator handle deposit withdraws beefy single vault native non native beefyzapbiswaplpvaultoperator handle deposit withdraws beefy biswap lp vault using zapper beefyzapuniswaplpvaultoperator handle deposit withdraws beefy uniswapv2 lp vault using zapper beefyvaultstorage handle whitelisting beefy vault zapper paraswapoperator performs token swap paraswap operator added e g curveoperator synthetixoperator order nestedfactory using operator interact protocol call factory operator order order ha several information operator selector use token processed swapped stacked operator portfolio wallet calldatas without selector javascript struct order bytes32 operator address token byte calldata help u make one interaction want make multiple interaction example create portfolio multiple token need batch order two type batched order processed factory create edit portfolio batched input order div align center img src static input order png width 650 div one input every order multiple output 0 3 fee input input source wallet porfolio owned transaction signer ouput destination portfolio owned transaction signer javascript struct batchedinputorders ierc20 inputtoken uint256 amount order order bool fromreserve batched output order div align center img src static output order png width 650 div multiple input every order one output 0 3 fee output operation doe reduce tvl 0 8 doe input source portfolio owned transaction signer ouput destination wallet portfolio owned transaction signer javascript struct batchedoutputorders ierc20 outputtoken uint256 amount order order bool toreserve example processinputorders flow div align center img src static processinputorders png width 1200 div nested factory interaction nested reserve nested record nested reserve store underlying asset nestednfts nested record keep track underlying asset associated specific nestednft hence time nested factory need interact user fund represented nestednft first check balance token associated nestednft nested record needed transfert fund nested reserve withdraw fund native token management nested protocol handle erc20 calling operator msg sender withdrawer sent eth used feed portfolio automatically converted weth received weth conversion conversion eth weth done submitting order submitinorders submitoutorders submitting order nestedfactory transfer input token nestedreserve msg sender factory convert sent eth weth use eth operator operator use eth directly weth case operator us withdrawer get eth back weth contract using withdrawer send eth nestedfactory without automatic weth conversion royalty royalty part fee collected protocol collected every step copied portfolio lifecycle copy update deposit withdraw fee distribution fee shared equally portfolio creator royalty nested first scenario portfolio created scratch fee go nested finance ltd royalty br second scenario portfolio replicated fee shared equally nested finance ltd original creator nested portfolio distribution done feesplitter sol ratio royaltiesweight shareholder weight currently royaltiesweight 50 one shareholder nested weight 50 totalweights always equal royaltiesweight shareholder weight ownership governance function protocol require admin right onlyowner using ownable openzeppelin http github com openzeppelin openzeppelin contract blob master contract access ownable sol transparentupgradeableproxy http github com openzeppelin openzeppelin contract blob master contract proxy transparent transparentupgradeableproxy sol need admin img width 1011 alt image src static ownership png contract owned ownerproxy dsproxy http github com dapphub proxy fork without cache timelock execute script timelockcontrolleremergency timelockcontroller http doc openzeppelin com contract 4 x api governance timelockcontroller fork introduces emergency role execute transaction instantaneous way emergency multisig ha role 5 member 5 approval needed case urgent fix hand operational multisig schedule execute transaction 6 hour delay 3 member 2 approval needed development testing setup install node 12 install yarn run yarn install copy env example new file env insert dummy mnemonic mainnet api key env configure fork testing env command start local blockchain yarn run start hardhat console yarn console compile yarn compile generate typechain file yarn typechain run test yarn test testing test bsc eth withtout forking mainnet order configure test need copy env example env fork url alchemy provider retrieve mainnet state able run test eth bsc without forking changing env license gnu general public license v3 http www gnu org license gpl 3 0 html
/pipethedev/lazerpay-laravelsdk,PHP,p align center img title termii src http ibb co kgqq9jp image png p lazerpay laravel package pipedev lazerpay laravel sdk package access laravel api total downloads http img shield io packagist dt zeevx lara termii svg style flat square http packagist org package pipedev lazerpay installation php http php net 5 4 composer http getcomposer org required get latest version laravel lazerpay simply require bash composer require pipedev lazerpay add following line require block composer json file pipedev lazerpay ' need run composer install composer update download autoloader updated laravel lazerpay installed need register service provider open config app php add following provider key php ' provider ' pipedev lazerpay lazerpayserviceprovider class use laravel 5 5 skip step go configuration http github com unicodeveloper laravel paystack configuration pipedev lazerpay lazerpayserviceprovider class also register facade like php ' alias ' ' lazerpay ' pipedev lazerpay facade lazerpayfacade class configuration publish configuration file using command bash php artisan vendor publish provider pipedev lazerpay lazerpayserviceprovider tag lazerpay configuration file named lazerpay php sensible default placed config directory php php return public key lazerpay developer dashboard ' key ' env ' lazer public key ' secret key lazerpay developer dashboard ' secret ' env ' lazer secret key ' usage open env file add lazer pay public key secret key displayed php lazer public key lazer secret key test php composer test basic method package provides php php use pipedev lazerpay lazerpay lazerpay new lazerpay initializes payment transaction return address used completing payment lazerpay initializepayment customer name iamnotstatic eth customer email abdulfataisuleiman67 gmail com coin usdc currency usd amount 100 fiatamount 100 accept partial payment true get list coin supported lazerpay using mainnet api key return accepted coin mainnet using testnet api key return accepted coin testnet lazerpay getacceptedcoins check payment ha completed return state show status payment payment status either confirmed incomplete identifier ' transaction reference ' lazerpay confirmpayment identifier transfer crypto amount business lazerpay balance external crypto wallet lazerpay transferfunds amount 1 recipient 0x0b4d358d349809037003f96a3593ff9015e89efa coin ' busd ' blockchain ' binance smart chain ' generate payment link lazerpay generatepaymentlink title ' njoku test ' description ' testing sdk ' logo ' http webhook site d1e815d0 0aa4 4bee aeb5 a5eb0f62701a ' currency ' usd ' type ' standard ' amount 100 describes allow get payment link created lazerpay allpaymentlinks describes disabling enabling payment link updating active inactive lazerpay updatepaymentlink status active jgidgd describes allow swap two stable coin lazerpay swapcrypto amount 100 fromcoin ' busd ' tocoin ' usdt ' blockchain ' binance smart chain ' metadata array id 343243243223432 contributing please feel free fork package contribute submitting pull request enhance functionality support kindly star repo share friend ' forget follow twitter http twitter com pipe dev muritala david
/opz/DALP-core,JavaScript,dalp smart contract action status http github com opz dalp core workflow ci badge svg http github com opz dalp core action install dependency npm install compile contract npx buidler compile run test npx buidler test using dalp smart contract use dalp smart contract project follow step git clone git github com opz dalp core git cd dalp core npm install npx buidler compile npm link cd project directory npm link dalp core import smart contract artifact project import dalpmanager dalp core artifact dalpmanager json import dalpmanageraddress dalp core artifact kovan json const dalpmanager new web3 eth contract dalpmanager abi dalpmanageraddress contributor thanks following people contributed project michaelcohen716 http github com michaelcohen716 opz http github com opz
/BrantleyWilliams/MarioCash,Java,logo http github com zhihexireng mariocash raw master doc image ygg logo green png mariocash change world blockchain build status http travis ci org zhihexireng mariocash svg branch develop http travis ci org zhihexireng mariocash coverage status http coverall io repos github zhihexireng mariocash badge svg branch develop http coverall io github zhihexireng mariocash branch develop codecov http codecov io gh zhihexireng mariocash branch develop graph badge svg http codecov io gh zhihexireng mariocash mariocash mariocash trust based multi dimensional blockchains branch built vision digitize everything reality connect everything blockchain network table content documentation documentation development development requirement requirement getting source getting source running node running locally running docker running docker building production building production running test running test apis apis using docker simplify development optional continuous integration continuous delivery optional stay touch stay touch documentation learn reading mariocash technical document doc full documentation visit wiki http github com zhihexireng mariocash wiki development implementation written java run linux osx window requirement mariocash requires java 1 8 compiler build install java follow link http www oracle com technetwork java javase overview index html getting source clone mariocash repo git clone http github com zhihexireng mariocash git cd mariocash unfamiliar git download zip http github com zhihexireng mariocash archive master zip source code running locally run cloned repository spring default profile simply run gradlew run multiple node intellij ide edit run configuration config http github com zhihexireng mariocash raw master doc image intellij run config png running docker fully dockerize mariocash node information refer docker docker docker one quick way running mariocash node docker rm p 8080 8080 p 32918 32918 h mariocash node1 name mariocash node1 zhihexireng mariocash node mariocash node bind localhost using 8080 restful api json rpc 32918 grpc default also use port providing option like p 8081 8080 dockerfile dockerfile designed build automatically last release source code publish docker image dockerhub http hub docker com r zhihexireng mariocash node release feel free fork build dockerfile purpose building production optimize mariocash application production run gradlew pspringprofiles prod clean build ensure everything worked run mariocash node build libs jar find usage command line option server address value json rpc restful api service listening address server port value json rpc restful api service listening port mariocash node grpc host value grpc service listening address mariocash node grpc port value grpc service listening port mariocash node max peer value maximum number p2p network peer default 25 running test launch mariocash ' test run gradlew test command would run integration test without gradle task caching gradlew test pspringprofiles ci rerun task apis mariocash node started block shown browser e g http localhost 8080 block http localhost 8080 block refer json rpc api doc api jsonrpc api md using docker simplify development optional use docker improve mariocash development experience number docker compose configuration available docker docker folder launch third party service example start multiple node docker container run docker compose f docker docker compose yml stop remove container run docker compose f docker docker compose yml continuous integration continuous delivery optional mariocash support following ci system box jenkins setting jenkins use docker jenkins yml docker jenkins yml file test jenkins locally running docker compose f docker jenkins yml travis refer travis documentation http doc travis ci com user getting started configure ci mariocash project jenkins use following configuration project name mariocash source code management git repository git github com zhihexireng mariocash git branch build master additional behaviour wipe repository force clone build trigger poll scm schedule h 5 build invoke gradle script use gradle wrapper task pspringprofiles prod clean build execute shell command gradlew bootrun bootpid sleep 30 kill bootpid post build action publish junit test result report test report xmls build test result xml task integration jenkins pipeline file jenkinsfile perform build docker container analyze code sonar build publish docker image stay touch follow mariocash http www facebook com mariocash mariocashnews http twitter com mariocashnews release announced via mariocash official http medium com mariocash sn also team member mariocash website http mariocash io team license mariocash released version 2 0 apache license license
/mellow-finance/mellow-vaults,TypeScript,mellow vault image bg png ci http github com mellow finance mellow vault action workflow ci yml badge svg http github com mellow finance mellow vault tree main test doc http github com mellow finance mellow vault action workflow main yml badge svg http doc mellow finance coverage status http coverall io repos github mellow finance mellow vault badge svg branch main http coverall io github mellow finance mellow vault branch main ' buliding permissionless vault ecosystem trustless automatic defi strategy protocol designed implementing multi token cross protocol liquidity rebalancing vault contract hold token rebalance inside protocol strategy contract interact vault contract definig rebalancing parameter liquidity provider user pick strategy fit need allocate asset vault earn yield asset deposited user get composable lp token erc 20 strategy strategy smart contract implement model provide effective liquidity allocation different market event trigger strategy initiate rebalance vault vault allocate multiple erc 20 token defi protocol rebalance liquidity accordance strategy inside protocol doc vault design article http mellowprotocol medium com mellow protocol vault design ed09bed7b869 protocol design overview medium article protocol documentation http doc mellow finance complete information contract run unit test required env variable could addred env file mainnet rpc ethereum rpc endpoint kovan rpc ethereum rpc endpoint mainnet rpc able serve acrhive node api e g alchemy http www alchemy com bash yarn yarn coverage test coverage report bash open coverage index html deploy required env variable could added env file mainnet rpc ethereum rpc endpoint kovan rpc ethereum rpc endpoint mainnet deployer pk 0x mainnet deploy kovan deployer pk 0x kovan deploy bash yarn yarn deploy hardhat yarn deploy kovan yarn deploy mainnet check contract size bash yarn yarn size
/Dracula-Protocol/contracts-v2,Solidity,dracula protocol dracula protocol universal defi adapter aggregate interest earning strategy known yield farming singular protocol dracula protocol aim consolidate various aspect defi one platform managed distributed autonomous organization dao voting right quantified drc ownership doe work dracula protocol allows user deposit asset interface deposited underlying platform earn interest dracula protocol add layer security yield farming also consolidating step necessary earn interest one protocol dracula protocol contract core contract mastervampire 0xb58e80f655f451f4ad2278a7d806c475accdb8bd http etherscan io address 0xb58e80f655f451f4ad2278a7d806c475accdb8bd implement core logic behind dracula protocol draculatoken 0xb78b3320493a4efaa1028130c5ba26f0b6085ef8 http etherscan io address 0xb78b3320493a4efaa1028130c5ba26f0b6085ef8 erc20 interface compliant token minter set mastervampire vote delegating functionality draincontroller 0x4852a488f15ae544c75fed466908a2d1559ebafa http etherscan io address 0x4852a488f15ae544c75fed466908a2d1559ebafa draindistributor 0x62440ae6a5b861d01b0104d6ed77dbeda29c4dc8 http etherscan io address 0x62440ae6a5b861d01b0104d6ed77dbeda29c4dc8 drcrewardpool 0xcaabb5e44868f720924aa2c8c4809d4f236ed7ee http etherscan io address 0xcaabb5e44868f720924aa2c8c4809d4f236ed7ee drc staking pool lprewardpool 0xca329c19396dfb92f570fd19e6f468af87c9a9c1 http etherscan io address 0xca329c19396dfb92f570fd19e6f468af87c9a9c1 drc eth uni lp staking pool ivampireadapter interface allows master vampire uniformly communicate various target pool effectively shadowing difference every victim ' adapter smart contract implement interface interface also contains several informational method used governance automatic reward redistribution vampireadapter helper library make delegate call mastervampire target adapter adapter several adapter popular farming contract every one separate contract implement ivampireadapter interface dodoadapter 0x680276cf3ea6c52f0fca4ba216c3353fe387ebde http etherscan io address 0x680276cf3ea6c52f0fca4ba216c3353fe387ebde luaadapter 0x8df2844f3f2e3297d57e2a9ee38ab3f7af652e03 http etherscan io address 0x8df2844f3f2e3297d57e2a9ee38ab3f7af652e03 pickleadapter 0x8432bf53c68aed9e703abcd78be3810478f1ee36 http etherscan io address 0x8432bf53c68aed9e703abcd78be3810478f1ee36 sushiadapter 0x750ba66b58708c7c1f396844f41dc84b0092f427 http etherscan io address 0x750ba66b58708c7c1f396844f41dc84b0092f427 trufiadapter 0xe26ab391a2ba6d9a5399ae412727dd197414cfa1 http etherscan io address 0xe26ab391a2ba6d9a5399ae412727dd197414cfa1 local development following assumes use node 14 environment copy env example env update variable install dependency npm install compile contract npm run build run test npm run test
/jkhaui/react-terra,TypeScript,react terra conventional commits http img shield io badge conventional 20commits 1 0 0 brightgreen svg maxage 2592000 http conventionalcommits org javascript style guide http img shield io badge code style standard brightgreen svg http standardjs com code style prettier http img shield io badge code style prettier ff69b4 svg style flat square http github com prettier prettier typescript 4 http img shield io badge typescript e2 89 a54 233178c6 comment react terra 40 react terra svg width 200 41 img src react terra svg width ' 240 ' alt ' react terra logo ' warning library highly experimental state currently recommended production use furthermore react terra ha updated terra 2 0 currently broken state due outdated dependency however contribution welcome encouraged visit react terra dev http react terra dev full doc installation hook moment component library coming soon shell yarn add react terra hook terra money terra j terra money wallet provider rxjs follow instruction http github com terra money wallet provider wrap app wallet provider jsx import networkinfo walletprovider walletstatus getchainoptions ' terra money wallet provider ' import react ' react ' import reactdom ' react dom ' getchainoptions promise defaultnetwork walletconnectchainids getchainoptions chainoptions reactdom render walletprovider chainoptions app walletprovider document getelementbyid ' root ' run dev mode n b need terra station extension chrome brave http chrome google com webstore detail terra station aiifbnbfobpmeekipheeijimdpnlpgpp hl en installed along wallet address root directory run yarn terminal window run following command yarn start hook second terminal cd example run following command yarn start
/felipecsl/churras,TypeScript,h1 img src http raw githubusercontent com felipecsl churras cc3c32687678908265582112554bcac8507ad6f8 public favicon svg alt logo width 40 height 40 churras h1 churras dapp providing crypto wallet dashboard currently display erc 20 bep 20 token ethereum bsc chain wallet balance time ' adding feature ' also able track yield farm pool nfts churras shorthand churrasco delicious brazilian style barbecue http www merriam webster com dictionary churrasco available script project directory run yarn run api run start api server yarn start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make edits also see lint error console yarn test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information yarn build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information project utilizes twemoji http twemoji twitter com library icon
/bonedaddy/go-compound,Go,go compound warning code deal money making blockchain call returning information used lose gain money please use cautiously dont come complaining end losing money go compound golang client library interacting compound finace api interacting compound contract allowing creation bot trading compound protocol content abi contains json abi definition various compound smart contract bindigns contains abigen generated golang binding various abi ' client contains client library build application use compound finance api interact smart contract cmd contains small command line client model contains golang type various response api give currently ha type ctokenservice accountservice response pb contains protobuf definition compound apis use sampler contains sampler http github com sqshq sampler configuration enable console based monitoring compound account current capability apis complete accountservice http compound finance developer api accountservice call complete ctokenservice http compound finance developer api ctokenservice call client library access apis via golang program deal raw http call watch account health signalling printing different account health state retrieve supply interest earned particular token retrieve total supply interest earned retrieve borrow interest owed particular token borrow compound contract get borrow rate compound contract retrieve list liquidatable address cli pretty print full accountservice accountresponse information suitable piping jq retrieve account health retrieve supply interest earned particular token retrieve total supply interest earned retrieve borrow interest owed particular token retrieve list address liquidated monitoring http gateway temporal cloud ipfs qmzelp8on93h9dgctp8g3c7cppfw2xz1rdesfslwa1ftte enables monitoring account sampler http github com sqshq sampler default sampler config located sampler sampler yml however ' need replace address needed long term goal enable persisting retrieve data locally db fast lookup enable report generation holding enable markethistoryservice api enable graphing markethistoryservice metric enable arbitrage uniswap compound enable thing like spotting interest rate arbitrage repayment arbitrage link api doc http compound finance developer api compound github http github com compound finance compound app http app compound finance compound website http compound finance comproi http www comproi com defi saver compound manager http defisaver com compound manage chiragkhatri compound liquidator http chiragkhatri compound liquidator azizjalel com liquidator http azizjalel com comp index2 php compound liquidation calculator http azizjalel github io compoundcalc aleth io analytics http aleth io zeroin compound management http beta zerion io support like application feel free send eth whatever shit coin want get rid 0xc7459562777ddf3a1a7afefbe515e8479bd3fdbd misc q ' q compound token contract ' different exchangeratecurrent exchangeratestored current call accrueinterest stored return last computed value
/DefiLab-xyz/uniswap-v3-simulator,JavaScript,defilab uniswap v3 simulator code site built http defi lab xyz uniswapv3simulator currently work progress working code refactor push commits update made code published ' update readme documentation code contribution guide
/mcdexio/mai-protocol,JavaScript,img src http raw github com mcdexio mai protocol master image logo png height 26px title mai protocol build status http travis ci org mcdexio mai protocol svg branch master http travis ci org mcdexio mai protocol coverage status http coverall io repos github mcdexio mai protocol badge svg branch master http coverall io github mcdexio mai protocol branch master mai protocol smart contract building decentralized derivative exchange ethereum mai protocol ' goal make trading decentralized derivative easy efficient name mai come two chinese character mean buy mean sell using pinyin modern system transliterating chinese character latin letter spelled mai spelled mai thus mai mean buy sell see document http github com mcdexio document blob master en mai md detail mai protocol feature mai protocol smart contract v1 0 ha following attribute trading market protocol contract two operation buy sell trading contract encapsulates minting exchange redeeming operation minting pool reduce redundant minting redeeming order collision accurate market order ability collect fee percentage collateral token allows asymmetrical maker taker fee structure highly optimized gas usage interface mai protocol structs orderparam parameter building taker maker order trader address trader amount amount position buy sell decimal 5 price price position decimal 10 gastokenamount gas fee order matching collateral token data 32 byte long data containing order detail version mai protocol version match mai protocol contract chain side side order 0 buy 1 sell ismarketorder type order 0 limit order 1 market order expiredat order expiration time second asmakerfeerate trading fee rate maker rate asmakerfeerate 100 000 astakerfeerate trading fee rate taker rate astakerfeerate 100 000 makerrebaterate reserved salt random nonce ismakeronly indicate order maker &#9; orderaddressset containing address common across order marketcontractaddress address market protocol contract relayer user acturally sending matching transaction collecting trading fee matching &#9; order containing necessary information order built orderparam orderaddressset action matchmarketcontractorders match order taker maker mint redeem exchange token published market protocol contract takerorderparam taker matching makerorderparams maker matching could one posfilledamounts array representing much position match take maker pair length makerorderparams orderaddressset address sharing among taker maker cancelorder cancel order canceled order longer match matched setmarketregistryaddress owner set non 0x address market register enable market contract official publishing list setmintingpool owner set collateral pool proxy see document detail abount collateral pool approveerc20 owner approve spender transfer erc20 token mai protocol withdrawerc20 owner withdraw erc20 token mai protocol note mai protocol never hold token mintingpool action approveerc20 owner approve spender transfer erc20 token minting pool withdrawerc20 owner withdraw erc20 token minting pool usually collateral token market token minting market contract position internalmintpositiontokens owner converting collateral pool position token minting request internalredeempositiontokens owner converting position token pool collateral token redeeming request mintpositiontokens whitelisted mint position token collateral pool send minted token caller redeempositiontokens whitelisted redeem position token collateral pool send redeemed token caller installation bash npm install build json abi file bash npm run compile test bash npm run coverage audit mai protocol audited chainsecurity check report http github com mcdexio mai protocol blob master audit chainsecurity maiprotocol pdf acknowledgment mai inspired 0x project http github com 0xproject hydro http github com hydroprotocol license project licensed apache 2 0 license see license txt license txt file detail
/dbarobin/awesome-mirror,JavaScript,mirror http badgen net badge icon twitter icon twitter label http twitter com dbarobin mirror mirror mirror mirror mirror r shawn http submirror xyz dao4ever eth dao xiakezhang http submirror xyz 0x6e18e69ad6a71be81b3a00303b1021a7e0021a3a web3 defi lianjinshu http submirror xyz 0x189e6a62c37f8d5a8f01f023a77175439e8124ce web3 defi gamefi vincent http submirror xyz vniu eth defi gamefi chessmaster2077 http submirror xyz chessmaster2077 eth web3 nft techflow http submirror xyz 0x4e8f1cf9a9ddcadee3340dada2cba5508d340b4e web3 defi shitcoindaily http submirror xyz shitcoindaily eth web3 0xtodd http submirror xyz 0x17f3f81860345567482e1d232fb5b6f8bd77f3bd web3 defi dao dfarm http submirror xyz dfarm eth web3 defi caoyin http submirror xyz 0x357ad9662364aed7316acbdbc76a193983e7c731 web3 nft mirror curator dao http mcdao submirror xyz dao maodao research http submirror xyz 0x21b08a87a98e7f242038810aa4227d6bec5a762c dao ksintmelody http submirror xyz 0xc19be75b8b9152d884987e1b58b3f18a94875396 web3 defi nft crypto dapangdunbtc http submirror xyz 0x0f9c6a9d8f9729ab07b5b2b870ce8122e76708b0 ieo bbnews http submirror xyz 0x21955b6635b67b19ee0472b8a4ac4e1d89521cbe web3 defi kirio eth http submirror xyz kirio eth web3 defi amey http submirror xyz 0x81910c6fd8ba1a67367aa9ca30101c61ce1a30e0 web3 defi rocket zz http submirror xyz nbblockchain eth web3 defi smartdao http submirror xyz 0xae623c8b158c3df75b4f0f3886ca36b49b72f3e9 dao sorosdegen http submirror xyz 0xsoros eth web3 defi dao http submirror xyz 0x410a0887cc91ccf1e8db56422b9a5d8b078c2200 web3 defi w3 hitchhiker http submirror xyz 0xe43a21ee76b591fe6e479da8a8a388fcfea6f77f web3 arweave k erica http k submirror xyz web3 defi gamefi rj http submirror xyz 0xaea29c04e32ebce118ea8cee975a3317190cccdd web3 arweave raccooncrypto eth http submirror xyz raccooncrypto eth web3 defi dao http submirror xyz 0x3d1163e402ec0c0f58297e1e88bd992b729ee520 cosmos btcdayu http submirror xyz btcdayu eth web3 defi dao people http submirror xyz guoyu eth web3 nft bitcoin fix http submirror xyz 0x5fa5381ade2eec5459ce93af57b5fee7d63e6831 bitcoin a10 eth http submirror xyz a10 eth defi nextdao http submirror xyz nextdao eth dao chaojijun http submirror xyz 0x90c73b046474ca1f7b06c60d913c1a97dbe2f08c defi web3 0x longforshort http submirror xyz shiyuan eth nft 0x2046 http submirror xyz 0x2c64da7097533db7a585ee62cde17cae0bcb2046 web3 en zhanglabs http submirror xyz wangzhan eth web3 en avc http avc submirror xyz web3 defi crypto msfew http submirror xyz msfew eth web3 defi linda xie http linda submirror xyz web3 defi dao kurt pan http submirror xyz suzuha eth web3 0xshangdidi http submirror xyz shangdidi eth web3 dao shrimpwen eth http submirror xyz shrimpwen eth nft connifer http submirror xyz 0xbade3c320b07ae2f75e23e237e22ec92684e0d9a dao mint venture http submirror xyz mintventures eth web3 defi dao darkcrypto http submirror xyz pushdoge eth web3 quentangle http submirror xyz 0xabae923874f05e922a22932d8d2117ffe627212d web3 http submirror xyz 0x5b197e3ee6770518f6f2735274522f48abd69864 web3 nft dao community http submirror xyz 0x39ec45d1445d9bdcd3a04238464b9f486c6ac748 dao 0xc952 http submirror xyz 0xc952fe149b640097054cfa53caf7ac2bfd0162c5 web3 en zephyr http submirror xyz zephyrzj eth web3 nft cwweb3 http submirror xyz 0x21c4952bc587cff830b8e6bf16bd0352a97a91a7 web3 dao shawn sun http submirror xyz 0xebab6258f50089872f98ffb459a524e6a3108274 nft 0x505a http submirror xyz 0x505a3436b1bb13a45f2c71a55799d3396ecb0d66 web3 http submirror xyz homepod eth defi shillboard xyz http submirror xyz diloco eth defi friend benefit http fwb submirror xyz defi socialfi droplist http submirror xyz droplist eth defi haole http haole submirror xyz web3 jackofcrypto http submirror xyz jackofcrypto eth ethereum solidity rbarniker http submirror xyz barniker eth nft longhash venture http submirror xyz 0x51999ac353335d7ef96bff16570b7af8f9a66474 web3 orca protocol http orca submirror xyz dao itamarg http submirror xyz itamarg eth dao frei bier http submirror xyz 0x840c6272087d207250d3f8b491a2b1d1b66e45b1 blockchain totlsota eth http submirror xyz totlsota eth cryptogram venture fof http submirror xyz 0xc767778e9b7841c029966f05b9762d3342e0510a kroos eth http submirror xyz kroos eth whaleroom org http submirror xyz 0xa33ab851b66ba240a8f8709212a9002b268aa559 web3 jmo http submirror xyz jmo eth dao rayyan http submirror xyz 0x7a452e69407478de858f6ef741a4648641285490 layer2 anett http anett submirror xyz nft opensourced finance http submirror xyz guill eth web3 zach miller http submirror xyz zachmiller eth nft salil naik http submirror xyz 0xf75aaa99e6877fa62375c37c343c51606488cd08 web3 twoplus http submirror xyz 0x09362a31a90f01e18bb4a7b16bc82796e8b79a7e dao verite http submirror xyz verite eth web3 lee martin http submirror xyz leemartin eth nft cavin http submirror xyz cavin eth web3 zain immortal khan http submirror xyz zainkhan eth nft ethereumcn http ecn submirror xyz david cai http submirror xyz 0x56706f118e42ae069f20c5636141b844d1324ae1 defi http submirror xyz momoswap eth web3 ranbuta http submirror xyz ranbuta eth web3 pact collective http submirror xyz pactcollective eth web3 varras http submirror xyz varras eth nft alice peng http submirror xyz 0x935b9ddf44ec1e1b3a79473965aef9ead37da79a web3 chibin http submirror xyz chibingmi eth web3 defi aave news http aavegrants submirror xyz defi madhavan malolan http submirror xyz madhavanmalolan eth web3 http submirror xyz 0x455e0e9d8b0c0541f4f26eceec2ea54504e9b4c9 defi terra dcsaxton http submirror xyz saxton eth web3 wong2 http wong2 submirror xyz web3 dayima http submirror xyz rolexpunks eth web3 nft http submirror xyz fdd eth web3 crypto dao http submirror xyz 0x731367992634bbd7782a468cb9036d0700639830 dao thomas koutsaplis http submirror xyz koutsaplis eth web3 cryptouf http submirror xyz cryptouf eth dao jongho daniel park http submirror xyz 0x80628bc93cc2b8a11043eee455cbf8981db1195f web3 syshen http submirror xyz 0x956f206bf42b6fceacacbeb759bc234921b55ecf web3 musashi http submirror xyz 0x6b872e9ae3d38f2c5b79320366ec6173d327213b web3 dao master http submirror xyz daomstr eth dao oxaciano http submirror xyz 0x9ed6749b5e99059f57f516832982f4e2a212bbf8 gamefi superrare http superrare submirror xyz nft mirror club http mclub submirror xyz mirror crisgarner eth http submirror xyz crisgarner eth web3 defi tom http submirror xyz tomborgers eth lorenhuang eth http submirror xyz lorenhuang eth defi vriti saraf http submirror xyz 0xb3c5db4b191f7f42ed1e12fce181300721dee774 defi citydao http city submirror xyz dao daeshawn eth http submirror xyz daeshawn eth web3 mikelightz http submirror xyz mikelightz eth nft lisawocken http submirror xyz 0x74c02fe52a544d3d1775796a9037ce560c40f581 dao b sconeboy http submirror xyz bscone eth web3 hebao http submirror xyz 0xe1fa2f90618b2e37e03d6c8fbe19adc68714782f defi chenhui http submirror xyz bttb eth web3 chaincatcher http submirror xyz 0x8c4d5e90196325fb22fff37c97d7984a37e51d11 web3 defi layer3 http submirror xyz 0x7b0befc5b043148cd7bd5cfeeef7bc63d28edec0 web3 0xevan http submirror xyz 0x829ceb00fc74bd087b1e50d31ec628a90894cd52 defi intel chen http submirror xyz 0x803a0261275d30c7ab5eaa37f47fd044c5c633bb defi nimrod kamer http submirror xyz nnimrodd eth nft decoin research institute http submirror xyz dere eth web3 cosmos axwells eth http submirror xyz 0x257af56d3389070f0bd98ab29829b12282dae855 web3 defi fat garage http submirror xyz 0x65a0af703047dfdd270361659d02f4f0e8547202 defi owenzhang http submirror xyz 0x29faeb62f4e9e1456c2feed5c6f27b13fae91dae defi nansen http submirror xyz 0xab722fcb8902c3b98c622db66e0b3247f7691eca defi web3 http submirror xyz 0xfad631c21cd293ee714b56198182817ba768b158 defi web3 xing http submirror xyz 0x8ec46a6d1afda45f5a334fe85016fb39d9d8caee defi web3 nft coloreye http submirror xyz 0xb756cb53cbb0f34cce7ab4b848c886b99f82764b defi web3 nft blocchainteahouse http submirror xyz chainhouse eth web3 defi weilgre http submirror xyz 0xd10c3aceb306ea9a2f5494d81f411d33f1ef9975 nft dao oic eth http submirror xyz oic eth web3 happmaoo http submirror xyz readmore eth web3 ori valderrama http submirror xyz 0x0ed18e07f41dc48871ec2193324669f3db0037fb web3 ryangtanaka eth http submirror xyz ryangtanaka eth web3 pubdao http pubdao submirror xyz web3 lightbird eth http submirror xyz lightbird eth web3 gaoflynn http submirror xyz cryptolunatic eth defi staq short crypto article http submirror xyz doorvesh eth web3 fab http submirror xyz fabrizio eth dao web3 0x9c65 http submirror xyz 0x9c65ac91c38598d95099068c0634a5d3276de51c nft michaelg eth http submirror xyz michaelg eth nft almond http submirror xyz almndbtr eth web3 teji http submirror xyz teji eth nft 0x8477 http submirror xyz 0x8477981dbd957ae4c6a249544e43915218948404 dao web3 crypto camoufly http submirror xyz camoufly eth nft scott martinez http submirror xyz scottmartinez eth web3 cgunn http submirror xyz cgunn eth nft sam hysell http submirror xyz samhysell eth nft taipei ethereum meetup http ethtaipei submirror xyz web3 defi metabody http submirror xyz 0x69d24494328051c3f3ee0480d593e6722eaf5869 web3 snapshot lab http submirror xyz shot eth defi alexandra sukin http submirror xyz alexandrasukin eth web3 josh stark http stark submirror xyz 0x9f9f http submirror xyz 0x9f9f98e28456eeefc4af1c990a170e2b0d2d6027 web3 trent lee http submirror xyz tookmymoney eth web3 h http submirror xyz 0x5a18682ed5e56cb026c39ba216592b76ceae5887 web3 0x8d07 http submirror xyz 0x8d07cfb29762a7561f004d042ddd47648640b23f sunny http submirror xyz 0x9e537cb5d5c86cc1f2679c030b3605b59df54426 web3 jack wang http submirror xyz 0xcb400e59f2af1ec2f8c224f6b011983751ea2e7e web3 http submirror xyz 0xd83256a8bb182e7be2382550ed24861c71108d35 web3 defieye http submirror xyz 0x112e372bb5ec17c1ea6b1d679ea72afbd2a94404 defi web3 foresight news http submirror xyz foresightnews eth defi web3 neon dao http submirror xyz 0x4ac39b087d0907db171e1cf52fd4120952389fc5 dao threethousandthirty http submirror xyz 0x5560522b72c4ab7f71f15adda474b0e6ccb194ed web3 jakepimental eth http submirror xyz jakepimental eth defi arbestor dinggleback http submirror xyz arbestor eth nft dd0sxx http submirror xyz dd0sxx eth defi nft mattdesl http submirror xyz mattdesl eth nft lazzarenne http submirror xyz 0x0161d1cc10116bb2a073a0c293d5e4f1a97a00b6 nft cryptostats http submirror xyz cryptostats eth brett http submirror xyz 0xe8cbcf4ab8aef17742ef204c557b3050e8f992c3 dao techflow http submirror xyz 0x0e58bb9795a9d0f065e3a8cc2aed2a63d6977d8a warpsound http submirror xyz warpsound eth web3 upshot http submirror xyz 0x82fe4757d134a56bfc7968a0f0d1635345053104 nft dylan olivia hunzeker http submirror xyz 0x38050a922eefc7138e2d39082019908ea1d04a7a web3 doomsdayx http submirror xyz doomsdayx eth web3 nft gem xyz http submirror xyz 0x4247c65610972d04ca221bcc64ff35f50c26e0f6 metaverse 0xken http submirror xyz 0xf36f242ce662b9fe44a203924b6b965e1d5a1b48 nft rabia fatima http submirror xyz 0xd09934912f8d22803465c733c0fdca00fd384c62 jonas1997 http submirror xyz 0x31ae182a31bb2c3cfd9e2e3732cc53f7606fb773 nft defi keegan http submirror xyz 0x546086afa3d285acd2c84783c2dcf8f2c23b6433 defi station newstand http station submirror xyz web3 joaxap http submirror xyz joaxap eth dao tribute lab http submirror xyz 0xf44e60285f1ee1df008f39ab9201864444188197 dao jhamar http submirror xyz 0xfc965f2075077ee54b59afb3b16780c1cba0d22f web3 kymxa http submirror xyz kymxa eth web3 watchensee http submirror xyz watchensee eth web3 coopahtroopa http coopahtroopa submirror xyz nft web3 wen brand http submirror xyz wenbrand eth nft deepdao http submirror xyz deepdao eth dao serenayu http submirror xyz serenayu eth web3 defi nft mosessampaul http submirror xyz 0xed95c841068a9fef0ce2d7f527829a231626447d web3 banklessdao http banklessdao submirror xyz dao vault creator unlocked http submirror xyz 0xe5dcbb3b8b6c7f837761b36316c5dcbb3a93b3f8 web3 missberri eth http submirror xyz missberri eth dao dmnsn http submirror xyz dmnsn eth nft unemeta http submirror xyz unemeta eth nft duloti peopledao http submirror xyz duloti peopledao eth dao kain eth http submirror xyz kain eth defi 0xproductgal http submirror xyz 0xproductgal eth web3 jean luc shorey http submirror xyz 0xbc2ae45ee0dd58b1fddf3ac6e98c8f2d3ff3591d defi david tomu http submirror xyz tomu eth web3 http submirror xyz mnhsu eth web3 jt song http submirror xyz jtsong eth web3 nft ali galan http submirror xyz 0x0c34e42209d9372199e37efd53b03ef1a4b3c5ff nft flyingpotato http submirror xyz 0x3a9e9dcc7be5a0152b15ca34923cadef1865dba5 web3 beeradley http submirror xyz beeradley eth dao jason zhou http submirror xyz jasonz eth web3 saltwater http submirror xyz 0xb9d7211edbf7adb18c4a6e8c587e5660cd476b8f web3 reservoir protocol http reservoir submirror xyz web3 gamer http mirror xyz 0xb72759927cb072d4db4386ef53d657f09a79fc92 nft cosmohm eth http submirror xyz cosmohm eth dao meagan loyst http submirror xyz themeaganloyst eth nft coinvise http coinvise submirror xyz defi justine moore http submirror xyz justinemoore eth web3 standard crypto http submirror xyz blog standard crypto eth nft cabin http creator submirror xyz dao zora engineering http zora submirror xyz web3 emperor http submirror xyz 0xemperor eth defi dao culture clap http submirror xyz canin eth dao olympus agora http submirror xyz 0x4cebbd9e1e399da2cfe62834133b6b759087a994 nft loedn http submirror xyz loedn eth defi syndicate http syndicate submirror xyz web3 kay http submirror xyz kayf eth web3 fraser bell nft diary http submirror xyz fraserbell eth nft bradley tusk http submirror xyz 0x81db200ed62ce664b911c211b55f836a208df868 web3 alejandro cano http submirror xyz alejandrocano eth web3 alex zhong http submirror xyz 0xd08624cdbd8646a74c24565deb103001215d0bf6 nft dhaiwat pandya http submirror xyz dhaiwat eth web3 0xa926 http submirror xyz 0xa92613a5e8d2373c2733ce1e61041485483a90f2 gamefi sushi http submirror xyz susheen eth web3 rhizomedao http submirror xyz rhizomedao eth dao mary maguire http submirror xyz marymaguire eth gamefi nivaaz http submirror xyz 0x14bd0cf32af377e65584058b5ee24fa9007da480 nft christian http submirror xyz cmurray eth nft flipfam http submirror xyz 0xa8c69e5a3d8a5f743772c65ba7624058e43c7a6e nft music x http musicx submirror xyz nft dyo hu http submirror xyz dyohu eth nft hashhub research http submirror xyz 0x8df126302a7ea75e7013ec8ad6bfac14dd84a5ff web3 pranav jagtap md http submirror xyz bhau eth dao mirror development http dev submirror xyz web3 forefront http forefront submirror xyz web3 0xben http submirror xyz 0xdbfa537f17118880c708a23518aa14049ac5fa35 web3 joshua eustis http submirror xyz telefontelaviv eth eth xedra http submirror xyz xedra eth nft pseudotheos http pseudotheos submirror xyz eth daniel schlabach http submirror xyz schlabach eth defi misterplus http submirror xyz misterplus eth nft tian7 http submirror xyz tian7 eth web3 joe eth http submirror xyz 0x97bb393e972fc8480e9fb46352e767c426f30902 socialfi http submirror xyz 0xf433344118e4a9f6870330cfa7e8d42bf7fb74af web3 rayyayzzz http submirror xyz rayzzz eth nft manta network http submirror xyz 0xeb125d270fc135ddd3cc8e1c466873a4f37682d5 polkadot curare jo7 http jo7 submirror xyz web3 metaverse http meta submirror xyz web3 brunny eth http submirror xyz brunny eth ethereum seed club http club submirror xyz dao hari velaayutham http submirror xyz harivel eth web3 lens protocol http submirror xyz lensprotocol eth web3 pedoispe http submirror xyz pedoispe eth dao nft pangea http submirror xyz pangeadao eth web3 dao dillon http submirror xyz dill eth web3 sladuca eth http submirror xyz 0x6a8046bd2f3ad3ef9e1ea60faddb668fd3837375 web3 yoursdao http submirror xyz yoursdao eth dao ladislaus http submirror xyz ladislaus eth ethereum lean block http submirror xyz supreet eth nft metaversetrml http submirror xyz 0xc6ebc754cbbc4aebc0596f516db4a98e8e8a247a gamefi asherfishman eth http submirror xyz 0x374e763fbe0fc4e404db4531f7ee54044019a8a1 web3 philip r powis wizard http submirror xyz philippowis eth web3 jackson oar http submirror xyz 0x22034f804960b9b34353d6a7595cc4e83ac0dabe iosg venture cn http submirror xyz 0x5eba828ab4999825d8416d7ead9563b64fd90276 rally http submirror xyz rallyio eth nft 0xcb4b http submirror xyz 0xcb4b8f4810188fcbe96c06ccf8a763eb49f56a29 ethereum scott david meyer http ed3 submirror xyz dao paymahn http submirror xyz paymahn eth dao jmcook eth http submirror xyz jmcook eth ethereum juliancanderson http submirror xyz juliancanderson eth nft andrew hong http ath submirror xyz web3 ryan solomon sully http submirror xyz 0xd61bbb4c245bd483301352127b96c0cc3b9471ab dao leosagan http submirror xyz leosagan eth defi blockchangehk http submirror xyz 0x26943fe785270a31d2d3c8e6e4539213b7980817 web3 http submirror xyz 0x4be3aa7ac1508980ef4b2b584b93ca6fb2d70bd1 dao defi web3 kuangren http submirror xyz 0xac75b504dc498d6f5e59127395b5c2e6f991a5a9 web3 0xlin http submirror xyz 0xlin eth web3 dot http submirror xyz dotmusic eth nft aean http submirror xyz aean eth web3 brock http submirror xyz brocke eth defi 0nboard http submirror xyz yean eth web3 gallery http gallery submirror xyz defi alex otsu http submirror xyz 0x3eb6728795cdc298742880f6fff4d63e627601e8 ethereum kalico http submirror xyz kalico eth dao owwwo http submirror xyz owwwo eth dao primedao http submirror xyz primed2d eth defi 0xnomad http submirror xyz nomadlab eth gamefi peter l http submirror xyz peterleeb eth web3 dappchaser http submirror xyz dappchaser eth nft durneja eth http submirror xyz durneja eth dao y4000 http submirror xyz y4000 eth ethereum dao clemlaflemme http submirror xyz clemlaflemme eth ethereum crypto coven http cryptocoven submirror xyz web3 http submirror xyz 0x76276193e5e0c1ab752470a21bd9a93acca23243 web3 haowi eth http submirror xyz haowi eth defi seba http submirror xyz 0x5152e31dff3c7c7fa1f7d90cef6c9eafd56be7e7 web3 rahat chowdhury http submirror xyz rahat eth web3 doug http submirror xyz pfeffunit eth nft mizu http submirror xyz mizu eth nft web3 0 dev camp http submirror xyz 0x73c7448760517e3e6e416b2c130e3c6db2026a1d nft nikkor perp fi http submirror xyz nikkor eth web3 vividabest http submirror xyz 0x2f3b5b6d852fb097df4d1197287858d35b3c1647 nft jambestwick http submirror xyz vatalikbuterin eth web3 zlexdl eth http submirror xyz zlexdl eth web3 0xdog http submirror xyz 0x26da4f747dd974f873be9422918faf1c3c0049d6 web3 http submirror xyz 0xe44081ee2d0d4cbacd10b44e769a14def065ed4d web3 sartoshi http submirror xyz sartoshi eth web3 jacob wei http submirror xyz jacobwei eth nft web3sean eth http submirror xyz therealsean eth nft evan powell http submirror xyz epowell101 eth dao 0xc18e http submirror xyz 0xc18e4ecce39239abc3c9610277ed6b51dd3cf258 dao leonard http submirror xyz 0xf6c53cea18bd1f5e93425eb7d5ce009225fa2a46 nft cyberviking http submirror xyz 0xf0f3466f8cbc2a6154703aa669e73844ac4d5446 web3 andrew debell http submirror xyz debell eth nft qiwihui http submirror xyz qiwihui eth nft maik2hello http submirror xyz 0x65684b9d2b06469e88acfc1b88c65912f7bb795b nft zoroo eth http submirror xyz zoroo eth web3 0xsplits http submirror xyz 0x50671995e1eca15ca9e807774a814331cabe0f3b web3 naveen http submirror xyz 0xb38709b8198d147cc9ff9c133838a044d78b064b web3 curiousjoe eth http submirror xyz curiousjoe eth web3 dao research dao http submirror xyz 0xed111cf8c23aeafe12286fd60ee670007457bf87 dao jasmine xu http submirror xyz jasminexu eth defi http submirror xyz 0x9ebcdd8954f48b725d56905afd3140f42b93e6ef nft jrocki eth http submirror xyz jrocki eth nft rohanda eth http submirror xyz rohanda eth nft hole http submirror xyz holedao eth nft data always http submirror xyz dataalways eth ethereum locke protocol http submirror xyz 0x61aff5a1899dd290568d53a0727dc4d0a27d2ea0 web3 cnma http c submirror xyz web3 crypto alpha http submirror xyz duynguyen96 eth web3 ming eth http submirror xyz 0x4f34d26287066c628f02b03b30eb14fa8450d03b web3 daohaus http daohaus submirror xyz dao saurabh nayak http submirror xyz 0x680d86816efca6fe321d808e3dabcf5867e86e06 web3 ak http submirror xyz 0xbc7545c4e1765d333083b7fe02e4af51050fc1be web3 xiangcai eth http submirror xyz xiangcai eth web3 crypto bibi http submirror xyz lingyanxiao eth crypto bhavesh rawat http submirror xyz 0x8f8340370c547a830fe93660dafda2d92670a880 nft augusto chirico http submirror xyz 0x27523f8b16092f5e9e8a590e317c17fce334a1c0 web3 cryptodesigner http submirror xyz cryptodesigner eth ethereum beatone http submirror xyz miaomiao1688 eth web3 crypto common dao http submirror xyz cryptocommons eth dao blockchain socialist mirror http theblockchainsocialist submirror xyz dao chengmo bit http submirror xyz 0x283ef753f5ec092fad51e27b0958c10f34da571f nft footprint analytics http submirror xyz 0x0a9ee078998e6ece11e1ff75fcbc7bed5be005bb web3 marrowdao http buidl submirror xyz dao chapter one http jmj submirror xyz web3 parcel http submirror xyz 0xe6c65b3cde9f4f2d7d8255aef2d53d80100a9087 web3 xing http submirror xyz xing824 eth nft yewlne http submirror xyz yewlne eth nft gwg gamefi http submirror xyz 0xce6fde8581c110b429dfd6b5eca2658284612cbc gamefi cwweb3 http submirror xyz cwweb3 eth web3 moc http submirror xyz 0x76c7417278a27117aba9e08a7f080a0337129be4 web3 wanda oliver http submirror xyz wandaoliver eth nft gton capital http submirror xyz 0x8c8b81208c7b7f71cd3279a31f48f1a37bda5df0 web3 stough http submirror xyz stough eth ethereum twodam eth http submirror xyz twodam eth web3 huohuo http submirror xyz wildchina eth web3 nft fringe http submirror xyz thefringe eth web3 chris hamm http submirror xyz chamm eth ethereum boardroom http boardroom submirror xyz dao julia maltby http submirror xyz juliamaltby eth nft mati h http submirror xyz 0xb3f2b0001a4a82e6ed9dab52224da11788798cdd web3 samson schirmer http submirror xyz 0x40674647a2deedf0459633904fd8150a5d720861 web3 eco ' echo http echo submirror xyz dao mycelium http submirror xyz ibansadowski eth web3 altin working guitarist http submirror xyz 0x973951ba15992c2944086bcf80421bea39363f17 web3 sakina http submirror xyz 0x4b58145d1f0d16985ba42b1066a60c26014e85bb web3 jiawei http submirror xyz owoowo eth nft john ellison http submirror xyz 0xcad3887923b39cd2b0b6d13538c4ecb7c5ee9825 web3 onecdot http submirror xyz 0x8b86c9f583cdad037c9a28285084de1b9e0bf3ea gamefi jp http submirror xyz jpangelle eth ethereum erica http submirror xyz ericakang eth ethereum impossible research http submirror xyz impossibleresearch eth gamefi yup http yup submirror xyz web3 brandon ferdig http submirror xyz 0x458162b7823560e5fb5de3285ad3242b0f813546 web3 dagan eth http submirror xyz dagan eth web3 rhian lewis http submirror xyz rhian eth web3 highvibe http submirror xyz highvibenetwork eth web3 sissi http submirror xyz sissixin eth web3 mahesh murthy http submirror xyz 0xf768f5f340e89698465fc7c12f31cb485fff98d2 dao omar mezenner http submirror xyz omarmezenner eth dao pagedao http submirror xyz pagedao eth dao maddie goldberg http submirror xyz maddiegoldberg eth dao boba epicure http submirror xyz bobaepicure eth nft didar korkembay http submirror xyz 0xcb143e3145c8efb020d2d5dcfd094e3345260f09 web3 eduard http submirror xyz 0xe0f8f06e9a06c306c4064cd660d644348e32b97d nft noncesense http submirror xyz rcpw eth nft yikiiiii eth http submirror xyz 0xaae47a1231d7291ece8701403789fa4e0285f857 nft penny777 eth http submirror xyz penny777 eth web3 github http submirror xyz 0x54c5bd849c170f3cbd5618d6f7b316b38f5729c4 web3 onboarddao http onboard submirror xyz dao spatio http submirror xyz spatio eth nft yesheng http submirror xyz yesheng eth nft cj blockchain http submirror xyz 0xe8c078c600132ab68685ea06a5f7c7bc1a349b76 dao kishandao http submirror xyz kishans eth dao shrey jain http submirror xyz shreyjain eth ethereum mirror dao http dao submirror xyz web3 dao steph http submirror xyz 0xb6bc21b770df019225f122e07dac3e4984cff95a web3 jpg http jpg submirror xyz nft iamsixsix eth http submirror xyz 0x78c1c7f703e9b2fe35ae4821ae8664bbf405bac8 nft jay jiang http submirror xyz jayjiang eth dao seedao product http submirror xyz product seedao eth dao charlie http submirror xyz durbin eth web3 ryguy http submirror xyz ryguy eth dao mirror launch http launch submirror xyz web3 erguai http submirror xyz 0x40d96af846202ebfb6677601b5d1c19b5106feab nft tasha kim http submirror xyz natashajuliakim eth nft lwsnbaker eth http submirror xyz lwsnbaker eth web3 hypha dao seed economy http submirror xyz 0x74ddee27b3d96807131c72c0ca0ea3a20afc1784 web3 rgan eth http regan submirror xyz web3 goke adekunle http submirror xyz 0x8806cd5e6a3977519b2eb97742cff4082957ad8c web3 http submirror xyz liangfenxiaodao eth web3 naivedao http submirror xyz 0x4d95fdbd3bd34f92b3508f61ee28fd006c782cf9 web3 lapidary http diamond submirror xyz web3 society journal http society submirror xyz ethereum alx tsu http submirror xyz 0xbaf657873a1df871471a74e155f0fefa09873661 web3 paulfinneyx http submirror xyz paulfinneyx eth web3 jasperthefriendlyghost eth http submirror xyz 0x04bee613690e98a1959f236c38abaa5f2439b14a ethereum rulan zheng http submirror xyz 0xc0f0ce81234776f7bf30e479fb0ac518034818b6 web3 denze http submirror xyz denze eth web3 chainlink http submirror xyz 0x6521ff2bff2fa292a9afb04f1791ba9fecbe1c3f web3 purposeunknown http submirror xyz purposeunknown eth web3 nick confrey http submirror xyz 0xcfb430b30747aae231655052d2c79ea76204291b web3 dopr http submirror xyz 0x0ac073bab13cfacd44a5dc7b063035e43a223014 web3 mitch worsey http submirror xyz mitchworz eth web3 manther http submirror xyz manther eth web3 0xvincent http u submirror xyz defi gamefi radia http submirror xyz radia eth nft tsaikoga http submirror xyz 0xff71512c84096f55cdf5c5f3d3c6ace99b56fef0 web3 http submirror xyz 0x5b8c65ffa85ff42695b2f96a3b6eb6e45bbb4add web3 littleflyingpiggy http submirror xyz littleflyingpiggy eth web3 cryang http submirror xyz 0x35b667b89aef0e76fc1b4ec2b5779915bf989bc7 web3 yyy http submirror xyz 0x8abb3f99ca9db88c2675243234800db4846a6035 web3 lab http submirror xyz 3344521 eth web3 http submirror xyz 0x23e9e002ee2ae2baa0c9d6959578bcb77148bdcf web3 http submirror xyz 0x14ed92a5b346cdb3d1884e1c150c23305edd714f web3 reinetwork fan http submirror xyz 0x00cfa9f2e149285f39eca6f18e23a38f11104d06 web3 0xtaoist http submirror xyz cryptolich eth web3 cdixon http cdixon submirror xyz web3 kumo09 http submirror xyz 0x068dab1d38c6770990e98238e16236d8d7fc6a7b nft 0x4ever eth http submirror xyz 0xdbb497d673304afc37ae7a9ac72128719e22eb33 web3 http submirror xyz 0xd449b78c59dff379b0a27af50e81f00875b03381 web3 guwo http submirror xyz guwo1213 eth web3 btc gravity http submirror xyz 0x24a7e31ab3ed8e6225b474006bc64f6d5841bd5f nft toumbot http submirror xyz toumbot eth web3 cryang http submirror xyz wetalk eth web3 amanda france http submirror xyz 0x3a5b30353e85591462c1b026644bf5c0f37f0067 web3 lawl http submirror xyz lawl eth nft suave http submirror xyz 0x7e8608f5893a6a57602a014ab190f7af8069d1e1 nft airdrop master http submirror xyz 0xdf1f3d10efb1b35d9a45a3fb564e08aa0d356490 web3 dao http submirror xyz maskpad eth nft ghiya eth http submirror xyz ghiya eth dao saint rien http submirror xyz 0x8ac563233ba5ed8b5f0f03260b114a1a5def1208 web3 1universe http submirror xyz 1universe eth nft free zone http submirror xyz 0xece7e5150622b0886cd4e0450f4fd40a65c769ae web3 fancyalex http submirror xyz fancyalex eth nft http submirror xyz sanyi eth web3 songcamp http submirror mirror xyz web3 adilharis eth http submirror xyz adilharis eth web3 jose aguinaga http submirror xyz jjperezaguinaga eth web3 max http submirror xyz 0x10b04fc4c83dee0c3413cf2ead42a58550183bbe web3 hex6c http submirror xyz hex6c eth web3 xuanling11 http submirror xyz 0x87d5032831e5c092c87eb879e5108da7d58f9192 web3 mati h http startup submirror xyz web3 neron http submirror xyz 0xf53f15b93e1f0ce72bc96b850db7576cc3bf6fe6 web3 http submirror xyz 0x46b97d1cdd9b67322b0eae602653944a723c1f3d web3 metascan pro http submirror xyz 0xb6c61a1deddfaafe7ef9b26ae74fb71afd5e9e4b nft alifya valiji http submirror xyz alifya eth web3 p mirror xyz http p submirror xyz dao eigenphi http submirror xyz 0xc19565163afdee3783fc970e4bd0275b11848d34 web3 coin http submirror xyz veporns eth gamefi ripple venture http submirror xyz rippleventures eth web3 fourweekmba http submirror xyz 0x94bb73e4cdb9dcdf0a2ad67c1d5d8e73aeb633ac ethereum denis nazarov http submirror xyz nft allcoredevs update http tim submirror xyz web3 jordan stastny http submirror xyz stastny eth nft crypblizz http submirror xyz 0x4f63d671a17b774a319ec0fa3724bc8ffdf8f9ab web3 week music nfts http thisweekinmusicnfts submirror xyz nft jay mavani http submirror xyz jaymavs eth web3 korninko http submirror xyz 0x8392a047c57fef1b368f3c026d363b92b9303956 web3 intrinsic research http submirror xyz 0xe7175fe936e9afdeb0cace5b88e45cee3387ffb8 web3 kiran http neuroswish submirror xyz web3 0x3e49 http submirror xyz 0x3e499ae3d6650636869a4efc80ed64bab20ec534 web3 masterpa http submirror xyz masterpa eth web3 rodney morris http submirror xyz rodneymorris eth web3 ericf http submirror xyz ericclfung eth web3 elenahoo http submirror xyz elenahoo eth nft grey musing http submirror xyz ipshita eth web3 theuberhuman http submirror xyz 0xdb7a40cd0aa46aa4e647bbdce8d2d2cf6827c854 nft treaqura http submirror xyz 0x211f3a6b74d522a207b90310d69f00f7129e990a defi lazy ant http submirror xyz lazyant eth nft tobias http submirror xyz 0xcd571be4ffd43b3464322134b74c7227076d9b10 ethereum danielpartida http submirror xyz danielpartida eth web3 sherlock http submirror xyz 0xe400820f3d60d77a3ec8018d44366ed0d334f93c web3 mike alliegro http submirror xyz 0xa1e989803e07c24d48af1be2e9c8ebf7b16ae2e0 dao meanix http submirror xyz meanix eth nft myco http submirror xyz dao abiodun http submirror xyz 0xccad637ef1c196e2055cbec4eaa03b3cdf1acead ethereum agresh http submirror xyz 0x623d9b5ea9a38acd9ce53e20863c52ef8b3b1359 dao atlas urbium http au submirror xyz web3 http submirror xyz medium sobol eth dao timshel historian http submirror xyz timshel eth nft pisciculturist cat http submirror xyz howardli eth nft heychris eth http submirror xyz 0x15d533b92a86fa59659f28f785b321992067b25f nft title http submirror xyz 0xf2254525e9f2147990279ba450fb23432040dfdd web3 kish http submirror xyz kishd eth dao roy sandoval http submirror xyz roysandoval eth web3 bignewnew http submirror xyz oneme eth web3 diana http dc submirror xyz defi yueying007 http submirror xyz yueying007 eth ethereum jason http submirror xyz 0x1e2410217c2071046194372edfd12540b9308029 ethereum ryanmiaoqi eth http submirror xyz ryanmiaoqi eth defi cliffton eth http submirror xyz cliffton eth defi anbar el mokri http submirror xyz 0xff88c9c03bf819c9d3090ddb55727486cc70b832 web3 web3 http web3dd submirror xyz web3 optimism http optimism submirror xyz defi kwenta http submirror xyz kwenta eth defi metabananas http submirror xyz metabananas eth nft despread creative http submirror xyz 0x8bac0953ec677313d0cf160d5d68d06ffa2fd42d defi rohki http submirror xyz 0x99895960b30a34f8431517c4f5b52a1f4b9854a3 nft olly eth http submirror xyz olly eth web3 levychain http submirror xyz levy eth nft sam tt http submirror xyz naivedao eth defi prst http submirror xyz prst eth web3 poemforshanghai http submirror xyz 0x5a82f93a1aa956c0ff1c1818ed0a3f664a99cc91 web3 iridium191 http submirror xyz iridium191 eth web3 eddie eth http submirror xyz eddiehsu eth web3 row1e http submirror xyz row1e eth nft luis mcsoul http submirror xyz 0x07d179974735d216614df40fc3cf12d49e8b761e web3 naminori http submirror xyz naminorixyz eth web3 junior http submirror xyz 0xaae7a1ad2764626d09a233a9bc06c38b413637cf web3 tsaikoga http koga submirror xyz web3 http submirror xyz 0x0f3193886ae7ecf1bb1d335c375a0526d4522b34 web3 graeme http g submirror xyz ethereum julian traversa http submirror xyz traversa eth ethereum stelly eth http submirror xyz stelly eth web3 niklas http submirror xyz niklasrindtorff eth web3 otherside http submirror xyz 0x3ae401f245034dae25af1e2f9b9bb8f006b1dc6e nft vinson http submirror xyz bitpush eth ethereum cy http submirror xyz camelliayang eth web3 0xbi http submirror xyz 0xbi eth bitcoin derek walkush http submirror xyz 0xfc2b4861650a39a1ffa0e4af06abe83e16906c8c nft rahul http submirror xyz nonem eth web3 popil http submirror xyz 0x1f648b364a8c8cdc679d0c77e60fd263fd1d9da8 web3 caryn http submirror xyz 0x08eb56ac6f35236b018d0bbd2c38dd0f55c37810 web3 tovarishch eth http submirror xyz tovarishch eth web3 kayla phillips http submirror xyz kaylaphillips eth web3 chetan bangalore http submirror xyz cbangalore eth nft kamil rusjan http submirror xyz 0x32ab1efd78472ed348944745ea3867a1ef4a71b8 web3 charlotte fang http submirror xyz charlemagnefang eth web3 yasmine morrison http submirror xyz 0xb381f2e2929d19ca1bc06e11b1db4279dff5b562 web3 degen http submirror xyz degen e5 b0 8f e5 8d 9a eth web3 blake x http submirror xyz 0xcd432fefa0bc1b67044ed986bdfdbb9d77afb05e web3 prysm http submirror xyz 0x266b650f92753fd7be17b7487c8cc3bd05efab8a nft hop http hop submirror xyz ethereum mirror web3 1 mirror original csv mirror original csv mirror urlrss 2 pr 3 pr merge readme script j script j mirror r mirror http xxx mirror xyz http mirror xyz xxx http xxx mirror xyz r http xxx submirror xyz http mirror xyz xxx r http submirror xyz xxx mirror submirror xyz mirror r web3 thanks chinese independent blog http github com timqian chinese independent blog wonderfuly http twitter com wonderfuly
/yearn/apr-oracle,JavaScript,documentation iearn finance http doc iearn finance smart contract interface contract abi address aproracle json http github com iearn finance apr oracle blob master build contract aproracle json apr iearn eth http etherscan io address 0x97ff4a1b787ade6b94cca95b61f79417c673331d code apr interface tab tab title iaproracle sol javascript solidity interface interface iaproracle function recommenddai external view return string memory function recommendeth external view return string memory function recommendusdc external view return string memory function getallcompoundapr external view return uint256 cdai uint256 cbat uint256 ceth uint256 crep uint256 csai uint256 cusdc uint256 cwbtc uint256 czrc compound function getcdaiapr external view return uint256 function getcbatapr external view return uint256 function getcethapr external view return uint256 function getcrepapr external view return uint256 function getcsaiapr external view return uint256 function getcusdcapr external view return uint256 function getcwbtcapr external view return uint256 function getczrcapr public view return uint256 function getcompoundapr address token public view return uint256 function getalldydxapr external view return uint256 dsai uint256 deth uint256 dusdc uint256 ddai dydx function getdydxsaiapr public view return uint256 function getdydxethapr public view return uint256 function getdydxusdcapr public view return uint256 function getdydxdaiapr public view return uint256 function getallfulcrumapr external view return uint256 izrx uint256 irep uint256 iknc uint256 iwbtc uint256 iusdc uint256 ieth uint256 isai uint256 idai uint256 ilink uint256 isusd fulcrum function getizrxapr public view return uint256 function getirepapr public view return uint256 function getikncapr public view return uint256 function getiwbtcapr public view return uint256 function getiusdcapr public view return uint256 function getiethapr public view return uint256 function getisaiapr public view return uint256 function getidaiapr public view return uint256 function getilinkapr public view return uint256 function getisusdapr public view return uint256 function getfulcrumapr address token public view return uint256 function getdydxapr uint256 marketid public view return uint256 function getallaaveapr external view return uint256 adai uint256 atusd uint256 ausdc uint256 ausdt uint256 asusd uint256 abat uint256 aeth uint256 alink uint256 aknc uint256 arep uint256 azrx uint256 asnx function getadaiapr public view return uint256 function getatusdapr public view return uint256 function getausdcapr public view return uint256 function getausdtapr public view return uint256 function getasusdapr public view return uint256 function getalendapr public view return uint256 function getabatapr public view return uint256 function getaethapr public view return uint256 function getalinkapr public view return uint256 function getakncapr public view return uint256 function getarepapr public view return uint256 function getamkrapr public view return uint256 function getamanaapr public view return uint256 function getazrxapr public view return uint256 function getasnxapr public view return uint256 function getawbtcapr public view return uint256 function getaaveapr address token public view return uint256 endtab endtabs
/masaun/arbitrage-btw-wbtc-and-eth,Solidity,arbitrage wbtc eth introduction arbitrage wbtc eth solidity smart contract allows user get opportunity execute automatic arbitrage wbtc eth nbsp diagram workflow diagramarbitrageur btw wbtc eth 1 http user image githubusercontent com 19357502 100541630 8bf59280 3288 11eb 9d17 8cda5b5d96e9 jpg nbsp setup 1 add env file based env example add env file br 2 install module npm install br 3 compile migrate contract kovan testnet npm run migrate kovan br 4 execute script ' instead testing npm run script arbitrage nbsp remark advance case using kovan need add pair wbtc eth liquidity uniswap pool balancer pool nbsp reference compound deployed contract address mainnet ropsten doc http compound finance doc network github full http github com compound finance compound config tree master network compound borrow example http github com compound developer compound borrow example blob master solidity example mycontracts sol borrowing erc20 token using eth collateral http medium com compound finance borrowing asset compound quick start guide f5e69af4b8f4 workshop lending borrowing token compound solidity http www youtube com watch v 0h8pc1 adoy br uniswap flash swap http uniswap org doc v2 core concept flash swap flash swap developer http uniswap org doc v2 smart contract integration using flash swap exampleflashswap sol http github com uniswap uniswap v2 periphery blob master contract example exampleflashswap sol flashswap example http github com austin williams uniswap flash swapper br balancer deployed address kovan http doc balancer finance smart contract address kovan doc interface http doc balancer finance smart contract interface chain registry add pool pair http doc balancer finance smart contract chain registry addpoolpair
/Ricochet-Exchange/ricochet,Solidity,repo deprecated ricochet ricochet help dca eth using superfluid ' ethx usdcx open stream usdcx ricochet receive distribution ethx periodically way dca ethx using single transaction getting started 1 install hardhat 2 npm install 3 npx hardhat test ricochet ricochet requires one dca transaction per period user reducing collective transaction quantity exponentially architecture architecture 00 meta arch png polygon contract address v1 3 usdc wbtc 0x22cd7fa83ae3381b66e8011930b92564a8e83366 usdc weth 0x30dd5a07ea7b4f9e208fcb5d51fbd15406fc939b weth usdc 0x4923dd6c90990cdff5ca3462cbd43ff57e06f1eb wbtc usdc 0xd25cbfd04172c8c79c5823bcf14dab8fe11c672d v1 2 deprecated dai weth 0x27c7d067a0c143990ec6ed2772e7136cfcfaecd6 weth dai 0x5786d3754443c0d3d1ddea5bb550ccc476fdf11d
/xBacked-DAO/algorand-wallet-select,JavaScript,algorand wallet select asset wallet selector demo gif single web3 algorand provider solution wallet introduction algorandwalletselect easy use library help developer add support multiple provider apps simple customizable configuration default algorandwalletselect library support injected provider like algosigner myalgowallet etc walletconnect officialalgorandwallet etc also easily configure library support wallet project using algorandwalletselect open pr add project list xbacked dao http xbacked io usage 1 install algorandwalletselect npm package bash npm install save xbacked dao algorand wallet select yarn add xbacked dao algorand wallet select 2 add algorand wallet select dapp follows javascript import walletselector algorand wallet select const returnwallet async data data console log data connector check console log await data connector connect console log data connector provider const template args div h1 classname w text lg algorand wallet selector h1 p built xbacked p walletselector returnwallet returnwallet div optional configuring wallet display simply following display myalgo wallet valid wallet myalgowallet algosigner walletconnect javascript const template args div h1 classname w text lg algorand wallet selector h1 p built xbacked p walletselector returnwallet returnwallet wallet myalgowallet div adding new provider want add provider web3modal note flow simplified future update logic supported provider life inside src wallet provider 1 must add new connection definition src wallet provider match following signature using myalgo example javascript import package import myalgo ' randlabs myalgo connect ' default export defining instance standard interface const connecttomyalgo construct required state connector const myalgowallet new myalgo must return following object return instance defined provider myalgowallet asynchronous function wrapping connection method provider connect async await myalgowallet connect optional function check connection status possible check false export default connecttomyalgo 2 add new connector default export src wallet provider javascript import algosigner algosigner import myalgowallet myalgowallet import walletconnect walletconnect import export import mynewwallet mynewwallet export algosigner myalgowallet walletconnect mynewwallet 3 add png svg logo added wallet connector src wallet logo 4 depending type connector create entry either src wallet injected j file src wallet provider j file 5 testing logo displaying correctly able return valid instance create pull request repository license mit
/GobyWallet/openapi,Python,openapi defi wallet chia network install install goby http chrome google com webstore detail goby jnkelfanjkeadonecabehalmbgpfodjm run node git clone http github com gobywallet openapi git change config py pip install r requirement txt uvicorn openapi api app thanks thanks contribution chia mine http github com chia mine clvm j metamask debank crypto stand shoulder complete project also thanks catcoin taildatabase http www taildatabase com sharing token list
/enzymefinance/enzyme-subgraph,TypeScript,enzyme subgraph official subgraph thegraph com enzyme finance development start developing ' need node j node yarn yarn installed installing take two command ' ready roll bash install dependency yarn install generate subgraph code yarn codegen ready start development documentation available http thegraph com doc also several helpful script package json testing deploying subgraph locally contributing third party contribution project welcome encouraged want contribute please open issue submtting pull request discus proposed change addition please note repository hosted organization follow code conduct coc make sure review follow yarn http yarnpkg com node http nodejs org coc http github com enzymefinance protocol blob current code conduct md
/madfish-solutions/quipuswap-webapp,Vue,quipuswap webapp decentralized application ui quipuswap protocol quipuswap http user image githubusercontent com 11996139 89178010 57e9b980 d595 11ea 8b32 ddea1f1bfa21 png project setup yarn install compiles hot reloads development yarn serve compiles minifies production yarn build lint fix file yarn lint customize configuration see configuration reference http cli vuejs org config
/inevitable-changes/bento,TypeScript,bento open source web3 dashboard live http bento finance http bento finance product still rapid development br follow u twitter bentoinevitable http twitter com bentoinevitable update license mpl 2 0 http img shield io badge license mpl 2 0 brightgreen svg http opensource org license mpl 2 0 twitter http img shield io twitter url http twitter com bentoinevitable svg style social label follow 20 40bentoinevitable http twitter com bentoinevitable bento profile http raw githubusercontent com inevitable change bento main package bento web public asset profile og image png http bento finance profile landing cover artwork http raw githubusercontent com inevitable change bento main package bento web public asset og image v3 png http bento finance dashboard preview http raw githubusercontent com inevitable change bento main doc image dashboard preview png http bento finance home status quo dashboard service either associated specific layer 1 chain built team shared vcs timid movement outside current eco maintained close source software development centralized team want protocol listed depend team add support mission make every user track every asset regardless chain type make builder add support protocol app freely provide social profile based web3 community contribution add question via github issue http github com inevitable change bento issue mentioning twitter http twitter com bentoinevitable reply quite fast discord community coming soon preparing local dev environment bash git clone http github com inevitable change bento cd bento yarn install first clone repo since ' using zero install http yarnpkg com feature zero installs yarn berry ' plug ' n ' play repository ' initial clone size might significantly larger think j cmc pro api key covalent api key rpc url storage copy src config secret example json inside bento common src config secret json fill content bash yarn workspace bento common build yarn workspace bento client build yarn workspace bento core build entire project managed monorepo using yarn workspace must build dependency first tip ' turn bento web development server modification local module build right away ' automatically reload still requires restart dependency change bash yarn workspace bento web dev finally start development server default port set 3000 licensing img align right src http opensource org trademark opensource osi approved license 100x137 png branding resource trademark asset design asset copyright inevitable right reserved third party asset included repository copyright rightful owner project licensed mozilla public license version 2 0 http opensource org license mpl 2 0 must include license copyright notice use work also mean ' notify change open source work modified software license certain case one gnu license copyright c 2022 inevitable
/deusfinance/app-ui,JavaScript,app ui open source interface deus app deus finance evolution marketplace decentralized financial service provide infrastructure others build financial instrument synthetic stock trading platform option future trading home website deus finance http deus finance app interface app deus finance http app deus finance stable mint discord deus http discord gg xttabbamgg twitter deusdao http twitter com deusdao medium deusfinance http medium com deusfinance telegram community group deusfinance http deusfinance telegram announcement channel deusfinance news http deusfinance news
/tamago-finance/tamago-finance,Solidity,tamago finance p2p trading protocol raffle service netlify status http api netlify com api v1 badge e84d4c25 ebdb 4b18 9751 5ed453015029 deploy status http app netlify com site helpful meerkat 01f0e9 deploys license mit http img shield io badge license mit yellow svg http opensource org license mit github last commit http img shield io github last commit tamago finance tamago finance http github com tamago finance tamago finance commits main github commit activity http img shield io github commit activity tamago finance tamago finance http github com tamago finance tamago finance commits main github contributor http img shield io github contributor anon tamago finance tamago finance http github com tamago finance tamago finance graph contributor generic badge http img shield io badge homepage view red svg http tamago finance generic badge http img shield io badge discord join green svg http discord gg 78fax5dpqk twitter follow http img shield io twitter follow tamagofinance label follow 20 40tamagofinance style social http twitter com tamagofinance deployment ethereum mainnet contract name contract address nft luckbox 0x772195938d86fcf500df18563876d7cefcf47e4d marketplace 0x260fc7251fae677b6254773d347121862336fb9f bnb chain contract name contract address nft luckbox 0x036e8db382333be877dba1ec694fe2e5b361b607 marketplace 0x5cd0bc81fc176ea4f1e571d5279afdee35dda618 polygon contract name contract address nft luckbox 0x978b2a0de8d1e0507032d5430cee50e2cca03d5b marketplace 0xcf30e553633737258a0392d07a5062ba2c79ca9f avalanche chain id 43114 contract name contract address marketplace 0x42209a0a2a3d80ad48b7d25fc6a61ad355901484 avalanche fuji testnet contract name contract address nft luckbox 0x3c4151361e9718b45409b803b6a9ee623dbf59fe bnb testnet contract name contract address nft luckbox 0xa657b300009802be7c88617128545534aca12dbe marketplace payload payload basically core element tamago ' p2p trading protocol defining way store asset information traded merkle tree root ' hash created upon data attach contract category name category timestamp timestamp chainid chain id base asset owneraddress wallet address owner baseassetaddress contract address nft erc 20 baseassettokenidoramount nft ' token id erc 20 amount baseassettokentype asset type 0 erc 20 1 erc 721 2 erc 1155 barterlist assetaddress contract address nft erc 20 traded assettokenidoramount nft ' token id erc 20 amount traded tokentype asset type traded chainid chain id asset traded one example payload http bafkreiayczhsojnlcm7ra6iok6wpwlxznwtfsfzhbrxftog4fxdgq4rkvq ipfs nftstorage link entry uploaded successfully ipfs merkle tree contructed using keccak hash 4 piece information cid chainid assetaddress assettokenidoramount license mit
/dekz/defi-test-stack,TypeScript,circleci http circleci com gh dekz defi test stack svg style svg http circleci com gh dekz defi test stack defi test stack included project 0x http 0x org kyber http kyber network dharma http dharma io project aim build interoperable environment project defi stack full stack deployed ganache testnet private network utility token aim shared multiple project zrx token deployed 0x traded kyber reserve manager offered loan dharma install yarn yarn generate contract wrapper yarn build yarn test running snapshot docker deployed contract ran via docker container docker run p 8545 8545 ti dekz defi test stack latest locally make use snapshot download defi snapshot zip http github com dekz defi test stack release extract content ganache cli installed terminal run following command ganache cli gaslimit 10000000 db defi snapshot novmerrorsonrpcresponse p 8545 networkid 50 concert load couple harbor equip island argue ramp clarify fence smart topic default mnemonic concert load couple harbor equip island argue ramp clarify fence smart topic following available account available account 0 0x5409ed021d9299bf6814279a6a1411a7e866a631 100 eth 1 0x6ecbe1db9ef729cbe972c83fb886247691fb6beb 100 eth 2 0xe36ea790bc9d7ab70c55260c66d52b1eca985f84 100 eth 3 0xe834ec434daba538cd1b9fe1582052b880bd7e63 100 eth 4 0x78dc5d2d739606d31509c31d654056a45185ecb6 100 eth 5 0xa8dda8d7f5310e4a9e24f8eba77e091ac264f872 100 eth preference modify project setting generate snapshot generate snapshot yarn clean yarn ganache cli ganache running terminal another terminal run following yarn generate snapshot result defi snapshot zip file run deployed address result running deployment migration receive list deployed contract example javascript global ethertoken 0x1dc4c1cefef38a777b15aa20260a54e584b16c48 zeroex erc20proxy 0x1d7022f5b17d2f8b695918fb48fa1089c9f85401 erc721proxy 0x871dd7c2b4b25e1aa18728e9d5f2af4c4e431f5c zrxtoken 0x0b1ba0af832d7c05fd64161e0db78e85978e8082 exchange 0x48bacb9266a570d521063ef5dd96e61686dbe788 forwarder 0xbe0037eaf2d64fe5529bca93c18c9702d3930376 ordervalidator 0x07f96aa816c1f244cbc6ef114bb2b023ba54a2eb kyber knctoken 0x6a4a62e5a7ed13c361b176a5f62c2ee620ac0df8 kgttoken 0x6dfff22588be9b3ef8cf0ad6dc9b84796f9fb45f network 0xcfc18cec799fbd1793b5c43e773c98d4d61cc2db networkproxy 0xf22469f31527adc53284441bae1665a7b9214dba expectedrate 0xdc688d29394a3f1e6f1e5100862776691afaf3d2 whitelist 0xe86bb98fcf9bff3512c74589b78fb168200cc546 feeburner 0xb69e673309512a9d726f87304c6984054f87a93b reserve 0x131855dda0aaff096f6854854c55a4debf61077a sanityrates 0x8d61158a366019ac78db4149d75fff9dda51160d dharma collateralizer 0xc7124963ab16c33e5bf421d4c0090116622b3074 simpleinteresttermscontract 0x7209185959d7227fb77274e1e88151d7c4c368d3 debttoken 0xc1be2c0bb387aa13d5019a9c518e8bc93cb53360 debtkernel 0x10a736a7b223f1fe1050264249d1abb975741e75 debtregistry 0xdff540fe764855d3175dcfae9d91ae8aee5c6d6f contractregistry 0xc6b0d3c45a6b5092808196cb00df5c357d55e1d5 permissionlib 0x5315e44798395d4a952530d131249fe00f554565 tokentransferproxy 0xda54ecf5a234d6cd85ce93a955860834aca75878 repaymentrouter 0x33def1aa867be09809f3a01ce41d5ec1888846c9 collateralizedsimpleinteresttermscontract 0x3f16ca81691dab9184cb4606c361d73c4fd2510a tokenregistry 0xb125995f5a4766c451cd8c34c4f5cac89b724571 contributing welcome contribution project adding protocol project please note may requested maintain portion firstly select abi output json wish add require abi bytecode field present add selected abi ' package json config section like json config abis new project artifact new project contract1 contract2 json add following script package json json generate contract wrapper yarn wrapper global yarn wrapper 0x yarn wrapper kyber yarn wrapper new project wrapper new project abi gen abis npm package config abis new project npm package config abi gen args output src migration new project generated wrapper running yarn generate contract wrapper abi translated typescript wrapper used migration create new migration directory mkdir src migration new project touch src migration new project artifact touch src migration new project migration migration file need export following function wich perform necessary deployment set required project typescript export async function runmigrationsasync contractaddresses provider provider txdefaults partial txdata promise ensure return deployed contract address runmigrationsasync function make available project test add migration main migration entrypoint src migration typescript import runmigrationsasync newprojectmigrationasync ' migration new project migration ' const migration globalmigrationasync zeroexmigrationasync kybermigrationasync newprojectmigrationasync build run test yarn build yarn test maintainer 0x dekz kyber ayobuenavista
/cbisaillon/Scrypto-Advent-Calendar,Rust,scrypto advent calendar publishing new christmas related scrypto example every day dec 1st dec 25th watch project get notified push daily example learning scrypto example publish become difficult approach 25th ever feel like ' understand ask question scrypto discord chanel http discord gg radixdlt username cbisaillon also read scrypto tutorial http www scrypto tutorial com wrote rock howard run example 1 follow guide http www scrypto tutorial com getting started installation install scrypto simulator 1 enter one example directory cd day1 1 follow instruction readme md particular example example list title learn day 1 present factory token creation day 2 santacookieeater component token creation assertion vault day 3 present distributor token creation vault loop day 4 house component badge authorization day 5 present delivery schedule epoch update assertion day 6 present list badge badge identification day 7 elf workshop minting badge authorization day 8 santa component calling house component multiple blueprint package badge authorization day 9 santa presentlist component inter component communication abi day 10 coal yield farming epoch update resource minting day 11 giftexchange priceoracle inter component communication oracle badge authorization day 12 yankee swap component badge identification withdrawing token day 13 elf work clock inter component communication oracle storing metadata badge day 14 automatic coffee brewing inter component communication epoch update day 15 vaccine passport nft minting nft metadata update day 16 degenerate elf nft minting randomness day 17 present list nfts nft minting nft metadata update day 18 price based token unlock inter component communication nft minting updating nft identification day 19 subscription payment system nft minting updating token burning day 20 dao membership system nft minting updating nft identification day 21 fund splitter multi blueprint package nft minting updating withdrawing token day 22 proposal voting system multi blueprint package nft minting updating voting day 23 rating system multi blueprint package nft minting updating nft authorization day 24 election system multi blueprint package nft minting updating epoch update voting
/RubyRedOwl08/defi-trading-bot,TypeScript,introduction mini defi trading bot project decentralized exchange operating bsc chain article set step use nbsp article http medium com ruby red owl 08 let build defi trading bot nest j 4ae644f89c56 stack architecture use nest j framework node j server connect bsc chain using library nestjs ether using aws km manage wallet private key use easily using private key server directly dont recommend way use postgresql collecting data use wardenswap sdk getting token price via wardenswap router contract swapping token please note ill demonstrate aws cli aws km postgresql setting process document prerequisite please make sure node j v14 0 0 installed operating system installation 1 install dependency bash yarn install 2 create env file use config file env sample 3 manage wallet private key br option 1 br use aws km recommend br use km key management service encrypting wallet private key store cipher text base64 br wallet encrypt base64 env file server start system us cipher text base64 decrypt private key br br ref managing encryption key aws km node j http medium com hackernoon managing encryption key aws km node j c320c860019a step 1 br open env file set use wallet type encrypt base64 aws region aws km key id aws credential profile name wallet private key encryption br running script encryption temporarily put wallet private key process step 2 br run yarn encryptionprivatekey script encryption done search resultfromscripts encryptdata txt path folder input data env file key wallet encrypt base64 br step 3 br remove key value wallet private key encryption option2 br set use wallet type private key wallet private key instant use 4 create postgresql database name defi trading bot manager running app bash development yarn start watch mode yarn start dev production mode yarn start prod env file name description use wallet type access wallet private key encryption data choose enter 2 value encrypt base64 private key wallet private key private key wallet wallet encrypt base64 encryption private key aws km postgres host postgresql host name postgres port postgresql tcp port postgres username postgresql username postgres password postgresql password postgres database postgresql database name postgres auto load entity true model loaded automatically postgres synchronize true automatically loaded model synchronized aws region aws region aws credential profile name aws cli profile name aws km key id aws km key id encryption decryption br br rest api post orderbook create order trade name type description srctokenaddress string body source token address swap desttokenaddress string body destination token address receive srcamount string body amount source token swap ordertype string body order type want open choose enter market stop limit stopprice string body price stop order trigger creation market order get orderbook list orderbook name type description orderstatus string query status orderbook get orderbook orderid get orderbook order id name type description orderid string path get orderbook data order id patch orderbook orderid cancel cancel active order name type description orderid string path cancle order form order id get wardenswap current price get current price name type description srctokenaddress string query source token address swap desttokenaddress string query destination token address receive srcamount string query amount source token swap br security vulnerability discover security vulnerability please send u e mail ruby red owl 08 gmail com special thanks magicdream http github com magicdream01 article editor scarlette27 http github com scarlette27 document editor license defi trading bot licensed mit license see license http github com rubyredowl08 defi trading bot blob main license full license text br br developed
/Wallet3/Wallet3,TypeScript,secure wallet web3 available app store wallet 3 app store asset 3rd download app store svg http apps apple com jp app wallet 3 mobile id1597395741 development setup 1 install nodejs 16 yarn 2 install dependency yarn install 3 copy configs provider example json configs provider json secret example secret 4 fill valid provider url configs provider json 5 launch yarn io
/JellyfishSDK/whale,TypeScript,ci http github com jellyfishsdk whale action workflow ci yml badge svg http github com jellyfishsdk whale action workflow ci yml codecov http codecov io gh jellyfishsdk whale branch main graph badge svg token kbcc9qsrra http codecov io gh jellyfishsdk whale npm http img shield io npm v defichain whale api client http www npmjs com package defichain whale api client following migration path outlined jellyfish 580 http github com jellyfishsdk jellyfish issue 580 repository ha consolidated jellyfishsdk jellyfish apps whale api http github com jellyfishsdk jellyfish tree main apps whale api docker artifact renamed ghcr io jellyfishsdk whale api http github com jellyfishsdk jellyfish pkgs container whale api version published npm package bumped follow jellyfish ' release cycle defi whale super index defi blockchain simplify defi light implementation work progress defi whale considered alpha software use risk apis yet finalized developing contributing thanks contributing appreciate help get feel free make pull request guide along way make merge able documented contributing guideline contributing md need node v16 npm v8 project ' required set npm workspace http doc npmjs com cli v7 using npm workspace shell npm install testing three type test required defi whale type test required docker defichain testcontainers http jellyfishsdk com testing testcontainers automatically spin regtest instance testing number container spin concurrently dependent jest maxconcurrency count test known flaky due usage multiple docker container test concurrency unit testing unit testing created test individual unit component software unit test closely co located together unit follow naming semantic spec placed together directory code testing code coverage collected end end testing top unit test provides additional testing test entire lifecycle defi whale dependency module integrated together expected follow naming semantic e2e placed directory component code coverage collected endpoint meant consumed developer testing done whale api cient dogfooding finest test written package whale api client test test e2e aspect endpoint sanity testing top end end testing sanity testing done docker image build kind testing performed ascertain possibility bug within workflow generate build identify determine whether build artifact docker rejected done ci expected perform manually code coverage coverage collected unit e2e test pull request main codecov testing le shell jest publishing docker image published automatically github container registry ghcr io jellyfishsdk new github release http github com jellyfishsdk whale release triggered github action automatically build docker image repo publish two image created release targeting linux amd64 linux arm64 latest tag always updated last release semantic release enforced release intellij idea intellij idea ide choice writing maintaining library intellij ' file included convenience basic toolchain setup use intellij totally optional security issue discover security vulnerability defi whale please see submit privately http github com jellyfishsdk github blob main security md license disclaimer using defi whale repo user agree bound term license license fossa status http app fossa com api project git 2bgithub com 2fdefich 2fwhale svg type large http app fossa com project git 2bgithub com 2fdefich 2fwhale ref badge large
/gluwa/creditcoin-legacy,C++,div align center sawtooth implementation creditcoin ha replaced substate based version please see http medium com creditcoin foundation http github com gluwa creditcoin information div gluwa creditcoin creditcoin creditcoin network enables cross blockchain credit transaction credit history building creditcoin us blockchain technology ensure objectivity credit transaction history transaction network distributed verified network creditcoin protocol wa created gluwa gluwa creditcoin official implementation creditcoin protocol gluwa information see http creditcoin org read original whitepaper http creditcoin org white paper creditcoin component order facilitate modular update creditcoin component divided several repos repo includes sawtooth 1 0 5 pow consensus engine creditcoin gateway creditcoin processor sawtooth rest api hotfixes sawtooth core http github com gluwa sawtooth core contains creditcoin fork sawtooth 1 2 x future development take place creditcoin shared http github com gluwa creditcoin shared ha cccore ccplugin framework several plugins bitcoin erc20 ethereum ethless creditcoin client http github com gluwa creditcoin client house command line client communicating creditcoin blockchain license creditcoin licensed gnu lesser general public license copying lesser software license license dependency distributed repository provided dependencylicense directory development process master branch regularly built tested guaranteed completely stable tag created regularly release branch indicate new official stable release version gluwa creditcoin prerequisite window boost 1 67 0 source place source boost 1 67 0 c local boost 1 67 0 would like use directory change setting project property c c general additional include directory static library place following lib sdk lib debug folder boost 1 67 0 1 download pre built binary boost 1 67 0 2 take following libs lib64 msvc 14 1 folder libboost chrono vc141 mt gd x64 1 67 lib libboost date time vc141 mt gd x64 1 67 lib libboost regex vc141 mt gd x64 1 67 lib libboost system vc141 mt gd x64 1 67 lib libboost thread vc141 mt gd x64 1 67 lib cryptopp 1 download install vcpkg git clone http github com microsoft vcpkg git vcpkg cd vcpkg bootstrap vcpkg bat 2 install cryptopp vcpkg install cryptopp x64 window lib file vcpkg installed x64 window debug lib cryptopp static lib cpp netlib 0 13 rc1 1 clone cpp netlib 0 13 rc1 git branch release 0 13 git submodule init git submodule update 2 follow instruction http cpp netlib org 0 13 0 getting started html calling cmake use following command instead cmake dcmake build type debug dcmake c compiler gcc dcmake cxx compiler g dcmake generator platform x64 cpp netlib 3 edit cpp netlib sln property c c preprocessor preprocessor definition remove win32 x64 platform following project cppnetlib client connection cppnetlib server parser cppnetlib uri build project x64 platform take lib file sawtooth follow instruction sdk sawtooth lib rebuild instruction txt build sawtooth lib file prerequisite ubuntu 16 04 visual studio ' workload linux development c http blog msdn microsoft com vcblog 2017 04 11 linux development c visual studio ubuntu 16 04 1 following dependency need installed using apt get gcc g build essential cmake gdbserver autoconf automake libtool curl make unzip pkg config uuid dev openssh server gdb libapr1 dev libaprutil1 dev python dev python3 dev zip 2 acquire source code following dependency build install boost 1 67 0 cpp netlib 0 13 rc1 protobuf 3 5 1 zeromq 3 2 5 zeromqpp 4 2 0 log4cxx master cryptopp 7 0 0 3 sawtooth sdk cxx master acquire source make following change src message stream cpp line 61 replace message add msg data data msg data length message add msg data data build install 4 copy header sdk xtern usr local include building processor create ubuntu 16 04 ccprocessor build ccprocessorlinux project
/ChainSafe/PINT,Rust,polkadot index network token pint beer license lgpl v3 http img shield io badge license lgpl 20v3 blue svg http www gnu org license lgpl 3 0 rustdocs http img shield io badge doc rust yellow http chainsafe github io pint api pint runtime dev polkadot ecosystem index investor self sustaining auction treasury parachains organized stateless money validator governed community includes polychain capital hypersphere venture hashkey capital acala built chainsafe stakerdao product information project please visit polkadot index network token http doc polkadotindex com documentation current development considered work progress upstream project fork substrate developer hub node template http github com substrate developer hub substrate node template build run follow step prepare local substrate development environment hammer wrench setup project currently build rust nightly 2021 08 01 assuming rustup already insatlled set local environment shell rustup install nightly 2021 08 01 rustup target add wasm32 unknown unknown toolchain nightly 2021 08 01 rustup override set nightly 2021 08 01 build development environment set build node template command build wasm http substrate dev doc en knowledgebase advanced executor wasm execution native http substrate dev doc en knowledgebase advanced executor native execution code bash cargo build release note build fails signal 9 sigkill kill ha probably run memory try freeing memory build another machine run development chain start standalone development chain instant sealing bash cargo run tmp dev instant sealing use chain spec file pre funded developer account bash cargo run tmp chain resource pint dev json instant sealing note amount pint endowed account dev account balance pallet see pint dev json resource pint dev json directly affect nav since total amount pint curculation genesis already built bash target release pint tmp dev instant sealing use node src chain spec dev r node src chain spec dev r chain spec local testnet polkadot release v0 9 x branch bash cargo build release target release polkadot build spec chain rococo local raw disable default bootnode rococo local json target release polkadot chain rococo local json cumulus relay0 validator alice port 9844 target release polkadot chain rococo local json cumulus relay1 validator bob port 9955 pint parachain bash command assumes chain spec directory named polkadot sibling pint directory target release pint collator alice chain pint dev w port 9945 parachain id 200 rpc cors execution wasm chain polkadot rococo local json w port 9977 rpc cors registering local relay chain order produce block need register parachain detailed substrate cumulus workshop http substrate dev cumulus workshop en 3 parachains 2 register going developer sudo parasudowrapper sudoscheduleparainitialize id genesis ensure set paraid 200 parachain bool yes bash cargo build release build chain spec target release pint build spec disable default bootnode pint local plain json build raw file target release pint build spec chain pint local plain json raw disable default bootnode pint local json export genesis state wasm target release pint export genesis state parachain id 200 resource para 200 genesis target release pint export genesis wasm para 200 wasm polkadot launch http github com paritytech polkadot launch run dropping proper polkadot binary bin folder run globally polkadot launch config json run locally navigate polkadot launch yarn yarn start documentation command mkdocs serve start live reloading doc server mkdocs build build documentation site mkdocs h print help message exit
/bugout-dev/moonworm,Python,moonworm moonworm set tool help develop analyze blockchain dapps pump productivity moon tool 1 moonworm watch tool monitor crawl index decoded smart contract data get historic going smart contract decoded event transaction sweat provide abi smart contract address get stream data tool analyze incident set alerting build datasets write sniping bot etc 2 moonworm generate brownie brownie steroid generate python interface cli smart contract one click focus smart contract development moonworm rest addition syntax highlight boost speed writing test moonworm http user image githubusercontent com 19771534 164013435 74a9e816 74ef 4e05 a7e5 1f7f620896e7 jpg 1 moonworm generate cli python interface generator pure web3 library case prefer use brownie setup bash pip install moonworm usage moonworm watch bash moonworm watch abi path abi file contract contract address web3 web3 provider url start start block end end block argument abi abi path abi file contract c contract contract address web3 w web3 web3 provider uri start start block start watching optional args end e end block stop crawling given crawler stop poa flag poa network example polygon confirmation confirmation number confirmation set watch default 12 outfile outfile jsonl file write event transaction db use moonstream database specified moonstream db uri get block transaction set need also provide network network ethereum polygon network name represents model db db set required event flag set watch event default false min block batch min block batch minimum number block batch together default 100 max block batch max block batch maximum number block batch together default 1000 note used event mode moonworm generate brownie bash moonworm generate brownie p path brownie project outdir file generated n contract name argument project p project path brownie project outdir outdir output directory file generated name n name prefix name generated file note better experience put generated file sub directory brownie project example 1 cd mybrownieproject 2 moonworm generate brownie p generated n mycontract 3 run generated cli contract python3 generated mycontract py h moonworm generate bash moonworm generate abi path abi outdir interface cli name prefix name generated file argument abi abi path contract abi json file outdir outdir output directory file generated interface flag generate python interface given smart contract abi name n name prefix name generated file cli flag generate cli given smart contract abi faq ser safe use yes moonworm code generator generates code us brownie web3 ok ser example usage moonstream dao contract http github com bugout dev dao tree main dao lootbox contract http github com bugout dev lootbox tree main lootbox ser dont write python javascript version hardhat coming soon
/sora-xor/sora2-network,Rust,overview todo license license original bsd license bsd 4 clause license spdx license identifier bsd 4 clause copyright c 2020 2021 polka biome ltd right reserved redistribution use source binary form without modification permitted provided following condition met redistribution source code must retain copyright notice list condition following disclaimer redistribution binary form must reproduce copyright notice list condition following disclaimer documentation material provided distribution advertising material mentioning feature use software must display following acknowledgement product includes software developed polka biome ltd sora polkaswap neither name polka biome ltd name contributor may used endorse promote product derived software without specific prior written permission software provided polka biome ltd express implied warranty including limited implied warranty merchantability fitness particular purpose disclaimed event shall polka biome ltd liable direct indirect incidental special exemplary consequential damage including limited procurement substitute good service loss use data profit business interruption however caused theory liability whether contract strict liability tort including negligence otherwise arising way use software even advised possibility damage
/bet-no-loss/bet-no-loss,JavaScript,github badge build status build image build url test status test image test url code coverage status coverage status image coverage status url compile mermaid status mermaid image mermaid url dependency status dependency image dependency url devdependencies status dev dependency image dev dependency url code coverage report coverage report image coverage report url heroku deploy heroku deploy image heroku deploy url github issue github issue image github issue url license license image license url heroku dashboard heroku dashboard image heroku dashboard url documentation doc image doc url open app open app image open app url built solidity reactjs http img shield io badge built 20with 20solidity 20and 20reactjs 3677ff team url bet loss bet sport event without loosing stake get rewarded win feature sport event betting game loss player choose withdraw stake whatever outcome whether win loose winner reward come part accrued interest invested defi pro rated ethereum blockchain based description period 1 bet player bet sport event period 2 earn total amount bet player included staked defi sport event occurs oracle make event outcome available period 3 distribution bet loss withdraws interest accrued defi substracts platform fee remaining split winner according share total deposit value winner withdraw interest proportionally initial stake player also withdraw stake link white paper http drive google com file 1bbi5vd9v m2p5tz4heiz6gd4jlkqftyu view usp sharing open application http bet loss herokuapp com http bet loss herokuapp com demo purpose presentation http drive google com file 1wufw0duk2ov wfrpqx0pr1l9iclzhfrk view documentation documentation github http github com bet loss bet loss repository code issue wiki architecture bet loss software composed 2 part back end ethereum smart contract deployed testnets written solidity front end dapp reactjs client app written reactjs deployed heroku provides user interface interact contract github repository monorepo entail back end front end code back end back end composed following ethereum smart contract dai contract dai sol bet contract bet sol betting contract charge handling bet deposit withdrawal getting list event oracle sending deposit given bet defi earn withdraw get accrued interest defipool allow winner withdraw prize allow player withdraw stake betoracle contract betoracle sol simulated smart contract register event provides event list get outcome registered event provides outcome event asked defipool contract defipool sol smart contract charge simulating defi protocol accepts deposit allow withdrawal accrued interest front end dapp front end application written reactjs deployed heroku interaction diagram outline interaction occurring smart contract stakeholder involved first diagram provides high level overview interaction second one detailed go function call interaction overview diagram give bird ' eye view interaction smart contract order view full size diagram click diagram mini image show image detail page click raw button located center right admin contract denotes user specifically address deploys smart contract owner todo add dai contract generated mermaid compile action start mermaid diagram 1 doc img readme md 1 svg detail summary mermaid markup summary mermaid sequencediagram autonumber participant admin admin participant oracle betoracle participant bet bet participant defi defipool participant player player participant dapp dapp rect rgb 238 238 238 note admin oracle initialization phase admin oracle deploy contract admin oracle declare event admin defi deploy contract admin bet deploy contract end rect rgb 238 238 238 note bet oracle betting phase bet oracle get event list oracle bet send event list player dapp browse event player dapp select event player dapp connect wallet player dapp deposit fund activate dapp dapp bet deposit fund deactivate dapp note left bet close betting period end rect rgb 238 238 238 bet defi send deposit defi earn note admin bet earning phase activate defi defi defi accruing interest admin oracle simulate event outcome note left oracle event outcome known oracle bet report event outcome note left bet earning period deactivate defi end rect rgb 238 238 238 note bet defi distribution phase bet defi retrieve interest defi bet accept retrieval player bet request earnings bet player accept withdrawal allowed end bet bet close event detail generated mermaid compile action end interested knowing generate diagram http github com bet loss bet loss wiki markdown mermaid diagram markdown file reveal mermaid code used generate diagram simply click right arrow toggle next mermaid markup interaction detail diagram provides detailed view interaction smart contract developer centric mention function call todo add dai contract generated mermaid compile action start mermaid diagram 2 doc img readme md 2 svg detail summary mermaid markup summary mermaid sequencediagram autonumber participant admin admin participant dapp dapp participant player player participant bet bet participant oracle betoracle participant defi defipool participant dai dai rect rgb 238 238 238 note admin oracle initialization phase admin oracle deploy contract admin defi deploy contract admin dai deploy contract admin bet deploy contract bet bet constructor daitokenaddress admin dapp set oracle address activate dapp dapp bet setoracleaddress oracle address bet oracle testconnection alt connect oracle bet true bet dapp true else cannot connect oracle bet bet dapp end deactivate dapp admin dapp set defi address todo activate dapp dapp bet setdefiaddress defiaddress bet defi testconnection alt connect defi bet true bet dapp true else cannot connect defi bet bet dapp end deactivate dapp admin dapp declare event activate dapp dapp oracle addsportevent name team teamcount date oracle dapp eventid deactivate dapp end rect rgb 238 238 238 note dapp bet betting phase dapp bet get event list getbettableevents activate bet bet oracle getpendingevents oracle bet eventid deactivate bet player dapp browse event player dapp select event player dapp connect wallet player dapp place bet dais activate dapp dapp bet placebet eventid chosenwinner payable bet bet collect dais used pay bet contract ' account bet bet register bet deactivate dapp note left bet close betting period end rect rgb 238 238 238 bet defi send deposit defi earn note admin bet todo earning phase activate defi defi defi accruing interest admin oracle simulate event outcome note left oracle event outcome known oracle bet report event outcome note left bet earning period deactivate defi end rect rgb 238 238 238 note bet defi todo distribution phase bet defi retrieve interest defi bet accept retrieval player bet request earnings bet player accept withdrawal allowed end bet bet close event detail generated mermaid compile action end installation install nodejs npm http doc npmjs com downloading installing node j npm install solidity compiler version 0 8 3 http doc soliditylang org en v0 8 3 installing solidity html clone github repository cd dev clone repository git clone git github com bet loss bet loss git cd bet loss install npm package back end front end update npm latest version npm install g npm install npm package back end npm install install npm package front end npm prefix client install configuration environment parameter dev order deploy smart contract use project need create env file project ' root folder contains environment specific parameter test network deploy project identifier infura http infura io create env file project ' root folder edit env set property value pair one per line mnemonic todo enter 12 word seed infura project id todo infura project id keep mind surround value double quote order generate per function gas consumption report optional simply append following line env coinmarketcap api key todo cmc api key need coinmarketcap api key get one http coinmarketcap com api pricing read know generate gas report gas report heroku configuration app already configured heroku github deploy front end reactjs time someone push master branch github therefore ' read section lucky following explains step took configure heroku github may prove useful similar configuration monorepo single git repository containing back end smart contract front end application dapp conversely 2 distinct repository ie one back end one front ent thing way easier simply skip section follow regular heroku documentation http devcenter heroku com deploy front end download install heroku cli http devcenter heroku com article heroku cli download install use heroku command line interface change heroku configuration app tune thing configured deployment occurs without manual intervention configure heroku cli need heroku app owner use free plan heroku login heroku add key create app heroku app name keep thing simple give heroku app name github project github asked enter github user repository name project buildpacks select mar create react app remove buildpack important remove nodejs present mar create react app already take care configure heroku automatically deploy project client branch open heroku dashboard http dashboard heroku com apps web browser choose app click deploy tab deployment method select github app connected github select github project select client branch automatic deploys activate automatic deploys client branch doe exist yet need install extract client yaml http github com bet loss bet loss blob master github workflow extract client yml github workflow action handcrafted lot upfront research local repository beforehand push master action magic configure heroku local git repository cd dev git clone git github com bet loss bet loss git cd bet loss login heroku via cli already done heroku login declare heroku git remote repository heroku git remote ssh git bet loss use mar create react app buikdpack deploy start reactjs app needed already done via web ui thing using command line interface heroku buildpacks clear heroku buildpacks set mar create react app set config variable heroku config set use npm install true heroku config set npm config production true read ahead time deploy front end heroku deploy front end compile npx truffle compile test page doc test explication md explains test run ganache port 9545 beforehand npx truffle deploy network ganache npx truffle test run unit integration test code coverage npm run coverage run test display report smart contract code coverage doe work running coverage report first run test generate coverage report file end file contains breakdown contract function line executed running test file difficult digest human push external service named coverall io http coverall io github bet loss bet loss branch master digest one swoop provides user interface easily navigate report order able push coverage file coverall io http coverall io need add following file coverall yml project ' root folder repo token todo enter coverall token repo find repo token coverall open http coverall io repos select repository token located top right corner repo token clue coverall plugin know target repository push coverage file gas report get report gas consumed smart contract running test npm run gas read eth gas reporter http github com cgewecke eth gas reporter npm package use generate gas report deploy need deploy smart contract back end reactjs app dapp front end deploy back end smart contract deployed following order 1 dai 2 bet 3 betoracle 4 defipool deploy dev local deploy npx truffle deploy network ganache deploy test network deploy contract ropsten test network npx truffle deploy network ropsten update contract address file doc deployed address md doc deployed address md contract address file doc deployed address md doc deployed address md contains address smart contract deployed ropsten testnet deploy front end local deployment nothing remote deployment dapp deployed automatically heroku http heroku com time push master branch achieve continuous deployment heroku developed configured 2 step process involving github workflow heroku deploy first make sure configured heroku readme md heroku configuration beforehand github workflow first built github workflow action http github com bet loss bet loss blob master github workflow extract client yml triggered time master branch pushed extract commits touched client folder reactjs section project store dedicated custom built branch named client way end branch exclusively contains client code located root folder instead client folder usual due constraint heroku mar create react app buildpack http element heroku com buildpacks mar create react app buildpack use deployment buildpack http github com mar create react app buildpack blob master readme md requires reactjs app reside project ' root folder however case master client code life client folder created workflow action magic creates client branch master exclusively client code make sure client code located project ' root folder branch course heroku configured heroku listen change github repository push client branch github trigger deploy heroku heroku pull client branch master deploys start reactjs app another option one took though would deploy heroku demand using heroku command line interface heroku cli like git checkout master push commits related client folder master branch remote git repository named heroku git subtree push prefix client heroku master case heroku need configured use heroku cli deployment method listen change master branch ci cd built set github workflow action http github com bet loss bet loss action automate integration deployment project much possible ci cd build blob master github workflow build yml compile smart contract master branch fails compilation error mermaid blob master github workflow mermaid yml convert mermaid j http mermaid j github io mermaid textual description diagram found makrdown file corresponding svg image insert diagram image readme diagram textual description master branch test blob master github workflow test yml run test smart contract master branch fails least one test fails deploy blob master github workflow deploy yml deploy heroku client front end code front test branch use awesome akhileshns heroku deploy http github com akhileshns heroku deploy github action culmination long research one surpasses hand first 2 attempt automate deployment heroku deploy front end run run local dapp order run front end application local machine cd client npm start open app open local dapp http localhost 3000 open dapp deployed heroku remote http bet loss herokuapp com interact contract deployed testnet security tried make smart contract resistant possible common attack potential hack read doc avoiding common attack md documentation general avoiding common attack md doc avoiding common attack md describes measure taken make smart contract resistant possible common attack potential hack deployed address md doc deployed address md contains address smart contract deployed ropsten test network design pattern decision md doc design pattern decision md explains chose design pattern using code requirement md doc requirement md alyra final project ' requirement test explication md doc test explication md explains test wrote aimed white paper http drive google com file 1bbi5vd9v m2p5tz4heiz6gd4jlkqftyu view usp sharing smart contract smart contract documentation available folder doc contract doc contract bet sol doc contract bet sol md betoracle doc contract betoracle md dai sol doc contract dai sol md defipool doc contract defipool md oracleinterface doc contract oracleinterface md need update smart contract documentation simply run npm run doc generates markdown file smart contract doc contract doc contract folder decision document doc design pattern decision md list design decision made credit bet loss based tantely http github com tanteli ' original idea team project manager diane paya monet http www linkedin com diane paya monet mohamed frihat devs tantely http github com tanteli lebeil http github com lebeil eric bouchut github http github com ebouchut linkedin http linkedin com ebouchut license bet loss http github com bet loss bet loss released term mit license see copying information http opensource org license mit source link resource used building bet loss ethereum ethereum developer ' tool http github com consensys ethereum developer tool li solidity http doc soliditylang org en v0 8 3 openzeppelin contract http doc openzeppelin com contract solidity pattern http fravoll github io solidity pattern hitchhiker guide smart contract ethereum http blog openzeppelin com hitchhiker guide smart contract ethereum 848f08001f05 security security hack http solidity example org solidity best practice smart contract security http consensys net blog developer solidity best practice smart contract security truffle http www trufflesuite com doc truffle swiss army knife smart contract creation build deployment ganache http www trufflesuite com ganache local dev test blockchain test http dzone com article tip unit testing ethereum smart contrac http medium com coinmonks testing solidity truffle async await 396e81c54f93 http dzone com article tip unit testing ethereum smart contrac openzeppelin test helper http doc openzeppelin com test helper chai http www chaijs com tdd assertion library mocha http mochajs org test framework web3 http web3js readthedocs io git git subtree http www atlassian com git tutorial git subtree http lostechies com johnteague 2014 04 04 using git subtrees split repository http medium com porteneuve mastering git subtrees 943d29a798ec 3qcvltsof continous integration gas report code coverage http ethereum org developer tutorial solidity truffle continuous integration setup github badge http shield io see wall badge top readme site great resource build source inspiration build custom one http david dm org github badge show current status date node j project ' dependency devdependencies package json github badge image url build image http github com bet loss bet loss action workflow build yml badge svg branch master event push build url http github com bet loss bet loss action workflow build yml test image http github com bet loss bet loss action workflow test yml badge svg branch master event push test url http github com bet loss bet loss action workflow test yml coverage status image http github com bet loss bet loss action workflow coverage yml badge svg branch master event push coverage status url http github com bet loss bet loss action workflow coverage yml mermaid image http github com bet loss bet loss action workflow mermaid yml badge svg branch master event push mermaid url http github com bet loss bet loss action workflow mermaid yml dependency image http david dm org bet loss bet loss status svg dependency url http david dm org bet loss bet loss dev dependency image http david dm org bet loss bet loss dev status svg dev dependency url http david dm org bet loss bet loss type dev coverage report image http coverall io repos github bet loss bet loss badge svg branch master coverage report url http coverall io github bet loss bet loss branch master heroku deploy image http github com bet loss bet loss action workflow deploy yml badge svg branch front test event push heroku deploy url http github com bet loss bet loss action workflow deploy yml github issue image http img shield io github issue bet loss bet loss github issue url http github com bet loss bet loss issue license image http img shield io github license bet loss bet loss license url http en wikipedia org wiki mit license heroku dashboard image http img shield io badge heroku dashboard blue heroku dashboard url http dashboard heroku com apps bet loss doc image http img shield io badge doc blue doc url documentation open app image http img shield io badge app open blue open app url http bet loss herokuapp com team url team
/xBidi/PancakeSwapPredictionBot,TypeScript,update v2 pancakeswappredictionbot machine learning use bot improved new version http github com xbidi pancakeswapbot work pancakepredictionv2 http pancakeswap finance prediction alt pancakeswap prediction bot winner image ppw image png alt pancakeswap prediction bot winner screenshot image ppw image 2 png alt candle genie bot winner screenshot image ppw image 3 png use 1 rename env example env 2 provide private key env private key field 3 run install command example mac brew brew install python pip3 install binance pip3 install request pip3 install python binance pip3 install joblib pip3 install numpy pip3 install sklearn brew install node npm 3 run machine learning command build model python3 python download data py python3 python build model py 4 start app npm run start beware fork give guarantee fork may turn scam disclaimer ' coding stuff pure open source bot ha small tax claim function win 0xc3c531be09102e84d4273984e29e827d71e28ae8 donate trust wallet http link trustwallet com send asset c20000714 address 0xc3c531be09102e84d4273984e29e827d71e28ae8 investment strategy investment involve risk loss nothing contained program script code repository construed investment advice reference investment ' past potential performance construed recommendation guarantee specific outcome profit using program accept liability claim made developer others connected program
/bonedaddy/go-blocknative,Go,go blocknative go blocknative provides api client blocknative ' websocket api allows subscribing event address transaction id handle correct initialization required documentation also includes ability store command sent api history buffer event connection failure restablish current session blocknative doe handle end usage library provides functionality subscribe event blocknatives api using either transaction hash address addition provides number different message type indicated message type basemessage basemessage struct contains required field need sent message blocknative ' api easily construct new base message mainnet use newbasemessagemainnet yourapikey txsubscribe txsubscribe struct used subscribing unsubscribing event transaction hash want send message subscribe event use newtxsubscribe supplying base message along transaction hash subscribe want send message unsubscribe event use newtxunsubscribe supplying base message along transaction hash unsubscribe addresssubscribe addresssubscribe struct like txsubscribe allows subscribing unsubscribing event ethereum account address want send message subscribe event use newaddresssubscribe supplying base message along address subscribe want send message unsubscribe event use newaddressunsubcribe ethtxpayload subscribe event ethtxpayload returned anytime event received transaction address subscribed suitable generalized processing event however likely want use use case specific structure better processing depending contract event emitted may information captured structure example example folder ha full running example note familiar mechanic github com gorilla websockets library essentially provides helper function around websockets library todo enable message history buffer usage enable connection drop handling enable better error handling enable optional payload subscription parameter enable configuration usage
/bifrost-platform/BIFI,Solidity,bifi description bifi decentralized finance defi project offer financial service enables user deposit various digital asset borrow digital asset deposit collateral bifi consists solidity smart contract operates top evm compatible blockchains supported digital asset bifi ha dedicated market handler contract market handler market handler intermediated market manager contract market manager service incentive handler si handler manages reward program reward participant service user operator contributed growth operation bifi service incentive token si token liquidation manager contract liquidation manager manages liquidation process user whose loan value ltv ratio ha exceeded set threshold bifi component interact example user may borrow 75 value previously deposited asset value digital asset expressed product amount current price user borrowing operation market handler provides user balance oracle contract provides current price token market manager validates executes action user also get service incentive action si handler provide si token user claim price user token significantly decrease user ' debt liquidated anyone via liquidation manager contract logic contract market handler si handler market manager designed updated without changing data storage logic contract ha data storage contract store data overview alt text http github com bifrost platform bifi blob master asset overview png raw true action solidity ci contract solidity contract bifi migration truffle script testing description bifi defi bifi solidity smart contract evm bifi market handler contract market handler market handler contract market manager contract market manager handler service incentive handler si handler bifi bifi token liquidation manager contract liquidation manager ltv loan value bifi 75 market manager oracle contract market handler oracle bifi contract market handler si handler market manager data contract data storage contract handler proxy contract overview alt text http github com bifrost platform bifi blob master asset overview png raw true action solidity ci contract bifi solidity contract migration test truffle script
/Setheum-Labs/Setheum,Rust,setheum node setheum ' blockchain network node implementation rust substrate frame setheum serml ready hacking rocket div align center &#9; setheum version http img shield io badge setheum 1 0 0 brightgreen logo parity 20substrate http setheum xyz substrate version http img shield io badge substrate 4 0 0 brightgreen logo parity 20substrate http substrate dev license http img shield io github license setheum lab setheum color green http github com setheum lab setheum blob master license br twitter url http img shield io twitter url style social url http 3a 2f 2ftwitter com 2fsetheum http twitter com setheum telegram http img shield io badge telegram gray logo telegram http setheumnetwork medium http img shield io badge medium gray logo medium http medium com setheum lab &#9; div introduction setheum founded initiated fascilitated muhammad jibril b setheum lab setheum foundation slixon technology steward support development advancement network ecosystem community foster development adoption decentralised finance building supporting cross chain open finance infrastructure serp setheum elastic reserve protocol stablecoin system setmint stablecoin minting system setheum ' built payment system setpay cashdrops let trader transactor claim cashback call cashdrop transaction speak setheum also deploys advanced incentivization mechanism economic model modeled jurisdiction islamic finance founder developer muhammad jibril b http github com jba khalifa core product mostly unique setheum token currency primitive src currency r text 7d create currency id 20 7b 7d pub 20trait 20tokeninfo bash setm setheum 12 0 usdi interusd 12 1 1 setter primitive src currency r text setr 22setter 22 2c 2012 20 3d 203 2c setter stable currency pegged u dollar ratio 1 10 1 setr 0 25 usd 25 cent 1 usd 4 setrs 2 serp lib serml defi serp serp setheum elastic reserve protocol algorithmically responsible stabilizing price setheum stable currency human interferrance needed ' algorithmically handled serp serp backbone setheum based te token elasticity supply algorithm based pe price elasticity supply demand curve price currency determines supply serping point meaning supply curve setcurrency adjusted according demand curve specific setcurrency result burning minting amount equivalent serping point produced serp te burning amount bought back serp automatically built dex bought amount burnt meet satisfaction demand curve prop price back peg opposite done lower price supplied currency demand peg demand curve mint amount divided receipients including setpaytreasury cashdrops deposited user claim system treasury governance charity fund stewarded setheum foundation welfaretreasury welfare treasury &#9; serp setheum lingua coined term &#9; serp increase decrease supply setheum stable currency serping point curve either x axis negative positive &#9; serpup increase supply setheum stablecurrency serping point &#9; serpdown decrease supply setheum stablecurrency serping point 3 cashdrops lib serml core token currency src lib r text 3a 3aserptreasury 3a 3aclaim cashdrop currency id 2c 20 26from 2c 20amount 3f cashdrops dispatched serp claimant transactor transaction claim cashdrops whoever transacts witha setcurrency setheum stable currency toggle claim cashdrop get cashback 2 setusd 4 setr amount transferred sent amount cashdropped cashdroppool ha enough fund cover amount fund cashdroppool provided serp serpups serp stablecoin inflation fund transferred system serp ' cashdroppool cashdrops ready claimed 4 efe effect lib serml defi setswap dex src lib r text type 20getstablecurrencyexchangefee 3a 20get 3c u32 2c 20u32 3e 3b efe exchangefeeevaluator basically take lower exchange fee normal rate dex stablecurrency pool difference two rate settled efe lp stable currency eligible efe one two currency lp pair must setheum stablecurrency therefore trader pool pay le fee lp get income pair attract trader turn attract liquidity lp 5 sevm lib serml sevm setheum evm ethereum virtual machine evm compatibility layer implement evm setheum bridge ethereum open ground interoperability ethereum setheum sevm let developer onboard deploy migrate ethereum solidity smart contract setheum seamlessly little change code setheumevm ha beautiful library developer tool let developer deploy manageand interact smart contract upgradable smart contract evm popular well documented tool like truffle metamask et al setter j web3 ether j compatibility library setheum evm let user access setheum evm single wallet without use two separate wallet compatibility 6 setmint lib serml defi setmint inspired makerdao protocol cdp collateralized debt position protocol ethereum setheum cdp ha zero interest rate zero stability fee fully halal collateralized differentiates setmint cdp protocol making far halal loan protocol entire industry multi collateral reserve collateral mint setusd returning loan return exactly wa loaned unreserve collateral fee interest let muslim world also participate industry take part trading yield making strategy within dome principle gamechanger wished wa therefore building people like need havent given chance pleased also non muslim want break free interest based alternative efficient system based truth fairness equality 6 help highend launchpad lib serml defi highend setheum help launchpad crowdfunding protocol team project raise soney launch token public add token setheum dex setswap provides halal incentive lp provide liquidity token launch bootstrap setswap let team project raise fund getting help listing bootstrap pool dex governed launchpadcouncil serml setheum runtime module library module check lib serml lib serml getting started project contains configuration file help get started hammer wrench initialisation clone repository bash git clone recursive http github com setheum lab setheum install rust bash curl http sh rustup r ssf sh installation running rustc version console fails refer http www rust lang org tool install repair install developer tool ubuntu 20 04 bash sudo apt install make clang pkg config libssl dev build essential install latest rust toolchain bash make init make sure submodule recurse set true configure submodule bash git config global submodule recurse true install required tool install git hook bash git submodule update init recursive start development node make run command launch temporary node state discarded terminate process bash make run run persistent single node chain use following command build node without launching bash make build command start single node development chain persistent state bash target release setheum node dev purge development chain ' state bash target release setheum node purge chain dev start development chain detailed logging bash rust log debug rust backtrace 1 target release setheum node lruntime debug dev run test bash make test run benchmark run runtime benchmark test bash make bench run module benchmark test bash cargo test p module poc feature run module benchmark generate weight file target release setheum node benchmark chain dev step 50 repeat 20 pallet module currency extrinsic ' ' execution wasm wasm execution compiled heap page 4096 output lib serml currency src weight r run debugger bash make debug node doc running node check doc node md doc node md embedded doc project ha built following command used explore parameter subcommands bash target release setheum node h release build list available release build run bash git tag create corresponding production build first checkout tag bash git checkout testnet 1 run command install appropriate compiler version produce binary bash make release chain upgrade build build wasm runtime bash make wasm update update cargo bash make update update orml bash cd lib orml git checkout master git pull git add lib orml cargo update check update predeploy contract bash cd lib serml sevm predeploy contract git checkout master git pull git add predeploy contract cargo update check generate token predeploy contract setheumevm sevm bash make generate token note build command skip wasm build designed local development purpose hence skip wasm build enabled speed build time use execution native run use native execution mode bench bot bench bot take care syncing branch master generating weightinfos module runtime generate module weight generate weight git pr comment pr bench runtime module setheum module name e serp price bench bot benchmarking generate weight r file push change branch generate runtime module weight locally bash make benchmark fork setheum chain create fork live chain testnet mainnet development purpose 1 build binary sync target chain localhost default need use unsafe rpc 2 execute make command ensuring specify chain name testnet mainnet bash make chain testnet fork 3 run forked chain bash cd fork data binary chain fork json alice
/alice-si/alice-v2-monorepo,JavaScript,p align center href http travis ci org alice si alice v2 monorepo img src http travis ci com alice si alice v2 monorepo svg branch master alt build status p overview alice decentralised financial protocol project make verifiable impact allows service provider make promise impact want achieve ensures held accountable rewarding impact verified unlike traditional bounty mechanism however alice allows future reward transferred third party thanks new financial primitive called impact delivery agreement ida helpful many different use case allowing service provider transfer risk failure investor investable bounty dapp built alice example allows service provider create ida raise fund promise create market sell future payment right investor discount http ida alice si high level overview available http medium com raphalice new alice coming 15dca7992469 building build application please install first dependency running npm install smart contract test executed buidler evm environment started typing npm run test make sure smart contract compiled trying deploy dapp npx truffle compile deploy front end local machine please type command line npm run dev protocol description core contract ida sol contains core logic impact delivery agreement primitive fluidbalancetoken sol paymentrights sol new semi fungible token type fluid balance manage ida payment right see detail impactpromise standard erc20 token contract used allow funders secondary funders claim refund ida end escrow sol fluidescrow sol refundableescrow sol manage fund escrowed ida claimsregistry sol register promise fulfilment claim validation helper contract simpletokenseller sol allows service provider easily create ida investment market used reference dapp http ida alice si idafactory sol helper contract creating ida creator set default service provider linking simpletokenseller sol impactpromisefactory helper contract allowing new ida create impact promise token definition promise conceived bounty e action completed service provider verified validator unlock fund escrow promisenumber set number promise fulfilled service provider promiseprice set amount money specified payment token unlocked escrow contract validator point ethereum address authorised verify promise fulfilled every validation unlocks number payment token held escrow equal promiseprice end date endtime ida sol indicates deadline ida ' promise completed date fund left escrow returned ida ' funders service provider account authorised fulfill promise making claim reviewed validator ida creator default service provider using idafactory sol promise token token received anyone fund ida ' promise used ida ' end date receive pro rata share fund remaining escrow account payment right token token fluid balance token see section initially received ida ' service provider transferable every payment right token holder claim share escrowed fund unlocked time promise fulfilled verified validator reference use case ida first created initial state following ida initial state http github com alice si alice v2 monorepo blob master image initial 20state png br point funders send money escrow account service provider sell payment right token investor ida funding investment http github com alice si alice v2 monorepo blob master image funding 20and 20investment png br ' time service provider make promise fulfilment claim claim validated payment right holder redeem unlocked fund escrow ida claim redemption http github com alice si alice v2 monorepo blob master image claim 20and 20redemptions png br new promise fulfilled funders use promise token obtain refund whatever left escrow ida ' end date ida refund http github com alice si alice v2 monorepo blob master image refund png br fluid balance token fluid balance token fbts new type token manage right fund held escrow fbt keep track triple balance fund already withdrawn escrow account fund available immediate withdrawal fund may available future call balance token fluid automatically combined transferred making easy trade fbts therefore semi fungible offer significant advantage fungible non fungible token fbt animation http github com alice si alice v2 monorepo blob master image fluid 20balance 20tokens 20animation gif basic example combining balance let take example alice creates ida help two homeless people find home constitute two promise pay 100 dai linked escrow contract fulfilled ida service provider alice initially receives full amount 200 payment right token fbts transfer half bob helping deliver promise fulfil first promise 100 dai unlocked escrow alice immediately us token withdraw redeem share unlocked fund bob lazy decides wait point alice bob fbt balance alice redeemed 50 available 0 potential 50 bob redeemed 0 available 50 potential 50 turn bob isnt lazy redeem fund also helping alice lot le said would fairness therefore transfer half token back alice fbts magic combine two set token alices account create new balance alice redeemed 50 available 25 potential 75 bob redeemed 0 available 25 potential 25 reference dapp example creating investment market reference ida dapp logic applied creation investment market service provider sell payment right token discount using simpletokenseller sol example let take condition alice ha 200 payment right token decides create investment market sell half payment right 50 discount reflect high risk might fulfill promise bob think excellent investment opportunity buy half available token 25 dai alice redeemed 0 available 0 potential 100 bob redeemed 0 available 0 potential 50 remaining market redeemed 0 available 0 potential 50 alice fulfills one promise unlocks 100 dai escrow account quick flash cancel investment market recover remaining 50 token redeems share escrowed fund bob usual lazy balance alice redeemed 75 available 0 potential 75 bob redeemed 0 available 25 potential 25 alice need money upfront decides create new investment market time based successful track record sell third token 50 20 discount note case discount applied potential balance avoid investor buying token price higher token possibly return bob decides invest buy whole lot 20 dai alice redeemed 50 available 0 potential 50 bob redeemed 25 available 25 potential 50 pro rata redemption well combining balance fbts offer another advantage ensure token holder may ever redeem fair pro rata share fund available escrow given time example x dai authorised redemption escrow account currently hold x 2 dai holder allowed redeem pro rata share even total allowance holding give allowed redeem remainder additional fund added escrow account full amount x example using initial condition let imagine alice first manages raise 100 dai funders want support promise find home two homeless people full 200 dai shes hoping raise bob buy half promise fulfilling first promise quick redeem usual given escrow account half full balance alice redeemed 25 available 0 potential 75 bob redeemed 0 available 25 potential 75 point wealthy donor decides fund remaining 100 dai support alices mission soon fresh fund hit escrow account alice bob new balance alice redeemed 25 available 25 potential 50 bob redeemed 0 available 50 potential 50 advantage compared fungible non fungible token fbts offer significantly convenience flexibility escrow management erc20 type fungible token erc721 type non fungible token nfts naive implementation using fungible token would create first come first served problem fast acting token holder advantage slower user situation described example alice bob half payment right token nominally entitles 100 dai escrow pot half full alice would able drain entire content 100 dai soon first promise fulfilled bob get anything would require double condition 1 additional fund must added escrow account 2 second promise must fulfilled even though alice ha incentive shes already collected maximum reward using fungible token would also make unwieldy manage ida investment market discount set unredeemed balance nfts hand could used manage individual balance token balance could combined would make impractical expensive use redeeming fund escrow account would require one transaction every token
/ApeWorX/py-tokenlists,Python,py tokenlists uniswap token list http github com uniswap token list implementation python dependency python3 http www python org downloads release python 368 version 3 7 2 greater python3 dev installation via pip install latest release via pip http pypi org project pip bash pip install tokenlists via setuptools clone repository use setuptools http github com pypa setuptools date version bash git clone http github com apeworx py tokenlists git cd py tokenlists python3 setup py install quick usage python tokenlists import tokenlistmanager tlm tokenlistmanager tlm available tokenlists tlm install tokenlist token 1inch eth tlm available tokenlists ' 1inch ' development project early development considered alpha thing might work breaking change likely comment question criticism pull request welcomed license project licensed mit license license
/Anish-Agnihotri/stat.farm,JavaScript,p align center img src http imgur com ahmwq3s png alt stat farm github header p stat farm stat farm simple compound finance http compound finance dashboard comp governance token distribution calculator built nextjs node j serverless funtions pull data collection api ' listed present information simple mobile responsive grid api ' consumed shrimpy http dev api shrimpy io comp usd pair coinbase pro candlestick data compound finance http api compound finance comp holder governance proposal market historic market data coingecko http api coingecko com api v3 general comp token information eth price exchange volume data stat farm deployed vercel http vercel com stat farm ha affiliation statefarm fun play word run locally using yarn yarn yarn dev using npm npm install npm run dev contribution built day ' use excel calculate comp yield ' potentially come back future add functionality like governance proposal vote charting etc ' feature would improve comp observing quality life ' open pr message twitter http twitter com anishagnihotri ' add feature
/defiwrapper/defiwrapper,TypeScript,defiwrapper defiwrapper collection different defi related polywrappers like defi sdk coingecko etc defiwrapper want create cross chain multi platform suite defi related polywrappers project q 1 defiwrapper defiwrapper collection different defi related polywrappers like defi sdk coingecko many added future since polywrappers written webassembly cross platform sandboxed composable yet light weight traditional j sdks 2 defi sdk defi sdk one polywrapper offered defiwrapper ' cross chain defi aggregator sdk 3 yet another defi sdk reason building yet another sdk problem current sdks 1 sdk us smart contract aggregating data various protocol isnt scalable efficient 2 sdk us centralised server gated oauth 3 evm compatible ' support popular l1 like solana cardano creating decentralized scalable trully cross chain sdk 4 ' advantage coingecko polywrapper normal calling coingecko api directly coingecko polywrapper ha concrete schema input output method make easy develop input validation parse output correct schema format client coingecko polywrapper ' need manually securely run wasm runtime ex run inside gelato resolver easily composable polywrappers 5 use case defiwrapper usecases defiwrapper 1 polifolio cross chain defi portfolio link polyfolio figma prototype 2 dao treasury dashboard supercharged version open orgs http openorgs info 3 defi bot apis using gelato ex link gelato simple oracle project update drafted new detailed defiwrapper spec onboarded 3 new contributor juan colin james enabled evm interoperability added support multiple evm compatible chain like polygon avax started polyfolio cross chain defi portfolio created poc simple oracle using gelato coingecko defiwrapper feedback contribution bug feature request made via github issue http github com niraj kamdar defiwrapper issue new aware issue private take care providing output make sure disclosing security issue product pull request also welcome via git ' know get started contribution visit contributing guide documentation doc contributing md add compatibility evm network chainid follow quick tutorial package defi sdk src query network readme md open pr defiwrapper us eslint prettier ensure code quality pr social medium discord http discord gg weacsjjq http discord gg weacsjjq github http github com defiwrapper defiwrapper http github com defiwrapper defiwrapper email defiwrapper gmail com mailto defiwrapper gmail com built polywrap http polywrap io polywrap development platform enables easy integration web3 protocol application coingecko api http www coingecko com en api documentation coingecko world ' largest independent cryptocurrency data aggregator donate find project helpful support u donating money gitcoin grant http gitcoin co grant 3510 defi sdk polywrapper made donation project please enter social medium soon possible especially discord post update social medium future thanks everyone ha donated defiwrapper
/izumiFinance/izumi-uniV3Mining,JavaScript,izumi contract uniswapv3mining div align center href http izumi finance img width 450px height auto src image logo png div contract liquidity mining uniswapv3 nfts design mining type model1 mining fixed price range liquidity fixed range e g 10 10 tick usdc usdt 0 01 ethereum pool share incentive model2 mining impermanent loss protection two type token unitoken added uniswapv3 pool locktoken locked contract model3 mining dynamic range liquidity added based instantaneous price boosting mechanism izi token veizi nft script script run specific task run script following command line find guide hardhat script http hardhat org guide script html ' shell hardhat network ' custom network ' node script script j argv 0 argv 1 argvs passed run follows alternatively shell npx hardhat run script script j network custom network testing shell npx hardhat test file test empty
/eoscostarica/evodex,JavaScript,p align center &#9; img src public evodex logo png width 600 p p align center &#9; img src http img shield io github license eoscostarica webapp boilerplate alt license &#9; href http standardjs com &#9; &#9; img src http img shield io badge code 20style standard brightgreen svg alt standardjs &#9; &#9; href http git io col &#9; &#9; img src http img shield io badge e2 9c 93 collaborative etiquette brightgreen svg alt collaborative etiquette &#9; &#9; href http twitter com intent follow screen name eoscostarica &#9; &#9; img src http img shield io twitter follow eoscostarica svg style social logo twitter alt follow twitter &#9; &#9; href &#9; &#9; img src http img shield io github fork eoscostarica webapp boilerplate style social alt mit &#9; p official web interface evolution dex evolution dex http github com eosargentina evolutiondex protocol created eos argentina allows anyone create launch trading pair decentralized exchange gain trading fee adding liquidity token pool eos costa rica working eos argentina creating web interface provide access liquidity amongst exchange connect evolution dex project opensource free developer integrate front end way different exchange share liquidity evodex unique main difference say uniswap ethereum liquidity provider vote fee want charge using smart contract calculates fee proportional stake every participant pool another difference evodex uniswap come different blockchains operate trader pay fee liquidity provider ' pay transfer fee like ethereum network telegram channel http evodex io http evodex io version evodex ready first group beta tester try next generation decentralized exchange eos currently evodex still beta pre release v0 1 0 beta xx release production software version using github tag following semver http semver org also use git commit message generate project change log http github com eoscostarica evodex release using yarn version command update version package via command line tech stack frontend feature latest tool practice industry react j react 16 react router 5 rematch core rematch redux framework material ui core react component faster easier web development universal authenticator library library allowing apps easily use different auth provider lint eslint style material ui theme customizable development environment evodex io http evodex io running eos mainnet built master branch production branch jungle evodex io http jungle evodex io running jungle 3 testnet built develop branch used development integration testing new feature installation start somethings need getting started git http git scm com node j http nodejs org e yarn http yarnpkg com first time setup copy env example update environment variable according need cp env example env order use ual login integration please make sure react app use ual env variable set true development quick start 1 clone repo using git clone depth 1 http github com eoscostarica evodex git project name 2 move appropriate directory cd project name 3 run yarn order install dependency point run yarn start see example app http localhost 3000 file structure within download ' find following directory file public index html manifest json src api component config container model route theme utils app j index j store j dockerignore gitignore env example eslintrc prettierrc dockerfile license readme md docker compose yml nginx conf package json license mit eos costa rica http eoscostarica io contributing please read eos costa rica ' open source contributing guideline http developer eoscostarica io doc open source guideline please report bug big small opening issue http github com eoscostarica evodex issue contributor thanks go wonderful people emoji key http github com kentcdodds contributor emoji key contributor badge start remove modify section contributor http img shield io badge contributor 6 orange svg style flat square contributor contributor badge end contributor list start remove modify section prettier ignore start markdownlint disable table tr td align center href http github com sergioyuhjtman img src http avatars2 githubusercontent com u 39177270 v 4 width 100px alt br sub b sergio yuhjtman b sub br href idea sergioyuhjtman title idea planning feedback href translation sergioyuhjtman title translation td td align center href http eoscostarica io img src http avatars1 githubusercontent com u 1179619 v 4 width 100px alt br sub b jorge murillo b sub br href design murillojorge title design td td align center href http github com adriexnet img src http avatars3 githubusercontent com u 5375168 v 4 width 100px alt br sub b adriel b sub br href http github com eoscostarica evodex commits author adriexnet title code href http github com eoscostarica evodex pull q 3apr reviewed 3aadriexnet title reviewed pull request td td align center href http eosio cr img src http avatars2 githubusercontent com u 10634375 v 4 width 100px alt br sub b teto gomez b sub br href http github com eoscostarica evodex commits author tetogomez title code href http github com eoscostarica evodex pull q 3apr reviewed 3atetogomez title reviewed pull request td td align center href http eoscostarica io img src http avatars0 githubusercontent com u 5632966 v 4 width 100px alt br sub b xavier fernandez b sub br href infra xavier506 title infrastructure hosting build tool etc href http github com eoscostarica evodex commits author xavier506 title documentation href projectmanagement xavier506 title project management td td align center href http esoargentina io img src http avatars3 githubusercontent com u 16233552 v 4 width 100px alt br sub b j chitty b sub br href idea pixelnoob title idea planning feedback href content pixelnoob title content td tr table markdownlint enable prettier ignore end contributor list end project follows contributor http github com kentcdodds contributor specification contribution kind welcome eos costa rica p align center &#9; href http eoscostarica io &#9; &#9; img src http github com eoscostarica eos rate raw master doc eoscostarica logo black png width 300 &#9; p br eos costa rica independently owned self funded bare metal genesis block producer provides stable secure infrastructure eosio blockchains support open source software community offering enterprise blockchain development custom smart contract development client eoscostarica io http eoscostarica io
/re-nft/legacy-front,TypeScript,rent nft legacy front end find new front http v2 renft io
/poocart/lend721,JavaScript,ethereum erc 721 token lending platform http github com poocart lend721 blob develop preview png description lend721 ethereum smart contract allows lending erc 721 smart contract nft gain interest hand allows borrow nft ' set lending paying collateral lend721 handle lend process current stage beta deployed client dapps netlify mainnet http lend721 app http lend721 app rinkeby http rinkeby lend721 app http rinkeby lend721 app smart contract address across ethereum network mainnet 0xa133541435caeb964f572132acd8feac3ed1d80b http etherscan io address 0xa133541435caeb964f572132acd8feac3ed1d80b rinkeby 0x1762fd547d6c286a174dd62b6a6facfac064a0a0 http rinkeby etherscan io address 0x1762fd547d6c286a174dd62b6a6facfac064a0a0 note smart contract call proxied main smart contract call destination proxy smart contract x client dapp show lent data x client dapp show borrowed data x client dapp borrower call dai approve method x client dapp borrower call borrow method x client dapp lender call erc 721 approve method x client dapp lender call erc 721 lend set method x set duration lending x deploy smart contract mainnet x verify smart contract mainnet etherscan x put lender address lent token somwehere outside smart contract ux improvement note solved thegraph com show message collateral wa already taken expired lend show success error message transaction email reminder borrower lender allow edit lend deploy graph run thegraph yarn subgraph prepare yarn subgraph codegen yarn subgraph deploy info thegraph com doc deploy subgraph http thegraph com doc deploy subgraph deploy dapp arweave setup arweave http github com arweaveteam arweave deploy npm g arweave deploy arweave key create arweave key json arweave key save arweave key json get ar token arweave team http www arweave org get involved community deploy client running yarn deploy
/0xDaksh/defi-playground,Solidity,p align center img src extra defi playground logo png p h1 align center defi playground h1 made repo teach x defi protocol requirement 1 node j v14 2 alchemy http alchemyapi io make alchemy account set alchemy api key environment variable env file 3 run yarn install dependency 4 run yarn test test implementation compound finance http compound finance helpful reading interface contract compound use interact compound ' contract address test compound utils consts l1 use connect mainnet deployed contract check fixture test compound utils fixture l25 use setup test compound doc ctokens http compound finance doc ctokens comptroller ie controller http compound finance doc comptroller tos 1 deposit token get back interest bearing ctokens test compound 01 deposit test l19 2 withdraw cash token returning ctokens test compound 01 deposit test l36 3 earn interest token deposit demonstration test compound 01 deposit test l65 4 take loan borrow token setting collateral test compound 02 borrow test l22 5 check balance borrowed test compound 02 borrow test l40 6 repay loan test compound 02 borrow test l45 7 calculate exchange rate ctokens test compound 03 price test l20 8 many underlying token doe compound contract hold test compound 03 price test l39 9 check total supply total borrows token test compound 03 price test l44 10 calculate supply apy borrow apr token test compound 03 price test l51 aave v2 http app aave com market helpful reading interface contract aave v2 use interact aave v2 contract address test aave v2 utils consts l1 use connect mainnet deployed contract check fixture test aave v2 utils fixture l25 use setup test aave v2 doc lending pool http doc aave com developer core protocol lendingpool price oracle http doc aave com developer core protocol price oracle atokens http doc aave com developer core protocol atokens faq http doc aave com developer glossary tos 1 deposit erc20 token get back interest bearing atokens test aave v2 01 deposit test l20 2 withdraw cashout erc20 token returning back atokens test aave v2 01 deposit test l45 3 earn interest erc20 token deposit test aave v2 01 deposit test l74 4 set particular erc20 token collateral loan borrows test aave v2 02 borrow test l26 5 take stable interest rate loan collateral test aave v2 02 borrow test l37 6 convert stable interest loan variable interest loan test aave v2 02 borrow test l63 7 repay loan test aave v2 02 borrow test l72 8 get user data ie total collateral debt amount borrowable test aave v2 03 stats test l28 9 get user data ie total collateral debt amount borrowable test aave v2 03 stats test l28 10 get supply apy borrow apr erc20 token test aave v2 03 stats test l38 11 get price erc20 token eth aave oracle test aave v2 03 stats test l51 12 tbd flashloans
/PunkFinance/punk.protocol,Solidity,punk protocol designing financial weapon blueprint punkers hang image nightcity http raw githubusercontent com punkfinance punk protocol master nightcity png live night city strong government megacorps finance institution manipulate whole society top skyscraper foot tireless machine printing ton money every second cumulative inflation multiple taxation engrossed technology dominate small citizen corruption consumerism pandering violent content pop culture extreme poverty fantasy wealth cannot realized cant dream stable retirement life happy future foot resist forging financial weapon first item saver saver world first decentralized annuity protocol creates periodic cash flow high yield strategy could lightsaber protect wealth let join punky movement website http punk finance http punk finance discord http discord com invite punk http discord com invite punk telegram http punkprotocol http punkprotocol twitter http twitter com punkprotocol http twitter com punkprotocol medium http medium com punkprotocol http medium com punkprotocol
/AUGMXNT/perfi,Python,perfi personal defi portfolio analytics open source agplv3 local private tool help track defi degen escapade current perfi functionality focused generating close enough estimate cost basis loss gain income calculation certain evm compatible chain transaction generating u irs 8949 http www irs gov form pub form 8949 style output used starting point tax estimation purpose built ' find tool could remotely understand defi protocol primitive would map disposal income calculation far know advanced defi accounting analysis tool existence ha tested real wallet ten thousand transaction interacting hundred contract alpha release software currently alpha release feature may missing broken confusing friendly ui yet outside cli generated spreadsheet output documentation sparse anyone using familiar python disclaimer software used lieu accounting tax review believe result generated software useful almost guaranteed incorrect without manual adjustment also convenience ' disclaimer warranty license warranty program extent permitted applicable law except otherwise stated writing copyright holder party provide program without warranty kind either expressed implied including limited implied warranty merchantability fitness particular purpose entire risk quality performance program program prove defective assume cost necessary servicing repair correction requirement familiar python 3 8 http www python org poetry http python poetry org installed ' providing support setting software environment future ' building accessible packaged installer release perfi currently depends several third party api provider configuration required default debank openapi http open debank com provides helpful list transaction history per chain coingecko api http www coingecko com en api provides day resolution coin price api key required request rate limited perfi cache retries initial fetch slow eventually work paid api plan http www coingecko com en api pricing supported entered initial setup ecb euro foreign exchange reference rate http www ecb europa eu stats policy exchange rate euro reference exchange rate html index en html daily conversion rate cached currencyconverter euro foreign exchange reference rate getting started ' install git clone http github com augmxnt perfi cd perfi poetry install run interactive initial perfi setup entity account api key poetry run python bin cli py setup note many command require entity name operate rest example assume entity named ' peepo ' optional also add entity address manually add entity ' peepo ' poetry run python bin cli py entity create peepo add ethereum style account named ' degen wallet ' poetry run bin cli py entity add address peepo ' degen wallet ' ' ethereum ' ' 0x0000000000000000000000000000000000000000 ' add many wallet want entity update coingecko price token list poetry run python bin update coingecko pricelist py optional import data exchange doc data coinbase coinbase pro kraken gemini bitcoin tax import perfi well poetry run python bin import exchange py entity name peepo file peepo coinbase 2021 rawtx csv exchange coinbase exchange account id peepo import chain transaction poetry run python bin import chain tx py peepo generate tx price asset mapping step key matching like kind asset making sensical output poetry run python bin map asset py turn raw exchange onchain tx grouped logical ledger tx poetry run python bin group transaction py peepo generally need run anything line optional set timezone used reporting default u pacific get list valid time zone name poetry run python bin cli py setting get timezone name set reporting timezone poetry run python bin cli py setting set reporting timezone ' europe lisbon ' calculate costbasis lot disposal income poetry run python bin calculate costbasis py peepo generate 8949 xlsx file poetry run python bin generate 8949 py peepo importing data exchange today perfi support importing trade data bitcoin tax coinbase coinbase pro gemini kraken import data exchange run command poetry run bin import exchange py entity name peepo file path export file exchange coinbase coinbasepro gemini kraken bitcointax exchange account id anything eg default use anything want exchange account id parameter ' used help potentially differentiate multiple account exchange supported exchange name exchange parameter coinbase coinbasepro gemini kraken bitcointax file parameter see file need provide given exchange export file supported exchange coinbase report section transaction history generate report time asset transaction format csv coinbase pro statement generate account statement select date range ' account ' format csv gemini account setting statement history transaction history exchange transaction history click download icon next label format xlsx kraken history export select ' ledger ' pick date range format csv bitcoin tax opening download format csv usage note bin cli py let need updating logical ledger transaction updating price transaction type try smart updating downstream result although thing look wonky may need run bin group transaction py ' included help option various cli apps ' functionality document yet disposal generated 8949 xlsx sheet internally link associated lot transaction id hash libreoffice google sheet tested play nice output file costbasis disposal income lot result may wrong incomplete ' included debug data link disposal drawdown well ledger chain hash ' included collated ledger tx sheet well includes usd price asset assignment helpful even ' putting together disposal manually using different tool accounting eg current tax treatment lot matching liking run weird problem could try nuking data perfi db clean run keeping cache cache db fine make run lot faster also take look log see ' useful info also recommend db browser sqlite http sqlitebrowser org spelunking around data perfi db perfi tax behavior currently hard coded ' summary specific id lot matching generally hifo although lowest cost basis loan repayment ' long term short term optimization hifo approach generally still give near optimal minimized tax exposure u tax rate transfer including cex transfer bridging assumed disposal income use bin cli py manually change tx type wrapping unwrapping also considered non disposal create zero cost basis lot flag necessary single staking single asset deposit withdrawal treated deposit disposal swap lp like trade treated disposal try good job accounting income yield interest see test however ' track currently protocol ' generate deposit receipt best effort pricing lp token try track receipt token properly detail atm take look perfi costbasis py process perfi model py txlogical refresh type current tx type borrow repay deposit withdraw disposal lp swap yield flag receipt ownership change disposal income may also want check bittytax http github com bittytax bittytax set tool help uk tax cointaxman http github com provinzio cointaxman german tax note perfi run much local system possible use third party apis make job easier goal minimize pii stored leaked remotely appreciate privacy think others software licensed agplv3 strong copyleft license meant make sure end user software always able control able modify software liking devs maintain optionality minimize free riding ' demand ' get bored may add privacy first freemium service higher resolution price metadata access archival node etc future meantime find useful want support development donation gratefully accepted see exchange import ' implemented hifo lot matching algorithm almost exactly match best class service ' tested bitcoin tax beat others like koinly cointracking fall bug aggressively zero cost basis transfer understanding foreign currency fiat transaction etc turn stuff sort complex though publishing architectural decision record due time discussing handle transaction cost basis think ' useful build ddl shared repository allow community member extend perfi ' ability understand arbitrary defi protocol strategy focus initial release tax actually interesting future plan perfi focus perf part tracking actual performance defi investment strategy performance v benchmark hodling accounting transaction cost tax efficiency farming claim calculation helper see preview sort thing http github com augmxnt frax analysis caveat somes type defi transaction still ' handled well balancer curve style multi asset lp entry maybe exotic hedging margin strategy ' accounted dsa eoa style operation like instadapp univ3 multicalls gmx glp ignored logged ' support nfts well atm sorry http twitter com danielitog25 status 1498358636648800257 tax treatment hard coded may match tax regime preference future version plan making easier personalize configure support evm chain atm ' account fee atm high priority list know definitely tax advice u file extension http www irs gov form pub extension time file tax return ' make adequate prepayment owe failure pay penalty http www irs gov payment failure pay penalty 0 5 mo 6 apr interesting right http coindix com kind stable sort apy tvl 1m note failure file penalty http www irs gov payment failure file penalty 5 mo ' get thing sorted time extension period end gui work app get packaged gui gui single page j app written typescript use vue j routing rendering component pinia state management record collection quasar ui component vite build system gui read writes data talking api server running host frontend frontend app built vue j vue similar react allows compose page comprised component selectively render update ui component backing data change frontend file live frontend information getting frontend backend running dev purpose found frontend readme md one common pattern data driven single page apps store responsible loading data api server keeping data date memory providing data component use rendered vue recommends pinia data store management use store straightforward follow similar pattern async method load initial collection data api server memory event update data memory response triggered event rendered component see frontend store entity example use quasar http quasar dev grid layout framework many pre built component help deliver ui consistent look feel quasar ha large collection vue component extensive documentation see http quasar dev vue component http quasar dev vue component info backend backend api server written python us fastapi api file life perfi api py know fastapi work youll understand file written notable thing might unusual cors need set proper cors header api response browser ok talk api since cors origin value require host port since api server port web asset server port may dynamic set via env var set hardcoded default origin extend value present env var look api port frontend port env var usage file info ensurerecord fastapi helper class many api endpoint require entity id example entity 1 entity 1 address address 1 etc fastapi ha dependency injection system provide value route leverage ensurerecord class give u easy way query particular data store e g entitiesstore addressesstore etc given entity example python app get entity id def list address entity entity entity depends ensurerecord entity return entity see define get entity id load entity via querying entity store record id via ensurerecord dependency running cli bin api endpoint delete work simply executing one existing cli bin command dont duplicate logic thats already defined command handler cli python bin cli import ledger update logical type ledger update ledger type ledger update price ledger flag logical ledger remove flag logical ledger move tx ledger packaging app electron use electron bootstrap app start api web asset server open chrome le browser window show single page app gui electron file live electron order start api web asset server need find free port host system start python process server passing port appropriately via env var happens inside electron apps entry point file electron src index j see createwindow detail packaging electron app accomplished using tool called electron builder simply look configuration data describing package format build build however since electron know run node j code open web view need way take api server package python dependency run target host use pyinstaller pyinstaller pyinstallers website pyinstaller bundle python application dependency single package user run packaged app without installing python interpreter module pyinstaller support python 3 7 newer correctly bundle many major python package numpy matplotlib pyqt wxpython others examining python file packaging pyinstaller produce spec file executable python code outlining exactly package entry point pyinstaller app main py corresponding spec file app main spec app main py ' job simply spin backend api server frontend j app use simple http static file server serve frontend j app take api port frontend port env var default 5000 50001 envs present sometimes useful know python code executing inside pyinstaller packaged python without snippet help pyinstaller getattr sys frozen false hasattr sys meipass use technique inside perfi constant path py order set parent dir data dir cache dir variable local development proceed simply looking git root dir pyinstaller version use specific sensible location see get user data dir info important detail pyinstaller cross compiler successfully package python run command inside use github action build final application since run build step window ubuntu mac host versioning packaged app ' version come electron package json best way update version new release trigger github action use npm version major minor patch electron folder bump package json version create commit version update create new git tag setup note order npm version work correctly need think ' git repo need create empty git folder inside electron local repo git ignore trigger build need push tag github git push tag github action inside github workflow build release yml youll find github action workflow file control app built workflow run whenever new tag matching pattern v pushed github e g v1 0 0 ' ' vfoo ' workflow build app put final product new github release named version value inside electron package json tag name use build fails publishing step could release already exists configured current version number also note release created draft form must manually changed public people view http github com augmxnt perfi release donation ' found software useful feel free zap u coin token promise farm shit 0x0bcee2cd8564b2c61caec20113f1f87a16e10cb0 see also debank http debank com far best defi portfolio viewer use api http open debank com extensively defi definitely using tool rotki http github com rotki rotki app share goal perfi would saved hundred hour counting dev time supported chain protocol needed ' small dedicated team working year http github com rotki rotki worth look ' need gui real documentation http rotki readthedocs io en latest index html like user stuff http github com rotki rotki issue bitcoin tax http bitcoin tax centralized exchange transaction crypto tax solved problem checked dozen service bitcoin tax best job probably good enough staketaxcsv http github com hodgerpodger staketaxcsv mit licensed python code exporting csvs multiple blockchains including algorand solana various cosmos ibc chain published used http stake tax
/NotANameServer/challenges,C++,defis de programmation le ambassadeurs vous presentent un nouveau concept pour venir egailler la vie du serveur de defis de programmation generalement sur une duree dun weekend ou de 10 jours nous vous proposons un sujet ou une question resoudre avec un programme ou une fonction ecrit dans le langage de votre choix vous pouvez discuter avec le autres participant dans vos salon de developpement partager vos idees et demander de laide comme dhabitude tout ce que nous vous demandons est de ne pa gacher le defi en envoyant une solution avant la fin du sujet lorsque vous avez une solution nous vous invitons lenvoyer aux ambassadeurs de votre salon par message prive cest eux qui soccupent de vous donner un retour preliminaire sur votre travail et de compiler le solution de leur communaute au terme du defi tout le monde se reuni en vocal et nous invitons lun ou lautre participant prendre la parole pour expliquer sa solution vous laurez compris ce defis de programmation sont essentiellement un moment dentre aide et de partage nous esperons que tout le monde pourra sy retrouver aussi bien le tenor que le membres plus discrets aussi bien le gourous que le debutants en ce sen ce defis ne sont pa une competition ni entre membres ni entre langages modulo troll smile le seul prix gagner est de passer du bon temp et dapprendre de nouvelles choses soumettre sa participation pour soumettre votre participation nous vous invitons faire une pr avec votre projet soumission dans defixx langage pseudo pseudo peut etre un dossier ou un fichier si vous le souhaitez vous pouvez utiliser un sou module git http git scm com doc git submodule pointant vers votre repo au lieu de directement inclure votre soumission dans ce ca vous devez l ' ajouter de cette facon sh clonez votre fork si ce n ' est pa deja fait git clone http github com pseudo challenge cd challenge creez une branche partir de master git checkout b nom de la branche master ajoutez votre sou module repo git submodule add lien du repo git defixx langage pseudo commitez et poussez le changements git commit git push origin nom de la branche toutefois pour faciliter la tache de correcteurs nous vous recommandons de ne pa utiliser de sou module le ambassadeurs et assistant tous le langages ne sont pa encore representes n ' hesitez pa soumettre votre candidature pour devenir ambassadeur et rejoindre l ' aventure langages correcteurs asm personne c personne cpp personne csharp kaktus 0006 html cs mishaa 3333 java florent 8092 et il totore 9133 javascript typescript romain lanz 0042 et mestery 3859 lua personne php mjollnir 3515 et cara 0385 python dr lazor 6737 rust wafelack 6513 la liste de defis 1 algorithme de tri defi01 2 generation de labyrinthe defi02 3 resolution de labyrinthe defi03 4 implementation ' un serveur http defi04 5 automates cellulaires defi05 6 client irc defi06 7 calculatrice defi07 8 puissance 4 defi08 9 puissance 4 protocole defi09 10 jeu de boule defi10 11 le juste prix defi11
/jontstaz/Automated-BSC-Buy-Sell-Token-Sniper,Python,automated bsc token sniper buy sell advanced python bot automatically buy token binance smart chain soon detects liquidity pair ha created sell token desired profit threshold met prerequisite python 3 greater bscscan api key free charge simply create account bscscan http www bscscan com register generate free api key bsc wallet address private key easily create one binance wallet browser extension chrome chromium based browser http chrome google com webstore detail binance wallet fhbohimaelbohpjbbldcngcnapndodjp firefox http addons mozilla org en u firefox addon binance chain large enough bnb balance wallet successfully snipe token setup 1 &#9; install dependency pip install r requirement txt 2 &#9; edit config json file node url leave default wallet address private key sellprofit amount spend per snipe bscscan api key 3 &#9; run python tokensniper py start program start sniping configuration file config json download bot find config json file need add following data bscnode bsc node use default ' set public binance node highly recommend using private node quicknode http www quicknode com tap 67226 09396e tap 2709976 ea3298 utm source affiliate utm campaign generic utm content affiliate landing page utm medium generic order make much faster snipe get edge competition walletaddress public bsc wallet address walletprivatekey private key wallet address note private key stored securely locally amounttospendpersnipe amount bnb want use token buy e g 0 01 mean successful snipe buy 0 01 bnb worth token transactionreverttimeseconds time spend transaction reverts recommended leave default gasamount amount max gas use per transaction recommended leave default gasprice max price gas use per transaction recommended leave default bscscanapikey api key bscscan sellonlymode enabling disable buying coin still monitor currently held coin sell desired profit reached also still allows see bot snipe new token ' buy recommended set ' true ' start make sure configured everything correctly bot successfully scan new token sellprofit target profit multiplier token reach sell function called eg 3 would mean token need 3x initial buy price ' sold bot buy token 0 01 bnb bot wait worth 0 03 bnb sell description aim automated buy sell bsc token sniper buy new token specified amount bnb aim price rising price ha risen desired profit amount program attempt sell coin back bnb secure profit check &#9; source code verified &#9; valid pancakeswap v2 router used &#9; mint function exists &#9; potential honeypot &#9; pancakeswap v1 router address used user decide whether enable mini audit turn keep mind likely investing lot scam coin dont enable setting token ha ' mini audit bot attempt buy x amount token specified amount bnb bot buy token directly binance smart chain using pancakeswap v2 router factory address much quicker pancakeswap web interface program continuously scan currently held token monitor current price price reach sellprofit defined config json file attempt sell token back bnb avoiding web interface metamask interacting directly bsc node snipe token faster web based platform allows token sniped almost instantly especially true using private node quicknode http www quicknode com tap 67226 09396e tap 2709976 ea3298 utm source affiliate utm campaign generic utm content affiliate landing page utm medium generic testing using bot quicknode http www quicknode com tap 67226 09396e tap 2709976 ea3298 utm source affiliate utm campaign generic utm content affiliate landing page utm medium generic found bot would typically buy within first 1 3 buy transaction token found keep mind bot doe incur small fee successful snipe token check audit bot ha optional mini audit feature aim filter scam coin eg wrongly configured honeypot attempt ensure coin bot buy higher quality enable audit option automated sell functionality allow secure healthy profit successful token provided token ' rug pulled following json entry mini audit setting set false disable mini audit although beware probably buying lot scam coin checksourcecode check source code verified function needed function disable sure disable audit option highly recommended checkvalidpancakev2 check correct pancakeswap v2 router address used code aware contract may externally set router address function may reject potentially good token recommended checkmintfunction check mint function present code recommended checkhoneypot check code see might honeypot buy token cannot sell recommended checkpancakev1router check see pancakeswap v1 router address used code able sell token later pc v1 router address used highly recommended note careful editing config json make sure alter syntax mini audit option either use true false making sure capitalise 1st letter ' work spelling capitalisation thing note &#9; worry seeing new token detected often around 10 20 new token created per minute vary quite lot sometimes new token may detected minute &#9; bot buy token whose liquidity paired wrapped bnb wbnb could alter code buy token paired another currency wanted &#9; please check enough bnb wallet afford sniping new token dont bot work &#9; please careful editing config json file delete comma quotation mark etc bot work throw error use powershell wsl2 ensure python3 installed ' window user ' mac linux user simply use terminal faq keep getting transaction failed whats going either &#9; gas amount price low &#9; wallet address private key incorrect &#9; enough bnb pay token tx fee bot isnt sniping fast eg couple second detection buying mainly due node ' using highly recommend using private node eg quicknode http www quicknode com tap 67226 09396e tap 2709976 ea3298 utm source affiliate utm campaign generic utm content affiliate landing page utm medium generic lesser extent internet speed computer ' processing power also factor consider bot ' successfully selling token hit desired profit often due enough liquidity pool token bot continue retry selling coin regular interval ' successful screenshots successful snipe doc asset successful snipe png successful sell sell mode doc asset successful sell sell mode png risk investing bsc token shitcoins risky aware could lose money reason invest money prepared lose pretty much impossible snipe bot early sure isnt rug pull people create token situation manually create liquidity pancakeswap bot detect token burn lock liquidity usually send lp token manually deadcoin address put liquidity locker therefore cant immediately snipe token 100 certainty arent rugpulls mini audit feature cant 100 accurate aim filter majority scam hack reduce chance losing money programmer creates token code unique way may able bypass detection although generally quite rare majority token fork big project little code changed e g safemoon greets eddiemuro123 original codebase built upon foundation integrate pricing auto sell functionality
/Polkamarkets/polkamarkets-web,TypeScript,polkamarkets polkamarkets autonomous prediction market protocol built multi chain information exchange trading based polkadot project overview web interface built react backend ethereum integration developed polkamarkets j http github com polkamarkets polkamarkets j package look smart contract http github com polkamarkets polkamarkets j blob main contract predictionmarket sol ' currently running moonbeam http moonbeam network moonriver http moonbeam network network moonriver access http app polkamarkets com http app polkamarkets com project setup 1 required software yarn http yarnpkg com node v14 15 0 later metamask chrome http chrome google com webstore detail metamask nkbihfbeogaeaoehlefnkodbefgpgknn hl en firefox http addons mozilla org en u firefox addon ether metamask 2 installing app git clone http github com polkamarkets polkamarkets web git cd polkamarkets web yarn install 3 required environment variable project root create env file copy content env example ha required env variable needed project 4 running app type yarn start start local server open http localhost 3000 browser
/Jonah246/tfusd-flashloan-attack-write-up,Solidity,tfusd flashloan attack write vulnerable contract tfusd http etherscan io address 0xa1e72267084192db7387c8cc1328fade470e4149 owned 50m tusd time issue wa reported exploit contract could get 15m profit one transaction similar attack pattern could applied several tx help flashbot attacker could drained 50m tsud pool detail bug located old implementation tfusd http etherscan io address 0x27f461c698844ff51b33ecffa5dc2bd9721060b1 code old implementation flush function every trigger solidity function flush uint256 currencyamount uint256 minmintamount external flush function call curvepool add liquidity amount minmintamount contract provides liquidity add liquidity curve pool mint 3crv based market price 3crv pool imbalanced contract suffers huge slippage exploit step follow 1 borrow tusd dai aave 2 deposit dai compound borrow tusd 3 mutate tusd price 3crv prool 0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51 4 trigger flush force pool add liquidity 3crv bad price 5 buy back tusd 3crv pool gain profit step 6 repay tusd compound 7 repay dai tusd aave 8 get 15m tusd profit need flash bot drain token attack pattern simliar ydai incident http peckshield medium com ydai incident analysis forced investment 2b8ac6058eb5 attack following step 1 supply token pool 2 exploit see step 3 withdraw token 4 repeat 1 3 reproduce 1 npm 2 npx hardhat test ' setting hardhat j solidity 0 6 12 network hardhat forking url http eth mainnet alchemyapi io v2 blocknumber 12517300 mocha timeout 1200000 reference 1 aave code example protocol http github com aave code example protocol 2 ydai incident analysis forced investment http peckshield medium com ydai incident analysis forced investment 2b8ac6058eb5
/RubiconDeFi/rubicon_protocol,Solidity,github workflow status http img shield io github workflow status rubicondefi rubicon protocol truffle 20tests discord http img shield io discord 752590582274326680 link http discord com invite e7ps24j link http discord com invite e7ps24j doc detailed documentation rubicon protocol please visit doc http doc rubicon finance rubicon protocol rubicon open order book protocol ethereum protocol layer 2 native launch across multiple l2 network optimism http optimism io arbitrum http arbitrum io zksync http zksync io starknet http starkware co starknet rubicon protocol currently live optimistic ethereum network use today rubicon app http app rubicon finance protocol overview number key smart contract house primary operation rubicon protocol please see overview current smart contract infrastructure high level rubicon revolves around core smart contract rubiconmarket sol http github com rubicondefi rubicon protocol blob master contract rubiconmarket sol facilitates peer peer trade erc 20 token using open order book rubicon pool http doc rubicon finance contract rubicon pool separate system smart contract enables passive liquidity providing rubicon order book image http user image githubusercontent com 60487118 142698674 4b21a487 72b8 4c1b 9d7c f340d00352fc png start rubicon protocol locally bash git clone http www github com rubicondefi rubicon protocol git cd rubicon protocol npm separate instance npm run ganache npm run test
/bt3gl-labs/bdex-AMM-Arbitrage,Python,bdex br package cli tool get data arbitrage specified token exchange pool creative common attribution noncommercial sharealike 3 0 unported license br token pair weth dai exchange uniswap 0xa478c2975ab1ea89e8196811f51a7b7ade33eb11 http etherscan io address 0xa478c2975ab1ea89e8196811f51a7b7ade33eb11 sushiswap 0xc3d03e4f041fd4cd388c549ee2a29a9e5075882f http etherscan io address 0xc3d03e4f041fd4cd388c549ee2a29a9e5075882f shebaswap 0x8faf958e36c6970497386118030e6297fff8d275 http etherscan io address 0x8faf958e36c6970497386118030e6297fff8d275 sakeswap 0x2ad95483ac838e2884563ad278e933fba96bc242 http etherscan io address 0x2ad95483ac838e2884563ad278e933fba96bc242 croswap 0x60a26d69263ef43e9a68964ba141263f19d71d51 http etherscan io address 0x60a26d69263ef43e9a68964ba141263f19d71d51 br br setting environment add alchemy api key endpoint http dashboard alchemyapi io apps file named env bash cp env example env vim env create virtual environment bash virtualenv venv source venv bin activate install dependency bash make install deps install cli bash make install br br running cli run cli bdex br img width 807 alt screen shot 2022 04 04 1 35 46 src http user image githubusercontent com 1130416 161449784 3342293b e75f 4788 aecb 9a653e363917 png br checking latest block leverage alchemy api endpoint eth blocknumber hex http doc alchemy com alchemy apis ethereum eth blocknumber hex get latest block bash bdex c br img width 406 alt screen shot 2022 03 31 1 15 25 pm src http user image githubusercontent com 1130416 161032451 685dee8b 8ed3 40c2 9391 191fa2abce35 png br br block number checked ethstat http ethstats net br img width 293 alt screen shot 2022 03 31 1 15 19 pm src http user image githubusercontent com 1130416 161032358 86969275 7a72 406d 93bc 73906303a0cb png br crafting checksum address string hand without directly keccak 256 hashing method parameter http doc soliditylang org en develop abi spec html br getting token balance exchange leverage alchemy api endpoint eth call http doc alchemy com alchemy apis ethereum eth call retrieve current token balance specific exchange bash bdex b token exchange br img width 481 alt screen shot 2022 03 31 10 26 21 pm src http user image githubusercontent com 1130416 161125262 4a623e23 adc9 4928 98c5 16dd67d3302b png br getting token balance exchange loop previous method list token exchange bash bdex br img width 407 alt screen shot 2022 03 31 10 26 51 pm src http user image githubusercontent com 1130416 161125283 9a320c9b a89b 4efa 832e e0c315e2adf6 png br extra getting token balance exchange python ' web3 library able compare result previous step implemented alternative way fetch pair balance utilizing python web3 library http web3py readthedocs io en stable bash bdex w br img width 401 alt screen shot 2022 03 31 10 27 25 pm src http user image githubusercontent com 1130416 161125363 ced644b9 8011 4f9f b470 324e5f7e4079 png br br library ' necessary supply contract ' abi case dai http api etherscan io api module contract action getabi address 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 weth http api etherscan io api module contract action getabi address 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 located doc third option verify token balance etherscan tokenholdings dashboard http etherscan io tokenholdings 0xa478c2975ab1ea89e8196811f51a7b7ade33eb11 br getting trading price exchange get current price weth dai exchange e g shown project ' dashboard http v2 info uniswap org pair 0xa478c2975ab1ea89e8196811f51a7b7ade33eb11 run bash bdex p quantity token1 token2 br quote trading 1 weth br img width 533 alt screen shot 2022 04 03 8 27 55 pm src http user image githubusercontent com 1130416 161438209 6386b71d 94c8 45aa a60a ac7a13b2de26 png br quote trading 10 weth br img width 544 alt screen shot 2022 04 03 8 28 20 pm src http user image githubusercontent com 1130416 161438257 5397cd0d 535c 49b8 8db2 3499e04b22bb png br quote trading 100 weth br img width 542 alt screen shot 2022 04 03 8 28 46 pm src http user image githubusercontent com 1130416 161438283 4e65810f d297 4331 9ce2 aa9ef23b3c87 png br price calculated amm replaces buy sell order order book market liquidity pool two asset valued relative one asset traded relative price two asset shift new market rate determined constant product token pool size token b pool size constant product exchange fork uniswapv2 http uniswap org blog uniswap v2 use price formula trading market price token1 token2 balance token1 balance example pool 2 000 000 dai 1 000 weth constant product 2 000 000 000 market price weth 2 000 br buy price e g buying weth weth dai pool find buy price certain quantity first calculate much weth need remain balance keep constant product unchanged token1 balance buy constant product token2 balance quantity calculate much weth go keep constant t1 amount buy token1 balance token1 balance buy buy price reflect ratio buy price quantity t1 amount buy br sell price e g selling weth weth dai pool find much sell certain quantity weth dai first calculate ratio dai new pool add weth token2 balance buy constant product token1 balance quantity calculate much dai go t2 amount buy token2 balance token2 balance buy calculate dai balance reflected income weth token1 balance sell constant product token2 balance quantity ' proportion weth new balance t1 amount sell token1 balance token1 balance sell calculate sell price reflect balance change keeping constant sell price t2 amount buy t1 amount sell br getting arbitrage run algorithm search arbitrage supported exchange certain buy quantity bash bdex x quantity br arbitrage opportunity 10 weth br img width 495 alt screen shot 2022 04 04 6 02 09 pm src http user image githubusercontent com 1130416 161561281 c49beaec c0fe 4022 b323 a795b0ebb92a png br arbitrage opportunity 1 weth br img width 464 alt screen shot 2022 04 04 6 02 31 pm src http user image githubusercontent com 1130416 161561271 94c2c75f fc27 48bc a29f a8b60a692585 png br arbitrage opportunity 0 01 weth br img width 507 alt screen shot 2022 04 04 6 03 20 pm src http user image githubusercontent com 1130416 161561257 aab365b9 d04b 4754 948b 4f2894aeb03e png br br br running arbitrage algorithm loop run arbitrage algorithm certain amount minute bash bdex r min br img width 499 alt screen shot 2022 04 04 1 05 07 pm src http user image githubusercontent com 1130416 161511273 cebe71dd 863a 4a5d a13b 5e85f9b99bef png br br result saved result arbitrage timestamp txt br sample result running algorithm 100 minute trading 1 weth ' buy exchange ' ' sushiswap ' ' sell exchange ' ' uniswap ' ' arbitrage ' ' 7 01 ' ' buy price ' 3475 14 ' sell price ' 3482 15 ' buy exchange ' ' sushiswap ' ' sell exchange ' ' shebaswap ' ' arbitrage ' ' 4 27 ' ' buy price ' 3475 14 ' sell price ' 3479 41 ' buy exchange ' ' shebaswap ' ' sell exchange ' ' uniswap ' ' arbitrage ' ' 2 06 ' ' buy price ' 3480 09 ' sell price ' 3482 15 ' buy exchange ' ' croswap ' ' sell exchange ' ' uniswap ' ' arbitrage ' ' 13 06 ' ' buy price ' 3469 09 ' sell price ' 3482 15 ' buy exchange ' ' croswap ' ' sell exchange ' ' sushiswap ' ' arbitrage ' ' 5 79 ' ' buy price ' 3469 09 ' sell price ' 3474 88 ' buy exchange ' ' croswap ' ' sell exchange ' ' shebaswap ' ' arbitrage ' ' 10 32 ' ' buy price ' 3469 09 ' sell price ' 3479 41 br running arbitrage algorithm loop docker container run algorithm separated container first install docker http doc docker com get docker build docker image bash docker build bdex finally run container separate terminal tab docker run v pwd result bdex sleep infinity result available result arbitrage timestamp txt inspect container time command docker p docker exec container id bin bash docker inspect bdex cleaning docker volume prune br br development install dependency pip3 r requirement dev txt linting make lint running test make test
/laminar-protocol/flow-protocol-ethereum,TypeScript,table content toc 1 introduction 1 introduction 2 implementation 2 implementation 2 1 flow protocol smart contract ethereum 21 flow protocol smart contract ethereum 2 2 substrate implementation laminarchain parachain polkadot 22 substrate implementation laminarchain parachain polkadot toc 1 introduction laminar aim create open finance platform along financial asset serve trader crypto mainstream finance world please find detail laminar flow protocol synthetic asset margin trading http github com laminar protocol laminar chain 2 implementation r protocol ethereum network highly secure valuable asset basis trading also existing defi community defi building block stablecoin ethereum implementation value gateway substrate implementation laminarchain later connect polkadot specialized high performance financial service chain best serve mainstream finance crypto trader service provider leveraging best world 2 1 flow protocol smart contract ethereum reference implementation flow margin trading protocol synthetic asset protocol money market protocol smart contract deployed ethereum kovan test net flow exchange web app http flow laminar one give people friendly easy way test functionality protocol still work progress please kindly excuse bug provide feedback help u improve laminar flow protocol subgraph http thegraph com explorer subgraph laminar protocol flow protocol subgraph provides easy way query synthetic asset margin position liquidity pool useful information blockchain continue develop improve protocol new contract would deployed progress find latest deployed contract http github com laminar protocol flow protocol ethereum blob master artifact deployment json please refer wiki guide http github com laminar protocol flow protocol ethereum wiki using developing top contract please refer testing laminar flow synthetic asset margin trading protocol http medium com laminar testing laminar flow synthetic asset margin trading protocol 130c5826cf4d source collection home 6 1 exploring contract dapp 2 2 substrate implementation laminarchain parachain polkadot see detail http github com laminar protocol laminar chain
/haiphenAI/digital-copyright,JavaScript,haiphen please contact pi haiphenai com help installation br http haiphenai com br cii best practice http bestpractices coreinfrastructure org project 569 badge http bestpractices coreinfrastructure org project 569 br img src http github com judesafo digital copyright blob master logo snip20210901 8 png width 400 create traceable digital copyright br coming soon simplified installation execution leveraging dockerhub http hub docker com r jks142857 digital copyright br br haiphen low level binary file ' stamp ' docker image encrypted digital copyright patent pending community developer leveraging tool able selectively securely share pertinent api data eachother end user using tool single entry point access point 3rd party software easier manage make payment audit etc copy right secured immutable decentralized blockhain filecoin http filecoin io install name install requirement following installed machine homebrew http brew sh docker http www docker com get started reactjs boilerplate http www npmjs com package reactjs boilerplate macosx terminal http github com sickcodes docker osx br navigate command line http support apple com guide terminal open quit terminal apd5265185d f365 44cb 8b09 71a064a42125 mac machine enter following command br brew tap judesafo homebrew testtap brew install digital copyright alternatively clone repot git clone http github com haiphenai digital copyright run cd digital copyright mv haiphen usr local bin haiphen succesfull test installation typing haiphen confirming return example create test file test txt echo test test txt generate key save file encryption key create test docker image name create docker image reactjs boilerplate test docker image docker compose docker build test docker image run haiphen stamp license name stamp haiphen license navigate path current license saved enter following haiphen e license license sha256hash enc confirm chrome browser open transaction ha written ethereum node hash address http ipfs infura io ipfs deploy docker image monitor name deploy docker 1 deploy image docker run test docker image 3 4 progress open chrome extension http chrome google com webstore detail haiphen api marketplac klolgapgdelcegmhiklbpacjdaiknimb track api activity br br contributing please read contributing guideline contributing md br br help community slack http www google com url q http 3a 2f 2fjoin slack com 2ft 2fhaiphenworkspace 2fshared invite 2fzt 108madwc5 b5ijsd5qiscdrifdfnzllw sa sntz 1 usg afqjcngjppjgc3ercxjt8s5o13nzqaq4 http guild dev discord join slack channel mesage u discord jks142857 2350 slack chat http www google com url q http 3a 2f 2fjoin slack com 2ft 2fhaiphenworkspace 2fshared invite 2fzt 108madwc5 b5ijsd5qiscdrifdfnzllw sa sntz 1 usg afqjcngjppjgc3ercxjt8s5o13nzqaq4 run issue question ' excited welcome community br br demo placeholder demo logo main gif
/sskender/stable-farm,Solidity,stable farm automatically moving stable coin decentralized finance platform seeking maximum yield getting started install dependency npm install run ganache export infura ' api key export infuraapikey xxxxxxxxxxxx run ganache forked mainnet unlocked account npm run ganache running compile contract npm run compile migrate contract npm run migrate run test npm run test run ui npm run serve
/YosephKS/solana-defi-dashboard,JavaScript,div align center solana defi dashboard tutorial project utilize moralis http github com moralisweb3 moralis j sdk web3uikit http github com web3ui web3uikit demostrates build simple solana defi dashboard app project work solana mainnet beta devnet dapp3 http github com yosephks solana defi dashboard blob main solana defi dashboard gif div star u tutorial help build solana dapps please star project every star make u happy get help question need help running project please ' hesitate ask forum http forum moralis io solana spl token introduction tutorial 9568 monitoring 24 7 help get speed quick start clone fork solana defi dashboard sh git clone http github com yosephks solana defi dashboard git install dependency sh cd moralis upgradeable smart contract yarn install rename env example env main folder provide appid serverurl moralis start moralis server http doc moralis io moralis server getting started create moralis server plus biconomy api key jsx react app moralis application id xxx react app moralis server url xxx run app sh yarn start
/opynfinance/perp-vault-templates,TypeScript,opynperpvault template contract circleci http circleci com gh opynfinance perp vault template svg style svg http circleci com gh opynfinance perp vault template tree master coverage status http coverall io repos github opynfinance perp vault template badge svg branch master http coverall io github opynfinance perp vault template branch master repo containing opyn ' perpetual vault template smart contract set template designed make easier developer build option powered perpetual product top opyn v2 template anyone create custom vault different strategy open user invest starter code reccomend modyfying code making necessary change befre launching strategy documentation reccomend starting reading documentation http opyn gitbook io perp vault setup installing package run following install required package npm install setting mnemonic add secret file containing testing mnemonic current folder need set mnemonic deploy contract mainnet setting infura etherscan key run following set infura key need set infura key run mainnet fork test export infura key key run following set etherscan key need set etherscan key verify contract etherscan export etherscan key key testing unit test npm run test mainnet fork test npm run test fork coverage generate test coverage report npx hardhat coverage
/hegic/contracts,TypeScript,hegic v888 0 1 build status http github com hegic contract action workflow ci yaml badge svg http github com hegic contract action workflow ci yaml codecov http codecov io gh hegic contract branch development graph badge svg token tpk7iujp2n http codecov io gh hegic contract gplv3 license http img shield io badge license gpl 20v3 blue svg http opensource org license twitter follow http img shield io twitter follow hegicoptions svg label hegicoptions style social http twitter com hegicoptions discord http img shield io discord 679629806043660298 svg label logo discord logocolor ffffff color 7389d8 labelcolor 6a7ec2 http discordapp com invite znjdj8q chat telegram http img shield io badge chat 20on telegram blue svg http hegicoptions hegic v888 0 1 currently active development ha yet officially deployed ethereum mainnet deploy use risk development install dependency bash yarn install compile code bash yarn compile run test bash yarn test
/govi-dao/cvi-contracts,JavaScript,crypto volatility index cvi cvi http cvi finance crypto volatility index decentralized version vix known market fear index crypto market predicting volatility btc eth upcoming 30 day cvi index trading platform allowing user hedge market volatility lack thereof since release cvi index shared several update real world market force demonstrate effectiveness index trading tool crypto trader market analysis covered recent btc movement http medium com cvix latest btc trend reflected cvx index 643ef57940c4 including highest ever btc price level http cvxofficial medium com record btc price level reflected cvx index 7e65e9fa0298 okex scandal http medium com cvix okex scandal reflected cvix index cdcd405e0ad4 u election http cvxofficial medium com u election fear uncertainty reflected cvx index d6738fa3386e several market factor http cvxofficial medium com cvx ha reach time high market see high volatility btc price level dedba06279b2 cvi platform governed govi token cvi includes decentralized governance component holder govi token vote matter tradable asset leverage used deposit amount platform fee participating platform either trading platform taking part governance platform govi holder able share platform fee vote change leverage vote change fee vote change d0 opening position deposit size vote change dmin liquidation position deposit minimum level vote change data source aggregation protocol vote trading platform change enhancement information cvi found http cviofficial medium com cvix market fear index crypto space 74be7634dd5e website http cvi finance whitepaper http cvi finance file cvi white paper pdf twitter http twitter com official cvi telegram group http cviofficial telegram channel http cvichannel contract address cvi platform usdc collateral ethereum network platform 0x2167eefb9ecb52fb6fcf1ff8f7dae6f0121f4fbc http etherscan io address 0x2167eefb9ecb52fb6fcf1ff8f7dae6f0121f4fbc lp staking 0x717508a974cca423343d8c2a71d257f799ac4dbd http etherscan io address 0x717508a974cca423343d8c2a71d257f799ac4dbd position reward 0x337f91f5a3f688445d2f29496f33f75ec1b93728 http etherscan io address 0x337f91f5a3f688445d2f29496f33f75ec1b93728 feescalculator 0xc19cdd1b4e7c12edfbfbd12c9cf4cd1cde29e70d http etherscan io address 0xc19cdd1b4e7c12edfbfbd12c9cf4cd1cde29e70d liquidation 0xf359e1bd63c3308b77d6424a6dc9bfc78bb64922 http etherscan io address 0xf359e1bd63c3308b77d6424a6dc9bfc78bb64922 ethvi platform usdc collateral ethereum network platform 0x0e0da40101d8f6eb1b1d6b0215327e8452e0bc60 http etherscan io address 0x0e0da40101d8f6eb1b1d6b0215327e8452e0bc60 lp staking 0x55ab074cfb5d07bbb5d1561969a079914df5053a http etherscan io address 0x55ab074cfb5d07bbb5d1561969a079914df5053a position reward 0x9ad0e2cae661eab5cb42f23d7be66352fcb0219d http etherscan io address 0x9ad0e2cae661eab5cb42f23d7be66352fcb0219d feescalculator 0x78852f82632da2f00d931f9465d7162d1ed8b93c http etherscan io address 0x78852f82632da2f00d931f9465d7162d1ed8b93c liquidation 0xf9057e3189a357422933535d8022a25412b31f8c http etherscan io address 0xf9057e3189a357422933535d8022a25412b31f8c cvi platform usdc collateral polygon network platform 0x3863d0c9b7552cd0d0de99fe9f08a32fed6ab72f http polygonscan com address 0x3863d0c9b7552cd0d0de99fe9f08a32fed6ab72f lp staking 0xd53f9d95a87896e3543251acb3fb13d3d4d7d09e http polygonscan com address 0xd53f9d95a87896e3543251acb3fb13d3d4d7d09e reward 0xf293873ca668ef7f1412c46c2c2c682fd3441c02 http polygonscan com address 0xf293873ca668ef7f1412c46c2c2c682fd3441c02 feescalculator 0x68e8be77f3eb29074a83ae01007fa71cb5cc5926 http polygonscan com address 0x68e8be77f3eb29074a83ae01007fa71cb5cc5926 liquidation 0x02deb6e484c12916abf245d5518f5315e1291555 http polygonscan com address 0x02deb6e484c12916abf245d5518f5315e1291555 cvi eth denominated platform eth collateral ethereum network eth platform 0x5005e8dc0033e78af80cfc8d10f5163f2fcf0e79 http etherscan io address 0x5005e8dc0033e78af80cfc8d10f5163f2fcf0e79 eth lp staking 0x40d203332b0a262f1a371ae9da1788fe6825a6f6 http etherscan io address 0x40d203332b0a262f1a371ae9da1788fe6825a6f6 feescalculator 0x05ba528f40feb3347f14af3bb6d97bf4826cd94f http etherscan io address 0x05ba528f40feb3347f14af3bb6d97bf4826cd94f position reward 0xd5c0a6094f005d75b6e99a3da8d0b80127027c99 http etherscan io address 0xd5c0a6094f005d75b6e99a3da8d0b80127027c99 liquidation 0x8d55c22ea6610e3fa4659d3d5f4d751ca1e62573 http etherscan io address 0x8d55c22ea6610e3fa4659d3d5f4d751ca1e62573 staking proxy 0x287839632973f7754c04a9e23d393aa09fa5b6de http etherscan io address 0x287839632973f7754c04a9e23d393aa09fa5b6de staking reward govi eth staking reward 0x936dd3112a9d39af39adda798503d9e7e7975fb7 http etherscan io address 0x936dd3112a9d39af39adda798503d9e7e7975fb7 coti eth staking reward 0xe6e5220291cf78b6d93bd1d08d746abbc115c64b http etherscan io address 0xe6e5220291cf78b6d93bd1d08d746abbc115c64b v0 1 usdt platform deprecated liquidity wa migrated new usdc backed platform usdt platform 0xe0437beb5bb7cf980e90983f6029033d710bd1da http etherscan io address 0xe0437beb5bb7cf980e90983f6029033d710bd1da usdt lp staking 0xdb14a3b5bdfd0cd7b2ef5075b2689290d9edc915 http etherscan io address 0xdb14a3b5bdfd0cd7b2ef5075b2689290d9edc915 usdt reward 0x6c5f18b0f37cd18871c67378c2478565779131d0 http etherscan io address 0x6c5f18b0f37cd18871c67378c2478565779131d0 feesmodel 0xf5ebf50661ee5b128dad3d71050520ccccc10601 http etherscan io address 0xf5ebf50661ee5b128dad3d71050520ccccc10601 feescalculator 0x1ff4434e0a41dbf903aa68923d6da76904546f23 http etherscan io address 0x1ff4434e0a41dbf903aa68923d6da76904546f23 volatility token ethereum network ethvol token 0x36bab6b3b722f90475b8e681b4b0a4dc68ee5399 http etherscan io address 0x36bab6b3b722f90475b8e681b4b0a4dc68ee5399 ethvol usdc pair 0x197e99bd87f98dfde461afe3f706de36c9635a5d http v2 info uniswap org pair 0x197e99bd87f98dfde461afe3f706de36c9635a5d ethvol usdc lp staking 0x967440f87132008184c25b9c385860e908df1a6d http etherscan io address 0x967440f87132008184c25b9c385860e908df1a6d ethvol rebaser 0x284c036d52c4fd52af1cedeea5efc9160587133b http etherscan io address 0x284c036d52c4fd52af1cedeea5efc9160587133b volatility token polygon network cvol token 0x9cd552551ec130b50c1421649c8d11e76ac821e1 http polygonscan com address 0x9cd552551ec130b50c1421649c8d11e76ac821e1 cvol usdc pair 0x1dd0095a169e8398448a8e72f15a1868d99d9348 http info quickswap exchange pair 0x1dd0095a169e8398448a8e72f15a1868d99d9348 cvol usdc lp staking 0xea7b8dc5615e049417c80c795ea652556971c423 http polygonscan com address 0xea7b8dc5615e049417c80c795ea652556971c423 cvol rebaser 0x9be0b60d6cceff2f9d15a2d9f1ea16bccb2b7427 http polygonscan com address 0x9be0b60d6cceff2f9d15a2d9f1ea16bccb2b7427 governance token govi token 0xeeaa40b28a2d1b0b08f6f97bb1dd4b75316c6107 http etherscan io address 0xeeaa40b28a2d1b0b08f6f97bb1dd4b75316c6107 govi staking govi staking ethereum 0xdb3130952ed9b5fa7108dedaaa921ae8f59beacb http etherscan io address 0xdb3130952ed9b5fa7108dedaaa921ae8f59beacb govi staking polygon 0x399b649002277d7a3502c9af65de71686f356f33 http polygonscan com address 0x399b649002277d7a3502c9af65de71686f356f33 ethereum account deployer address 0xcedad8c0ae5e0a878c01cc8c81e0ca2dba909ded http etherscan io address 0xcedad8c0ae5e0a878c01cc8c81e0ca2dba909ded liquidity mining conduit address 0x93337cce0f3f2e3236772859609d1bdcaeb8f5a9 http etherscan io address 0x93337cce0f3f2e3236772859609d1bdcaeb8f5a9 dev fund address 0x773378dc0c9007181ab5bdc61ac750ff69bfda1f http etherscan io address 0x773378dc0c9007181ab5bdc61ac750ff69bfda1f license license gpl v3 http img shield io badge license gplv3 blue svg http www gnu org license gpl 3 0 project licensed term gnu general public license v3 0 license
/primitivefinance/rmm-math,TypeScript,rmm math math library rmm 01 includes typescript function solidity approximation
/mcdexio/mai-protocol-v2,JavaScript,mai protocol v2 perpetual contract build status http travis ci org mcdexio mai protocol v2 svg branch master http travis ci org mcdexio mai protocol v2 coverage status http coverall io repos github mcdexio mai protocol v2 badge svg branch master http coverall io github mcdexio mai protocol v2 branch master mai protocol v2 build decentralized perpetual contract ethereum name mai come two chinese character mean buy mean sell using pinyin modern system transliterating chinese character latin letter spelled mai spelled mai thus mai mean buy sell key feature isolated margin account management trade manage position amm provide chain liquidity funding rate funding payment long short position validate user ' order execute match result order book liquidation unsafe position insurance fund socialize liquidation loss global settlement emergency keep user ' asset safe design detail check mcdex document http github com mcdexio document get information deployed contract generic contract description address globalconfig contract global globalconfig sol common governance parameter 0x71e77ffbbfd4418ed47981927738b5425c187f64 http etherscan io address 0x71e77ffbbfd4418ed47981927738b5425c187f64 exchange contract exchange exchange sol order book exchange logic 0xbf5c98a4ed00c28957b6e15a01102dc2568d2650 http etherscan io address 0xbf5c98a4ed00c28957b6e15a01102dc2568d2650 contractreader contract reader contractreader sol batch reader order reduce calling consumption 0x53c9df248150ad849bd1badd3c83b0f6cb735052 http etherscan io address 0x53c9df248150ad849bd1badd3c83b0f6cb735052 eth perp contract description address perpetual contract perpetual perpetual sol perpetual core logic including margin account pnl etc 0x220a9f0dd581cbc58fcfb907de0454cbf3777f76 http etherscan io address 0x220a9f0dd581cbc58fcfb907de0454cbf3777f76 amm contract liquidity amm sol automated market maker 0xaaac8434217575643b2d2ab6f12ce8600c625520 http etherscan io address 0xaaac8434217575643b2d2ab6f12ce8600c625520 proxy contract proxy perpetualproxy sol amm margin account 0x05c363d2b9afc36b070fe2c61711280edc214678 http etherscan io address 0x05c363d2b9afc36b070fe2c61711280edc214678 pricefeeder contract oracle inversedchainlinkadapter sol price oracle 0xcfa46e1b666fd91bf39028055d506c1e4ca5ad6e http etherscan io address 0x9b2d7d7f7b2810ef2be979fc2acebe6097d9563a sharetoken contract token sharetoken sol share token amm 0xae694fb9dcd1e6195519c0056b2ab19380b26ff2 http etherscan io address 0xae694fb9dcd1e6195519c0056b2ab19380b26ff2 link perp contract description address perpetual perpetual core logic including margin account pnl etc 0xa04197e5f7971e7aef78cf5ad2bc65aac1a967aa http etherscan io address 0x220a9f0dd581cbc58fcfb907de0454cbf3777f76 amm automated market maker 0x7230d622d067d9c30154a750dbd29c035ba7605a http etherscan io address 0xaaac8434217575643b2d2ab6f12ce8600c625520 proxy amm margin account 0x694baa24d46530e46bcd39b1f07943a2bddb01e6 http etherscan io address 0x05c363d2b9afc36b070fe2c61711280edc214678 pricefeeder price oracle 0x8597eb9e005f39f8f70a17aea914b20450abfe60 http etherscan io address 0x9b2d7d7f7b2810ef2be979fc2acebe6097d9563a sharetoken share token amm 0xd78ba1d99dbbc4eba3b206c9c67a08879b6ec79b http etherscan io address 0xae694fb9dcd1e6195519c0056b2ab19380b26ff2 comp perp contract description address perpetual perpetual core logic including margin account pnl etc 0xfa203e643d1fddc5d8b91253ea23b3bd826cae9e http etherscan io address 0xfa203e643d1fddc5d8b91253ea23b3bd826cae9e amm automated market maker 0x5378b0388ef594f0c2eb194504aee2b48d1eac18 http etherscan io address 0x5378b0388ef594f0c2eb194504aee2b48d1eac18 proxy amm margin account 0x69f3ebb9f14f7048e675443fb6375f9d48d8a9d6 http etherscan io address 0x69f3ebb9f14f7048e675443fb6375f9d48d8a9d6 pricefeeder price oracle 0x78963e7cb9454ccf8412cd0b5bc4c69ad5cdbbd3 http etherscan io address 0x78963e7cb9454ccf8412cd0b5bc4c69ad5cdbbd3 sharetoken share token amm 0x9ec63850650bc7aec297ba023f0c1650cbbd6958 http etherscan io address 0x9ec63850650bc7aec297ba023f0c1650cbbd6958 lend perp contract description address perpetual perpetual core logic including margin account pnl etc 0xd48c88a18bfa81486862c6d1d172a39f1365e8ac http etherscan io address 0xd48c88a18bfa81486862c6d1d172a39f1365e8ac amm automated market maker 0xbe83943d5ca2d66fb7ba3a8d4a983782f31a42dc http etherscan io address 0xbe83943d5ca2d66fb7ba3a8d4a983782f31a42dc proxy amm margin account 0xd8642327b919295fe2733a73de1d2355b589cb04 http etherscan io address 0xd8642327b919295fe2733a73de1d2355b589cb04 pricefeeder price oracle 0x784819cba91ed87c296565274fc150eaa11ebc04 http etherscan io address 0x784819cba91ed87c296565274fc150eaa11ebc04 sharetoken share token amm 0x3d4b40ca0f98fcce38aa1704cbdf134496c261e8 http etherscan io address 0x3d4b40ca0f98fcce38aa1704cbdf134496c261e8 snx perp contract description address perpetual perpetual core logic including margin account pnl etc 0x4cc89906db523af7c3bb240a959be21cb812b434 http etherscan io address 0x4cc89906db523af7c3bb240a959be21cb812b434 amm automated market maker 0x942df696cd1995ba2eab710d168b2d9cee53b52c http etherscan io address 0x942df696cd1995ba2eab710d168b2d9cee53b52c proxy amm margin account 0x298badda419eece0abe86fedc2f0677a7e8e35a2 http etherscan io address 0x298badda419eece0abe86fedc2f0677a7e8e35a2 pricefeeder price oracle 0xa2fe15e40f5ccc480b545eb8ffabdcdb84a3d3dc http etherscan io address 0xa2fe15e40f5ccc480b545eb8ffabdcdb84a3d3dc sharetoken share token amm 0xf377810bffc83df177d7f992a8807943ea0a286f http etherscan io address 0xf377810bffc83df177d7f992a8807943ea0a286f
/broxus/ton-dex,JavaScript,dex
/chyanju/__archived__Medjai,Racket,note development medjai ha moved veridise http github com veridise medjai http github com veridise medjai maintenance original repo temporarily suspended medjai symbolic execution tool cairo div medjai open sourced general framework reasoning img src doc cairo icon png width 24px cairo program based symbolic execution div feature x dev program exploration medjai execute cairo program symbolic input explore possible program state x dev property verification medjai check whether certain property hold cairo program dev attack synthesis medjai automatically solve concrete input crash given cairo program dev integration img src doc veridise icon png width 24px veridise product line medjai integrates v specication language http github com veridise v allows developer express correctness property running erc20 demo docker first need build demo latest version make sure docker installed type following command build image bash cd medjai docker build medjai demo take short time set environment use following command start container bash docker run rm medjai demo bash enter pre set docker environment erc20 bug detection test buggy version use following command container bash cd medjai racket cairo run rkt cname benchmark overflowtest erc20demo bug compiled json tool invoked run symbolic execution bug detection ' see following output command run correctly bash finished symbolic execution bug found total supply uint256 1 2 amount uint256 340282366920938463463374607431768211455 340282366920938463463374607431768211453 erc20 symbolic execution non buggy version use following command container verify bash racket cairo run rkt cname benchmark overflowtest erc20demo fix compiled json tool invoked also run symbolic execution bug detection ' see following output command run correctly bash finished symbolic execution bug found mean version erc20 good dependency building source cairo 0 8 2 tested http www cairo lang org http www cairo lang org racket 8 0 http racket lang org http racket lang org rosette 4 0 http github com emina rosette http github com emina rosette raco pkg install rosette getting started interpretation repo come simple example also find official cairo documentation cairo example test0 cairo interpretation func main ap 1000 ap ap 2000 ap ap ap 2 ap 1 ap ret end user assigns two value 1000 2000 corresponding memory address assigns result adding another memory address calling bash run medjai sh example test0 cairo medjai execute program output desired final memory state getting started symbolic reasoning dev medjai also support reasoning utilize verify several property cairo program example cairo example test1 cairo symbolic reasoning func main ap 1000 ap ap symbolic type ' integer ' name ' var0 ' ap ap ap 2 ap 1 ap ret end code snippet creates symbolic integer var0 assigns certain memory address would like find whether piece code correct asking medjai find counterexample var0 would potentially crash execution program calling bash run medjai sh example test0 cairo medjai reason possible value var0 together program state return one compromise program execution 0 would cause division 0 error line code create symbolic variable var0 immediately used denominator division arithmetic operation ap ap 2 ap 1 ap cause unknown value memory cell exception var0 set 0 verifies counterexample found command usage using run medjai sh bash usage run medjai sh path cairo program using cairo run rkt bash usage cairo run rkt option option one cname p cname path compiled cairo program json help h show help treat remaining argument switch level bracket indicate mutually exclusive option multiple single letter switch combined one example h h
/madfish-solutions/quipuswap-sdk,TypeScript,quipuswap sdk install bash yarn add taquito taquito quipuswap sdk usage tip module work natural number decimal metadata stuff asset type id property exists token structure module assumes fa2 token typescript contract taquito contract type contractoraddress contract string interface token contract contractoraddress id bignumber value interface fa2token extends token id bignumber value type asset token tez configure typescript import tezostoolkit michelcodecpacker taquito taquito import readonlysigner quipuswap sdk const publickeyhash tz1fvqangafb9j1hrrmp2bsb6lvasd6kpy8a const publickey edpkvwbk81uh1devdwkr4g1bjytghdu1mdvznpufe2zdwnslxreb9k const tezos new tezostoolkit http hangzhounet smartpy io tezos setsignerprovider new readonlysigner publickeyhash publickey using privatekey import inmemorysigner taquito signer inmemorysigner fromsecretkey privatekey signer tezos setsignerprovider signer swap typescript import swap batchify quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb async try const fromasset tez const toasset contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 const inputvalue 1 000 000 mutez without decimal const slippagetolerance 0 005 0 5 const swapparams await swap tezos factory fromasset toasset inputvalue slippagetolerance const op await batchify tezos wallet batch swapparams send console info op hash await op confirmation console info complete catch err console error err estimate swap typescript import estimateswap quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb async try const fromasset tez const toasset contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 const inputvalue 10 000 000 mutez without decimal const estimatedoutputvalue await estimateswap tezos factory fromasset toasset inputvalue console info estimatedoutputvalue const estimatedinputvalue await estimateswap tezos factory fromasset toasset outputvalue estimatedoutputvalue console info estimatedinputvalue catch err console error err already dexes use estimateswap typescript import estimateswap quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb async try const fromasset tez const toasset contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 const inputvalue 10 000 000 mutez without decimal const inputdex await finddex tezos factory toasset const estimatedoutputvalue await estimateswap tezos factory fromasset toasset inputvalue inputdex console info estimatedoutputvalue catch err console error err add liquidity typescript import finddex addliquidity quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb const token contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 async try const dex await finddex tezos factory token const addliquidityparams await addliquidity tezos dex tezvalue 10 000 000 tokenvalue 4 000 tezvalue 10 000 000 tokenvalue 4 000 tip one property omitted estimate another automatically const op await batchify tezos wallet batch addliquidityparams send console info op hash await op confirmation console info complete catch err console error err remove liquidity typescript import finddex removeliquidity quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb const token contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 async try const account tz1lx const slippagetolerance 0 005 0 5 const dex await finddex tezos factory token const share await getliquidityshare tezos dex account const lptokenvalue share total const removeliquidityparams await removeliquidity tezos dex lptokenvalue slippagetolerance const op await batchify tezos wallet batch removeliquidityparams send console info op hash await op confirmation console info complete catch err console error err initialize liquidity typescript import finddex initializeliquidity quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb const token contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 async try const tokenvalue 4 000 const tezvalue 10 000 000 const initializeliquidityparams await initializeliquidity tezos factory token tokenvalue tezvalue const op await batchify tezos wallet batch initializeliquidityparams send console info op hash await op confirmation console info complete catch err console error err get token price typescript import finddex estimatetezintoken quipuswap sdk const tezos new tezostoolkit full sample configure section const factory fa1 2factory kt1hrqwksfe7ugihjomwwq7p8ja9e18ldufn fa2factory kt1dx3sz6r4h2bznqm8xri1ctsdncaoxlgzb const token contract kt1eko1eihucz9n4cqyadkeyromzteoizrat id 0 async try const dex await finddex tezos factory token const dexstorage await dex contract storage const tokenvalue 4 000 const intezvalue estimatetezintoken dexstorage tokenvalue console info 4 000 token tez intezvalue catch err console error err tsdx user guide congrats saved hour work bootstrapping project tsdx let get oriented whats use tsdx setup meant developing library apps published npm youre looking build node app could use node dev plain node simple tsc youre new typescript checkout handy cheatsheet http devhints io typescript command tsdx scaffold new library inside src run tsdx use bash npm start yarn start build dist run project watch mode edits save inside src cause rebuild dist one build use npm run build yarn build run test use npm test yarn test configuration code quality set prettier husky lint staged adjust respective field package json accordingly jest jest test set run npm test yarn test bundle analysis size limit http github com ai size limit set calculate real cost library npm run size visualize bundle npm run analyze setup file folder structure set txt src index tsx edit test blah test tsx edit gitignore package json readme md edit tsconfig json rollup tsdx us rollup http rollupjs org bundler generates multiple rollup configs various module format build setting see optimization optimization detail typescript tsconfig json set interpret dom esnext type well react jsx adjust according need continuous integration github action two action added default main installs deps w cache lint test build push node matrix size comment cost comparison library every pull request using size limit http github com ai size limit optimization please see main tsdx optimization doc http github com palmerhq tsdx optimization particular know take advantage development optimization j type index declare var dev boolean inside code dev console log foo also choose install use invariant http github com palmerhq tsdx invariant warning http github com palmerhq tsdx warning function module format cjs esmodules umd module format supported appropriate path configured package json dist index j accordingly please report issue found named export per palmer group guideline always use named export http github com palmerhq typescript export code split inside react app instead react library including style many way ship style including cs j tsdx ha opinion configure like vanilla cs include root directory add file section package json imported separately user run bundler ' loader publishing npm recommend using np http github com sindresorhus np
/pisuthd/react-defi-widget,JavaScript,repo unmaintained react defi widget ethereum defi widget react apps npm http img shield io npm v react defi widget svg http www npmjs com package react defi widget javascript style guide http img shield io badge code style standard brightgreen svg http standardjs com introduction react defi widget react widget allows website visitor quickly easily access automated liquidity pool bancor ethereum blockchain convert token another seamlessly completely permissionless well stake liquidity pool embed widget set fee allows take commission 3 transaction need web3 react imported app passing context prop widget component preview screenshot http raw githubusercontent com pisuthd react defi widget master preview 1 gif live example http modest bardeen fe9d2c netlify com http modest bardeen fe9d2c netlify com feature enabling chain token swap react based application bancor earn commission bnt token 3 customizable widget attribute support mainnet ropsten adding liquidity pool within bancor earning fee normally 0 1 0 3 trade creating new liquidity pool within bancor aka list token decentralized exchange free install bash npm install save react defi widget usage token conversion widget basic usage jsx import react component fragment ' react ' import useweb3context ' web3 react ' import tokenconversionwidget ' react defi widget ' const mainpage prop const context useweb3context useeffect context setfirstvalidconnector ' metamask ' choice return fragment tokenconversionwidget web3reactcontext context fragment advance usage jsx import react component fragment ' react ' import useweb3context ' web3 react ' import tokenconversionwidget ' react defi widget ' const mainpage prop const context useweb3context useeffect context setfirstvalidconnector ' metamask ' choice return fragment tokenconversionwidget web3reactcontext context title title subtitle subtitle description something tell user color 777 basecurrency bnt paircurrency eth affiliateaccount 0x8fd00f170fdf3772c5ebdcd90bf257316c69ba45 affiliatefee 3 whitelisted eth bnt knc enj might need check available token first fragment liquidity pool explorer pool creation widget widget offer vast opportunity website visitor stake liquidity create new pool permissionless manner show available liquidity pool jsx import react component fragment ' react ' import useweb3context ' web3 react ' import liquiditypoolswidget ' react defi widget ' const mainpage prop const context useweb3context useeffect context setfirstvalidconnector ' metamask ' choice return fragment liquiditypoolswidget web3reactcontext web3context color color fragment filter specific pool jsx import react component fragment ' react ' import useweb3context ' web3 react ' import liquiditypoolswidget ' react defi widget ' const mainpage prop const context useweb3context useeffect context setfirstvalidconnector ' metamask ' choice return fragment liquiditypoolswidget web3reactcontext web3context color color defaultpool enjbnt whitelisted ethbnt enjbnt daibnt disablepoolcreation true fragment local development run example locally run library first npm install npm start open another window run webapp cd example npm install npm start property token conversion widget type required default value description web3reactcontext proptypes object yes web3 react context object widget go connect title proptypes string title widget subtitle proptypes string subtitle widget description proptypes string long description bottom widget color proptypes string 0275d8 color widget basecurrency proptypes string eth default base currency symbol format paircurrency proptypes string bnt default pair currency symbol format affiliateaccount proptypes string none recipient account collect fee transaction affiliatefee proptypes number 0 fee rate example 2 5 fee set 2 5 whitelisted proptypes array provides whitelisted token traded liquidity pool widget type required default value description web3reactcontext proptypes object yes web3 react context object widget go connect title proptypes string title widget subtitle proptypes string subtitle widget description proptypes string long description bottom widget color proptypes string 0275d8 color widget whitelisted proptypes array provides whitelisted liquidity pool defaultpool proptypes string default pool disablepoolcreation proptypes bool false remove pool creation menu widget license mit pisuthd http github com pisuthd
/DefiLab-xyz/uniswap-v3-backtest,JavaScript,uniswap v3 lp strategy backtester strategy backtester providing liquidity uniswap v3 pool based logic described following article historical performance uniswap v3 pool http defi lab medium com historical performance uniswap l3 pool 2de713f7c70f backtest performance http user image githubusercontent com 5744432 167617903 efd0829f 0b32 4c7f b611 47398d8e435c png install shell npm install uniswap v3 backtest usage j get result last 25 day import uniswapstrategybacktest ' uniswap v3 backtest ' const backtestresults await uniswapstrategybacktest 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 1000 2120 09 2662 99 day 25 period daily get result start timestamp lp quote token await uniswapstrategybacktest 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 1 1 2662 99 1 2120 09 starttimestamp 1653364800 period daily pricetoken 1 get result start timestamp end timestamp lp quote token await uniswapstrategybacktest 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 1 1 2662 99 1 2120 09 starttimestamp 1653364800 endtimestamp 1653374800 period daily pricetoken 1 get result n day end timestamp lp quote token await uniswapstrategybacktest 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 1 1 2662 99 1 2120 09 endtimestamp 1653364800 day 1 period daily pricetoken 1 example output hourly periodstartunix 1652274000 liquidity ' 7675942584871332685 ' high ' 2266 726774269547858798641816695647 ' low ' 2145 393138561593202680715136665708 ' pool id ' 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 ' totalvaluelockedusd ' 231193174 2181918276487229629805612 ' totalvaluelockedtoken1 ' 71499 990198836160751569 ' totalvaluelockedtoken0 ' 71417122 541685 ' token0 decimal ' 6 ' token1 decimal ' 18 ' close ' 2246 577649943233620476969923660446 ' feegrowthglobal0x128 ' 1432478142734251891146870279471391 ' feegrowthglobal1x128 ' 491787243029421936881695073823469456119843 ' day 11 month 4 year 2022 fg0 0 fg1 0 activeliquidity 100 feetoken0 0 feetoken1 0 token 259 4720394308191 0 3296249121804859 fgv 0 feev 0 feeunb 0 amountv 999 9999999999999 amounttr 1000 feeusd 0 baseclose ' 2246 577649943233620476969923660446 ' daily date ' 5 11 2022 ' day 11 month 4 year 2022 feetoken0 3 4440601554207775 feetoken1 0 0015405996636897285 feev 7 061140100789986 feeunb 0 1933135552371638 fgv 3 677055720111889e 14 feeusd 5 640380083495151 activeliquidity 100 amountv 999 9999999999998 amounttr 1000 amountvlast 1032 5671065225727 percfee 0 7061140100789988 close ' 2241 121068655049392145921171725936 ' baseclose ' 2241 121068655049392145921171725936 ' count 14 uniswapstrategybacktest input uniswapstrategybacktest called following argument uniswapstrategybacktest poolid investmentamount minrange maxrange option poolid id pool ' like run backtest example eth usd 0 05 http info uniswap org pool 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 would 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 investmentamount initial amount invested lp strategy value presumed denominated base token pair token0 overridden use quote token option argument minrange lower bound lp strategy investmentamount presumed base overridden use quote maxrange upper bound lp strategy investmentamount presumed base overridden use quote option optional value override default value formed json key value pair day 30 protocol 0 pricetoken 0 period hourly day number day run backtest today date default 30 currently maxed 30 starttimestamp timestamp second lp start optional endtimestamp timestamp second lp end optional used day provides result n day timestamp pricetoken 0 value basetoken 1 value quotetoken token0 token1 period calculate fee daily hourly default hourly protocol chain sidechain l2 use 0 ethereum default 1 optimism 2 arbitrum 3 polygon uniswapstrategybacktest output amountv total value lp position specified period feev fee generated specified period activeliquidity strategy liquidity wa active within specified period feeusd total fee usd
/tradingstrategy-ai/trade-executor,Jupyter Notebook,github workflow test yml http github com tradingstrategy ai trade executor action workflow test yml badge svg http github com tradingstrategy ai trade executor action workflow test yml trade executor trade executor python framework algorithmic trading strategy execution feature high quality documentation http tradingstrategy ai doc support decentralised market like uniswap pancakeswap http tradingstrategy ai doc overview supported market html live trading http tradingstrategy ai doc running live trading html backtesting http tradingstrategy ai doc running backtesting html webhook web serverplain http tradingstrategy ai doc running webhook html web javascript integration run strategy execution python application docker container http tradingstrategy ai doc running cli html information read documentation running backtesting strategy http tradingstrategy ai doc running index html visit trading strategy website learn algorithmic trading decentralised exchange http tradingstrategy ai join discord question http tradingstrategy ai community community trading strategy website http tradingstrategy ai blog http tradingstrategy ai blog twitter http twitter com tradingprotocol discord http tradingstrategy ai community discord telegram channel http trading protocol license agpl
/raphael-mazet/SimpleFi,JavaScript,deprecated monorepo simplefi p align center br img src image logo simplefi logo transp png width 250 p br simplefi make easy manage decentralised finance investment portfolio screenshots p align center img src image screenshots simplefi splash png width 400 img src image screenshots simplefi dash png width 400 p getting started 1 clone repo git http github com raphael mazet simplefi git 2 create env file prisma directory db port yourport db username yourusername db password yourpassword db host yourhost db name yourdbname database url postgres db username db password db host db port db name 3 start backend server cd server npm install nodemon index j 4 start client server cd client npm install npm start built express http expressjs com fast unopinionated minimalist web framework node j react http reactjs org javascript library building user interface postgresql http www postgresql org open source relational database prisma http www prisma io open source database toolkit ether j http doc ether io v5 lightweight javascript library interact ethereum blockchain contributing improvement remixes welcome author raphael mazet github http github com raphael mazet linkedin http www linkedin com raphael mazet
/byteball/stablecoin-t1-arbitrage,JavaScript,autonomous agent arbitrage t1 reserve token bonded stablecoins whenever price t2 token deviate peg aa buy sell t1 token order correct price back peg earn reward capacity available fast capacity pool see introductory article bonded stablecoins http medium com obyte using multi dimensional bonding curve create stablecoins 81e857b4355c learn role t1 t2 token investor provide liquidity aa reserve t1 token get share exchange share profit arbitrage performance reserve t1 portfolio aa hold investor participate governance tune various parameter aa arbitrage action aa triggered companion bot also included bot operator installing bash yarn testing aa test written using aa testkit http github com valyakin aa testkit bash yarn test creating arbitrage aa use obyte wallet send transaction factory aa po3w4uimsleqlrt434pypzaf6vpgb7ww ha one required parameter curve aa aa curve bot trading see governance section full list parameter factory create new arbitrage aa aa store fund investor bot issue arb command aa see arbitrage opportunity add arbitrage aa arb aa array conf json single bot manage several arb aa json arb aa pvl22dmgm57foykjrpkmqbfm2busjldu y3np6umnfma6du2dgpjn4hb65khkvakr ysgaus4dwuorjmv3tezxpcaefct4fgo3 running arbitrage bot bash node run j 2 errlog bot start print address single address refill byte send transaction aa bot ' fund separate aa ' fund bot need hold small amount required trigger aa bot earns portion reward paid curve correcting price towards peg investor investing divesting provide liquidity participate profit aa investor send t1 reserve fund aa get share exchange price t1 term reserve asset determined using bonding curve relative weight reserve t1 asset aa ' holding determine share price redeem user send share back aa specify parameter t1 reserve indicate asset want receive exchange requesting user get back reserve t1 asset proportion aa currently hold governance investor tune following parameter voting change value min reserve share minimum share reserve asset aa ' holding get threshold contribution redemption increase share reserve asset become allowed threshold contribution redemption allowed e g single asset contribution t1 asset default 0 max reserve share maximum share reserve asset aa ' holding get threshold contribution redemption decrease share reserve asset become allowed threshold contribution redemption allowed e g single asset contribution reserve asset default 1 min reserve delta minimum amount reserve currency transacted arbitrage trade purpose avoid taking small trade whose profit might small justify transaction fee default 1e5 triggerer reward share share reward paid curve aa moving price peg paid triggerer arbitrage trade companion bot try triggerer aa triggered anybody default 0 investment paused parameter set 1 stop accepting new contribution pool order dilute current investor make sense current investor think limited profit made market ' want divide pie among bigger number investor default 0 initial value parameter set triggering factory create arbitrage aa later change decided investor governance aa created time main arbitrage aa created mechanism decision making challenger voting mechanism used bonded stablecoins http medium com obyte using multi dimensional bonding curve create stablecoins 81e857b4355c governance propose support change parameter investor send share governance aa specify name parameter want vote one 4 parameter listed proposed value vote weighted balance share locked value retains leading position e largest support term share locked 7 day becomes winner activated arbitrage aa sending commit command governance aa voted winning decision cannot unlock share governance aa 30 day decision wa activated address governance aa attached arbitrage aa looked explorer visiting page arbitrage aa e g http explorer obyte org y3np6umnfma6du2dgpjn4hb65khkvakr viewing state variable unfortunately user interface convenient sending vote viewing current result voting
/cheeseswapbsc/cheeseswap-interface,TypeScript,cheeseswap http raw githubusercontent com cheeseswapbsc cheeseswap interface master public ft banner png cheeseswap http cheeseswap app web interface wap exchange list project cheeseswap http cheeseswap app create liquidity pool cheeseswap http cheeseswap app platform create issue issue link http github com cheeseswapbsc cheeseswap interface issue issue sample token name xyz token token ticker xyz token type bep20 token decimal 18 explorer link http bscscan com address 0xadd8a06fd58761a5047426e160b2b88ad3b9d464 256px logo link http raw githubusercontent com cheeseswapbsc asset master cheese chs logo chs 256px png cheeseswap pair address link http bscscan com address 0x51a162dd678d75c269ef6680193c019e0b4bda7e thank cheeseswap team 2020 2021
/mstable/mStable-governance-app,TypeScript,mstable governance app todo write setup installation 1 git clone git github com mstable mstable governance app git cd mstable governance app 2 cp env example ropsten env connect ropsten cp env example mainnet env connect mainnet 3 yarn 4 yarn provision 5 yarn codegen 6 optional replace env var env e g real infura provider key running application locally simply run yarn start
/broxus/octusbridge-relay,Rust,p align center h3 align center octus bridge relay h3 p align center href license img alt github src http img shield io github license broxus octusbridge relay p p runtime requirement cpu 8 core 2 ghz ram 16 gb storage 200 gb fast ssd network 100 mbit run simplify build create semblance standardization repository set script configuring relay note script prepared tested ubuntu 20 04 may need modify little distros 1 setup relay service native version little complex way give performance gain reduces load bash script setup sh native docker version simplest way add overhead bash script setup sh docker recommended machine lower spec required stage systemd service relay created configs key etc relay everscale node db var db relay start service yet 2 prepare config either add environment variable service section unit file located etc systemd system relay service method recommended make backup etc relay afraid ' safety key encrypted unit file systemd service environment relay master key stub master key environment relay staker address staker address environment eth mainnet url eth http rpc endpoint environment polygon url polygon http rpc endpoint simply replace parameter config located etc relay config yaml 3 generate key bash script generate sh docker native depends installation type already seed phrase want import add flag script print unencrypted data sure write somewhere also make backup etc relay folder 4 link relay key use eth address everscale public key previous step link relay setup staker address http octusbridge io relayers create start linking process go step 5 start relay begin confirm public key address air may take time sync first 40 minute linking need send least 0 05 eth relay eth address relay confirm ownership think lot gas price 300 gwei change value config 5 enable start relay service bash systemctl enable relay systemctl start relay optionally check running normally take time start relay fully operational print initialized relay journalctl fu relay relay running udp port 30000 default make sure port blocked firewall note docker installation us port 30000 unit file may need update service decide change environment variable must also passed container e g e relay master key relay ha built prometheus metric exporter configured metric setting section config default metric available http 127 0 0 1 10000 detail summary b response example b summary p eth subscriber last processed block staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 56 13790361 eth subscriber pending confirmation count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 56 0 eth subscriber last processed block staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 137 22954791 eth subscriber pending confirmation count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 137 0 eth subscriber last processed block staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 250 26020394 eth subscriber pending confirmation count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 250 0 eth subscriber last processed block staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 1 13875962 eth subscriber pending confirmation count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 chain id 1 0 sol subscriber unrecognized proposal count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 0 ton subscriber ready staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 1 ton subscriber current utime staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 1640456699 ton subscriber time diff staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 3 ton subscriber shard client time diff staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 7 ton subscriber mc block seqno staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 13426600 ton subscriber shard client mc block seqno staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 13426600 ton subscriber pending message count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 0 bridge pending eth ton event count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 0 bridge pending ton eth event count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 0 bridge pending sol ton event count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 0 bridge pending ton sol event count staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 0 bridge total active eth ton event configuration staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 86 bridge total active ton eth event configuration staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 11 bridge total active sol ton event configuration staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 1 bridge total active ton sol event configuration staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 1 staking user data token balance staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 100000000000000 staking current relay round staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 13 staking election start time staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 1640380268 staking election end time staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 1640553068 staking election status staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 1 staking ignore election staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 0 staking participates round staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 1 staking elected staker 0 7a9701bede7f86bf039aba200c1bb421a388bbb4b0580bfaeafa66f908d2b246 round num 13 1 p detail example config note syntax var also used everywhere config replaced value environment variable var yaml keystore password master password relay master key address specified key staker address relay staker address bridge setting keystore data path key path etc relay key json bridge contract address bridge address 0 1d51fb47566d0d283ebbf83c641c01ebebaad6c3cec55895b0074b802036094e set relay participate election default false ignore election false solana network config sol network public endpoint endpoint http api mainnet beta solana com commitment level commitment finalized evm network configs evm network ethereum chain id 1 rpc node http endpoint endpoint eth mainnet url timeout used simple getter request default 10 get timeout sec 10 timeout used processing eth getlogs response default 120 block processing timeout sec 120 max simultaneous connection count default 10 pool size 10 idle polling interval default 60 poll interval sec 60 maximum block range getlogs request max block range 5000 smart chain chain id 56 public endpoint endpoint http bsc dataseed binance org get timeout sec 10 pool size 10 poll interval sec 60 max block range 5000 fantom opera chain id 250 public endpoint endpoint http rpc ftm tool get timeout sec 10 pool size 10 poll interval sec 60 max block range 5000 polygon chain id 137 endpoint polygon url get timeout sec 10 pool size 10 poll interval sec 60 max block range 5000 milkomeda chain id 2001 endpoint http rpc mainnet cardano evm c1 milkomeda com get timeout sec 10 pool size 10 poll interval sec 60 maximum failed response time sec 604800 avalanche network chain id 43114 endpoint http api avax network ext bc c rpc get timeout sec 10 pool size 10 poll interval sec 60 maximum failed response time sec 604800 node setting root directory relay db default db db path var db relay udp port used adnl node default 30303 adnl port 30000 path temporary adnl key note generated wa default adnl key json temp key path etc relay adnl key json metric setting listen address metric used client gather prometheus metric default 127 0 0 1 10000 listen address 127 0 0 1 10000 url path metric default example curl http 127 0 0 1 10000 metric path metric metric update interval second default 10 collection interval sec 10 log4rs setting see http doc r log4rs 1 0 0 log4rs detail logger setting appenders stdout kind console encoder pattern h l n root level error appenders stdout logger relay level info appenders stdout additive false architecture overview relay simultaneously everscale node communicate evm network specified config purpose check sign transaction event startup synchronizes everscale node downloads blockchain state search bridge contract state connector active configuration pending event subscribes bridge contract everscale listens connector deployment event new connector produce activation event signal relay subscribe event configuration contract configuration contract produce event deployment event relay see check everscale evm event correctness data packing checked stuff verified contract side event correct relay convert data eth abi encoded byte sign eth key signature sent along confirmation message data event wa invalid relay sends rejection message everscale evm abi mapping rule byte string uintx intx bool fixedbytes fixedarray mapped array mapped tuple mapped unsupported evm everscale event event parameter checked relay side wait looking transaction specified evm network convert event data tvm cell sends confirmation message everything wa correct otherwise sends rejection message eth everscale abi mapping rule use http github com broxus eth ton abi converter convert data web page address byte length 20 byte byte cell string intx uintx bool array mapped fixedbytes1 depends context fixedbytesx fixedarray mapped tuple mapped cell unsupported converting abi evm format everscale mechanism controlling process add bytes1 element set context flag value currently three flag 0x01 place tuples new cell 0x02 interpret byte encoded tvm cell 0x04 insert default cell case error flag 0x02 note flag ' changed inside array element would lead inconsistent array item abi decision make relay everscale node wa made chance first version several relay connected one light node wa constantly restarted graphql also wa quite unreliable result relay instantly see event vote almost simultaneously one block implementation optimized c node ' harm network changelog 2 1 0 2022 09 06 feature add solana bugfixes fixed outgoing rldp transfer 2 0 13 2022 07 22 feature replace tiny adnl everscale network optimize db layout 2 0 12 2022 06 03 feature backport transport fix 2 0 11 2022 04 13 feature added archive assembly added new account model support bugfixes fixed adnl channel 2 0 10 2022 04 03 bugfixes fixed memory leak new peer queue wa read fixed rate 2 0 9 2022 03 26 feature added packet compression support enabled default various optimization 2 0 8 2022 02 12 feature updated abi version 2 2 fixed memory leak shard state slowly filling loaded storage cell 2 0 7 2022 02 02 feature adnl security improvement 2 0 6 2021 12 31 feature optimized db structure 2 0 5 2021 11 27 feature improved eth event verification updated event abi added ton subscriber shard client time diff ton subscriber mc block seqno ton subscriber shard client mc block seqno value metric 2 0 4 2021 11 11 feature use jemalloc default bugfixes fixed block gc memory issue 2 0 3 2021 11 09 feature hot reload metric exporter logger setting sighup signal block state garbage collection additional evm rpc timing control improved database layout increased data locality bugfixes fixed exported metric format fixed event confirmation counter fixed time diff metric reduced block range eth getlogs ignore descending block eth rpc 2 0 2 feature added setup script fast deployment bugfixes fixed bridge contract interaction logic according new change 2 0 1 initial release
/plasmadlt/PPAY-Governance,Solidity,ppay governance ppay sol governance token ppay governorplasma sol governorplasma administrator contract plasma alliance timelock contract holder ppay token may create vote proposal queued plasma alliance timelock effect plasma alliance contract timelock sol timelock executor holder ' proposal plasmavesting sol vesting control distribution time ppay token allows claim token recipient ' account forked http github com uniswap governance commit ab22c084bacb2636a1aebf9759890063eb6e4946 http github com compound finance compound protocol tree v2 8 1 execute mocha test requirement node j 12 x typescript 4 0 2 1 yarn install 2 yarn compile 3 yarn test lint code run yarn lint
/maAPPsDEV/dex-attack,JavaScript,solidity game dex attack inspired openzeppelin ' ethernaut http ethernaut openzeppelin com dex level please see dextwo http github com maappsdev dex two attack another dex game try mainnet task goal level hack basic dex http en wikipedia org wiki decentralized exchange contract steal fund price manipulation start 10 token token1 10 token2 dex contract start 100 token successful game manage drain least 1 2 token contract allow contract report bad price asset quick note normally make swap erc20 token approve contract spend token keep syntax game ' added approve method contract feel free use contract approve contract address uint amount instead calling token directly automatically approve spending two token desired amount feel free ignore swappabletoken contract otherwise hint 1 price token calculated 2 doe swap method work 3 approve transaction erc20 learn 1 erc20 2 swap difficult challenge dex idea game flash loan attack rampant defi world experience price issue going must coming solidity developer basically dex really crappy uniswap report price based liquidity pool user use flip back forth eventually drain dex liquidity pool source code contract contains bug risk use mainnet solidity spdx license identifier mit pragma solidity 0 8 4 0 9 0 import openzeppelin contract token erc20 ierc20 sol import openzeppelin contract token erc20 erc20 sol import openzeppelin contract utils math safemath sol contract dex using safemath uint256 address public token1 address public token2 constructor address token1 address token2 public token1 token1 token2 token2 function swap address address uint256 amount public require token1 token2 token2 token1 invalid token require ierc20 balanceof msg sender amount enough swap uint256 swap amount get swap price amount ierc20 transferfrom msg sender address amount ierc20 approve address swap amount ierc20 transferfrom address msg sender swap amount function add liquidity address token address uint256 amount public ierc20 token address transferfrom msg sender address amount function get swap price address address uint256 amount public view return uint256 return amount ierc20 balanceof address ierc20 balanceof address function approve address spender uint256 amount public swappabletoken token1 approve spender amount swappabletoken token2 approve spender amount function balanceof address token address account public view return uint256 return ierc20 token balanceof account contract swappabletoken erc20 constructor string memory name string memory symbol uint256 initialsupply public erc20 name symbol mint msg sender initialsupply configuration install truffle cli skip already installed npm install g truffle install dependency yarn install test attack run test truffle develop test truffle develop test using network ' develop ' compiling contract everything date nothing compile contract hacker check game state 482ms start price manipulating swap price tkn2 tkn1 10 balance tkn1 dex 90 tkn2 dex 110 tkn1 hacker 20 tkn2 hacker 0 swap price tkn1 tkn2 24 balance tkn1 dex 110 tkn2 dex 86 tkn1 hacker 0 tkn2 hacker 24 swap price tkn2 tkn1 30 balance tkn1 dex 80 tkn2 dex 110 tkn1 hacker 30 tkn2 hacker 0 swap price tkn1 tkn2 41 balance tkn1 dex 110 tkn2 dex 69 tkn1 hacker 0 tkn2 hacker 41 swap price tkn2 tkn1 65 balance tkn1 dex 45 tkn2 dex 110 tkn1 hacker 65 tkn2 hacker 0 swap price tkn1 tkn2 110 balance tkn1 dex 90 tkn2 dex 0 tkn1 hacker 20 tkn2 hacker 110 drain dex 8265ms 2 passing 9
/FabianSchuessler/java-defi-bot,Java,java defi bot license mit http img shield io badge license mit yellow svg http opensource org license mit build status http travis ci com fabianschuessler java defi bot svg branch master http travis ci com fabianschuessler java defi bot coverage http sonarcloud io api project badge measure project fabianschuessler java defi bot metric coverage http sonarcloud io dashboard id fabianschuessler java defi bot java defi bot application aim beneficial action ethereum blockchain defi http defipulse com ecosystem earning profit user action include maintaining dai peg providing liquidity liquidating undercollateralized asset getting started prerequisite java oracle java http www oracle com de java technology javase downloads html echo java home c program file java jdk 14 0 1 connection ethereum network infura project id http infura io alternative ethereum node http doc ethhub io using ethereum running ethereum node quiknode http www quiknode io aws ethereum wallet keystore file including password service myetherwallet http www myetherwallet com maven http maven apache org download cgi mvn version apache maven 3 6 3 installing mvn install configuration update configuration file config property infuraprojectid password wallet transactionsrequireconfirmation true playsoundontransaction true uniswapbuyprofitpercentage 0 5 uniswapsellprofitpercentage 0 5 minimumethereumreserveupperlimit 0 20 minimumethereumreservelowerlimit 0 10 minimumethereumnecessaryforsale 1 0 minimumdainecessaryforsaleandlending 250 0 minimumflipauctionprofit 50 0 minimumgasprice 1000000000 maximumgasprice 30000000000 testproperty true make sure never commit config property file make git stop tracking config file git update index skip worktree config property make git start tracking config file git update index skip worktree config property compile mvn clean compile assembly single running test test mvn clean test unit test mvn clean test dskipits integration test mvn clean failsafe integration test run either run ide choice execute compiled application java jar java defi bot 0 1 jar dependency jar make sure ha access config property file log find log log current feature sell dai dai 1 00 oasis oasis checkifselldaiisprofitablethendoit balance buy dai dai 1 00 oasis oasis checkifbuydaiisprofitablethendoit balance sell dai dai 1 00 uniswap uniswap checkifselldaiisprofitablethendoit balance buy dai dai 1 00 uniswap uniswap checkifbuydaiisprofitablethendoit balance earns interest compound ha market action compounddai lenddai balance bid flip auction auction offer cheaper eth flipper checkifthereareprofitableflipauctions balance contribute feel free open merge request developer guide code style google java format http github com google google java format blob master readme md linting sonarlint http www sonarlint org intellij add new smart contract web3j http github com web3j web3j logging slf4j logback used defined src main resource logback xml update maven dependency mvn version use latest version show updatable dependency mvn version display dependency update show unused dependency mvn dependency analyze makerdao documentation http doc makerdao com web3j documentation http doc web3j io compound documentation http compound finance doc dai stats http daistats com eth gas station http ethgasstation info dai peg dai descipher http dai descipher io dai peg dai stablecoin http dai stablecoin science loanscan http loanscan io flip auction http daiauctions com flip license project licensed mit license see license license file detail
/ergolabs/ergo-sdk-js,TypeScript,ergo sdk npm version http badge fury io j ergolabs 2fergo sdk svg http badge fury io j ergolabs 2fergo sdk sdk includes ergo protocol data model ergo wallet ergo blockchain explorer api wrapper usage sdk heavily relies ergo rust via wasm load rustmodule using sdk typescript jsx import react useeffect usestate ' react ' import geistprovider ' geist ui react ' import rustmodule ' ergolabs ergo sdk ' export const app react fc const isrustmoduleloaded setisrustmoduleloaded usestate false useeffect rustmodule load setisrustmoduleloaded true isrustmoduleloaded return null return geistprovider geistprovider ergo data model address ergotree ergotreetemplate ergobox ergoboxcandidate input datainput unsignedinput ergotx unsignedergotx assetamount assetinfo tokenamount constant contextextension networkcontext proverresult publickey register sigmatype ergo wallet boxselector selects input satisfying given target balance token prover interface abstract prover capable signing transaction implemented using wallet integration e g yoroi txassembler service simplified tx assembly ergo explorer api explorer api method also rely ergo data model return enriched version ergo model marked aug prefix implemented method gettx id txid promise augergotx undefined get confirmed transaction id getoutput id boxid promise augergobox undefined get confirmed output id gettxsbyaddress address address paging paging promise augergotx number get transaction address getutxsbyaddress address address paging paging promise augergotx number get unconfirmed transaction address getunspentbyergotree tree ergotree paging paging promise augergobox number get unspent box given ergotree getunspentbyergotreetemplate hash hexstring paging paging promise augergobox get unspent box script matching given hash ergotree template getunspentbytokenid tokenid tokenid paging paging sort sorting promise augergobox get unspent box containing token given id getbytokenid tokenid tokenid paging paging sort sorting promise augergobox get box containing token given id getunspentbyergotreetemplatehash hash hexstring paging paging promise augergobox number get unspent box given hash ergotree template searchunspentboxes req boxsearch paging paging promise augergobox number detailed search among unspent box searchunspentboxesbytokensunion req boxassetssearch paging paging promise augergobox number search among unspent box ergotreetemplatehash token getfulltokeninfo tokenid tokenid promise augassetinfo undefined get token info id gettokens paging paging promise augassetinfo number get available token getnetworkcontext promise networkcontext get current network context typescript import explorer ergolabs ergo sdk const explorer new explorer http api ergoplatform com const txid 18b30e9b40ed7061d2f87590c555d24a712df9c848a8db9dfd4affcc92d3cb02 explorer gettx txid tx console log tx using create react app cra doe support wasm workaround need override webpack config check http stackoverflow com question 59319775 use webassembly wasm create react app 59720645 59720645
/EthereansOS/unifihub-deprecated,JavaScript,http cellfinance eth link old unifi protocol ethos team support anymore developing protocol use risk
/balancednetwork/balanced-network-interface,HTML,balanced open source interface balanced decentralised exchange stablecoin platform icon network website balanced network http balanced network app app balanced network http app balanced network demo balanced network demo http balanced network demo documentation doc balanced network http doc balanced network blog blog balanced network http blog balanced network white paper link http doc balanced network technical white paper twitter balanceddao http twitter com balanceddao discord link http discord com invite 7nbmr963su list token want balanced app support new token submit pull request add community token list 1 add token logo icon repository upload token logo make sure ' easy recognise app token ' logo use default token icon 1 go http github com balancednetwork icon create new branch 2 upload png dimension 512 x 512 file name token symbol lowercase e baln png 3 submit pull request merge change main branch 2 add token community token list 1 go http github com balancednetwork balanced network interface blob master src store list communitylist json create new branch 2 add detail token bottom list ' need provide contract address chain id 1 mainnet 7 testnet token name token symbol decimal 18 standard uri logo ' uploaded http raw githubusercontent com balancednetwork icon master token ticker png 3 open pull request merge change master branch make sure reference token logo pr development install dependency bash yarn run bash yarn start lint bash yarn lint run lint task commit configuring environment optional create env file sejong testnet react app network id 83 yeouido testnet react app network id 3 mainnet react app network id 1 contribution open pull request master branch ci check run pr code style convention balanced frontend repo us airbnb code style http github com airbnb javascript naming convention pull request review guideline cosmetic fix small bug set pr mainnet review ux team large bug fix e issue transaction router set pr mainnet review ux team separate fe dev new feature smart contract testnet set pr testnet review ux team separate fe dev new feature smart contract mainnet set pr mainnet review ux team separate fe dev
/EthereansOS/ITEMS-Interface,JavaScript,item interface dapp http item eth link explainer http ethos eth link item html documentation http doc ethos wiki item
/DeFi-Space-Pirates/space-pirates-contracts,Solidity,defi space pirate div align center img src http user image githubusercontent com 38867931 169622526 55e4dcbb 35c3 42c5 aa44 10a603157080 png data canonical src http user image githubusercontent com 38867931 169622526 55e4dcbb 35c3 42c5 aa44 10a603157080 png width 300 div br defi space pirate platform built around idea imaginary space world defi pirate interact earning 2 token doubloon asteroid ecosystem consists defi nft game section looking new team member help u challenge contact u discord channel http discord gg jfguh6w6 willing join u section read roadmap doc roadmap md contribute doc contribute md team matteo leonesi github http github com matteoleonesi emanuele zini github http github com gr3it yuri paoloni github http github com yuripaoloni support team 0x56a73b9deb0d5186239116112da386f4c3416520 contact discord channel http discord gg jfguh6w6 twitter http twitter com df spacepirates
/atpar/ap-monorepo,Solidity,img src http user image githubusercontent com 45110941 99552473 55349800 29bd 11eb 9a74 53c9815c39b1 jpg width 150px build status http github com atpar ap monorepo workflow run 20tests badge svg license http img shield io badge license apache 202 0 blue svg http opensource org license apache 2 0 coverage status http coverall io repos github atpar ap monorepo badge svg branch master http coverall io github atpar ap monorepo branch master actus protocol http doc actus protocol io open source smart contract system typescript sdk issuing servicing financial asset ethereum build top free open source implementation actus standard http www actusfrf org ' interested get involved follow u twitter http twitter com par join discord http discord gg wdahdyq try one guide http doc actus protocol io guide getting started actus protocol work progress ha audited use risk documentation http doc actus protocol io package monorepo containing package related actus protocol package description protocol package protocol readme md contains solidity implementation actus protocol typescript sdk development requirement version provided confirmed work without issue newer older version package might work node http nodejs org en 10 16 0 recommended installing via nvm http github com nvm sh nvm yarn http yarnpkg com 1 16 0 recommended installing global npm package setup sh yarn install yarn bootstrap building sh yarn build testing sh yarn test actus protocol maintained img src http user image githubusercontent com 45110941 99552627 82814600 29bd 11eb 869a e224eedfcfa2 jpg width 200px http www atpar io
/FiveElementsLabs/archimedes,Solidity,h1 align center archimedes h1 archimedes strategy page http user image githubusercontent com 48695862 165321633 5c478efb 283a 494b a153 3b717d8d14aa png archimedes eth amsterdam hackaton project made five element lab http fiveelementslabs com update archimedes 1st prize gearbox protocol yearn finance tribe dao idea built distribution layer tokenized defi hedged strategy using gearbox protocol new erc 4626 vault standard short archimedes user invest complex levered strategy single click totally permissionless way enjoy benefit liquidation protection simple analytics tech stack contract solidity hardhat frontend nextjs chakra ui typescript installation test bash git clone git github com fiveelementslabs archimedes git cd archimedes yarn install frontend yarn frontend dev contract yarn compile test add env file according env example yarn test useful resource gearbox http github com gearbox protocol gearbox contract erc 4626 http eips ethereum org eips eip 4626 http github com rari capital solmate blob main src mixins erc4626 sol l177 http github com charmfinance alpha vault contract blob main contract alphavault sol recognition yearn finance tweet http user image githubusercontent com 48695862 165321620 ee212340 4ddd 4b5b 971a 63f5a660ff0b png
/Tadpole-finance/tadpole-protocol,Solidity,tadpole protocol tadpole finance open source platform providing decentralized finance service saving lending tadpole finance experimental project create open lending market user make deposit loan erc20 token ethereum network tadpole finance wa initiated forking compound finance project aug 28 2020 know project please read doc http doc tadpole finance question interacting tapdole please meet u telegram group http tadpolefinance contributing tadpole finance managed open source project invite developer participate developing project reward 10 tad supply tadpole finance platform token distributed developer contribute tadpole finance codebase reward program last 1 year starting december 2020 currently still defining rule standard join collaboration mean question let discus dev telegram group http tadpolefinance contract detail core contract tadpole protocol dl dt ctoken cerc20 cether dt dd tadpole ctokens self contained borrowing lending contract ctoken contains core logic cerc20 cether add public interface erc20 token ether respectively ctoken assigned interest rate risk model see interestratemodel comptroller section allows account mint supply capital redeem withdraw capital borrow repay borrow ctoken erc 20 compliant token balance represent ownership market dd dl dl dt comptroller dt dd risk model contract validates permissible user action disallows action fit certain risk parameter instance comptroller enforces borrowing user must maintain sufficient collateral balance across ctokens dd dl dl dt tad dt dd tadpole platform token holder token ability govern protocol via governor contract tad also used pay listing fee add new erc 20 money market dd dl dl dt jumpratemodelv3 dt dd contract define interest rate model model algorithmically determine interest rate based current utilization given market much supplied asset liquid versus borrowed dd dl dl dt careful math dt dd library safe math operation dd dl dl dt errorreporter dt dd library tracking error code failure condition dd dl dl dt exponential dt dd library handling fixed point decimal number dd dl dl dt safetoken dt dd library safely handling erc20 interaction dd dl dl dt collateralmodel dt dd contract define collateral rate model currently collateral rate defined manually admin goal make collateralmodel determine collateral rate algorithmically based various variable like token ' liquidity volatility etc dd dl dl dt ctokenfactory dt dd contract factory generate ctoken add new market tadpole user send request comptroller createmarket call ctokenfactory generate new ctoken smart contract ethereum network dd dl dl dt priceoraclev1 dt dd simple price oracle move complex oracle support open lending ecosystem dd dl discussion concern protocol open issue visit u telegram http tadpolefinance discus tadpole finance 2020
/nicholashc/Delfi,Jupyter Notebook,delfi aug 1 2019 ' neglected delfi last month happy see ' still cranking price data mainnet demand chain data ha continued explode since project started please see section beginning roadmap roadmap latest thought plan renewed commitment development content original eth denver 2019 hackathon delfi simple chain price oracle reason provides liquidity weighted index eth dai price decentralized exchange price backed eth amount required move rate 5 provides quantifiable threshold economic activity price safely support first version provides dynamic weighted index eth dai pair across three chain decentralized exchange eth dai volume liquidity uniswap eth2dai bancor delfi open track finalist award innovative award ethdenver 2019 visit aggressively unstyled web 1 0 site http delfi surge sh web 3 0 data find contract ethereum mainnet 0x04acle http etherscan io address 0x04ac1eb4bdcce9cf16b3e44d9cf3ece2d4911906 code 0xde1f1 http etherscan io address 0xde1f1ea07370b0ee063c2306c240b1e579c4ff34 code interact delfi ethereum mainnet please include one following interface contract offer slightly different functionality different use case first contract 0x04acle offer slightly expensive method return block price information save rate state also offer inexpensive method return recent saved rate information contract best us case may need periodic price update second contract 0xde1f1 offer view method appropriate web3 query slightly cheaper chain call require block price information time execution interface javascript pragma solidity 0 5 4 contract 0x04ac1eb4bdcce9cf16b3e44d9cf3ece2d4911906 contract delfiinterface &#9; &#9; get block eth dai rate &#9; comparatively expensive &#9; save rate information state &#9; approximate gas cost 250 000 &#9; return rate eth dai price wei &#9; return block block number time execution &#9; return costtomovefivepercent value required shift price 5 wei &#9; &#9; function getlatestsavedrate view external return uint256 rate uint256 block uint256 costtomovefivepercent &#9; &#9; get recent saved eth dai rate &#9; comparatively cheap may outdated &#9; read rate information state &#9; approximate gas cost 30 000 &#9; return rate last saved eth dai price wei &#9; return block block number time last save &#9; return costtomovefivepercent last saved value required shift price 5 wei &#9; &#9; function getlatestrate external return uint256 rate uint256 block uint256 costtomovefivepercent contract 0xde1f1ea07370b0ee063c2306c240b1e579c4ff34 contract delfiviewinterface &#9; &#9; get block eth dai rate &#9; view method nothing saved state &#9; approximate gas cost 235 000 &#9; return rate eth dai price wei &#9; return costtomovefivepercent value required shift price 5 wei &#9; &#9; function updatecurrentrate view external return uint256 rate uint256 costtomovefivepercent roadmap first version delfi wa quick dirty proof concept built eth denver wa focused providing chain eth dai spot price time execution goal scope still 1 provide current price data quantify economic threshold beyond price longer trustworthy 2 project ongoing cost time ask payment gas 3 code unstoppable unpausable without privileged permission even within narrow bound delfi ha room grow planned near medium term research development include review current ethereum ecosystem &#9; decentralized exchange active liquid &#9; state live near release oracle service &#9; top defi project manage price feed &#9; important research development new project related oracle problem &#9; would additional stablecoin improve delfi ' price data &#9; integrated data relayer protocol full contract refactor &#9; rework math precision weighted price calculation &#9; improving security data sampling via source better handling outlier &#9; rethink incentive user update state &#9; optimize gas cost &#9; offer access raw input user construct weighted formula &#9; write unit test &#9; audit closer look dex security &#9; uniswap ha least two class active bot many instance &#9; atomic arbitrageur large trade uniswap create temporary price move quickly bought sold guaranteed profit another exchange one tx &#9; &#9; sandwich frontrunners many uniswap trader use default 2 slippage threshold set ui buy often frontrun attacker immediately sell small profit honest user ' tx confirms user receives fewer token expected &#9; bancor ha similar issue despite global gas price restriction &#9; synthetix directly connected recently serious issue integrity one oracle &#9; delfi guard situation affecting price data public good public &#9; share idea relevant people team contact via twitter telegram discord etc &#9; contribute project working oracle related area &#9; submit resource directory like ethhub build guide &#9; redo website framework century add support wallet type ecosystem research progress recent work oracle price trading chain activity phil daian et al ' flash boy 2 0 http arxiv org ab 1904 05234 paper unpacks competitive tactic escalating arm race frontrunners actor looking exploit chain trading economic guarantee uma ' recent uma data verification model http github com umaprotocol whitepaper blob master uma dvm oracle whitepaper pdf paper provides strong framework formal economic guarantee oracle data cost corruption slightly misinterpreted nice term delfi ' concept value threshold beyond data becomes untrustworthy compound ' new oracle compound protocol seems active repo development open oracle http github com compound finance open oracle delfiprice sol great name documentation limited stage seems like medianized feed allows user submit new price via signature compound ha long stated would decrease control price feed project matures incentivizing oracle update polaris http github com marbleprotocol polaris take backdated checkpoint uniswap erc20 price interesting subscription payment model provides funding incentivize poke update contract state seemed quite active mainnet awhile ha since become dormant proof work data source tellor http github com decentralizedderivatives mineableoracle proof work oracle proposes incentive model user submit query miner return request part new block miner providing valid data rewarded token defi price feed makerdao makerdao ' price feed http developer makerdao com feed likely important source chain data network central protocol many application rely integrity data oracle composed multiple independent operator submit price information certain condition medianized parse outlier integrity system fall mkr governance mechanism seems like mcd similar approach though unique oracle asset additional security measure compound compound set price oracle contract http etherscan io address 0x02557a5e05defeffd4cae6d83ea3d173b272c904 control ' updated frequently needed call permissioned address compound v1 used maker ' price feed dai v2 source price bittrex poloniex binance coinbase averaging limit large sudden price movement synthetix synthetix currently relies central oracle contract http etherscan io address 0x70c629875dadbe702489a5e1e3baae60e38924fa permissioned address update notably recently serious security issue http blog synthetix io response oracle incident failed api one oracle caused 1000x price one token pair error wa quickly exploited arb bot though fund later returned internal stability susd synthetic token supposed maintained user incentive though often trade well peg outside market dydx v2 dydx pull dai data oracle contract http etherscan io address 0x787f552bdc17332c98aa360748884513e3cb401a code eth2dai uniswap maker ' price feed eth price data come directly maker ' feed dharma dharma lever underwrites loan set rate determines risk trusted oracle set current set system us managed oracle http www setprotocol com pdf managed set whitepaper pdf contract determine set rebalanced future exploration suggest move towards trust minimized http medium com set protocol product teaser trustless rebalancing 5aa77ab404b6 system nuo nuo http help nuo network article doe nuo ' price feed work us volume weighted average centralized exchange source liquidity uniswap kyber price feed supposed fenced within range price crash leading unexpected liquidation bzx fulcrum us kyber ' price feed turn composed independently managed liquidity reserve set rate fairly robust high volume token like dai mkr however illiquid token may single reserve setting price active development oracle project oraclaize provable chainlink uma zap rhombus gardener witnet truebit town crier augur prediction market helena prediction market decentralized exchange snapshot relevant dexes aug 2019 wide range decentralization represented list liquidity pool uniswap kyber bancor chain order book eth2dai etherdelta forkdelta idex relayers indexer radarrelay airswap tokenion ddex auction dutchx stablecoin ecosystem stablecoins dai usdc tusd gusd usd tether erc 20 pax derivative cdai compound cusdc compound susd synthetix idai bzx iusdc bzx
/linear-protocol/LiNEAR,Rust,linear liquid staking near protocol linear protocol liquid staking solution built near protocol linear unlocks liquidity staked near creating staking derivative engaged various defi protocol near aurora also enjoying 10 apy staking reward underlying base token linear cornerstone piece near aurora defi ecosystem documentation http doc linearprotocol org contract linear smart contract implemented near rust sdk http near sdk io core contract located contract linear several mock contract made testing various scenario via simulation test v1 0 0 contract release http github com linear protocol linear release tag v1 0 0 ha audited blocksec http www blocksecteam com according blocksec ' auditing report http github com linear protocol audit blob main blocksec 20 20security 20audit 20report 20for 20linear 20 20202204 pdf critical issue found low risk minor issue reported fixed deployment mainnet linear contract linear token linear protocol near http explorer near org account linear protocol near testnet linear contract linear token linear protocol testnet http explorer testnet near org account linear protocol testnet development build build artifact make build linear make linear test adopt unit test heavily used workspace j http github com near workspace j test framework test major scenario workflow linear smart contract sandbox http doc near org doc develop contract sandbox environment lint rustfmt clippy also required making change contract run npm test folder first set environment run lint rustfmt clippy make lint run test make test run linear simulation test run make test linear run specific test file test file filename make test linear print contract log log 1 make test linear deploy cli tool made help deploy manage contract order use run npm first cli argument could passed environment variable well li prefix deploy contract bin cli j deploy linear testnet init contract bin cli j init linear testnet signer owner testnet owner id owner testnet release checkout release branch main git checkout b release v1 0 x make sure test pas make test update version contract linear cargo toml git commit version update push release branch git commit ' v1 0 x ' git push origin release v1 0 x create pr release branch pr merged publish new release github manage drain drain totally remove validator candidate list fund distributed among others 1 make sure currently unstaked balance call epoch withdraw withdraw 2 set validator weight 0 done either removing validator node list set weight 0 directly run set node command update weight 3 run drain unstake unstake fund validator 4 4 epoch run drain withdraw withdraw restake fund design terminology total share amount total amount linear wa minted minus burned total staked near amount total amount near wa staked user contract effectively 1 amount near wa deposited contract ' yet staked validators 2 amount near ha already staked validators note amount near pending release already released ' withdrawn considered stake share price much near doe one stake share linear worth equal total near amount total share amount information developer useful information developer ' building linear linear app url mainnet http app linearprotocol org testnet http testnet linearprotocol org linear contract address near mainnet linear protocol near http explorer near org account linear protocol near testnet linear protocol testnet http explorer testnet near org account linear protocol testnet linear erc20 contract aurora bridged via rainbow bridge mainnet 0x918dbe087040a41b786f0da83190c293dae24749 http aurorascan dev token 0x918dbe087040a41b786f0da83190c293dae24749 testnet 0xe4979cac5d70f01697f795f0ad56bbca05912c44 http testnet aurorascan dev token 0xe4979cac5d70f01697f795f0ad56bbca05912c44 data source http github com aurora near bridge asset tree master token linear oracle oracle aurora mainnet linear near flux 0x8f975ac6defd2c9d50c58babf4b1f880e6de7996 http aurorascan dev address 0x8f975ac6defd2c9d50c58babf4b1f880e6de7996 linear usd flux 0x2ebf49106814fcd8685ed6c8a7315ca528cda232 http aurorascan dev address 0x2ebf49106814fcd8685ed6c8a7315ca528cda232 oracle near mainnet linear near flux near env mainnet near view fpo opfilabs near get entry ' pair linear near provider opfilabs near ' linear usd price oracle near env mainnet near view priceoracle near get price data ' asset id linear protocol near ' detail flux oracle found flux doc http doc fluxprotocol org doc live data feed fpo live network pair
/WeaverFi/weaverfi,TypeScript,weaverfi banner banner npm package query defi codeql http github com weaverfi weaverfi action workflow codeql analysis yml badge svg version http img shield io github package json v weaverfi weaverfi downloads http img shield io npm dw weaverfi nodejs http img shield io badge node j 6da55f style badge logo node j logocolor white typescript http img shield io badge typescript 23007acc svg style badge logo typescript logocolor white img src http img shield io twitter follow weaver fi style social http twitter com weaver fi img width 150px src http user image githubusercontent com 3408362 174302052 6757cf66 f454 4298 b150 2df023ab69e8 png http discord com invite dzadcq7y75 contributing contribution guideline found contributing md banner banner png weaverfi usage install package using following npm weaverfi importing package done following import weaver ' weaverfi ' option suit different app configuration import weaverfi ' weaverfi ' import weaverfi ' weaverfi ' const weaver require ' weaverfi ' default weaverfi object weaver prefer import way contains global method weaverfi getallprojects weaverfi getalltokens weaverfi getalltokenprices supported chain ha method used weaverfi eth getwalletbalance wallet example global method available getallchains getallchaininfo getallprojects getalltokens getalltokenprices getnativetokenprices fetchprices getallbalances wallet chain method available query address abi method args queryblocks address abi event querysize args start end isaddress address gettxcount address getwalletbalance wallet getprojectbalance wallet project getallprojectbalances wallet getnftbalance wallet gettokens gettokenlogo symbol getgasestimates getinfo getprojects gettokenprices gettokenprice address decimal updatetokenprice pricedata fetchprices eth chain also contains resolveens name lookupens address fetchavatarens name method chain supported eth ethereum bsc binance smart chain poly polygon ftm fantom avax avalanche one harmony cronos cronos op optimism arb arbitrum type extra type used within sdk located type file needed imported weaverfi dist type example import type chainid address token ' weaverfi dist type '
/selendra/selendra,Rust,selendra interoperable nominated proof stake network developing running substrate based evm compatible blockchain application read selendra org http selendra org mission open opportunity individual business community making access emerging blockchain product service reality member society bring blockchain evolution step closer mass ordinary people help accelerate advancement strengthen industry whole acknowledgement selendra project inspired excellent work many growing project polkadot ecosystem many blockchain developer around world progress past present future possible thanks open source software community framework tool thank work progress update information progress please refer token economy working paper detail
/yieldgate/yieldgate,TypeScript,yieldgate mit license http img shield io badge license mit blue svg http yieldgate mit license org codecov http codecov io gh yieldgate yieldgate branch develop graph badge svg token y1bvbcajk5 http codecov io gh yieldgate yieldgate contract yieldgate protocol allows anyone start earning building product programmable yield built top aave polygon others yieldate http imgur com j316o86 png yieldgate getting started bash install update pnpm npm g pnpm install project dependency pnpm install copy fill environment cp package frontend env local example package frontend env local nano package frontend env local cp package contract env example package contract env nano package contract env generate type artifact start frontend pnpm run dev start frontend type generated previously pnpm run dev frontend start local hardhat network deploy contract pnpm run deploy contract stack based nextjs ethereum starter http github com changoman nextjs ethereum starter typescript http www typescriptlang org hardhat http hardhat org typechain http github com ethereum typechain wagmi sh http wagmi sh ether j http doc ether io v5 chakra ui http chakra ui com linting eslint http eslint org formatting prettier http prettier io testing jest http jestjs io react testing library http testing library com doc react testing library intro
/Martin8617/Defi-Wallet-for-Raspberry-Pi,Shell,image http user image githubusercontent com 79512509 135573091 5b12a44c 3654 459e 964b 0429d772763a png defi wallet raspberry pi official defichain appimage release defi wallet linux work raspberry made compiled version defi wallet raspberry pi 4b 4gb official raspberry pi 32 bit called armv7l version different linux x86 64 distribution well different raspberry pi 64 bit version arm8 respective arm64 compiled raspberry pi appimage base defichain original source code code wa modyfied wa 100 taken defichain repository ok npm workspace file package json includes build arm processor note compiled node wallet raspberry pi raspberry bullseye debian v11 got feedback therefore upgrade raspberry version mine documentation defichain com http defichain com defich app http github com defich app build scratch http github com martin8617 defi wallet raspberry pi blob main build app md defi wallet app use defi wallet interact defichain wallet dfi wrapped btc eth usdt liquidity mine use dex create masternodes defi wallet 02 http user image githubusercontent com 79512509 179745384 211f408b 8476 4254 bb34 2798e49ec7d7 png actually 3 different way ii iii set defi wallet desktop app including defi node however ' mix decide one different way guess decided use appimage setup raspberry pi offical raspberry pi http www raspberrypi org software next install defi wallet raspberry pi 1 using appimage page http github com martin8617 defi wallet raspberry pi release 2 using script definode http github com definode definode blob main readme md download script execution follow step descripted build defi wallet setup raspberry pi defi node raspi image 3 using raspberry pi image provided google drive http drive google com drive folder 1ygwep8gqt5jnypeejtz 0aqh k04m7jj usp sharing raspberrypi imager http www raspberrypi org software howto start download desktop app http github com martin8617 defi wallet raspberry pi release raspberry pi check official defichain release http github com defich app release latest downloadable installers window mac linux however release raspberry ' download appimage save file want e g home user desktop mark file executable right klick icon choose preference run appimage ' wait one new thing consider install dependency sandbox appimages based electron require kernel configured certain way allow sandboxing work intended many distribution come configured box raspberry specially new raspberry bullseye doe allow run appimages issue fixed installing sudo apt get install flatpak defi wallet initiate guide information available defichain wiki http defichain wiki com wiki defi wallet howto continue buy hardware definode http github com definode definode find shopping list hardware raspberry pi node well 3d program defichain logo good installation guide setup raspberry pi find well watch definode druckservice http www gabrielkunzer com definode order defi case run masternode remember defi wallet includes running fullnode called defi node top setup fullnode masternode defichain wiki http defichain wiki com wiki masternode installation extended tell step setup masternode guy mydeficha http mydeficha serf operating masternode license using defi wallet raspberry pi repo user agree bound term license license last updated august 14 2021
/madfish-solutions/templewallet-dapp,TypeScript,templewallet dapp module module required provide communication dapps temple wallet expose unified interface interaction quick start install bash yarn add taquito taquito temple wallet dapp usage typescript import templewallet temple wallet dapp async try const available await templewallet isavailable available throw new error temple wallet installed note use templewallet isavailable method web application fully loaded alternatively use method templewallet onavailabilitychange track availability real time const wallet new templewallet super dapp await wallet connect carthagenet const tezos wallet totezos const accountpkh await tezos wallet pkh const accountbalance await tezos tz getbalance accountpkh console info address accountpkh balance accountbalance const counter await tezos wallet kt1djykruvfujfkw6nlyafarqkufcwhukxvt const operation await counter method increment 1 send await operation confirmation const countervalue await counter storage console info count countervalue catch err console error err check permission typescript import templewallet temple wallet dapp async try const available await templewallet isavailable available throw new error temple wallet installed const permission await templewallet getcurrentpermission alternatively use method templewallet onpermissionchange track current permission real time console info permission print rpc string pkh string publickey string permission exists null const wallet new templewallet super dapp permission console info wallet connected print true permission exists false wallet connected await wallet connect carthagenet const tezos wallet totezos catch err console error err sign typescript import templewallet temple wallet dapp async try const wallet new templewallet super dapp hex string const signature await wallet sign buffer hello world tostring hex catch err console error err demo find example counter dapp repo http github com madfish solution counter dapp api explore auto generated full api doc doc readme md probably would interested templewallet class doc class templewallet md method local development list command probably find useful npm run dev yarn dev run project development watch mode project rebuilt upon change library rebuilt make edits npm run build yarn build bundle package dist folder package optimized bundled rollup multiple format commonjs umd e module
/geldmacher/Cake-to-CoinTracking-Converter,JavaScript,cake cointracking converter cli script translate cake http app cakedefi com ref 401824 export data valid cointracking http cointracking info ref g905622 import important make backup trade import new data via script even important tax advice way script import data might wrong feature support german english cointracking import english used default display simple overview current holding cake overview displayed cli script execution need export data complete cake usage time otherwise overview nonsense display simple overview monthly income cake overview displayed cli script execution us cake ' fiat valuation transaction chosen export currency instead cointracking valuation data keep mind cointracking account currency match exported transaction valutation currency cake feature disabled via use cointracking fiat valuation cointracking data used generates trade liquidity mining swap 50 discount operation case liquidity mining operation script generates trade used asset eg btc dfi corresponding pool token eg btc dfi vice versa even correct fiat valuation pool token transmitted cointracking consolidate data staking operation daily basis midnight experimental drastically reduce import amount data row cointracking switch via consolidate staking data support defichain dex swap operation dex swap converted cointracking trade additional swap fee important consolidation feature experimental please check cointracking import carefully make backup let know something wrong cannot switch normal mode script consolidation mode consolidation mode generating tx id ' identify imported data row clean solution switching mode would delete complete data set cointracking reimport afterwards another caveat consolidation mode need import cake ' data complete day otherwise staking data would lost consolidation mode consolidates staking data day defines new tx id day day completed data added cointracking day installation 1 node j http nodejs org required run script download install current lts version 2 install via npm cli bundled node j shell npm install g cake cointracking converter usage 1 get cake transaction export http app cakedefi com transaction csv coin generate cointracking import via cli 2 example cli command option option shell cake2ct cake csv path cake export file csv ct csv path cointracking import file csv language de 3 import generated csv via cointracking csv import http cointracking info import import csv select file check import next page import data everthing fine option cake csv path cake csv ct csv path cointracking csv creates one existing language optional used language cointracking import file de en supported default en display holding overview optional display simple overview current holding cake need export data complete cake usage time otherwise overview nonsense consolidate staking data optional consolidate data staking operation daily basis midnight use cointracking fiat valuation optional use fiat transaction valuation cointracking instead valuation data cake display income overview optional display simple overview monthly income cake supported cake operation deposit incl dex deposit withdrawal withdrew swap withdrawal fee paid swap fee entry staking wallet exit staking wallet referral reward referral signup bonus entry staking wallet signup bonus entry staking wallet referral signup bonus promotion bonus entry staking wallet promotion bonus lending reward lending dfi bonus entry staking wallet lending dfi bonus confectionery lending dfi bonus staking reward 5 year freezer reward 10 year freezer reward freezer promotion bonus entry staking wallet freezer promotion bonus freezer staking bonus freezer liquidity mining bonus unstake fee bonus airdrop entry staking wallet bonus airdrop add liquidity x x yyy remove liquidity x x yyy added liquidity removed liquidity liquidity mining reward x x yyy swapped swapped claimed 50 discount used 50 discount sponsor made lot easy manage cake data cointracking show love option heart github sponsor http github com sponsor geldmacher heart defichain dfi address df1qynftu7aqh3qm8k004zxp804h00wuzcm5rqv8wa heart bitcoin btc address bc1q04z9xnuf9adac042k44q9v0j4ur7exkr5tp85t heart ethereum eth address 0xab1c000a139b18a5b3f48cda0e9eef57ef842902 something missing open issue http github com geldmacher cake cointracking converter issue make pr
/JellyfishSDK/playground,TypeScript,deprecated following migration path outline defich 580 http github com defich jellyfish issue 580 repository ha conslidated defich jellyfish apps playground http github com defich jellyfish tree main apps playground api ci http github com defich playground action workflow ci yml badge svg http github com defich playground action workflow ci yml codecov http codecov io gh defich playground branch main graph badge svg token kbcc9qsrra http codecov io gh defich playground maintainability http api codeclimate com v1 badge c206ba9a4fdf0699229c maintainability http codeclimate com github defich playground maintainability standard http badgen net badge code 20style standard blue icon typescript http github com standard standard defi playground defi playground defi blockchain engineer build defi application without running node running defi playground docker compose yml yaml version ' 3 7 ' service traefik image traefik v2 4 command api insecure true provider docker true entrypoints web address 3000 port 3000 3000 8080 8080 volume var run docker sock var run docker sock ro defi blockchain image defi defichain 1 7 0 command defid printtoconsole rpcallowip 0 0 0 0 0 rpcbind 0 0 0 0 rpcuser playground rpcuser rpcpassword playground rpcpassword masternode operator mswsmvsygmj1fzdmbbxw2qw3kvqav2fkiy regtest 1 txnotokens 0 logtimemicros txindex 1 acindex 1 amkheight 0 bayfrontheight 1 bayfrontgardensheight 2 clarkequayheight 3 dakotaheight 4 dakotacrescentheight 5 eunosheight 6 defi whale image ghcr io defich whale latest depends defi blockchain environment whale defid url http playground rpcuser playground rpcpassword defi blockchain 19554 whale database provider memory whale network playground label traefik http router whale priority 1 traefik http router whale rule pathprefix version v 1 9 playground traefik http router whale entrypoints web traefik http service whale loadbalancer server port 3000 defi playground image ghcr io defich playground latest depends defi blockchain environment playground defid url http playground rpcuser playground rpcpassword defi blockchain 19554 label traefik http router playground priority 0 traefik http router playground rule pathprefix version v 1 9 playground rpc traefik http router playground entrypoints web traefik http service playground loadbalancer server port 3000 developing contributing thanks contributing appreciate help get feel free make pull request guide along way make merge able documented contributing guideline contributing md need node v14 npm v7 project ' required set npm workspace http doc npmjs com cli v7 using npm workspace shell npm install testing three type test required defi playground type test required docker defichain testcontainers http github com defich jellyfish tree main package testcontainers automatically spin regtest instance testing number container spin concurrently dependent jest maxconcurrency count test known flaky due usage multiple docker container test concurrency unit testing unit testing created test individual unit component software unit test closely co located together unit follow naming semantic spec placed together directory code testing code coverage collected end end testing top unit test provides additional testing test entire lifecycle defi playground dependency module integrated together expected follow naming semantic e2e placed directory component code coverage collected endpoint meant consumed developer testing done playground api cient dogfooding finest test written package playground api client test test e2e aspect endpoint code coverage coverage collected unit e2e test pull request main codecov testing le shell jest publishing docker image published automatically github container registry ghcr io defich new github release http github com defich playground release triggered github action automatically build docker image repo publish two image created release targeting linux amd64 linux arm64 latest tag always updated last release semantic release enforced release intellij idea intellij idea ide choice writing maintaining library intellij ' file included convenience basic toolchain setup use intellij totally optional security issue discover security vulnerability defi playground please see submit privately http github com defich github blob main security md license disclaimer using defi playground repo user agree bound term license license fossa status http app fossa com api project git 2bgithub com 2fdefich 2fplayground svg type large http app fossa com project git 2bgithub com 2fdefich 2fplayground ref badge large
/mstable/mStable-subgraphs-monorepo,TypeScript,mstable subgraphs mstable http mstable org subgraphs one handy repo href http www youtube com watch v l0vrso3 hpu img src http raw githubusercontent com mstable mstable subgraphs monorepo master graphtasia png width 430 installation project us yarn workspace http classic yarnpkg com en doc workspace lerna http github com lerna lerna bash first enable yarn workspace needed yarn config set workspace experimental true install link yarn yarn lerna bootstrap force local yarn lerna link force local prepare subgraphs first time yarn prepare config package mstable subgraph utils schema entity shared item e g metric token utility interacting data type performing conversion script e g merging graphql schema mstable protocol subgraph subgraph mstable protocol encompasses massets basset saving contract metric mstable governance subgraph subgraph mstable governance contract encompasses mta staking staking reward voting power metric mstable ecosystem subgraph subgraph mstable ' wider ecosystem encompasses earn pool merkle drop pool fund management metric development graphql type package utils stitched together yarn codegen directory type consumed package import comment e g import token schema subgraph created via codegen subgraph share config different network prepared deployed chosen network preparing subgraph network bash configures subgraph mainnet polygon yarn prepare config change network testnet cd package protocol yarn prepare ropsten
/DeriOne-Protocol/derione-v1,Solidity,first version deployed 0x1604ac39a9e19fb8c1d8ccf3ec42e80d69f4d400 http etherscan io tx 0x404cf70bda1cca4e7519579c0e601b112eb88b29f2d0df5faa59f43c4ccb83ab motivation last december found put option opyn wa much cheaper one hegic opyn cost 2 5 buy 1 eth put option strike price 360 expiry 24days whereas hegic cost 57 buy 1 eth put option strike price 360 expiry 21 day ten option protocol today since protocol could different liquidity unique pricing formula source volatility ' useful get best option across option protocol trader developer top protocol aggregate option secondary market well e g hegic siren etc contract doe version get best eth option charm v02 hegic v888 add protocol type asset time logical extension aggregator would expanding derivative like swap future forward testing need update blocknumber hardhat config file sometimes otherwise might get wrong value testing
/The-Poolz/Poolz-Back,JavaScript,poolz back build status http travis ci com poolz poolz back svg branch main http travis ci com poolz poolz back codecov http codecov io gh poolz poolz back branch master graph badge svg http codecov io gh poolz poolz back codefactor http www codefactor io repository github poolz poolz back badge http www codefactor io repository github poolz poolz back local install npm tuffle npm truffle compile truffle migrate truffle test check code coverage truffle run coverage
/maxwolff/dinoswap,JavaScript,dinoswap fork uniswap http github com uniswap contract vyper contract stub missing test coverage swap erc20s erc20s flash borrowing support custom fee price formula installation yarn install install solc protip build source http solidity readthedocs io en latest installing solidity html building source flag cvc4 yarn test &#9; us eth saddle http www npmjs com package eth saddle testing yarn test without recompiling todo add contract low slippage formula http devpost com software squink stable pair consider adding ctoken accounting keep reserve equal value test event etc model model http doc google com spreadsheet 19egfsbu0kc3cnimvgjqdadctug3givwyhngfrkgbfoe edit gid 0 contribution welcome
/lwYeo/Crypto-LP-Compounder,C#,crypto lp compounder autocompound lp without fear rugpull addtional 3rd party autocompound farm take control lp reward token directly processed project ' farm using pc laptop via console command line note beta software 1 performance fee developer every harvest process forget gas fee required process work recommended seperate wallet use software responsible usage investment financial advisor please research using software built net 6 sdk compiled work window linux macos release found http github com lwyeo crypto lp compounder release license ' crypto lp compounder ' licensed apache license version 2 0 license http www apache org license license 2 0 library included software following license term nethereum http github com nethereum nethereum blob master license md json net http github com jamesnk newtonsoft json blob master license md usage like project wish support may donate following address ethereum bsc polygon fantom harmony etc 0x9172ff7884cefed19327adace9c470ef1796105c suggestion feedback please feel free raise issue github currently following ha implemented token suggest please feel free raise issue well wftm tomb tshare wftm yel yel wbnb moma moma please refer example found sample setting file default web api accessed following url changed setting json file http 127 0 0 1 5050 api instance http 127 0 0 1 5050 api summary http 127 0 0 1 5050 api log instance name http 127 0 0 1 5050 api log process instance name
/stableex/sx.curve,C++,sx curve sx curve amplified amm automated market maker swap liquidity pool designed efficiently stable currency highly correlated asset audit href http github com slowmist knowledge base blob b717756a17702e604ab2dc8b072a2f127304b17d open report smart 20contract 20security 20audit 20report 20 20sx curve pdf img height 30px src http user image githubusercontent com 550895 132642025 b4dacacd e1c1 4a02 9bb1 09ae359eb1f9 png slowmist audit 2021 07 href http www knownsec com img height 30px src http user image githubusercontent com 550895 120322175 1fe4fd00 c2b2 11eb 96bb 402dec711e38 png knownsec 2021 05 href http s3 eu central 1 wasabisys com audit certificate smart 20contract 20audit 20certificate 20 20sx curve final pdf img height 30px src http user image githubusercontent com 550895 132641907 6425e632 1b1b 4015 9b84 b7f26a25ec58 png sentnl audit 2021 03 sha256 checksum local bash git checkout v1 0 3 eosio cpp version eosio cpp version 1 7 0 eosio cpp curve sx cpp include shasum 256 curve sx wasm a9aa7e60901cfc3ffe481099daa7f13f0b9cdba19c64ffd18aa5789932336f8c curve sx wasm eos mainnet bash cleos u http eos greymass com get code curve sx code hash a9aa7e60901cfc3ffe481099daa7f13f0b9cdba19c64ffd18aa5789932336f8c quickstart convert memo schema swap min return pair id bash cleos transfer myaccount curve sx 10 0000 usdt swap 0 sxa contract tethertether receive 10 0000 usn danchortoken deposit memo schema deposit pair id bash cleos transfer myaccount curve sx 10 0000 usdt deposit sxa contract tethertether cleos transfer myaccount curve sx 10 0000 usn deposit sxa contract danchortoken cleos push action curve sx deposit ' myaccount sxa 200000 ' p myaccount receive 20 0000 sxa lptoken sx withdraw memo schema n bash cleos transfer myaccount curve sx 20 0000 sxa contract lptoken sx receive 10 0000 usdt tethertether 10 0000 usn danchortoken cancel bash cleos transfer myaccount curve sx 10 0000 usdt deposit sxa contract tethertether cleos push action curve sx cancel ' myaccount sxa ' p myaccount receive 10 0000 usdt tethertether c c include curve sx hpp user input const asset asset 10 ' 0000 usdt 4 const symbol code pair id symbol code sxa calculated output const asset sx curve get amount pair id 10 0000 usn dependency sx utils http github com stableex sx utils sx rex http github com stableex sx rex eosio token http github com eosio eosio contract testing requirement bat http github com sstephenson bat bash automated testing system eosio http github com eosio eos nodeos core service daemon cleos command line tool blanc http github com turnpike blanc toolchain webassembly based blockchain contract bash script build sh script restart sh test sh
/pravinba9495/kryptonite,TypeScript,p align center img width 100 src http www maxpixel net static photo 1x growth green cartoon crystal green cartoon 307264 png alt kryptonite logo br h1 kryptonite h1 p issue http img shield io github issue raw pravinba9495 kryptonite license http img shield io github license pravinba9495 kryptonite release http img shield io github v release pravinba9495 kryptonite include prereleases automated crypto swapping bot written node j support multiple protocol like uniswap curve sushiswap balancer etc using 1inch aggregatorv4 router active development production ready yet table content introduction introduction feature feature setup setup requirement requirement parameter parameter usage usage instruction instruction example example disclaimer disclaimer development development maintainer maintainer license license introduction project started hobby figure way keep eye crypto market juggling day job crypto market highly volatile cryptocurrencies fluctuate price drastically within second eye screen unless trader profession cannot actively manage portfolio make meaningful profitable move prevent loss people asset hosted wallet exchange like coinbase binance set limit stop loss order however people crypto asset self custodial wallet exchange like coinbase binance limited option kryptonite set limit buy sell stop loss order execute automatically behalf without manually confirming time although choose confirm one manually kryptonite react market crash quickly execute stop loss order protect investment profit importantly kryptonite strives reduce anxiety level uncertain market think kryptonite autopilot crypto swapping kryptonite doe execute swap exchange like coinbase binance simply cannot access wallet ' private key private key required kryptonite execute order behalf feature bundled webserver ui view past swap current metric portfolio performance far development executes buy sell stop loss order manually using confirmation via telegram bot executes buy sell stop loss order automatically based set limit support multiple protocol like uniswap curve sushiswap balancer etc using 1inch aggregation protocol api setup requirement parameter following command line parameter supported div align center table thead tr th parameter th th description th th type th th default th tr thead tbody tr td privatekey td td wallet private key td td string td td td tr tr td publickey td td wallet public address td td string td td td tr tr td chainid td td chain use allowed option 1 ethereum 10 optimism 56 binance smart chain 137 polygon matic 42161 arbitrum td td integer td td 137 td tr tr td stabletoken td td stable token erc20 use example usdc usdt dai td td string td td usdc td tr tr td targettoken td td target erc20 token hold example weth wmatic link td td string td td weth td tr tr td stabletokentickerkraken td td ticker symbol stable token kraken example usdcusd daiusd usdtusd td td string td td usdcusd td tr tr td targettokentickerkraken td td ticker symbol target token kraken example ethusd btcusd maticusd td td string td td maticusd td tr tr td slippagepercent td td slippage tolerance swap example 1 2 50 td td integer td td 1 td tr tr td redisaddress td td redis server host example 192 168 1 100 6379 td td string td td td tr tr td bottoken td td telegram bot token used send receive transaction confirmation td td string td td td tr tr td chatid td td telegram chat id receive authorize bot first time td td string td td td tr tr td password td td password share bot authorize admin td td string td td kryptonite td tr tr td minprofitpercent td td minimum profit percent bot execute sell order td td integer td td 50 td tr tr td mode td td mode operation allowed option manual auto td td string td td manual td tr tbody table div usage shell docker run name kryptonite pravinba9495 kryptonite latest kryptonite privatekey private key publickey public address chainid chain id stabletoken stable token targettoken target token stabletokentickerkraken stable token ticker kraken targettokentickerkraken target token ticker kraken slippagepercent slippage percent redisaddress redis address bottoken bot token chatid chat id password password minprofitpercent min profit percent mode mode operation instruction example log swap example http raw githubusercontent com pravinba9495 kryptonite master asset log example png swap swap example http raw githubusercontent com pravinba9495 kryptonite master asset swap example png disclaimer using kryptonite understand agree might bug code could potentially lead financial loss responsible use tool financial loss may cause nobody else shall held accountable regard stop using tool agree conduct due diligence consult financial advisor making investment decision development kryptonite still active development contribution always welcome contributor href http github com pravinba9495 kryptonite graph contributor img src http contrib rock image repo pravinba9495 kryptonite license mit
/fsn-dev/fsn-go-sdk,Go,fusion go sdk repository first run 1 clone repository mkdir p gopath home go src github com fusionfoundation cd gopath home go src github com fusionfoundation git clone http github com fsn dev fsn go sdk git cd fsn go sdk 2 build project set env goproxy ' get package golang org export goproxy http goproxy io make fsn cli take fsn cli example 3 run project bin fsn cli take fsn cli example commitment note 1 please make new top level directory new project 2 please provide help information command sub command 3 please run make fmt format code committing 4 please run script add license sh newfile add lincense new file common directory efsn fusion base code import http github com fusionfoundation efsn fsnapi supply api build sign transaction etc bin binary output directory script script used manage project build sh build specified project gofmt sh format go file add license sh add license content file header vim set 4 sts 4 sw 4 et
/wrappedfi/wrapped_token_stacks,TypeScript,p align center href http wrapped com img src wrapped png alt wrapped com width 600 style border none p wrapped token stack blockchain row 1 status github contributor http img shield io github contributor wrappedfi wrapped token stack http github com wrappedfi wrapped token stack graph contributor github commit activity http img shield io github commit activity w wrappedfi wrapped token stack http github com wrappedfi wrapped token stack graph contributor github star http img shield io github star wrappedfi wrapped token stack svg http github com wrappedfi wrapped token stack stargazer github repo size http img shield io github repo size wrappedfi wrapped token stack github http img shield io github license wrappedfi wrapped token stack color blue http github com wrappedfi wrapped token stack blob master license row 2 link profile website wrapped com http img shield io website green red http wrapped com svg http wrapped com blog http img shield io badge blog green http medium com wrapped doc http img shield io badge doc green http doc wrapped com twitter wrappedfi http img shield io twitter follow wrappedfi style social http twitter com wrappedfi row 3 detailed status github pull request label http img shield io github issue pr raw wrappedfi wrapped token stack http github com wrappedfi wrapped token stack pull github issue http img shield io github issue raw wrappedfi wrapped token stack svg http github com wrappedfi wrapped token stack issue mainnet deployment xbtc sp3dx3h4feyzjz586mfbs25zw3hzdmew92260r2pr wrapped bitcoin http explorer stack co txid sp3dx3h4feyzjz586mfbs25zw3hzdmew92260r2pr wrapped bitcoin chain mainnet xusd sp2tzk01nkdc89j6ta56sa47sdf7rthyeq79aab9a wrapped usd http explorer stack co txid 0xfe7848716ba423dfaf664a975771f75763720b0be8a0759a56b2d80a45692ca7 chain mainnet token implement sip 10 standard http github com stacksgov sip pull 5 ha reviewed audited http github com wrappedfi wrapped token stack blob main ncc security audit pdf ncc group http www nccgroup com sip 10 standard standard trait definition fungible token stack network http www stack co trait expose function token metadata get name get symbol get decimal get token uri get token uri method mimic functionality found erc721 standard expectation token owner set reference external uri contains extra metadata token logo agreement documentation addition metadata expose function querying current total supply token balance specific account get balance get total supply finally defines function transferring token transfer trait defined ft trait clar token restriction following public function available similar erc1404 detect transfer restriction message transfer restriction restriction put place would prevent transfer succeeding standard transfer function would fail u403 error code 403 wa chosen mimic http 403 forbidden status wallet check detect transfer restriction function determine transfer wa restricted return human readable message found calling message transfer restriction user take corrective action trait defined restricted token trait clar initialization deployed token different name symbol etc principal deploys contract call initialize function contract set initial value function called set following token name token symbol decimal initial owner principal reason item set dynamically contract ha audited ' want accidentally make change source code could affect functionality also contract represents registered security may necessary deployer e g wrapped never hold ownership role contract role based access control token ha certain role built allow administrative action one principal granted role principal granted multiple role following role available owner minter burner revoker blacklister default account specified initialize call granted owner role owner role role add remove account role note owner removed role administration performed time owner remove great care must taken ensure another owner still exists also mean admin functionality irrevocably disabled removing role principal administrative capability minting principal minter role mint new token principal total supply token increased new token minted burning principal burner role burn new token principal total supply token decreased existing token burned revoking principal revoker role move token principal another principal blacklisting principal blacklister role add remove principal blacklist transaction sending token blacklisted account denied transaction fail dev install dependency yarn install testing yarn test question feedback stop telegram http wrappedfi send u email mailto help wrapped com
/maxwolff/rho.js,TypeScript,rho j javascript reference implementation automated market maker interest rate swap protocol includes scenario test runner cli quick testing usage yarn install yarn test cli run action one one print intermediate state yarn cli init user max jared coburn yarn cli mm yarn cli apply type openpayfixedswap amount 300 jared yarn cli apply type openreceivefixedswap amount 300 coburn yarn cli read yarn cli close resource whitepaper http maxcwolff com rho pdf spec http maxcwolff com rhospec pdf spreadsheet http doc google com spreadsheet 1w2eedekwvx7hag0p8vp5h9kbmogbxvopb6utzoov1io edit usp sharing interest rate model http observablehq com 8a889476c0bddfff
/tidelabs/tidechain,Rust,tidechain repo contains runtimes tidechain lagoon network readme provides information installing tidechain binary specific guide like validator see tidechain wiki doc run validator md installation wish run tidechain node without compiling may either run latest binary release http github com tidelabs tidechain release page building install via cargo make sure support software installed build source section section want install tidechain path bash cargo install git http github com tidelabs tidechain tag version tidechain locked build source ' like build source first install rust may need add cargo ' bin directory path environment variable restarting computer automatically bash curl http sh rustup r ssf sh already rust installed make sure ' using latest version running bash rustup update done finish installing support software bash sudo apt install build essential git clang libclang dev pkg config libssl dev build client cloning repository running following command root directory repo bash git checkout latest tagged release script init sh cargo build release note compilation memory intensive process recommend 4 gib physical ram swap available keep mind build hit swap tends slow build source docker also build source using tidechain ci docker image http hub docker com r tidelabs tidechain ci bash git checkout latest tagged release docker run rm w shellhere tidechain v pwd shellhere tidechain tidelabs tidechain ci latest cargo build release sudo chown r id u id g target network repo support runtimes tidechain lagoon tidechain built top substrate modular framework blockchains one feature substrate allow connection different network using single executable configuring start flag tidechain mainnet currently tidechain default option starting node connect global tidechain mainnet network running bash tidechain see node telemetry set custom name name custom name telemetry http telemetry tidefi io list tidechain connect lagoon testnet lagoon latest test network tidechain token network called tdfy purposefully hold economic value sudo pallet enabled network allowing core team debug chain connect global lagoon testnet running bash tidechain chain lagoon see node telemetry set custom name name custom name telemetry http telemetry tidefi io list lagoon obtaining tdfys lagoon ' tdfy token see faucet instruction http chat tidefi com discord hacking tidechain ' actually like hack tidechain grab source code build ensure rust support software installed script install update rust install required dependency may take 30 minute mac machine bash curl http getsubstrate io ssf bash fast grab tidechain source code bash git clone http github com tidelabs tidechain git cd tidechain build code need build release mode release start network use debug mode development faster compile time development testing bash script init sh install webassembly update rust cargo build build native code run test like bash cargo test start development chain bash cargo run dev detailed log may shown running node following environment variable set bash rust log debug rust backtrace 1 cargo run dev development run simple single node development network machine running bash tidechain dev local two node testnet want see multi node consensus algorithm action locally create local testnet ' need two terminal open one run bash tidechain chain lagoon local alice tmp alice run bash tidechain chain lagoon local bob tmp bob port 30334 bootnodes ' ip4 127 0 0 1 tcp 30333 p2p alice bootnode id ' ensure replace alice bootnode id node id output first terminal using docker using docker doc docker md contributing contributing guideline contribution guideline contributing md license tidechain gpl 3 0 licensed license
/fox-one/pando,Go,' pando pando decentralized financial network built mtg technology underlying financial algorithm inspired makerdao http makerdao com synthetix pando take multiple collateralized asset grows multiple pando asset grown pando asset e g pusd also used pledge mixin network mtg mixin network mixin network public blockchain driven tee trusted execution environment based dag abft unlike project great theory hardly actual implementation blockchain transaction solution mixin network provides secure private 0 fee developer friendly user friendly transaction solution lightning speed mixin trusted group mixin trusted group http developer mixin one document mainnet mtg alternative smart contact mixin network basically mtg multi signature custodian consensus solution several team selected arranged trusted group pando becoming node concensus ha reached among node perform certain administrative action result stable service asset safety guaranteed example let say n multi sig group represents number node group manages asset multi sig address one node need transfer asset need collect least n signature others perform action mtg framework pando application designed using framework mixin network intro pando pusd pusd stable coin launched dec 25 2020 since launch backing ratio pusd ha always higher 200 pledge node ability add asset pledge voting node vote one asset pledge anybody borrow pusd providing enough specified asset node also ability adjust various parameter pledge voting asset supported mixin network including btc eth etc potential pledge pando vault approved pledge deposited pando multi signature address create vault generate pusd pando user long price pledge higher minimum requirement creator complete control vault interact pando user node administrator must use multi signature transaction interact pando method parameter transaction written memo contains extra information transfer currently order protect user privacy information memo must encrypted following algorithm pando generate pair ed25519 public private key first publish public key transaction user generates pair temporary ed25519 public private key generates string 32 bit byte first 16 bit byte key aes encryption last 16 bit iv aes encryption byte must encrypt original memo generate result call encrypted byte client put encrypted byte user public key together encode base64 final memo transfer node pando synchronize transfer mixin network node recognizes valid transfer performs reverse operation restore key iv encrypted aes decrypts parameter action node need ensure process user interaction order ensure data stored database completely consistent node follow order transferring money ensure node choose completing transfer utxo liquidate high risk vault order ensure always enough pledge pando endorse loaned pusd vault require excess mortgage 150 value mortgaged asset insufficient due market price fluctuation vault enter high risk state open liquidation redeem pusd liquidation carried auction pusd got auction enough pay debt vault liquidation penalty auction sell enough amount pledge cover debt remaining pledge returned original owner pusd got auction pledge enough pay debt liquidation penalty loss become pandos liability shared node price oracle pando need synchronize price pledged asset update collateral rate vault liquidate high risk vault price data pando relies external decentralized price service pando use price data directly pando add one hour delay price data period someone attack price service node vote change state pledge frozen urgently node also vote new price summary future work pando ha achieved goal decentralized consensus among trusted node bringing stable coin minting service user mixin network pando also reserve ability extend lending non stable asset example issue 1 1 token ptesla tesla stock mixin network plege bitcoin pando generate ptesla build connection asset mixin network external asset outside world
/carlbarrdahl/atoll-ido,JavaScript,atoll ido ido launchpad built defi cross chain interoperability hackathon screenshot2 png us data polkastarter http polkastarter com work like project applies ido could go governance voting ido contract deployed project token vesting owner withdraw increment api called create project backend mocked data j user connects wallet kyc check stripe identity user transfer token project ido contract withdraw locktime user claim reward token ' able finish time feature implemented yet feature connect wallet polkadot extension kyc stripe identity smartcontract token vesting demo http atoll ido web app video http www loom com share c45cd1772b934431a32cca01db255781 created submission defi cross chain interoperability hackathon link http gitcoin co issue reef defi reef finance bounty 3 100026840 getting started first run development server bash npm run dev yarn dev open http localhost 3000 http localhost 3000 browser see result start http api emulator bash cd function npm run serve api available http localhost 5001 atoll ido u central1 api
/lifinance/widget,TypeScript,div align center license http img shield io badge license apache 202 blue license md npm latest package http img shield io npm v lifi widget latest svg http www npmjs com package lifi widget npm downloads http img shield io npm dm lifi widget svg http www npmjs com package lifi widget average time resolve issue http isitmaintained com badge resolution lifinance widget svg http isitmaintained com project lifinance widget follow twitter http img shield io twitter follow lifiprotocol svg label follow li fi http twitter com lifiprotocol div h1 align center li fi widget h1 repository contains li fi widget supporting library li fi widget http li fi widget cross chain bridging swapping drive multi chain strategy attract new user everywhere li fi wallet management http www npmjs com package lifi wallet management library hook help gain complete control app ' wallet management installation li fi widget li fi widget available npm package http www npmjs com package lifi widget npm sh npm install lifi widget yarn sh yarn add lifi widget li fi wallet management li fi wallet management available npm package http www npmjs com package lifi wallet management npm sh npm install lifi wallet management yarn sh yarn add lifi wallet management getting started li fi widget example basic app using li fi widget jsx import lifiwidget widgetconfig ' lifi widget ' import usememo ' react ' export const widgetpage const widgetconfig widgetconfig usememo return containerstyle border 1px solid window matchmedia ' prefers color scheme dark ' match ' rgb 66 66 66 ' ' rgb 234 234 234 ' borderradius ' 16px ' display ' flex ' return lifiwidget config widgetconfig example visit playground http testing li finance see customize li fi widget http www npmjs com package lifi widget experience documentation li fi widget documentation http doc li fi integrate li fi widget li fi widget overview changelog changelog changelog md regularly updated reflect ' changed new release license project licensed term apache 2 0 license md
/TransposeData/transpose-python-sdk,Python,transpose banner http file readme io c019281 main doc banner v1 png welcome transpose python sdk deployment test http github com transposedata transpose python sdk action workflow deployment test yml badge svg pypi version http badge fury io py transpose data svg installation http img shield io pypi dd transpose data color g modern python wrapper transpose api suite getting api key obtain free open alpha transpose api key sign website http www transpose io api key rate limited 1 request per second 100 000 request per month need higher rate limit project business ' hesitate reach discord join discord http discord gg akguqp3u57 ask technical question share ' building chat others community installation python 3 8 higher recommended install python sdk run following command python3 pip install u transpose data documentation find specific documentation per product basis product description documentation img src http asset website file com 624cc12cbb8535a77bafc47d 628ebc9704701b4d5610ac1a blockchain logo solid png width 50 height 50 br block api block api provides endpoint accessing low level blockchain data scale including account block transaction internal transaction log block api doc http github com transposedata transpose python sdk blob main doc block md img src http asset website file com 624cc12cbb8535a77bafc47d 628d465b6551e284a9ae73e4 wallet logo en png width 50 height 50 br en api en api provides endpoint looking en name historical primary resolving en name record monitoring en transfer sale en api doc http github com transposedata transpose python sdk blob main doc en md img src http asset website file com 624cc12cbb8535a77bafc47d 6286795ef57a1412d6d767fc nft logo solid png width 50 height 50 br nft api nft api provides endpoint retrieving collection nft existence well nft image operator owner transfer approval much fully support erc 721 erc 1155 nfts nft api doc http github com transposedata transpose python sdk blob main doc nft md img src http asset website file com 624cc12cbb8535a77bafc47d 628fb0f77f6279a920577119 token logo2 solid png width 50 height 50 br token api token api provides endpoint retrieving token token balance transfer symbol existence including full support native token transfer balance fully support erc 20 erc 777 token token api doc http github com transposedata transpose python sdk blob main doc token md sdk documentation learn transpose sdk work sdk class transpose sdk us custom class represent api response error class detail summary sdk error class specification summary sdk us following error class represent api error transposebadrequest represents 400 bad request error transpose api transposeratelimit represents 429 rate limit error transpose api transposeinvalidapikey represents 401 unauthorized error transpose api transposeinternalservererror represents 500 internal server error error transpose api transposeresourcenotfound represents 404 found error transpose api error raised sdk encounter error transpose api detail response class detail summary response class specification summary sdk always return list response object transpose api example calling en record date endpoint return list ensrecord object response object accessed following way ensrecord 0 en name return first record ' en name ensrecord en name retrieves en name th response response object also accessed dictionary calling dict ensrecord 0 dict return first record dictionary ensrecord dict retrieves th record dictionary detail pagination detail summary pagination transpose sdk summary transpose endpoint return maximum 500 result single query return next page simply call api next api next return none page standard pagination implementation python true data api next sleep avoid rate limit time sleep 1 page exit loop data none break otherwise print length data else print len data detail bulk request detail summary bulk requesting data transpose sdk summary alongside pagination also offer convenience method iterating page method handle pagination return list result usage python api bulk request endpoint response request per second result fetch parameter required description type endpoint response yes called api function return list data model list request per second number request per second make int result fetch number result fetch int response code title model 200 success data model 400 bad request error http github com transposedata transpose python sdk blob main doc documentation md error class 401 unauthorized error http github com transposedata transpose python sdk blob main doc documentation md error class 403 forbidden error http github com transposedata transpose python sdk blob main doc documentation md error class 404 found error http github com transposedata transpose python sdk blob main doc documentation md error class 500 internal server error error http github com transposedata transpose python sdk blob main doc documentation md error class example use bulk request python block miner api bulk request api block block date mined ' 2022 01 01 00 00 00 ' miner ' 0x00192fb10df37c9fb26829eb2cc623cd1bf599e8 ' limit 500 print len block miner 53046 detail sdk extra following method available extra transpose sdk import extra project using python transpose extra import module extra require additional dependency installed missing dependency sdk throw transposedependencyerror try import extra error tell dependency missing give exact command install shell transpose src util error transposedependencyerror missing dependency install via pip install plotly panda kaleido plotting detail summary transpose plotting specification summary sdk natively includes plotting library implement plotly http plot ly python using quickly create plot data obtained transpose api plotting example check demo http github com transposedata transpose python sdk blob main demo plotting py file graph past hour ' gas price bar chart chart http github com transposedata transpose python sdk blob main doc image plotting png fw usage ' first need install plotting dependency using shell pip install plotly panda kaleido instantiating new plot simple importing plot class instantiating python transpose extra import plot chart plot title hourly gas price ethereum return object call following method plot plotly return current plot plotly object customize plot plot show render current plot browser plot interactive zoomed panned plot render path format input path path render plot format format render plot either png html jpg etc plot add data data type shape smoothing input data data add plot take following format json x list data list data axis gas price gwei optional name axis x axis time optional name x axis type optional method used render data plot either line bar shape optional shape line either linear spline vh hv vhv hvh smoothing optional number point smooth data line calculate moving average data period smoothing bar group average data smoothing point detail making request get started make first request make new transpose object python transpose import transpose api transpose ' transpose api key ' call endpoint api nft api en api token api block subclass debugging request view raw http request sdk making setting debug flag true creating new transpose object example python transpose import transpose api transpose ' transpose api key ' debug true simple demo show powerful data let ' get last en domain expired need one api call python transpose import transpose api transpose ' transpose api key ' get recently expired en domain last expired api en record date type ' expiration ' order ' desc ' limit 1 return list en record http github com transposedata transpose python sdk tree main doc en md en record model includes data ' able easily get en protocol json en name game master dit gm eth en node 9bffc8c1ede1e51e4bae137fa37a81cc0379fc08123c4aa00a931d0d983956b7 contract address 0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85 token id 75929000750162030430773866845127925090084516346841580577625168871716954805188 meta block number 407909 owner 0x2ac92629c4e0e5e4868588f87dc4356606a590b6 resolver 0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41 resolved address 0x2ac92629c4e0e5e4868588f87dc4356606a590b6 registration timestamp 2022 01 01t05 00 36z expiration timestamp 2049 12 31t23 58 12z grace period end 2050 03 31t23 58 12z premium period end 2050 04 21t23 58 12z grace period false premium period false expired false last refreshed 2022 06 01t09 51 23z link sdk example http github com transposedata transpose python sdk tree main demo transpose documentation http doc transpose io official discord server http discord gg akguqp3u57
/achadha235/niftycrate,TypeScript,niftycrates ethglobal2020 nft untitled 2020 nft whale turn nfts profitable lootbox problem lot common nfts hard sell valuable want liquidate token much eth possible solution create nft lootbox combine multiple token use randomised nature loot box encourage multiple purchase buying setting niftycrate 1 buy niftycrate niftycrates com 2 put nfts niftycrate 3 set niftyranking token set drawing odds 4 configure price open niftycrate 5 sit back profit nft player open fun lootboxes win great nfts opening niftycrate 1 buy gem nifty crate 2 pick niftycrate look like ha something want 3 pay opening fee cost use gem draw item niftycrate rinkeby deployment executing task npm run deploy contract crate contrats 1 0 0 deploy contract user abhishekchadha desktop niftycrates node env development truffle migrate development compiling contract everything date nothing compile migration dry run simulation network name ' development fork ' network id 4 block gas limit 10000000 0x989680 1 initial migration j deploying ' erc721factory ' block number 7350426 block timestamp 1602413110 account 0xd8c30f316f9a0c92e5a79db86feced91c2348f06 balance 9 994414112 gas used 2792944 0x2a9df0 gas price 2 gwei value sent 0 eth total cost 0 005585888 eth deploying ' niftycrate ' block number 7350427 block timestamp 1602413226 account 0xd8c30f316f9a0c92e5a79db86feced91c2348f06 balance 9 983860384 gas used 5276864 0x5084c0 gas price 2 gwei value sent 0 eth total cost 0 010553728 eth deploying ' niftycrateopener ' block number 7350428 block timestamp 1602413278 account 0xd8c30f316f9a0c92e5a79db86feced91c2348f06 balance 9 98283689 gas used 511747 0x7cf03 gas price 2 gwei value sent 0 eth total cost 0 001023494 eth total cost 0 01716311 eth summary total deployment 3 final cost 0 01716311 eth starting migration network name ' development ' network id 4 block gas limit 10000000 0x989680 1 initial migration j deploying ' erc721factory ' transaction hash 0x94786b79ad561a6df2c41975e1214e1ce54dc39755b61798dfc69bbee22c2e1e block 2 second 17 contract address 0x54dbac9db6d32c3634578a06ec16525753a27380 block number 7350440 block timestamp 1602413311 account 0xd8c30f316f9a0c92e5a79db86feced91c2348f06 balance 9 94414112 gas used 2792944 0x2a9df0 gas price 20 gwei value sent 0 eth total cost 0 05585888 eth deploying ' niftycrate ' transaction hash 0xc00ca966911d7c832f3ff0712d50787808c37a2aa4c114cea1dd0fb28fd673f8 block 1 second 18 contract address 0x6859ae5fbf28b20b1b902603cc64461507902409 block number 7350442 block timestamp 1602413341 account 0xd8c30f316f9a0c92e5a79db86feced91c2348f06 balance 9 83660472 gas used 5376820 0x520b34 gas price 20 gwei value sent 0 eth total cost 0 1075364 eth deploying ' niftycrateopener ' transaction hash 0xe7d5421347f16325e775d684d69438ae0ca9410dccd4f2aa107436cf25be090d block 1 second 17 contract address 0xe26a61047649127e9855c4dc2b8e2fc5920c111c block number 7350444 block timestamp 1602413371 account 0xd8c30f316f9a0c92e5a79db86feced91c2348f06 balance 9 82606978 gas used 526747 0x8099b gas price 20 gwei value sent 0 eth total cost 0 01053494 eth saving artifact total cost 0 17393022 eth summary total deployment 3 final cost 0 17393022 eth
/naszam/wfil,JavaScript,ubuntu 18 04 http img shield io badge ubuntu v18 04 orange style plastic http ubuntu com download desktop npm 12 19 0 http img shield io badge npm v12 19 0 blue style plastic http github com nvm sh nvm installation update built truffle http img shield io badge built 20with truffle blueviolet style plastic http www trufflesuite com solc 0 6 12 http img shield io badge solc v0 6 12 brown style plastic http github com ethereum solidity release tag v0 6 12 testnet rinkeby http img shield io badge testnet rinkeby yellow style plastic logo ethereum http rinkeby etherscan io address 0x48be7b803052c273f6ff3e7bac99ca160931c3bf img src wfil svg width 20 wfil wrapped filecoin erc20 wrapper filecoin wfil fist erc20 wrapper filecoin backed filecoin deposit custodial wallet 1 1 ratio current iteration implement custodial pattern user need send filecoins custodial wallet ' get automatically correspondent amount wfil ethereum address future development feature ' like migrate non custodial pattern leveraging filecoin smart contract ' able implement fully decentralized application extend filecoin wallet metamask filecoin one feature ' considering add permit function wfil allow meta transaction leveraging openzeppelin erc20permit module currently progress incentivise adoption space application uniswap wfil collateral makerdao de fi mentor andrew w hill textile andrewxhill http github com andrewxhill aaron sutula textile asutula http github com asutula ignacio hagopian textile jsign http github com jsign demo hackfs http www youtube com watch v emdegsnyjgs feature youtu hackfs http hack ethglobal co showcase wfil reccwbcny2rnipjcr ethonline http hack ethglobal co showcase wrapped filecoin wfil recheoua9ggszwz02 demo apollo http www youtube com watch v ubb5f03oto0 feature emb logo pitch deck http www beautiful ai player mikcb bszr83qsqvhhi newsletter http wfil substack com demo beta launch preview http www youtube com watch v ymo9lxhgrkg feature emb logo section building block building block setup setup deploy deploy using dapp using dapp building block smart contract flow chart wfil png wfil contract wfil sol implement erc20 token leveraging openzeppelin library allows owner contract set default admin add remove minter via grantrole revokerole function leveraging accesscontrol module openzeppelin contract implement wrap function mint wfil passing recepient address amount filecoin wrap parameter emitting event wrapped contract also implement unwrap function burn wfil passing filecoin address amount wfil unwrap parameter emitting event unwrapped contract inherits openzeppelin accesscontrol module set pauser role owner contract call pause unpause function case emergency circuit breaker design pattern owner call pause function thanks beforetokentransfer hook mint burn transfer internal function revert avoid user sending wfil contract address transfer ha overidden make sure recipient address doe correspond contract address revert doe manage wrapping unwrapping fee contract set fee setter role owner contract set fee via setfee recipient via setfeeto fee public queried via getter function fee gnosis safe multisig used receive store wrapping fee set inside constructor backend http github com cristiam86 wfil backend implement custodial wallet leveraging lotus apis via aws lambda allows automatically wrap unwrap filecoin minting wfil account set minter call unwrap method burn wfil user ' also connected via filscan apis filecoin check transaction tracked via textile threaddb frontend app frontend ha implemented via rimble ui rimble web3 component deployed ipfs via fleek http fleek co filecoin wallet http wfil network wallet implement filecoin client leveraging lotus apis development project include building metamask filecoin creating extension chrome setup clone github repository step compile test local dependency truffle ganache cli openzeppelin contract v3 1 0 truffle hd wallet provider truffle flattener truffle plugin verify solhint sh npm global dependency truffle recommended sh npm install g truffle ganache cli recommended sh npm install g ganache cli slither optional sh git clone http github com crytic slither git cd slither sudo python3 setup py install mythx cli optional sh git clone git github com dmuhs mythx cli cd mythx cli sudo python setup py install running project local test network ganache cli start ganache cli following command global dependency sh ganache cli compile smart contract using truffle following command global dependency sh truffle compile deploy smart contract using truffle ganache following command global dependency sh truffle migrate test smart contract using mocha openzeppelin test environment following command sh npm test analyze smart contract using slither following command optional sh slither analyze smart contract using mythx cli following command optional sh mythx analyze deploy deploy rinkeby testnet get ethereum account metamask landing page click get chrome extension create secret file cointaining menomic get test ether rinkeby ' faucet http faucet rinkeby io signup infura http infura io create new project copy rinkeby url truffle config j uncomment following line truffle config j const hdwalletprovider require truffle hdwallet provider const infurakey ' ' const infuraurl ' http rinkeby infura io ' const f require ' f ' const mnemonic f readfilesync secret tostring trim install truffle hd wallet provider sh npm install truffle hdwallet provider deploy smart contract using truffle infura following command sh truffle migrate network rinkeby verify wfil contract rinkeby via truffle plugin verify sh truffle run verify wfil network rinkeby project deployed rinkeby wfil http rinkeby etherscan io address 0x48be7b803052c273f6ff3e7bac99ca160931c3bf using dapp install ganache gui http www trufflesuite com ganache change ganache gui port 8545 import ganache gui mnemonic metamask connect metamask ganache gui adding custom rpc specifing ganache gui ' rpc server url deploy smart contract ganache gui truffle migrate move client directory project sh cd app install dependency sh yarn install start local web server sh npm run start inspiration reference wbtc http etherscan io address 0x2260fac5e5542a773aa44fbcfedf7c193bc2c599 code weth http etherscan io address 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 code chai http github com dapphub chai eip 2612 http github com ethereum eips blob 8a34d644aacf0f9f8f00815307fd7dd5da07655f eips eip 2612 md eip 712 http eips ethereum org eips eip 712 erc 2612 http github com ethereum eips issue 2613 use permit function relayers pay gas dai transaction dai http github com makerdao developerguides blob master dai dai permit function use permit function md add erc20 permit function openzeppelin http github com openzeppelin openzeppelin contract issue 2206 understanding wrapped bitcoin wrapped token framework http medium com mutheevincent understanding wrapped bitcoin wrapped token framework 6ed45e52acdb author project created nazzareno massari http nazzarenomassari com cristiam da silva http cristiamdasilva com team wrapfs hackfs ethglobal virtual hackathon logo cristiam da silva
/viaMover/web-app,TypeScript,http cdn image 1 medium com max 2400 1 4us0nq8xbh0swwn26q9zgg png mover one place defi crypto mover make internet economy easy available everyone app abstract blockchain complexity finally get great financial service defi benefit earn highest safest yield digital asset automatic portfolio management system also send receive swap 30 000 digital asset ethereum release radar tired missing new token release keep track follow personal curated list latest update send receive swap 30 000 token ethereum mover easily swap across 30 000 token available ethereum network swap send receive erc20 erc721 token help permissionless smart treasury next swap free high yield saving usdc easy way put money work automated high yield saving usdc lockup hidden term custody permissionless defi saving account free gas via smart treasury every move move eth lp holder get claimable bonus treasury used cover expense app keep track claimable bonus perform claim burn simply watch share grow real time rypto debit card prepaid visa debit card allows spend crypto anywhere around world analytics monthly statement show detailed overview wallet performance specific month anything average boost value usage treasury reward daily return amount saved gas cost simply choose month get detail monthly statement available previous month governance place community decide proposal user enough voting power create proposal others vote section show current historic proposal well result nibble shop place mover official merchandise life item tokenized meaning buy token give right claim item since item tokenized limited require chain transaction buy sell redeem cool merch nft drop every either promo surprise nft drop nfts superpower feature make mover service better section allows check eligibility specific nft claim nft use depends nft superpower
/raphael-mazet/simplefi-client,JavaScript,simplefi simplefi make easy manage decentralised finance investment portfolio production simplefi finance http simplefi finance getting started 1 clone repo git http github com raphael mazet simplefi client git 2 start simplefi server refer simplefi server http github com raphael mazet simplefi server git documentation 3 start app development npm install npm start open http localhost 3000 http localhost 3000 view browser note app ha optimised deployment heroku procfile j instruct development server serve app via static express server server j simulate development npm run build node server j learn documentation create react app http facebook github io create react app doc getting started react http facebook github io create react app doc supported protocol simplefi currently pre alpha protocol coverage yet comprehensive growing send request bug report please join telegram group http joinchat h0ucerus5m mzeb9 dm u twitter http twitter com simplefi aave lending pool usdc usdt dai uniswap pool mkr bal dai mta ren wbtc mln bnt curve pool reward gauge susd 3pool steth aave hbtc sbtc lido eth2 staking mstable earn pool 5 mta weth uniswap farm 1inch governance staking built react http reactjs org javascript library building user interface ether j http doc ether io v5 lightweight javascript library interact ethereum blockchain express http expressjs com fast unopinionated minimalist web framework node j chart j http www chartjs org simple yet flexible javascript charting designer developer
/scaleton-co/scaleton,TypeScript,scaleton scaleton channel http badgen net badge follow scaleton blue icon telegram http scaleton first defi wallet ton jettons tip 74 http github com ton blockchain tip issue 74 support license http img shield io badge license apache 2 0 blue svg http opensource org license apache 2 0 github last commit http img shield io github last commit scaleton co scaleton netlify status http api netlify com api v1 badge b75479d1 492e 4d7e add3 4449638200a4 deploy status http scaleton co feature transfer history transaction import tip 74 http github com ton blockchain tip issue 74 contract explore account nfts authentication via ton wallet tonkeeper tonhub security issue discover security vulnerability please see security policy procedure security md link scaleton co http scaleton io mainnet testnet scaleton co http testnet scaleton io testnet sandbox scaleton co http sandbox scaleton io sandbox people nick nekilov http nicknekilov support project helped somehow may thank project eqdihshkpdtdt utawnlgiq cnijbgb7jyyprczoaoxtwlwf ton 0x7633945b2c284113bdf703a970088174b3841138 eth bnb license scaleton apache 2 0 license licensed
/AngleProtocol/angle-interfaces,Solidity,angle interface description repo contains interface interacting core contract angle protocol split three different file iangle sol contains user facing function contract protocol ianglegovernance sol contains function different governor address case guardian address allowed ianglekeeper sol list contract different function keeper interact perform action beneficial protocol protocol architecture smart contract protocol structured architecture angle protocol smart contract architecture anglearchitectureschema png soon made open source information info protocol doc http doc angle money twitter http twitter com angleprotocol discord http discord gg 9ekfec2mbm
/fjij/kangaroo,JavaScript,kangaroo discord bot bringing next generation crypto mass powered zksync http zksync io kangaroo crypto tipping bot built layer 2 onboarding mind support ethereum range erc 20 token frictionless withdrawal typical ethereum token transaction fee upwards 20 harness power layer 2 withdraw fund nearly 100 time le grow community engage discord server plethora community oriented feature better yet give crypto fund community member actually use feature basic tip user deposit withdraw eth erc 20 token layer 2 wallet layer 2 native 2 kangaroo life layer 2 ethereum slow expensive user experience roadmap coming soon kangaroo near airdrop reward member community boost engagement smart contract interact favorite dapps safety server developing prerequisite mongodb running locally follow guide http doc mongodb com guide server install install run node j npm setup 1 clone repository bash git clone http github com fjij kangaroo git 2 install required package bash cd app npm install testing bash cd app npm run test test stored app spec directory pull request ' push directly main branch pull request use em deployment kangaroo bot deployed push main branch
/ubiquity/uad-contracts,TypeScript,ubiquity algorithmic dollar contract logo project http bafybeifibz4fhk4yag5reupmgh5cdbm2oladke4zfd7ldyw7avgipocpmy ipfs infura ipfs io table content 1 getting started getting 2 building building 3 deployment deployment 4 testing testing 5 contract contract 6 licensing licensing getting started prerequisite node j http nodejs org en download installing install dependency sh yarn install building compile smart contract sh yarn run compile verify account used hardhat sh npx hardhat account deployment deploy smart contract network defined hardhat config rename example env file env fill mnemonic alchemy api key coinmarketcap api key environment variable sh npx hardhat run network network script deployment note default smart contract deployed locally using hardhat development node mainnet monitoring token task retrieve information token including lp token sh npx hardhat network mainnet token incentive task retrieve information current incentive penalty uad buy sell sh npx hardhat network mainnet incentive metapool task retrieve information curve uad 3crv metapool sh npx hardhat network mainnet metapool price task retrieve information uad price sh npx hardhat network mainnet price manager task address registered manager sh npx hardhat network mainnet manager get bonding contract transaction task retrieve filter bonding contract transaction print summary save file sh option end block int error boolean name string start block int path end block &#9; end block etherscan request default latest block error &#9; select transaction error default false name &#9; function name use empty string default deposit start block &#9; starting block etherscan request default contract creation block default 12595544 path &#9; path store bonding contract transaction default bonding transaction json npx hardhat network mainnet getbondingtransactions testing requirement node 14 15 use nvm rename example env file env fill alchemy api key get key alchemy api dashboard http dashboard alchemyapi io coinmarketcap api key get key coinmarket http pro coinmarketcap com login launch test sh yarn run test experience timeout issue try running test one one forking run local node fork mainnet use hardhat alchemy api sh yarn node start using metamask browser point local node network menu adding custom rpc network following configuration network name hardhat rpc url http localhost 8545 chain id 1337 give fund recommend use separate browser session metamask development prompted mnemonic phrase copy env file bash mnemonic test test test test test test test test test test test junk remember use quotation mark hardhat fork start create 10 account 10000 eth phrase metamask using account sake testing may want give uad uar ubq uad3crv f token task named faucet give 1000 transferred ubiquity treasury account sh yarn node faucet run yarn node start task running another terminal window contract twaporacle 0x7944d5b8f9668afb1e648a61e54dea8de734c1d1 debtcoupon 0xcefaf85110536ec6f78b0b71624bfa584b6faba1 uadtoken 0x0f644658510c95cb46955e55d7ba9dda9e9fbec6 couponcalculator 0x4f3df4c1e22209d623ab55923109112f1e2b17de dollarmintingcalculator 0xab840faa6a5ef68d8d32370ebc297f4ddc9f870f bondingshare 0x2da07859613c14f6f05c97efe37b9b4f212b5ef5 bondingcontract 0xc251ecd9f1bd5230823f9a0f99a44a87ddd4ca38 uad 3crv metapool deployed aka stableswapmetapool 0x20955cb69ae1515962177d164dfc9522feef567e curve3pooltoken 0x6c3f90f043a72fa612cbac8115ee7e52bde6e490 ugovtoken 0x4e38d89362f7e5db0096ce44ebd021c3962aa9a0 sushiswappool 0x534ac94f198f1fef0adc45227a2185c7ce8d75dc masterchef 0xdae807071b5ac7b6a2a343bead19929426dbc998 formula 0x54f528979a50fa8fe99e0118ebbee5fc8ea802f7 autoredeemtoken 0x5894cfebfdedbe61d01f20140f41c5c49aedae97 uarcalculator 0x75d6f33bcf784504da74e4ad60c677cd1fd3e2d5 excessdollarsdistributor 0x25d2b980e406be97237a06bca636aed607661dfa debtcouponmgr 0x432120ad63779897a424f7905ba000df38a74554 ubiquityalgorithmicdollarmanager 0x4da97a8b831c345dbe6d16ff7432df2b7b776d98 curveincentive 0x86965cdb680350c5de2fd8d28055decddd52745e treasury 0xefc0e701a824943b469a694ac564aa1eff7ab7dd ubq eth licensing copyright c 2021 ubiquity licensed mit license
/Alpha-Serpentis-Developments/Project-Mimic,Solidity,project mimic optional branch testing development branch v0 2 project mimic optional decentralized social trading platform us opyn v1 http v1 opyn co wip opyn v2 http opyn co underlying ethereum network optional allows option trader become social trader follow social trader social trader platform charge follower fee follow move whether entry fee small profit cut social trading token ha unique style based trader ' strategy follower limit risk certain trader token based predetermined move documentation http doc optional finance people involved amethyst c alphaserpentis founder alpha serpentis development smart contract programmer mimic optional yvonne frontend developer mimic optional opyn decentralized option platform built convexity v1 gamma v2 powering mimic optional contributing wish contribute code feel free submit issue pull request reach u discord alpha serpentis development discord server http discord gg m8hs5dg twitter amethyst alphaserpentis http twitter com alphaserpentis twitter yvonne littlefish tech http twitter com littlefish tech twitter optional finance optionalfinance http twitter com optionalfinance twitter alpha serpentis development official asdev http twitter com official asdev notice project mimic development currently audited additional risk underlying code additional risk social trader investment advice option involve special risk may fit well investor research
/zeriontech/defi-sdk-go,Go,defi sdk go library simple go wrapper defi sdk visit doc zerion io doc zerion io full documentation install bash go get github com zeriontech defi sdk go usage initialize defisdk defi sdk directly connects ethereum blockchain welcome use ethereum node choice start using defi sdk ' node example use node provided cloudflare served domain golang package main import defisdk github com zeriontech defi sdk go func main &#9; ethereumnodeurl http eth mainnet zerion io &#9; sdk defisdk new ethereumnodeurl example get supported protocol go sdk getsupportedprotocols piedao multi collateral dai bancor defi money market tokensets 0x staking uniswap v1 synthetix pooltogether dai saving rate chai iearn finance v3 iearn finance v2 idle dydx curve compound balancer aave get account balance locked protocol go useraddress 0xa218a8346454c982912cf6d14c714663c2d510d8 protocol aave sdk getprotocolbalance useraddress protocol metadata name aave description decentralized lending borrowing protocol websiteurl aave com iconurl protocol icon s3 amazonaws com aave png version 0 adapterbalances metadata adapteraddress 139 98 192 32 145 254 6 174 52 84 211 193 41 33 179 38 17 186 85 1 adaptertype asset balance base metadata token 252 30 105 15 97 239 217 97 41 75 62 28 227 49 63 189 138 164 248 93 name aave interest bearing dai symbol adai decimal 18 amount 1008383439792242970 underlying metadata token 107 23 84 116 232 144 148 196 77 169 139 149 78 237 234 196 149 39 29 15 name dai stablecoin symbol dai decimal 18 amount 1008383439792242970 get supported token type go sdk gettokenadapternames piedao pie token smarttoken mtoken settoken uniswap v1 pool token pooltogether pool chai token ytoken idletoken curve pool token ctoken balancer pool token atoken erc20 get derivative token underlying component go uniswapdaipool 0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667 sdk gettokencomponents uniswap v1 pool token uniswapdaipool metadata token 238 238 238 238 238 238 238 238 238 238 238 238 238 238 238 238 238 238 238 238 name ether symbol eth decimal 18 amount 1108093230485279057 metadata token 107 23 84 116 232 144 148 196 77 169 139 149 78 237 234 196 149 39 29 15 name dai stablecoin symbol dai decimal 18 amount 221366932637588225901
/deusfinance/automatic-market-maker,Solidity,deus bridge smart contract deus http etherscan io token 0x3b62f3820e0b035cc4ad602dece6d796bc325325 token automatic market maker chain address mainnet 0xd77700fc3c78d1cb3acb1a9eac891ff59bc7946d pre requisite need following software machine git http git scm com downloads node j http nodejs org en download addition familiarity solidity http soliditylang org hardhat http hardhat org requisite set install dependency bash npm install create env file follow sample env file add requisite environment variable run bash npx hardhat compile start making change contributing feel free dive open http github com deusfinance automatic market maker issue new issue start http github com deusfinance automatic market maker discussion new discussion submit pr concern feedback join u discord http discord gg nwfztqev security security concern please email admin deus finance mailto admin deus finance license mit license md mainframe group inc
/Cezar-X/cezarx,TypeScript,cezarx collateral lending protocol open source project made fionnachan dyd999x open source project see anyone claiming ownership sell idea concept code realise nothing purchase cezarx collateral lending protocol enables collector take fixed rate loan using nft collateral loan funded liquidity provider earn interest paid borrower event default loan ownership nft fractionalized transferred liquidity provider exclusive auction held liquidity provider eligible bid project unmaintained post hackathon hackathon ended 12pm 21 march 2021 eastern time ' made webapp designed fly built frontend skipped using kind design tool app built react using web3 react template http github com noahzinsmeister web3 react next j used server side rendering style frontend component built scratch also used external library several frontend component like dialog evergreen ui wallet connection selection react countdown countdown auction page evergreen ui table auction page smart contract wrote 7 smart contract enable dapp provide required functionality liquidity provider send weth masterwallet earn interest chance participate exclusive action hold nfts whose owner defaulted loan withdraw stake nft owner get loan depending nft value available liquidity pay debt interest received nft back masterwallet main smart contract dapp hold fund sent liquidity provider loan method newloan someone want get loan platform appraisal done maximum amount borrow displayed need send nft nftholder sc implement receiver interface method called ui loan detail filled user condition met liquidity pool hold least 5 time weth requested amount nft wa sent contract requested amount sent borrower loanpaid user want pay loan see ui debt amount transaction wallet input tx hash u check loan wa paid method called loan record borrower deleted nft sent back getloandata getter function return detail user loan loandefault method called anyone monitor current loan check loan period ha indeed passed case default nft placed collateral marked auctionable auctionable smart contract deposittokens method liquidity provider transfer weth pool firstly check masterwallet sc wa approved weth owner spend amount owner want stake case transfer amount owner ' balance mint equal amount czweth token liquidity provider wallet token represent contribution pool withdrawfund method called liquidity provider want withdraw weth wallet check corresponding czweth balance user higher withdraw amount weth transferred wallet back provider equivalent amount czweth burned wallet getbalanceofsc return weth balance masterwallet also governance method called account deployed smart contract future aim create dao handle governance &#9; changeinterest changemanager changeholder changeauctionable nftholder smart contract inherits ierc721receiver able receive nft sent borrower also ha function transferring nft allowed address call transfer method right masterwallet auctionable contract allowed auctionable smart contract handle auction nfts marked auctionable borrower ha defaulted method &#9; markasauctionable called masterwallet loandefault method default detected &#9; tokenizenft liquidity provider staked 5 weth eligible take part auction eligible provider randomly select 100 right participate method called backend chose auction participant method deploy new tokennft smart contract given nft also call airdrop method tokennft function essentially sending custom erc20 token 100 user allowed bid nft &#9; startauction method called backend wish start auction given nft nft need tokenised new auction smart contract deployed nft marked inauction &#9; closeauction called backend want close auction debt interest covered auction time expired call endauction method corresponding auction smart contract send nft winner also destruct tokennft smart contract corresponding auctioned nft since use anymore tokennft smart contract deployed whenever nft need tokenised auction inherits erc20 accesscontroll contract openzeppelin contains method well method &#9; airdrop called tokenizenft method auctionable smart contract send nft token 100 provider right bid coming auction &#9; kill called closeauction method auctionable smart contract call selfdestruct method wipe storage data corresponding contract &#9; getnftaddr getter nft address &#9; gettokenid getter nft tokenid &#9; getowners getter allowed bidder array auction smart contract deployed startauction method auctionable smart contract method &#9; sendbid called owner nft token wa distributed eligible bidder nft wa tokenised total bid amount sender ha higher current maximum bid also higher debt interest goal auction cover expense incurred borrower defaulted method check sender ha approved auction smart contract spend bid amount weth contract weth used testing purpose token ha debttoken allowance wa granted method transfer bid amount auction smart contract balance set current bid update bid amount particular bidder &#9; endauction called closeauction method auctionable smart contract mark auction ended return address winner winning bi emits winningbid event &#9; getbidback bidder win call method get back bid amount auction smart contract method called auction wa marked ended winner cannot call method czweth erc20 token implement mint burn method initially minter role burner role set masterwallet contract mint method called whenever liquidity provider deposit token weth case get back cztoken czweth burn method called withdraw contribution masterwallet smart contract us openzeppelin implementation czr governance token ha mint burn method minter burner set address deployed smart contract moment define exactly governance token fit platform start minting distributing local development install dependency yarn serve example localhost yarn start project license gpl3 license synopsis tl dr ' license entail markdown 1 anyone copy modify distribute software 2 include license copyright notice every distribution 3 use software privately 4 use software commercial purpose 5 dare build business solely code risk open sourcing whole code base 6 modify indicate change made code 7 modification code base must distributed license gplv3 8 software provided without warranty 9 software author license held liable damage inflicted software information license found http choosealicense com license gpl 3 0
/solx-ventures/deficompare,TypeScript,welcome defi compare trusted defi comparison tool next one billion user website defi compare http defi compare official defi compare website problem existing defi comparison site complex technical suitable new defi missing gap cefi defi onboarding education solution build simple comparison tool upcoming defi mass fairly represents defi blockchains respective application metric represented transaction cost transaction speed dex swap cost decentralised user review come see roadmap built python python react react front end hasura timescale database hasura timescale data source ensure highest standard trustlessness aim use much subgraphs http thegraph com possible ahead roadmap lie implementation subgraph comparing useful key metric dexes defi protocol across chain coin token price coingecko http www coingecko com en api ethereum gas price block time http doc ethgasstation info gas price solana lamports consumption block time http app swaggerhub com apis doc v2261 solanabeach backend api 0 0 1 dex data serum http doc bonfida com project serum uniswap http thegraph com explorer subgraph uniswap uniswap v2 initial contributor johnny solx http github com solx venture huge solana fan nft gamer mhhukiewitz http github com mhhukiewitz developer scientist crushing code http github com crushingcodes mad coding wizard roadmap binance smart chain bsc support listed dexes ethereum solana bsc migrating data retrieval public subgraph comparison lending protocol defi protocol category
/curvefi/metaregistry,Vyper,curve metaregistry metaregistry curve finance http curve exchange pool registry aggregator consolidates different registry used curve finance single chain single contract current version metaregistry aggregate following four child registry mainnet 1 curve stable registry registry custom pool implementation deployed curve core 2 curve stable factory permissionless stableswap http curve fi file stableswap paper pdf pool factory also act registry pool user create 3 curve crypto registry registry custom cryptoswap pool implementaions deployed curve core 4 curve crypto factory permissionless cryptoswap http curve fi file crypto pool paper pdf pool factory also act registry pool user create child registry accompanied registryhandler contract wrap around child registry enforces abi implemented metaregistry registry handler added metaregistry using metaregistry add registry handler method principle child registry doe need registry handler wrapper already conforms metaregistry ' abi standard however wrapper around child registry used hotfix bug detected production fix cannot introduced child registry without significant breaking change use metaregistry integrator find quite challenging integrate protocol dapp multiple chain registry stored separate contract intrinsic knowledge protocol level accommodate edge case onboard multiple registry single source information aggregate registry make integration trivial integrator looking integrate curve metaregistry best friend metaregistry api metaregistry offer chain api various property curve pool various getters metaregistry explained following metaregistry get registry handler pool get registry pool ha registered usually pool registered single registry 1 metaregistry get registry handler pool 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 ' 0xc7d231bc7ff5ac1e0e67244d1a273a79bc762bfb ' ' 0xfbda211b53e17e10aa5b5c564f19519258da05b4 ' ' 0x0000000000000000000000000000000000000000 ' ' 0x0000000000000000000000000000000000000000 ' metaregistry pool count return total number pool registry registered metaregistry 1 metaregistry pool count 1 284 metaregistry pool list return address pool input index 1 metaregistry pool list 0 1 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 metaregistry get pool name return name pool 1 metaregistry get pool name 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 ' 3pool ' metaregistry meta metapools pool pair coin base pool comprising multiple coin example lusd 3crv http etherscan io address 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca pool pair liquity ' http www liquity org lusd http etherscan io address 0x5f98805a4e8be255a32880fdec7f6728c6568ba0 3crv http etherscan io address 0x6c3f90f043a72fa612cbac8115ee7e52bde6e490 3crv liquidity pool token represents share pool containing dai usdc usdt 1 metaregistry meta 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 true metaregistry get base pool case lusd 3crv pool example pool containing 3crv underlying coin base pool lusd 3crv pool 3pool http etherscan io address 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 metaregistry get base pool 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 ' 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 ' return zero address pool ha base pool 1 metaregistry get base pool 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 ' 0x0000000000000000000000000000000000000000 ' metaregistry get coin return coin pool pool metapool return lp token associated base pool underlying coin 1 metaregistry get coin 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 ' 0x5f98805a4e8be255a32880fdec7f6728c6568ba0 ' ' 0x6c3f90f043a72fa612cbac8115ee7e52bde6e490 ' metaregistry get underlying coin return underlying coin pool return underlying coin base pool pool metapool 1 metaregistry get underlying coin 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 ' 0x5f98805a4e8be255a32880fdec7f6728c6568ba0 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' metaregistry get n coin return number coin pool 1 metaregistry get n coin 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 3 metaregistry get n underlying coin return total number underlying coin pool 1 metaregistry get n underlying coin 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 4 metaregistry get decimal return decimal coin returned metaregistry get coin 1 metaregistry get decimal 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 18 6 6 0 0 0 0 0 metaregistry get underlying decimal return decimal coin returned metaregistry get underlying coin 1 metaregistry get underlying decimal 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 18 18 6 6 0 0 0 0 metaregistry get balance return balance coin curve pool 1 metaregistry get balance 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 344100999218050094997802859 339451232552152 323541886417619 0 0 0 0 0 metaregistry get underlying balance return pool ' balance coin returned metaregistry get underlying coin 25 populated metaregistry get underlying balance 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 25 5475800032746048063986567 18068769367677440019648367 17824609770086 16989208807146 metaregistry get admin balance return pool ' admin balance admin balance accrue per swap since part fee generated curve pool go admin external contract controlled curve dao amount fee go admin lp set time pool ' creation pool changed later balance represent balance per coin retain coin ' precision 1 metaregistry get admin balance 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 3332213937603257114591 6607424786 9725600245 0 0 0 0 0 metaregistry get fee return fee curve pool charge per swap returned fee data different stableswap pool use single parameter fee admin fee cryptoswap pool use multiple parameter fee due dynamic fee structure stableswap getter return fee per swap well admin fee percentage 3pool show pool charge 1 basis point per swap 50 go dao 1 metaregistry get fee 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 1000000 5000000000 0 0 0 0 0 0 0 0 cryptoswap getter return fee admin fee percentage mid fee fee fee dynamic fee charged per swap depends mid fee fee cryptoswap pool pegged fee understanding dynamic fee algorithm reader pointed cryptoswap paper http curve fi file crypto pool paper 1 metaregistry get fee 0xd51a44d3fae010294c616388b506acda1bfaae46 1 5954883 5000000000 5000000 30000000 0 0 0 0 0 0 metaregistry find pool coin return pool hold two coin even pool metapool index query return index list pool containing two coin 1 metaregistry find pool coin 0x6b175474e89094c44da98b954eedeac495271d0f 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 0 1 ' 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 ' 2 metaregistry find pool coin 0x6b175474e89094c44da98b954eedeac495271d0f 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 1 2 ' 0xdebf20617708857ebe4f679508e7b7863a8a8eee ' metaregistry get coin index given coin coin pool getter return coin index boolean indicates coin swap involves underlying market case non metapool following returned 1 metaregistry get coin index 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 0x6b175474e89094c44da98b954eedeac495271d0f 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 1 0 1 false coin combination involves underlying market coin lusd pool 1 metaregistry get coin index 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 0x6b175474e89094c44da98b954eedeac495271d0f 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 1 1 2 true metaregistry get pool params return pool ' parameter stableswap getter return amplification coefficient pool 1 metaregistry get pool params 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 1 2000 cryptoswap getter return 1 amplification coefficient 2 invariant 3 gamma coefficient gamma 4 allowed extra profit 5 fee gamma 6 adjustment step 7 moving average half time 1 metaregistry get pool params 0xd51a44d3fae010294c616388b506acda1bfaae46 1 1707629 257946982336455335322438705 11809167828997 2000000000000 500000000000000 2000000000000000 600 metaregistry get gauge get gauge receives crv token inflation depositing liquidity pool token pool 1 metaregistry get gauge 0xd51a44d3fae010294c616388b506acda1bfaae46 0 0 1 ' 0xdefd8fdd20e0f34115c7018ccfb655796f6b2168 ' metaregistry get gauge type get gauge type gauge associated pool 1 metaregistry get gauge type 0xd51a44d3fae010294c616388b506acda1bfaae46 0 0 1 5 metaregistry get lp token get address liquidity pool token minted pool 1 metaregistry get lp token 0xd51a44d3fae010294c616388b506acda1bfaae46 1 ' 0xc4ad29ba4b3c580e6d59105fff484999997675ff ' metaregistry get pool asset type get asset type pool 0 usd 1 eth 2 btc 3 4 cryptopool token asset type property stableswaps enforced cryptoswap pool always return 4 stableswap pool example lusd 3crv pool usd stablecoin pool 1 metaregistry get pool asset type 0xed279fdd11ca84beef15af5d39bb4d4bee23f0ca 1 0 cryptoswap pool example 1 metaregistry get pool asset type 0xd51a44d3fae010294c616388b506acda1bfaae46 1 4 metaregistry get pool lp token get pool associated liquidity pool token 1 metaregistry get pool lp token 0xc4ad29ba4b3c580e6d59105fff484999997675ff 1 ' 0xd51a44d3fae010294c616388b506acda1bfaae46 ' metaregistry get virtual price lp token get token ' virtual price virtual price pool begin 1 increase pool accrues fee number constantly increase stableswap pool unless pool ' amplification coefficient change cryptoswap pool moment virtual price go admin fee claim change pool ' parameter 1 metaregistry get virtual price lp token 0xc4ad29ba4b3c580e6d59105fff484999997675ff 1 1020841390601246610 setup set python environment using following step python venv venv source venv bin active pip install upgrade pip pip install r requirement txt project us eth ape 0 4 0 developed apeworx http apeworx io various plugins used 1 ape vyper http github com apeworx ape vyper 2 ape hardhat http github com apeworx ape hardhat 3 ape alchemy http github com apeworx ape alchemy install please follow instruction laid respective github repository clicking link note choose run test using alchemy upstream provider please set alchemy api key environment variable labelled web3 alchemy project id web3 alchemy api key choose use local node geth erigon please change hardhat upstream provider mainnet fork geth ape config yaml ape config yaml hardhat port auto fork ethereum mainnet upstream provider geth upstream provider alchemy testing run test interactive mode please following ape test deployment adding registry deployment license c curve fi 2022 right reserved license
/dhedge/dhedge-contracts,JavaScript,dhedge install package npm start ganache npx ganache cli deploy contract npx truffle migrate reset network development running test ganache slow npx truffle network development test truffle develop quick npx truffle develop test output contract dhedgefactory factory wa initialized properly factory create contract correctly 208ms upgradability upgrade correctly new implementation new method 203ms upgrade correctly new implementation redefined method 189ms contract dhedge fund metadata default state correct 159ms mockexchangerate work fine small rounding error 66ms mocksynthetix exchange burn source amount token mint target amount 92ms dhedge total balance exchange correct 720ms dhedge simple deposit withdrawal work ok 687ms dhedge mixed withdrawal work ok 834ms withdrawal forefit suspended asset work ok 761ms withdrawal forefit suspended asset fail 604ms deposit proportion work ok 282ms small investment work ok 532ms exit fee work correctly 359ms exit fee cooldown work correctly 5438ms private pool work expected 861ms member adding removing single member keep map date 154ms adding member work correctly 174ms removing member work correctly 184ms asset adding new asset increase number asset removing decrease 141ms adding existing asset ' change number asset 72ms removing non supported asset ' change number asset 72ms asset balance ' removed 323ms non synth asset ' added 45ms persistent asset ' removed asset ' added maximum asset limit 74ms getting suspended asset work correctly 71ms pool fee initialize pool fee correctly 152ms pool fee percentage variable initialize function correctly 196ms basic manager fee flow 1207ms upgradability upgrade instance 668ms correctly upgrade instance support exit fee 802ms simple deposit withdrawal work ok upgrade 706ms contract testproxyfactory first two instance initialized correctly deploying another instance give result 75ms updating implementation factory reflects across instance 61ms v1 implementation setter function 48ms v2 implementation setter function 77ms 39 passing 1m
/SunWeb3Sec/DeFiLabs,Solidity,defilabs progress repo aim learn defi project functionality work chain testing bug finding fuzzing ci etc getting started follow instruction http book getfoundry sh getting started installation html install foundry http github com foundry r foundry clone install dependency git submodule update init recursive see function signature shoul add etherscan api key yourapikey end forge test coul get api key http etherscan io myapikey flashloan testing uniswapv2 flashswap testing sh forge test contract src test uniswapv2 flashswap sol vv dodo flashloan testing sh forge test contract src test dodo flashloan sol vv aave flashloan testing sh forge test contract src test aave flashloan sol vv balancer flashloan testing sh forge test contract src test balancer flashloan sol vv pancakeswap flashswap testing sh forge test contract src test pancakeswap flashswap sol vv biswap flashswap testing sh forge test contract src test biswap flashloan sol vv chainlink testing getlatestprice test progress sh forge test contract src test chainlink sol vv compound testing erc20 ctoken supply redeem borrow repay test progress sh forge test contract src test compound sol vv goverance submit proposal test progress sh forge test contract src test compound dao sol vv uniswapv2 testing swap test progress sh forge test contract src test uniswapv2 sol vv curve testing swap test progress sh forge test contract src test curve sol vv makerdao testing balancer testing
/minaminao/defi-exploits,Solidity,defi exploit purpose repository develop secure contract prevent attack directory structure date prefixed directory name utc src yyyymmdd protocolname1 protocolname1exploit sol protocolname1exploittest sol yyyymmdd protocolnamen interface utils list pocs 2022 08 01 nomad bridge sh forge test vvv match contract nomadbridgeexploittest 2020 10 26 harvest finance sh forge test vvv match contract harvestfinanceexploittest
/complusnetwork/merkle-distributor,TypeScript,complus merkle distributor merkle distributor designed quickly automatically distribute token among number project participant contract make possible send token using huge list address smart contract based merkle tree allows contract store one fixed size number information data tree example huge list recipient address merkle tree algorithm distribute token pre specified user address mass distribution token random address impossible merkle airdrop provides million account access selected contract feature saving single number make sure account list merkle airdrop scheme token distributed using address list instead user ' claim ' token sending transaction contract paying fee user add special data transaction allows contract easily verify whitelisted contract doe store list contract cost effective need one number address list size contract autonomous extremely simple launch doe require support local development following assumes use node 10 install dependency yarn compile contract yarn compile
/antoncoding/gamma-portal,TypeScript,gamma portal p align center img width 100 src public favicon ico br br href badge img alt code style prettier src http img shield io badge code style prettier ff69b4 svg style flat square href http app netlify com site opynv2 portal deploys img alt netlify deployment src http api netlify com api v1 badge 19d789ad 775c 4147 87aa 25bdd2dd9456 deploy status img src http img shield io github last commit antoncoding opyn v2 portal br p intro currently hosted netlify http gammaportal xyz fleek http gammaportal fleek co open sourced alternative front end interact gamma protocol http github com opynfinance gammaprotocol opyn v2 encourage everyone open discussion feature request pull request help project boom opyn currently launching grant program developer want build top gamma portal also apply grant get paid please reach learn detail feature portal webpage serf portal application built gamma portocol want list application open pr apps http imgur com pjjxa6h png vault management manage short position directly protocol adjust collateral mint burn otokens create spread vault list http imgur com 4gdvrc1 png detail http imgur com hdssk3p png operator management manage operator authorized also recommand new operator come built something cool ' also happy list help reach wider audience operator http imgur com dxag19v png trade otoken trade otoken otc via open orderbook trade http imgur com sripg89 png contribute contribute repo helping resolve existing issue feature request refactor code also feel free open feature request want see gamma portal opyn currently launching grant program developer want build top gamma portal also apply grant get paid please reach learn detail
/jpmonette/bscscan-ts,TypeScript,h1 align center code jpmonette bscscan code h1 p align center code jpmonette bscscan code explore strong binance smart chain strong using typescript javascript p p align center href http travis ci com jpmonette bscscan img src http travis ci com jpmonette bscscan svg branch develop alt build status href ' http coverall io github jpmonette bscscan branch develop ' img src ' http coverall io repos github jpmonette bscscan badge svg branch develop ' alt ' coverage status ' href http www npmjs com package jpmonette bscscan img src http badge fury io j 40jpmonette 2fbscscan svg alt npm version height 18 href http github com facebook jest img src http img shield io badge tested jest 99424f svg alt tested jest href http opensource org license mit img src http img shield io badge license mit yellow svg alt license mit p developer ready interact bscscan api time strongly typed developed using typescript battleproof tested using jest getting started installation bash yarn add jpmonette bscscan usage import initialize import bscscan jpmonette bscscan const client new bscscan apikey api key get account balance const balance await client account getbalance address 0x4e656459ed25bf986eea1196bc1b00665401645d console log balance 13305527100000000000 get transaction list const txlist await client account gettxlist address 0x4e656459ed25bf986eea1196bc1b00665401645d console log txlist blocknumber 12476392 timestamp 1636382206 hash 0x07ef689ba048006542b287aa6e89c777a9f6550b01ceac83fd3bef88ead38387 nonce 2095670 blockhash 0x3a029015928e4752ace608cd879c83efeca1a3a30dd0c1755ec97aa335813ae1 transactionindex 24 0xdccf3b77da55107280bd850ea519df3705d1a75a 0x4e656459ed25bf986eea1196bc1b00665401645d value 3873118620000000000 gas 207128 gasprice 10000000000 iserror 0 txreceipt status 1 input 0x contractaddress cumulativegasused 1463016 gasused 21000 confirmation 361409 blocknumber 12685304 timestamp 1637030116 hash 0xba2ad55a8cc6126c125a2460cbc27030b4ecb9cce27e8f238fcd71fcf32d6c24 nonce 155854 blockhash 0x53a5e395180d31adc534a846b3620690b0bc40237819df209980d0090fd8e8f3 transactionindex 41 0x1fbe2acee135d991592f167ac371f3dd893a508b 0x4e656459ed25bf986eea1196bc1b00665401645d value 2559805720000000000 gas 207128 gasprice 10000000000 iserror 0 txreceipt status 1 input 0x contractaddress cumulativegasused 1224129 gasused 21000 confirmation 152497 license copyright c 2021 jean philippe monette contact jpmonette net permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
/celer-network/layer2-finance-v2-contracts,Solidity,layer 2 finance v2 contract contract layer 2 finance defi aggregator v2 powered optimistic rollup run unit test sh yarn test benchmark gas cost sh yarn report gas benchmark yarn report gas summary check report gas usage update contract size sh yarn size contract check report contract size txt deployment 1 project root directory update env example value env template 2 run deployment command sh hardhat deploy network network tag deployment tag 3 verify etherscan using hardhat try sh hardhat etherscan verify network network 4 verify etherscan using solt http github com hjubb solt blob main readme md run sh source script solt sh run solt write try sh solt verify license 3 network network solc input contract json deployed address contract name second step fails go etherscan manually verify using standard json input file 5 recommended doe work abiencoderv2 flatten manually verify etherscan first flatten contract verify sh hardhat flatten path contract flattened edit flattened remove duplicate spdx license identifier line submit etherscan
/aragon/liquidity.aragon.org,TypeScript,aragon ant liquidity reward frontend available script project directory run yarn start run app rinkeby development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console yarn test launch test runner br yarn testwatch launch test runner interactive watch mode br yarn build build app production build folder br correctly bundle react production mode optimizes build best performance
/fireclint/defi-react-site,JavaScript,getting started create react app project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make change may also see lint error console npm test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information npm run build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject ' go back ' satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point ' ' ever use eject curated feature set suitable small middle deployment ' feel obligated use feature however understand tool ' useful ' customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify http facebook github io create react app doc troubleshooting npm run build fails minify
/sergejmueller/binance-savings-rebalancer,JavaScript,p align center b binance saving rebalancer b br transfer binance saving higher interest rate p binance offer 3 type saving account flexible saving deposit redeem anytime locked saving flexible deposit higher profit activity limited supply higher demand saving account unpredictable different project different coin different duration different interest rate check binance api new financial product move coin account balance available saving project necessary redeems coin flexible saving invest asset possible locked saving activity higher interest rate priority investment higher profit first account balance activity locked saving flexible saving benefit hand drafted library quick install dependency open source requirement binance api key read enable spot trading binance api secret node j instance 14 x cron job periodic check install provide api key api secret process env variable try yarn start warning use risk todos notification project purchase icon made skyclick http www flaticon com author skyclick flaticon http www flaticon com
/OctoFi/INKubator,Solidity,deploy inkubator contract 1 deploy uniswapv2factory sol 2 deploy uniswapv2locker sol adding uniswapv2factory address 3 deploy presalesettings sol 4 deploy presalefactory sol 5 presalelockforwarder sol add constructor hardcoded presalefactory uniswapv2locker uniswapv2factory deploy 6 presalegenerator01 sol add constructor hardcoded presalefactory presalesettings deploy presalegenerator01 sol 7 presale01 sol add constructor hardcoded uniswapv2factory weth presalesettings presalelockforwarder address project dev address 8 presalefactory sol call ' adminallowpresalegenerator ' function passing address presalegenerator01 true 9 uniswapv2locker sol call ' whitelistfeeaccount ' args address presalelockforwarder true
/yearn/NFTreasury,TypeScript,p align center img src http user image githubusercontent com 7863230 177352000 91cf996f 8ea5 4841 97e2 2ab6d0b72cbc png p quickstart clone git clone git github com yearn nftreasury git install yarn install develop yarn dev build yarn start config open next config j next config j customize global address key rpc url nftreasury simple yet powerful treasury management tool powered yearn well give mix stable eth short term project need put long term asset vault earn yield need doe work use nftreasury tool decide project fund youll need short term e next 6 month rest eth sent yearn vault safely secured earning yield next well help swap short term fund mixture eth usdc remain wallet start building project right away disclaimer yearn vault vault passive investing strategy enabling people put capital work via automation vault auto compound earned token meaning yearn reinvests earned token generate additional earnings time strategy automated smart contract put token different protocol generate yield user benefit socializing gas cost need expert defi underlying protocol utilize yearn vault risk vault yearn decentralized finance system superficially similar traditional financial transaction way fact different defi tradfi unique cost benefit risk protection mechanism please bear fact mind using website use yearn vault without sufficient understanding unique risk differ traditional financial transaction way fully understand risk strong understanding relevant technical system incentive design mechanism embody strongly encourage review yearns technical documentation code use cowswap use cowswap like cow swap use gas le order settled peer peer providing mev protection find http cowswap exchange faq chain mainnet settle trade without incurring slippage fee wtf mev mev stand miner extractable value term given value extracted miner reordering censoring block imagine call broker every time wanted buy monkey jpeg tell broker monkey want buy place order order get filled receive monkey picture imagine wa someone listening call wa able place order ahead know coming frontrunning making money opportunity
/interlay/interbtc-ui,TypeScript,interbtc div align center &#9; p &#9; &#9; h3 align center interbtc use bitcoin anywhere h3 &#9; p div interlay ui connects polkadot kusama ecosystem bitcoin allows creation interbtc kbtc fungible token represents bitcoin polkadot kusama ecosystem interbtc kbtc backed bitcoin 1 1 allow redeeming equivalent amount bitcoins relying collateralized third party called vault comparison bridge construction like tbtc wbtc renvm anyone become intermediary depositing collateral making interbtc kbtc truly open system bridge follows detailed specification href http spec interlay io target blank strong explore specification strong implemented collection open source substrate module using rust href http gitlab com interlay interbtc target blank strong explore implementation strong built react http github com facebook react typescript http github com microsoft typescript polkadot j http polkadot j org yarn http github com yarnpkg yarn docker compose http doc docker com compose kintsugi visit kintsugi application kintsugi interlay io http kintsugi interlay io testnet visit testnet interlay io http testnet interlay io latest testnet quickstart make sure docker compose http doc docker com compose install installed locally run ui local instance interlay kintsugi parachain combination bitcoin regtest http developer bitcoin org example testing html regtest mode bitcoin testnet http developer bitcoin org example testing html testnet follows clone repository enter root folder bash git gitlab com interlay interbtc ui git cd interbtc ui configure application use certain network like official test network well local environment please make use env file set build variable priority defined http create react app dev doc adding custom environment variable env file used local development achieve create file env development local fill following content either interlay kintsugi network version end end testing run yarn start make sure application running port 3000 run yarn cypress e2e interlay network bash react app relay chain name polkadot docker relay chain currency dot kintsugi network bash react app relay chain name kusama docker relay chain currency ksm starting ui locally note default use regtest local development one terminal start bridge bitcoin regtest vault oracle bash docker compose env file env development local another terminal start ui bash yarn install yarn start alternative local development setup repo run rm rf node module docker compose v yarn install docker compose env file env regtest another terminal docker compose service running latest master branch lib http github com interlay interbtc api run yarn install user 1 uri charlie yarn initialize start ui another terminal set source env regtest yarn start regtest connecting interlay development environment note environment might unstable us bitcoin testnet work copy content env dev file env development local bash cp env dev env development local start ui bash yarn install yarn start connecting interlay test network note environment might unstable us bitcoin testnet work copy content env testnet file env development local bash cp env testnet env development local start ui bash yarn install yarn start test test project bash yarn test design system visualize tailwindcss configuration bash yarn tailwind config viewer locally run build storybook bash yarn storybook locally run yarn build storybook build help bitcoin regtest regtest local bitcoin instance allows practically anything including sending transaction mining block generating new address full overview head bitcoin developer documentation http developer bitcoin org example testing html regtest mode sending transaction issue process need send transaction regtest achieved shell bitcoin cli regtest rpcwallet alice sendtoaddress vault address amount mining block regtest block automatically produced sent transaction need mine e g 1 block shell bitcoin cli regtest generatetoaddress 1 bitcoin cli regtest getnewaddress getting balance query balance wallet like shell bitcoin cli regtest rpcwallet alice getbalance docker hard reset docker dependency setup following command shell docker kill docker p q docker rm docker p q docker rmi docker image q docker volume rm docker volume l q contributing contribution make open source community amazing place learn inspire create contribution make greatly appreciated 1 fork project 2 create feature branch git checkout b yourname amazingfeature 3 commit change git commit ' add amazingfeature ' 4 push branch git push origin yourname amazingfeature 5 open pull request searching place start would like discus feature reach u discord http discord gg kgcyk3mksf license c copyright 2022 interlay http www interlay io ltd interbtc ui licensed term apache license version 2 0 see license license contact website interlay io http www interlay io twitter interlayhq http twitter com interlayhq email contact interlay io acknowledgement would like thank following team continuous support web3 foundation http web3 foundation parity technology http www parity io
/tradeflows/v1-core-starknet,Cairo,tradeflows core protocol hardhat project p align center img width 300 src asset tradeflows png p tradeflows core http www tradeflows io decentralised commerce protocol starknet http starkware co starknet goal provide set chain tool allow community build best commercial experience collaborative transparent permissionless trustless manner indepth discussion tradeflows dao please refer gitbook page http tradeflows dao gitbook io tradeflows documentation proud received grant starkware p align center img width 200 src asset starknet logo png p please give u github star like project actively looking contributor please reach u interested current commercial relationship use archaic method interact pdfs digital signature email bank transfer plague workflow currently used people engaging commercially lack structure culprit countless operational error uncertainty high cost tradeflows aim solve offering platform allows people build structure certainty workflow industry furthermore current centralised commercial workflow uncertain opaque slow costly factor adverse effect global supply chain good service including increase need cost financing due uncertainty blockchain able mitigate four negative effect using smart contract enable seller describe asset ' condition payment term mint nft represents asset compose nfts represent multi layer structured asset allows buyer agree asset chain custom nft functionality buyer link payment stream nft collateralise payment stream order show availability fund without losing control seller know long fund self custody contract used pay stream rate asset alive non transferable erc20 token offer high social rating degree integrity since attributed member wallet trading warning repo contains highly experimental code expect rapid iteration use risk architecture protocol based three infrastructure smart contract dao custom erc20 contract represents ownership dao contract also treasury asset init minting fee go txasset custom erc721 contract store term asset minted nft contract also contains functionality allows buyer agree asset nft also received programmed payment stream furthermore nft enables composability sub nfts txdharma custom erc20 contract non transferable mintable community member active asset able mint token counerpart ' wallet burn attributing negative score set erc20 wrapper contract enable custom streaming escrow functionality txflow custom erc20 contract wrap around target token eg usdc contains streaming self custody functionality contract also extended attribute balance erc721 contract txescrow custom erc1155 contract wrap around locked escrow amount flow towards target flow token commercial workflow starting commercial journey buyer seller engage smart contract infrastructure chain dynamic minting asset first step creating new asset 1 first buyer seller deposit erc20 token usdc flow token order make payment seller pay minting fee buyer pay commercial fee flow token 2 seller approves transfer flow token asset linked asset contract charge respective fee 3 seller mint asset nft txasset init returning tokenid 4 seller communicates tokenid buyer 5 buyer agrees asset txasset agree given tokenid 6 buyer seller start rate txasset rate given tokenid 7 buyer start adding programmed flow token cashflows asset txflow addnftmaturitystream given tokenid 8 service provider able withdraw flow token nft asset txflow withdrawamountnft streamed time pass 9 service provider buyer able withdraw flow token txflow withdrawbase base token usdc contract alpha phase deploying set test contract goerli starknet testnet production contract deployed later date mainnet warning contract address change iterate rapidly initial phase please keep look change address infrastructure alpha goerli testnet deployment date 2022 07 18 contract address dao 0x051cc37fae579cc5e8d92b451367b3e3a9d135c38bdda1fac01e5ffc8bcc34f5 http goerli voyager online contract 0x051cc37fae579cc5e8d92b451367b3e3a9d135c38bdda1fac01e5ffc8bcc34f5 txasset 0x05b9c2f5c0b79807cc75efceafb5052161421f8f7d3dc2889edf8d22775cf698 http goerli voyager online contract 0x05b9c2f5c0b79807cc75efceafb5052161421f8f7d3dc2889edf8d22775cf698 txdharma 0x03ad4a2587a8cd9c8bf292a580c7f134cbef216ea2b6582b9ebdc75c2837d8c2 http goerli voyager online contract 0x03ad4a2587a8cd9c8bf292a580c7f134cbef216ea2b6582b9ebdc75c2837d8c2 flow alpha goerli testnet deployment date 2022 07 18 contract address erc20 test 0x032683e2234543d8edccc633bf7a6a0cf36d7f62858323f76018c90c455ea129 http goerli voyager online contract 0x032683e2234543d8edccc633bf7a6a0cf36d7f62858323f76018c90c455ea129 erc20 test xflow 0x00f5b784c8dfc813cc881ccbe12ffc96135b423f38725691d5bc72524933bf1b http goerli voyager online contract 0x00f5b784c8dfc813cc881ccbe12ffc96135b423f38725691d5bc72524933bf1b erc1155 xflow 0x032683e2234543d8edccc633bf7a6a0cf36d7f62858323f76018c90c455ea129 http goerli voyager online contract 0x032683e2234543d8edccc633bf7a6a0cf36d7f62858323f76018c90c455ea129 environment development environment based hardhat http hardhat org shardlabs starknet plugin http github com shard lab starknet hardhat plugin work project must first clone repo install make sure npm http www npmjs com docker http www docker com installed project ' root folder run npm install compile compile contract npx hardhat run script compile contract nb initial compilation please set path contract set back path contract tradeflows local v chain development environment set hardhat config hardhat config file network property network devnet localhost network alpha testnet devnet chosen ie localhost shardlabs http github com shard lab starknet devnet docker container must running docker run p 127 0 0 1 5050 5050 shardlabs starknet devnet 0 2 3 apple silicon docker run p 127 0 0 1 5050 5050 shardlabs starknet devnet 0 2 3 arm note shardlabs starknet devnet image version 0 2 4 0 2 5 doe work upon start devnet print list wallet address private key eth use constant file specified script execute function goerli testnet need eth get faucet starknet faucet http faucet goerli starknet io deploy smart contract divided two category infrastructure contract manage dao asset rating functionality flow wrapper contract deploy infrastructure instructure ie asset dharma contract deployment npx hardhat run script deploy infrastructure deploy wrapped token wrapper token deployment please adapt script new token deployed npx hardhat run script deploy token operation added array script interact alpha infrastructure deposit erc20 erc20 flow script deposit erc20 token flow contract mint wrapper token note script requires owner private key work testnet contract document need deploy devnet npx hardhat run script deposit base erc20 balance script check balance erc20 test token npx hardhat run script balance erc20 check erc20 flow balance script check balance erc20 flow test token npx hardhat run script balance flow check testing create copy script constant example name script constant populate file accordingly depend environment devnet alpha export const walletaddressowner ' 0x5d1120755d9d5380201a8ac8bf39f7c4e2dd886a5b1431b7ea8dfb4ea3f0624 ' export const walletprivateowner ' 0xfa9ccf36421a514a2b8bcd75e06b884b ' export const walletaddress0 ' 0x7b85aa6f0bcb77bc76efafd22dfbb36055bd4915fd77d7d357fd7d3b366d9da ' export const walletprivate0 ' 0x3f195a2cc7e18acfea7b737abbac88f2 ' export const walletaddress1 ' 0x10b0a921fe94090bba9d65478edb9a2fe17857bf719574a58b39cbe22d92e7c ' export const walletprivate1 ' 0xebd2156a6161176df1dc826d487b58c1 ' initial workflow start running script deploy entire infrastructure test erc20 token followed execution relevant operation npx hardhat test test start run script set address generated copy address script constant file example export const daocontractaddress ' 0x03e122ff021fd9bf8952e55746ad095b751528ffcd5d40a4acc379a1d4431c25 ' export const erc20contractaddress ' 0x02d704491ed20caa95afa45184b7e9c5ecf13e1a079fdbb5b95ea39ca592cf29 ' export const txflowcontractaddress ' 0x0746fffd49369c4bd3f5c970ff9885e0d4d3e6b6c43f2a15efea034dc61735a0 ' export const txdharmacontractaddress ' 0x030260d11b2cd88a410572b3011357857c9fcef9bd431d38c8dc0c47c7fdc835 ' export const txassetcontractaddress ' 0x05df41f469bf98be75e479385eee571ebedb72f70178fe00f17040f872c0b398 ' run run next test ensure recreating asset rerunning operation still work npx hardhat test test note warning repo contains highly experimental code expect rapid iteration use risk collaboration actively looking contributor please reach interested
/mstable/MIPs,HTML,mips mstable improvement proposal mips describe standard mstable platform including core protocol specification client apis contract standard wip browsable version current draft mips found official mip site http mips mstable org contributing 1 review mip 1 mips mip 1 md 2 fork repository clicking fork top right 3 add mip fork repository template mip mip x md 4 submit pull request mstable ' mips repository http github com mstable mips first pr first draft final mip must meet formatting criterion enforced build largely correct metadata header editor manually review first pr new mip assign number merging make sure include discussion header url new thread forum mstable org http forum mstable org people discus mip whole mip requires image image file included subdirectory asset folder mip follow asset mip x mip x linking image mip use relative link asset mip x image png believe mip mature ready progress past wip phase ask issue added next governance call discussed inclusion future platform upgrade community agrees include mip editor update state mip ' approved ' mip status wip mip still developed proposed mip ready reviewed governance call approved mip ha accepted implementation mstable community implemented mip ha released mainnet rejected mip ha rejected validation mips must pas validation test mip repository ensures running test using html proofer http rubygems org gem html proofer mip validator http rubygems org gem mip validator possible run mip validator locally gem install mip validator mip validator input file
/emilianobonassi/gas-saver-gnosis-safe-module,JavaScript,h1 align center code gas saver gnosis safe module code h1 collection smart contract save gas ethereum gnosis safe wallet http gnosis safe io leveraging gst2 http gastoken io chi http medium com 1inch exchange everything wanted know chi gastoken a1ba0ea55bf3 token contract address gastokenrefundmodulev1 mastercopy gst2 0x789659de58350311f50c4c9ceefcdf8cdf8941d7 http etherscan io address 0x789659de58350311f50c4c9ceefcdf8cdf8941d7 gastokenrefundmodulev2 mastercopy chi 0x8632963c81e5a4bb1f28ebeee6a70a1a92b0384b http etherscan io address 0x8632963c81e5a4bb1f28ebeee6a70a1a92b0384b setup 1 deploy gnosis proxy using factory http etherscan io address 0x76e2cfc1f5fa8f6a5b3fc4c8f4788f0116861f9b instantiate custom module chi gst2 2 setup wallet proxy ' deployed calling setup address walletaddress 3 approve proxy spend behalf gnosis safe gas token gst2 http etherscan io token 0x0000000000b3f879cb30fe243b4dfee438691c04 chi http etherscan io token 0x0000000000004946c0e9f43f4dee607b0ef1fa1c tbc still technical next step x deliver poc realize simple ui create proxy module user allow buy easily gst2 chi e g uniswap direct minting via hal complete ui adding possibility execute tx e g like send button gnosis safe x expose function mint token behalf user network gas price threshold defined user predefined cap e mint 5 gwei max 10 token done hal http 9000 hal xyz recipe 1inch buy chi token
/Mc01/bsc-api,Solidity,bsc api binance smart chain chain api live example http mc01 github io bsc api contract api contract 0xf5cb93f18ed8bf23b00b78f2d0693aa60ca27538 http bscscan com address 0xf5cb93f18ed8bf23b00b78f2d0693aa60ca27538 autofarm proxy 0x30689827579a4962f4ce9fff58279cc9477d42d9 http bscscan com address 0x30689827579a4962f4ce9fff58279cc9477d42d9 pancakeswap proxy 0x4c07abea65923e7e1084595be38e0755c9b42251 http bscscan com address 0x4c07abea65923e7e1084595be38e0755c9b42251 pancakeswap proxy v2 0x41c653634477bdba8d6113e6dc0e1d82e1364770 http bscscan com address 0x41c653634477bdba8d6113e6dc0e1d82e1364770 configuration api first argument key accessing proxy autofarm proxy auto key pancakeswap proxy cake key pancakeswap proxy v2 cake2 key autofarm cake vault pid 7 full list available autofarm vault contract pancakeswap cake pool pid 0 full list available pancakeswap pool contract pancekeswap v2 doe use pid pool first argument omitted example usage check balance cake token address 0x bscapi getbalance cake address get staked cake token cakepoolpid 0 address 0x bscapi getstaked cake cakepoolpid address get pending auto token cakevaultpid 7 address 0x bscapi getpending auto cakevaultpid address get balance staked pending cake cakepoolpid 0 address 0x bscapi get cake cakepoolpid address get balance staked pending cake v2 pid 0 used address 0x bscapi get cake2 pid address read contract test etherscan http bscscan com address 0xf5cb93f18ed8bf23b00b78f2d0693aa60ca27538 readcontract example implementation ether j http github com mc01 bsc api tree master example bsc api
/rysuds/dunebuggy,Jupyter Notebook,dunebuggy alt text dune buggy svg h1 align center br img src asset dune buggy svg alt dunebuggy width 300 height 225 br div style sans serif b dunebuggy b p h1 div align center lightweight unofficial python sdk href http dune xyz home dune xyz br installation installation getting started getting started roadmap roadmap note note div installation sh pip install dunebuggy getting started retrieving public query retrieve query ' need query id public query ' interested example take look popular custom nft floor tracker query smaroo http dune xyz query 83579 query id found url python dunebuggy import dune dune dune query dune fetch query 83579 query dunequery object get panda dataframe query output bf calling df object python print query df head div table border 1 class dataframe thead tr style text align right th th th floor approx th th time interval th tr thead tbody tr th 0 th td 0 122649 td td 2021 06 01t00 00 00 00 00 td tr tr th 1 th td 0 130000 td td 2021 06 02t00 00 00 00 00 td tr tr th 2 th td 0 193455 td td 2021 06 03t00 00 00 00 00 td tr tr th 3 th td 0 189000 td td 2021 06 04t00 00 00 00 00 td tr tr th 4 th td 0 189930 td td 2021 06 05t00 00 00 00 00 td tr tbody table div also take look basic information returned query query info python print query info ' name ' ' custom nft floor tracker ' ' author ' ' smaroo ' ' length ' 264 ' query id ' 83579 ' result id ' uuid ' e5aef8a0 1453 44d1 a27b f576ea2b3ba2 ' ' job id ' uuid ' ec680fa9 217f 44c5 b223 56730cd07473 ' ' column ' ' time interval ' ' floor approx ' query dune parameterized meaning author expose certain variable user enter custom value example query 83579 happens parameterized verify inspecting query parameter python print query parameter queryparameter key ' enter nft contract address ' type ' text ' value ' xc3f733ca98e0dad0386979eb96fb1722a1a05e69 ' enumoptions none queryparameter key ' floor time interval ' type ' enum ' value ' day ' enumoptions ' day ' ' hour ' queryparameter key ' start date ' type ' datetime ' value ' 2021 06 01 00 00 00 ' enumoptions none ' like run query custom parameter ' need take parameter initial query change value want fetch query replacing old nft contract address param new one contract address bayc http etherscan io address 0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d python params query parameter replacing contract address bayc params 0 value ' xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d ' custom query dune fetch query 83579 parameter params note also create fresh set parameter importing queryparameter dunebuggy model query adding value new object python dunebuggy model query import queryparameter param change queryparameter key ' enter nft contract address ' value ' xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d ' params 0 param change custom query dune fetch query 83579 parameter params python print custom query info ' name ' ' custom nft floor tracker ' ' author ' ' smaroo ' ' length ' 265 ' query id ' 83579 ' result id ' uuid ' 42a3c13d 5fbd 42bd 86c0 acc9adcdc803 ' ' job id ' uuid ' 9051ebe7 862f 46d0 9999 b4645659ca56 ' ' column ' ' time interval ' ' floor approx ' note result id job id different ran query changed params python print custom query parameter queryparameter key ' enter nft contract address ' type ' text ' value ' xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d ' enumoptions none queryparameter key ' floor time interval ' type ' enum ' value ' day ' enumoptions ' day ' ' hour ' queryparameter key ' start date ' type ' datetime ' value ' 2021 06 01 00 00 00 ' enumoptions none python print custom query df head div table border 1 class dataframe thead tr style text align right th th th floor approx th th time interval th tr thead tbody tr th 0 th td 0 8000 td td 2021 06 01t00 00 00 00 00 td tr tr th 1 th td 0 8518 td td 2021 06 02t00 00 00 00 00 td tr tr th 2 th td 0 8260 td td 2021 06 03t00 00 00 00 00 td tr tr th 3 th td 0 7400 td td 2021 06 04t00 00 00 00 00 td tr tr th 4 th td 0 8499 td td 2021 06 05t00 00 00 00 00 td tr tbody table div creating new query dunebuggy also allows create new using existing dune xyz account login need pas username password dune object verify login inspecting dune user id python import username environ get ' dune username ' password environ get ' dune password ' dune dune username username password password print dune user id create query need pas name query string dataset id construct sql query using raw sql string python query string select ethereum transaction nlimit 100 n could use fancy orm style library like pypika http github com kayak pypika python pypika import database query ethereum database ' ethereum ' q query ethereum transaction select ' ' limit 100 query string q get sql quote char none print query string ' select ethereum transaction limit 100 ' dune requires u specify dataset id supported blockchain datasets upon query creation currently supported datasets following blockchain dataset id ethereum 4 xdai 6 polygon 7 optimism 1 8 optimism 2 10 binance 9 solana 1 access integer code via datasetid enum python dunebuggy model constant import datasetid created query dune create query query ' name query string datasetid ethereum created query accessed like also log dune account see well python print created query df head div table border 1 class dataframe thead tr style text align right th th th access list th th block hash th th block number th th block time th th data th th th th gas limit th th gas price th th gas used th th hash th th index th th max fee per gas th th max priority fee per gas th th nonce th th priority fee per gas th th success th th th th type th th value th tr thead tbody tr th 0 th td none td td x887c665b0c52ccace092d817e984e2e828ef59079295 td td 47287 td td 2015 08 07t08 50 01 00 00 td td none td td xdb312d1d6a2ccc64dd94a3892928bac82b4e8c15 td td 21000 td td 100000000000 td td 21000 td td xd3e6a2fc34066d20bb83020b1ee95b9dc7919fd242bd td td 0 td td none td td none td td 0 td td none td td none td td x34bb6978c5a1ad68777ad388c6787df53903430c td td none td td 1000000000000000000 td tr tr th 1 th td none td td x4869e218b0a8f5784f16193ac66cbf35c4510ace0c9b td td 48698 td td 2015 08 07t15 29 53 00 00 td td none td td x48040276e9c17ddbe5c8d2976245dcd0235efa43 td td 90000 td td 57550496008 td td 21000 td td x8ba39f908731171fe96ee4e700e71d170ef8e651fac7 td td 0 td td none td td none td td 0 td td none td td none td td xd8d0549637b65d58e7fb6cbdd11530b399d1ddac td td none td td 100000000000000000000 td tr tr th 2 th td none td td xab9491b62b16bd928b281a83db82483584c22aeebc0d td td 49051 td td 2015 08 07t17 03 48 00 00 td td none td td x8686578c4f7c75246f548299d6ffdac3b67b5cd1 td td 90000 td td 57178423039 td td 21000 td td x57f8ba638903d6335e211eb470159587c73316788880 td td 0 td td none td td none td td 0 td td none td td none td td x87abffa6b80f712c852a9558120ba6611f0b5e46 td td none td td 45150000000000000000 td tr tr th 3 th td none td td x1f9adc2190701ca3085b28252e4f1f467d980f763dad td td 49174 td td 2015 08 07t17 41 03 00 00 td td none td td x18e4ce47483b53040adbab35172c01ef64506e0c td td 90000 td td 58589751415 td td 21000 td td xb8280da44f8d35011c3f431f7d1a82213477a4e742de td td 2 td td none td td none td td 0 td td none td td none td td xfb26ae2d3621829472555fbd11bb2a324b7a5c57 td td none td td 10000000000000000000 td tr tr th 4 th td none td td xf1f392fd197a149afe9f8843d7ba759d1a9f79d1ef62 td td 49938 td td 2015 08 07t21 06 21 00 00 td td none td td xc6bf5b6558f2ee21f2e43d9ff9b5408a0cb89413 td td 90000 td td 71214529679 td td 21000 td td x538e1664c12c55287c98dc5dd248f60c642cbbbd7a18 td td 0 td td none td td none td td 4 td td none td td none td td x33a3f479f6c3e7f91128348490d1f7e8d2a0fab5 td td none td td 5000000000000000000 td tr tbody table div saving csv save query csv take advantage csv method df python created query df csv ' test data csv ' roadmap cleanup punding todo comment add support embedding dune graph plotting w dune style color add test lol add support query updating investigate whether dashboard support make sense investigate whether max row limit data returned query batch better formatting certain returned column link etc add documentation sphinx something else note project wa inspired itzemstar ' duneanalytics repo http github com itzmestar duneanalytics readme image ian symbol dataset http ian umces edu medium library symbol
/SciEcon/SoK_Blockchain_Decentralization,Jupyter Notebook,sok blockchain decentralization paper arxiv org ab 2205 04256 http arxiv org ab 2205 04256 supplementary resource data code doi http zenodo org badge 461721882 svg http zenodo org badge latestdoi 461721882 luyao zhang sup sup xinshi sup sup yulin liu sup sup joint corresponding author sup sup joint first author sok blockchain decentralization http github com sciecon sok blockchain decentralization blob main fig9 png folder url data coinmetrics http github com sciecon sok blockchain decentralization tree main data coinmetrics data tokenindex http github com sciecon sok blockchain decentralization tree main data tokenindex code http github com sciecon sok blockchain decentralization tree main code conference invitation http github com sciecon sok blockchain decentralization tree main conference invitation figure http github com sciecon sok blockchain decentralization tree main figure table content 1 coinmetrics market data http github com sciecon sok blockchain decentralization tree main data coinmetrics 1 1 table data file name token file name bitcoin btc btc csv ethereum eth eth csv dai dai dai csv sai sai sai csv aave aave aave met csv compound comp comp met csv maker mkr mkr met csv uniswap uni uni met csv sushiswap sushi sushi met csv balancer bal bal met csv renvm ren ren met csv synthetix snx snx met csv nexus mutual nxm nxm met csv 1 2 data dictionary variable name unit frequency description capmrktcurusd usd daily market capitalization usd sum usd value current supply priceusd usd daily fixed closing price asset 00 00 utc following day vtydayret30d percent per annum daily 30 day volatility measured standard deviation natural log daily return past 30 day txtfrvaladjusd usd daily usd value sum native unit transferred distinct address interval removing noise certain artifact txtfrcnt number daily daily transaction count 1 3 data source description variable found coinmetrics doc http doc coinmetrics io 2 data tokenindex http github com sciecon sok blockchain decentralization tree main data tokenindex 2 1 table data file decentralization index shannon entropy top defi token name token first observation date file name aave aave 2020 10 02 aave ent csv compound comp 2020 06 14 comp ent csv maker mkr 2017 12 15 maker ent csv dai dai 2019 11 18 dai ent csv sai sai 2017 12 18 sai ent csv liquity lqty 2021 04 05 lqty ent csv uniswap uni 2020 09 18 uni ent csv sushiswap sushi 2020 08 26 sushi ent csv balancer bal 2020 06 20 bal ent csv bancor bnt 2017 06 17 bnt ent csv convex curve cvxcrv 2021 05 17 cvxcrv ent csv convex cvx 2021 05 17 cvx ent csv fei protocol tribe 2020 3 28 tribe ent csv renvm ren 2017 12 31 ren ent csv flexa amp 2019 01 09 fxc ent csv tornado cash torn 2020 12 18 torn ent csv synthetix snx 2020 05 11 snx ent csv nexus mutual nxm 2019 05 23 nxm ent csv 2 2 data dictionary decentralization index top defi token variable name unit frequency description val n daily decentralization index value transaction decentralization entire day 00 00 utc following day date n daily corresponding date index wa calculated 2 3 data source decentralization index top defi token caculated google bigquery ethereum dataset token http cloud google com blog product data analytics ethereum bigquery public dataset smart contract analytics transfer table 3 code http github com sciecon sok blockchain decentralization tree main code content section paper url decentralization class section 4 data empirical analysis http github com sciecon sok blockchain decentralization blob main code decentralization class ipynb top defi decentralization visualization section 4 2 descriptive analysis http github com sciecon sok blockchain decentralization blob main code top defi decentralization visualization ipynb sai dai decentralization analysis section 4 3 predictive analysis http github com sciecon sok blockchain decentralization blob main code top defi decentralization visualization ipynb decentralization index daily update n http github com sciecon sok blockchain decentralization blob main code daily query ipynb eip 1559 analysis section 4 4 causal inference http github com sciecon sok blockchain decentralization blob main code eip1559 analysis ipynb
/WeaverFi/cookietrack-api,TypeScript,cookietrack logo logo cookietrack api api power cookietrack codeql http github com cookietrack io cookietrack api action workflow codeql analysis yml badge svg version http img shield io github package json v cookietrack io cookietrack api nodejs http img shield io badge node j 6da55f style badge logo node j logocolor white typescript http img shield io badge typescript 23007acc svg style badge logo typescript logocolor white express j http img shield io badge express j 23404d59 svg style badge logo express logocolor 2361dafb firebase http img shield io badge firebase 23039be5 svg style badge logo firebase twitter shield http img shield io twitter follow cookietrack io style social documentation cookietrack ' openapi documentation found http api cookietrack io doc contributing contribution guideline found contributing md rate limit api endpoint http api cookietrack io currently ha rate limit 200 call every 6 hour everyone enjoy api without overloading others ' like host use without restriction refer self hosting section self hosting repository already setup firebase hosting could easily adapted deployed aws cloud deployment service 1 add api key function static key json example file provided 2 install dependency navigating function folder using npm 3 deploying firebase done npm run deploy script already setup compile typescript update route json file etc wish test endpoint locally following option index file test locally setting localtesting true running npm start alternatively could test firebase ' emulator setting emulatortesting true instead running npm run emulator sure turn rate limiting setting ratelimited false cookietrack type npm package includes common typing api check repository http github com cookietrack io cookietrack type logo http github com cookietrack io cookietrack api blob master favicon svg cookietrack
/OctoFi/octofi-yield-smart-contract,Solidity,img src logo svg alt openzeppelin height 40px doc http img shield io badge doc f0 9f 93 84 blue http doc openzeppelin com contract npm package http img shield io npm v openzeppelin contract svg http www npmjs org package openzeppelin contract build status http circleci com gh openzeppelin openzeppelin contract svg style shield http circleci com gh openzeppelin openzeppelin contract coverage status http codecov io gh openzeppelin openzeppelin contract graph badge svg http codecov io gh openzeppelin openzeppelin contract library secure smart contract development build solid foundation community vetted code implementation standard like erc20 http doc openzeppelin com contract erc20 erc721 http doc openzeppelin com contract erc721 flexible role based permissioning http doc openzeppelin com contract access control scheme reusable solidity component http doc openzeppelin com contract utility build custom contract complex decentralized system first class integration gas station network http doc openzeppelin com contract gsn system gas fee audited leading security firm last full audit v2 0 0 overview installation console npm install openzeppelin contract openzeppelin contract feature stable api http doc openzeppelin com contract release stability api stability mean contract ' break unexpectedly upgrading newer minor version usage installed use contract library importing solidity pragma solidity 0 6 0 import openzeppelin contract token erc721 erc721 sol contract mycollectible erc721 constructor erc721 mycollectible mco public ' new smart contract development head developing smart contract http doc openzeppelin com learn developing smart contract learn creating new project compiling contract keep system secure always use installed code neither copy paste online source modify library designed contract function use deployed ' need worry needlessly increasing gas cost learn guide sidebar teach different concept use related contract openzeppelin contract provides access control http doc openzeppelin com contract access control decide perform action system token http doc openzeppelin com contract token create tradeable asset collective distribute via crowdsales http doc openzeppelin com contract crowdsales gas station network http doc openzeppelin com contract gsn let user interact contract without pay gas utility http doc openzeppelin com contract utility generic useful tool including non overflowing math signature verification trustless paying system full api http doc openzeppelin com contract api token erc20 also thoroughly documented serf great reference developing smart contract application also ask help follow contract ' development community forum http forum openzeppelin com finally may want take look guide blog http blog openzeppelin com guide cover several common use case good practice following article provide great background reading though please note referenced tool changed tooling ecosystem continues rapidly evolve hitchhiker guide smart contract ethereum http blog openzeppelin com hitchhiker guide smart contract ethereum 848f08001f05 help get overview various tool available smart contract development help set environment gentle introduction ethereum programming part 1 http blog openzeppelin com gentle introduction ethereum programming part 1 783cc7796094 provides useful information introductory level including many basic concept ethereum platform depth dive may read guide designing architecture ethereum application http blog openzeppelin com designing architecture ethereum application 9cec086f8317 discus better structure application relationship real world security project maintained openzeppelin http openzeppelin com developed following high standard code quality security openzeppelin meant provide tested community audited code please use common sense anything deal real money take responsibility implementation decision security problem might experience core development principle strategy openzeppelin based include security depth simple modular code clarity driven naming convention comprehensive unit testing pre post condition sanity check code consistency regular audit latest audit wa done october 2018 version 2 0 0 please report security issue find security openzeppelin org contribute openzeppelin exists thanks contributor many way participate help build high quality software check contribution guide contributing md license openzeppelin released mit license license
/honungsburk/atomic-swap,TypeScript,div align center href http atomic swap io img src public android chrome 192x192 png alt atomic swap logo height 64 br p h3 b atomic swap b h3 p p b trustless p2p trading cardano b p p contribution welcome http img shield io badge contribution welcome brightgreen logo github code conduct md website http img shield io website url http 3a 2f 2fatomic swap io logo atomic swap http atomic swap io tweet http img shield io twitter url style social url http 3a 2f 2fatomic swap io 2f http twitter com intent tweet text atomic 20swap 20 20a 20trustless 20p2p 20trading 20dapp 20on 20cardano 20https 3a atomic swap io 20 23atomicswap 20via 20 40 atomicswap p p sub built href http github com honungsburk atomic swap graph contributor contributor sub p br p href http atomic swap io target blank img src resource atomic swap banner jpeg alt atomic swap width 100 p div support twitter http twitter com atomicswap discord http discord com invite zqpn4tuj6a feature trustless trading using multisig transaction create trade number asset nfts token etc p2p networking client using webrtc super simple self host pwa progressive web app text chat voice chat blacklist whitelist asset dark mode getting running install build 1 npm install save legacy peer deps react kawaii 2 cd function 3 npm install 4 add secret explained handling secret 5 npm run build 6 cd 7 npm run build note currently bug chakra ui cause build fail see issue http github com chakra ui chakra ui issue 5714 best way resolve replace coloradjust printcoloradjust node module chakra ui menu dist declaration src use menu 480 50 node module chakra ui menu dist declaration src use menu 986 61 serving building serve application using running firebase emulator start npm run preview hot reloading developing ' need build app use firebase emulator start npm run dev note frontend rebuilt automatically backend must recompiled serve new version storing secret secret must stored name format secret function src directory ensures ignored git get secret blockfrost http blockfrost io example typescript export const blockfrost id mainnet export const blockfrost id testnet license project licensed gpl 3 0 http opensource org license gpl 3 0 see license license file detail author project exists thanks people contribute contribute contributing md honungsburk http github com honungsburk
/WeaverFi/cookietrack-api,TypeScript,cookietrack logo logo cookietrack api api power cookietrack codeql http github com cookietrack io cookietrack api action workflow codeql analysis yml badge svg version http img shield io github package json v cookietrack io cookietrack api nodejs http img shield io badge node j 6da55f style badge logo node j logocolor white typescript http img shield io badge typescript 23007acc svg style badge logo typescript logocolor white express j http img shield io badge express j 23404d59 svg style badge logo express logocolor 2361dafb firebase http img shield io badge firebase 23039be5 svg style badge logo firebase twitter shield http img shield io twitter follow cookietrack io style social documentation cookietrack ' openapi documentation found http api cookietrack io doc contributing contribution guideline found contributing md rate limit api endpoint http api cookietrack io currently ha rate limit 200 call every 6 hour everyone enjoy api without overloading others ' like host use without restriction refer self hosting section self hosting repository already setup firebase hosting could easily adapted deployed aws cloud deployment service 1 add api key function static key json example file provided 2 install dependency navigating function folder using npm 3 deploying firebase done npm run deploy script already setup compile typescript update route json file etc wish test endpoint locally following option index file test locally setting localtesting true running npm start alternatively could test firebase ' emulator setting emulatortesting true instead running npm run emulator sure turn rate limiting setting ratelimited false cookietrack type npm package includes common typing api check repository http github com cookietrack io cookietrack type logo http github com cookietrack io cookietrack api blob master favicon svg cookietrack
/princesinha19/lucky-draw,JavaScript,img src http github com princesinha19 lucky draw blob master src asset logo png height 120 width 140 ' nft based lucky draw last nft standing win game draw buyer mint nfts unique ticket number purchasing ticket pool random ticket drawn fixed time interval eliminate number game draw probability winning increase last standing ticket win game ha interesting dynamic secondary market follow principle game theory pool creation smart contract get deployed matic network smart contract written solidity frontend written react j project us ipfs store nft image div img src http github com princesinha19 lucky draw blob master src asset matic logo png height 150 width 150 img src http github com princesinha19 lucky draw blob master src asset ipfs logo png height 150 width 150 div demo video youtube video http img youtube com vi pjt7y4orddy 0 jpg http youtu pjt7y4orddy br step run locally 1 clone repository 2 go inside cloned project using command cd lucky draw 3 install dependency using command yarn 4 run command yarn start start application
/alejoacosta74/solidity-escrow-arrangement,Solidity,solidity escrow arrangement repository contains project source code dependency required deploy escrow arrangement ethereum built openzeppelin http img shield io badge built 20with openzeppelin 3677ff http doc openzeppelin com 1 description project implement simple escrow arrangement ethereum network escrow deployed following 2 ethereum smart contract written solidity bossoncoin sol contract defines token ' bossoncoin ' used used witin escrow arrangement fund account execute transaction bossoncoin sol inherits standard erc20 openzeppelin erc20 http doc openzeppelin com contract 3 x erc20 initialy minted 100 coin bossonescrow sol contract defines ' business logic ' escrow arrangement bossonescrow sol inherits ownable interface openzeppelin access ownable http doc openzeppelin com contract 3 x api access ownable ensure escrow agent allowed perform change contract state variable balance following function implemented bossoncoin sol function description credit transfer bossoncoins buyer account bossonescrow account order check buyer ha enough fund escrow item availability update internal escrow balance buyer seller according item price mark item state awaiting delivery offer creates new item sale add bossonscrow stock item sale mark item state offered complete transfer bossoncoins bossonescrow account seller account update item ownership buyer mark item state complete complain reverts internal escrow balance buyer seller account according item price mark item state offered 2 framework dependency source code language solidity development environment node j npm truffle ganache testing truffle mocha chai 3 fit together initial mint mintin http imgur com vixldwg png example flow trasaction credit buyer1 20 credit buyer1 20 http imgur com 3t5lfeb png example flow trasaction order buyer1 shirt order buyer1 shirt http imgur com uvus9id png example flow trasaction confirm buyer1 shirt confirm buyer1 shirt http imgur com b8jfili png 4 install clone repository install dependency devdependencies bash npm install g truffle npm install g ganache cli cd bossonescrow npm init 5 usage start ganache cli development ethereum network sh ganache cli 10000000 allowunlimitedcontractsize gaslimit 0x1ffffffff another terminal compile deploy solidity contract ganache development network sh truffle compile truffle migrate 6 test problem example input provided technical assignment coded within truffle test file bossonescrow assigmenttest j javascript execute example input tx await bossoncoin approve bossonescrow address token ' 20 ' buyer1 await bossonescrow credit buyer1 token ' 20 ' escrowagent await bossoncoin approve bossonescrow address token ' 40 ' buyer2 await bossonescrow credit buyer2 token ' 40 ' escrowagent await bossonescrow offer seller1 coffee token ' 3 ' 10 await bossonescrow offer seller2 shirt token ' 5 ' 10 await bossonescrow offer seller1 tea token ' 2 5 ' 10 await bossonescrow offer seller1 cake token ' 3 5 ' 10 await bossonescrow offer seller2 short token ' 8 ' 10 await bossonescrow offer seller2 hoody token ' 12 ' 10 await bossonescrow order buyer1 shirt escrowagent await bossoncoin approve bossonescrow address token ' 10 ' buyer1 await bossonescrow credit buyer1 token ' 10 ' escrowagent await bossonescrow order buyer2 hoody escrowagent await bossonescrow complete buyer1 shirt escrowagent await bossonescrow order buyer1 coffee escrowagent await bossonescrow order buyer1 cake escrowagent await bossonescrow complain buyer2 hoody escrowagent await bossonescrow order buyer2 tea escrowagent await bossonescrow complete buyer1 coffee escrowagent expected flow coin balance state per example input excel doc excel capture jpg execute truffle test command prompt sh truffle test expected output bash contract bosson escrow arrangement bosson escrow assigment test console output balance buyer1 18 5 buyer1 balance 18 5 106ms test console output balance seller2 5 seller2 balance 5 101ms test console output escrow internal balance 62 test console output bossoncoin escrow account balance 62 escrow balance 62 193ms 3 passing 6
/WavesHQ/defi-app-old,TypeScript,defichain desktop client image http imgur com f7tpku5 png direct download check release http github com defich defi app release latest downloadable binary window mac linux script npm run init initialize install npm dependency electron webapp run electron desktop app webapp npm start run electron desktop app webapp dev mode npm run start dev run webapp npm run start react build react app npm run build react build electron app native platform npm run build build electron app platform npm run build electron configuration electron config electron app index electron app index copyright license copyright 2020 defi blockchain foundation qr scanner shutter audio webapp src asset audio shutter mp3 licensed soundsnap http www soundsnap com commercial redistribution audio prohibited full soundsnap license visit http www soundsnap com licence http www soundsnap com licence
/ngchain/ngcore,Go,h1 img src resource ng 16x16 png core h1 ngchain ngchain radically updating brand new blockchain network fork ethereum chain ngchain ' goal build blockchain engine act auditable scalable security oriented support network task vm ngchain us modern model vault block account multi type tx traditional block model build blockchain ecosystem ngchain strictly follow idea blockchain locking item hash keep engine work safely blockchain vault block also link chain account security powerful function like fast ignition free account state ' safe robust like bitcoin ethereum scalable powerful node ' operational capacity p2p network ' speed performance status go report card http goreportcard com badge github com ngchain ngcore http goreportcard com report github com ngchain ngcore ci http github com ngchain ngcore workflow ci badge svg github http img shield io github license ngchain ngcore github last commit http img shield io github last commit ngchain ngcore feature fast ignition le storage cost mem humanizing account model user send tx memorable short number high security sheet vault block model powerful scalable type tx support multi tx sending coin different place time powerful wasm vm support based account state contract libp2p ipfs powered p2p networking available anonymous address saving balance using schnorr signature allowing multi sig sending receiving requirement go version 1 17 notice go build window use buildmode exe flag go version 1 15 build go bash go automatically sync dependency gcc required high performance db vm go build cmd ngcore usage bash dircetly run binary export golog file ngcore log disable stderr output write ngcore log file export golog log level debug print log ngcore ngwallet rpc client dart ngin ' daemon see http github com ngchain ngwallet dart ngwallet register 10086 ngwallet transact 10010 1 5 send 1 5 ng account 10010 ngwallet transact qfunse4cngnpvs4oc4weyh8u7wwas8awmrfbknwwqgsywbxu 1 5 send 1 5 ng address qfun wanna start mining proof work try mining thread num flag bash ngcore mining 0 zero mean using available core view flag option help flag bash ngcore help choose run docker bash git clone http github com ngchain ngcore cd ngcore sudo docker build ngcore run bootstrap node sudo docker run p 52520 52520 p 52521 52521 v workspace v ngkeys ngkeys ngcore bootstrap true run mining node 0 mean using cpu core mem disable writing disk make miner lighter sudo docker run p 52520 52520 p 52521 52521 v workspace v ngkeys ngkeys ngcore mining 0 mem run ngchain forknet ' easy run independent pow chain ngcore codebase 1 modify genesisaddressbase58 ngtypes default go protocolversion ngp2p default default go 2 generate new signature genesis generate tx genesis block ' nonce ngcore gentools toolset 3 run 2 bootstrap node bootstrap flag without mining 4 write bootstrap node bootstrapnodes ngp2p bootstrap node go 5 run mining node mining 0 flag 6 enjoy fascinating pow chain
/marcelomorgado/defi-hardhat-template,TypeScript,defi hardhat template test http github com marcelomorgado defi hardhat template action workflow main yml badge svg http github com marcelomorgado defi hardhat template action workflow main yml hardhat project template focused defi smart contract development floppy disk installation bash npm electric plug setup parameter bash cp env example env network code env network note network one network configured hadhat config default hardhat mainnet goerli bsc typechain hardhat generates typechain code contract contract folder also typechain code external contract instance test another defi protocol need put abis inside typechain abi run npm run compile toolbox test bash npm run compile npm test note default test run forked ethereum mainnet chain deploy verify bash npm run network deploy npm run network verify note etherscan bscscan api key required verification
/danhper/defi-plf-analysis,Jupyter Notebook,defi protocol loanable fund interest rate liquidity market efficiency repository contains source code data used paper defi protocol loanable fund interest rate liquidity market efficiency presented second acm conference advance financial technology aft ' 20 use academic paper would grateful could cite following misc gudgeon2020defi title defi protocol loanable fund interest rate liquidity market efficiency author lewis gudgeon sam werner daniel perez william j knottenbelt year 2020 eprint 2006 13922 archiveprefix arxiv primaryclass q fin gn
/ScopeLift/endaoment,Solidity,endaoment todo getting started todo
/SnowCrashDAO/snowcrash-tokens,Solidity,snowcrash dao official token mit license misc license mit green svg http github com snowcrashdao snowcrash token blob main license snowcrash dao official token snowcrash dao misc snowcrashdao canalblue blue min 100x50 svg http snowcrash finance nora name snowcrash token symbol nora total supply 102 400 000 nora network binance smart chain bsc contract 0x1f39dd2bf5a27e2d4ed691dcf933077371777cb0 http bscscan com token 0x1f39dd2bf5a27e2d4ed691dcf933077371777cb0 buy nora http snowcrash finance nora pushdoge name pushinka doge token symbol pushdoge total supply 3 844 000 000 000 pushdoge network binance smart chain bsc contract 0x75c7651ecdabbea371109f999e57711540f0ec27 http bscscan com token 0x75c7651ecdabbea371109f999e57711540f0ec27 snowcrash dao token list list contains token snowcrash dao ecosystem including virtual company token metavoxel world copy url import list anywhere token list supported http token snowcrash finance tokenlist json img src http img snowcrash finance site snowcrash finance pancakeswap token list jpeg width 400
/trustless-fund/trustless-fund,JavaScript,trustless fund advanced timelock eth erc 20 asset website app trustless fund http app trustless fund doc doc trustless fund http doc trustless fund twitter trustlessfund http twitter com trustlessfund email kaden trustless fund mailto kaden trustless fund discord trustless fund http discord gg 9u35sfb
/linen-app/artis,Shell,artis solution execute decentralized margin trading dexes work uniswap http uniswap io exchange makerdao http makerdao com lending protocol mainnet compound v2 ttps compound finance presidio lending protocol rinkeby dexes lending protocol coming software audited ready production usage use risk open leveraged long eth position guide open long eth position dai owed token token pair come compound v2 released mainnet prerequisite mac linux ethereum account initial deposit eth seth http dapp tool seth command line tool access abovementioned account seth doc found http github com dapphub dapptools tree master src seth install seth command curl http dapp tool install sh home nix profile etc profile nix sh order enable seth operate account need put json keystore file http medium com julien maffre ethereum keystore file 86c8c5917b97 corresponds eth address ethereum keystore folder ' folder create next command mkdir p ethereum keystore easiest way obtain json keystore file create new account http www myetherwallet com http mycrypto com put keystore file directory run seth account command ensure seth managed parse file everything ok see eth address output installation seth ' needed specify default parameter sethrc file home folder ' one please create new sethrc file inside home folder text editor like nano find example sethrc file seth setting export eth address export eth gas 3000000 export eth gas price 5000000000 5 gwei please adjust transaction slow export seth chain ethlive export eth keystore ethereum keystore please note need set seth chain variable according network going use ethlive rinkeby step command code block executed bash shell 1 load predefined variable 1 1 predefined variable function loaded artis makerdao mainnet sh artis compoundv2 rinkeby sh file depending protocol network want use file found root folder repo source artis makerdao mainnet sh source artis compoundv2 rinkeby sh 2 get proxy wallet used cdp portal http cdp makerdao com probably already proxy wallet use artis check proxy wallet assossiated address seth call proxy registry proxy address address address command return non zero code ' proxy address use action ' proxy wallet create new one ' forget transfer ether eth address send transaction seth send proxy registry build promted enter password keystore file obtain newly created proxy address execute next command seth call proxy registry proxy address address address 3 define variable bash used create transaction 3 1 specify address proxy previous step proxy address proxy wallet previous step 3 2 specify amount initial deposit eth minimum supported value 0 01 eth amount 1 1 specify desired value 3 3 specify collateral ratio underlying position smaller value give leverage however give risk liquidation case eth go relatively dai initial deposit becomes small cover minimal collateral ratio initial deposit seized minimal amount mainnet 1 5 risky recommended amount 1 7 minimal amount rinkeby 2 recommended amount 2 1 max theoretical leverage table exchange fee interest included calculation leverage collateral ratio 3 1 5 2 6 1 6 2 4 1 7 2 2 1 8 2 1 1 9 2 0 2 0 coll ratio 1 7 specify desired value 4 send openposition transaction transaction go proxy wallet calldata need formed manually calculate function signature sig seth sig openposition address 4 uint256 4 form calldata artis contract calldata sig toarg lender toarg exchange toarg held asset toarg principal torawamount 0 eth torawamount coll ratio eth max iteration min collateral amount send transaction proxy wallet seth send value seth wei amount eth proxy execute address byte memory bytes32 leverager calldata promted enter password keystore file close long eth position prerequisite open long eth position executed step previous part step 1 define variable bash used create transaction 1 1 get position id want close every position ha id need specified want close obtain id go http etherscan io open transaction opened position go event log search last event take first data field event position id positionid img position id png position id 0000000000000000000000000000000000000000000000000000000000000001 specify id 2 send closeposition transaction transaction go proxy wallet calldata need formed manually calculate function signature sig seth sig closeposition address 2 uint256 3 form calldata artis contract calldata sig toarg lender toarg exchange position id coll ratio close max iteration send transaction proxy wallet seth send proxy execute address byte memory bytes32 leverager calldata promted enter password keystore file top collateral track underlying loan asset loan ownership stay proxy wallet artis smart contract used bytecode store state asset therefore manage underlying loan 3rd party tool makerdao underlying lending protocol manage cdp help cdp portal http cdp makerdao com example may top collateral view liquidation price also use makerdao protocol explorer like loanscan http loanscan io see transaction executed hood see cdp balance collateral supplied
/Plenty-DeFi/plenty-interface,JavaScript,plenty v2 1 interface netlify status http api netlify com api v1 badge 50dcb23c 387c 458c bcc5 73572d8927b7 deploy status http app netlify com site gracious pasteur 302ee5 deploys open source interface plentydefi v2 1 protocol decentralized exchange tezos token website plenty defi http plentydefi com twitter plentydefi http twitter com plentydefi discord plenty http discord gg 9wz4cuvkuj telegram plenty http plentydefi accessing plentydefi v2 1 interface access plentydefi interface use link latest release http github com plenty defi plenty v2 visit plenty defi http plentydefi com project setup install dependency yarn install running interface locally yarn start interface automatically open doe navigate http localhost 3000 creating production build yarn build contribution step local deployment development code contribution please see contributing contributing md accessing plenty v2 1 plentydefi interface support swapping adding liquidity removing liquidity staking xplenty token swap plentydefi v2 http plentydefi com swap add remove liquidity http plentydefi com liquidity farm plentydefi v2 http plentydefi com farm stake plentydefi v2 http plentydefi com stake accessing plentydefi v2 access plentydefi interface ' support routing use link v2 0 0 release http v2 plentydefi com accessing plentydefi v1 plentydefi v1 interface mainnet via v1 0 0 release http old plentydefi com
/balancednetwork/balanced-contracts,Python,balanced smart contract repository holding smart contract layer balanced project deploy locally recommend setting instance bear http www icondev io doc tbears overview oracle price data synthetic asset provided band http bandprotocol com development day configured u second day param score ' constant file consts py dividing 24 make daily action occur every hour speed testing repository structure core contract folder hold core smart contract deployed use balanced contains daofund contract receiving balanced token use voted dao dex amm decentralized exchange separate sicx icx queue instrument trading minted asset dividend contract used pay dividend baln token holder governance used vote perform dao action well setting contract configuration variable loan used mint synthetic asset collateralized sicx oracle dummy replacement band oracle use development reserve reserve fund risk situation reward give baln token address earn platform action staking manages sicx token contract folder hold token used balanced protocol baln balanced token used platform governance claiming dividend earned contributing using balanced bnusd synthetic u dollar based band oracle price minted locking collateral sicx bwt balanced worker token given core contributers pay earns part inflation sicx staked icx token allows user transact staked token staking contract allow choice prep voted update
/onomyprotocol/onomy,Go,onomy doc 2 w http user image githubusercontent com 6096171 137114490 3fb1de9c f74c 4979 9089 2f116e57bec2 jpeg overview onomy application specific blockchain built power decentralized exchange converges forex decentralized finance multi chain ecosystem based cosmos software development kit leverage inter blockchain communication protocol implement bridge blockchains like ethereum avalanche evm chain others tba user easily manage asset connected network via onomy access multi chain wallet efficiently trade digital asset decentralized onomy exchange supporting amm orderbook trading limit order stop loss market mint decentralized stablecoins onomy reserve using nom protocol token collateral official website http onomy io telegram discussion http onomyprotocol telegram ann http onomyannouncements discord http discord gg u5qcykwjqv twitter http twitter com onomyprotocol medium http medium com onomy protocol testnet join testnet 1 find testnet documentation doc testnet readme md development development branch dev branch might contain unstable change change pas flow feature branch pull request dev format code project rule make format docker run ci make docker build project build artifact make build install make install learn starport starport http github com tendermint starport starport doc http doc starport network cosmos sdk documentation http doc cosmos network cosmos sdk tutorial http tutorial cosmos network onomy discord http discord gg u5qcykwjqv
/smartcoding51/defi-yield-farming,JavaScript,defi yield farming truffle project focus developing defi app implement concept yield farming liquidity mining based dai token p align center img src http user image githubusercontent com 22610163 104134982 2b389a00 539e 11eb 9ac7 642dbe48ec4d gif p repository present practice setup blockchain develop ethereum smart contract write test developed ethereum smart contract develop client side website people actually use application todos add openzeppelin contract minimize risk develop new feature keep track reward implement method withdraw reward automatically certain condition met triggered manually current version theory yield farming core yield farming process allows cryptocurrency holder lock holding turn provides reward brief yield farming let lock fund providing reward process involves lending cryptos via defi protocol order earn fixed variable interest reward far greater traditional investment higher reward bring higher risk especially volatile market p align center img src http user image githubusercontent com 22610163 118402446 91963780 b672 11eb 9574 12e19fb789f9 png width 720 p application software architecture p align center img src http user image githubusercontent com 22610163 104122166 729a3880 5354 11eb 9088 5123e47990d2 png width 720 p application software architecture work flow user use internet browser connect front end application written html cs javascript instead accessing back end server website talk directly blockchain code data application life defi application code contained smart contract written solidity progrramming language wa lot like javascript smart contract immutable mean code change data stored public ledger also immutable anytime new data added blockchain permanent publicly verifiable installation setup node j sudo curl http raw githubusercontent com nvm sh nvm v0 37 2 install sh bash nvm install 12 18 3 node v truffle sudo npm install g truffle 5 1 39 unsafe perm true ganache installation guide found http www trufflesuite com ganache metamask installation guide found http metamask io command install necessarily node j package npm install deploy smart contract ethereum blockchain truffle migrate reset deploy run front end application npm start run run script issue token truffle exec script issue token j author kei nakano license system available mit license see license file info
/wfil/wfil-token,JavaScript,ubuntu 18 04 http img shield io badge ubuntu v18 04 orange style plastic http ubuntu com download desktop node 12 19 0 http img shield io badge node v12 19 0 blue style plastic http github com nvm sh nvm installation update built truffle http img shield io badge built 20with truffle blueviolet style plastic http www trufflesuite com built openzeppelin http img shield io badge built 20with openzeppelin 3677ff style plastic http doc openzeppelin com solc 0 6 12 http img shield io badge solc v0 6 12 brown style plastic http github com ethereum solidity release tag v0 6 12 mainnet wfil http img shield io badge mainnet wfil purple style plastic logo ethereum http etherscan io address 0xd187c6c8c6aee0f021f92cb02887a21d529e26cb code img src wfil svg width 20 wfil wrapped filecoin erc20 wrapper filecoin wfil first erc20 wrapper filecoin backed filecoin deposit custodian wallet 1 1 ratio wfil implemented using openzeppelin erc20 module controlled factory contract set minter dao multisig contract gnosis safe allow merchant custodian add mint burn request via ad hoc apis interact openzeppelin defender relay merchant custodian approved dao member via multisignatures future development feature plan develop non custodian version leveraging filecoin smart contract ' able implement fully decentralized application application lending platform makerdao compound aave liquidity pool curve balancer uniswap de fi access filecoin storage deal ethereum user section building block building block setup setup audit audit building block smart contract flow chart wfil png wfil contract wfil sol implement erc20 token leveraging openzeppelin library allows owner contract multisig contract gnosis safe add remeove minter factory contract via addminter removeminter function leveraging accesscontrol module openzeppelin contract implement wrap function mint wfil passing recepient address amount filecoin wrap parameter emitting event wrapped contract also implement unwrapfrom function allow factory contract burn wfil passing holder address amount wfil burn parameter emitting event unwrapped order mitigate allowance double spend exploit recommend merchant use increaseallowance decreaseallowance function contract inherits openzeppelin accesscontrol module set pauser role owner contract call pause unpause function case emergency circuit breaker design pattern owner call pause function thanks beforetokentransfer hook mint burn transfer internal function revert avoid user sending wfil contract address beforetokentransfer check recipient address make sure doe correspond contract address revert doe mint transfer function gnosis safe multisig set owner deployment dao allow dao member grant minter role factory contract future version setup clone github repository step compile test local dependency truffle ganache cli openzeppelin contract v3 1 0 truffle hd wallet provider truffle flattener truffle plugin verify solhint sh npm global dependency truffle recommended sh npm install g truffle ganache cli recommended sh npm install g ganache cli slither optional sh git clone http github com crytic slither git cd slither sudo python3 setup py install mythx cli optional sh git clone git github com dmuhs mythx cli cd mythx cli sudo python setup py install running project local test network ganache cli start ganache cli following command global dependency sh ganache cli compile smart contract using truffle following command global dependency sh truffle compile deploy smart contract using truffle ganache following command global dependency sh truffle migrate test smart contract using mocha openzeppelin test environment following command sh npm test analyze smart contract using slither following command optional sh slither analyze smart contract using mythx cli following command optional sh mythx analyze development deployment wfil 0 7 0 rinkeby 0xf33b9e9cc559329e25ca76e338e21e8e24e14c24 http rinkeby etherscan io address 0xf33b9e9cc559329e25ca76e338e21e8e24e14c24 code current mainnet contract 3 12 2020 wfil dao 0x44443407e196298a0ad68207aa93ea919df53961 http etherscan io address 0x44443407e196298a0ad68207aa93ea919df53961 wfil 0xd187c6c8c6aee0f021f92cb02887a21d529e26cb http etherscan io address 0xd187c6c8c6aee0f021f92cb02887a21d529e26cb code audit quantstamp quantstamp audit report pdf inspiration reference awesome wfil http img shield io badge awesome wfil blue http github com wfil awesome wfil blob master readme md reference author project created nazzareno massari http nazzarenomassari com cristiam da silva http cristiamdasilva com logo cristiam da silva
/xdefilab/xdefi-base,Solidity,xdefi base rename env example env yarn install yarn compile yarn deploy ropsten
/freight-chain/main,Dockerfile,unirepo
/basnijholt/net-worth-tracker,Python,simple crypto tracker see current portofolio balance without hassle extract crypto portfolio data nexo io blockfi binance smart chain bep20 token defi via yieldwatch net http www yieldwatch net binance com exodus wallet celsius apeboard tracking many defi chain coingecko price beefy vault yearn v3 stock cash balance brand new day degiro usage run crypto tracker ipynb crypto tracker ipynb download correct data set cronjob using crontab e 0 sync overig crypto tracker run upload sh install pip install r requirement txt sudo apt install chromium chromedriver keychain ubuntu brew cask install chromedriver macos
/deusfinance/dei-interface-v2,TypeScript,dei finance interface v2 setup yarn install run ' require env variable order run app simply run npm run dev open app localhost 3000
/mwrites/solana-staker,TypeScript,solana defi staker walkthrough part 1 http blog matanwrites com solana staking program part 2 http blog matanwrites com solana staking program part2
/manifoldfinance/openmev-router-docs,Solidity,title openmev router contract v02 sushiswap description openmev router contract overview version 30aae18 author sandy bradley sam bacha manifold finance inc license cc 2 5 nc nd gpl v3 0 open mev router openmevrouter contract serf replace sushiswaprouter contract ethereum avalanche polygon inbuilt mev contract user aim offer 1 better order routing minimal slippage 2 source mev instant user reward version 1 mev strategy cross dex backruns swap liquidity change reduced slippage fallback router contract leverage depends 2 external protocol 1 aave v2 flashloan backruns 2 uniswap v2 equivalent another network backrun completion fallback swap version 2 30aae18 testing progress swap backruns working expected full test suite need validation test suite written python3 pytest hypothesis solidity test dapptools foundry yacademy scheduled auditing 3rd party contracted auditor scheduled well audit potentially gas saving optimisation advantage current setup backruns sandwich state lag calculation exact time execution capture sushiswap smart contract tx ux instant user reward upon successful backrun bundle needed tx self contained executed accurately whenever go chain doe need compete head block pre known state run avalanche polygon change transparency method reward work without mev protection relay legal disclaimer non confidential restricted disclosure information disclosed connection project working group activity including limited meeting submission confidential regardless marking statement contrary notwithstanding foregoing participant may make public disclosure information without approval steering member working group applicable authorizing disclosure distribution technical information third party must include notice materially similar following material provided owner contributor expressly disclaim warranty express implied otherwise including implied warranty merchantability non infringement fitness particular purpose title related material entire risk implementing otherwise using material assumed implementer user event owner contributor liable party lost profit form indirect special incidental consequential damage character cause action kind respect deliverable governing agreement whether based breach contract tort including negligence otherwise whether participant ha advised possibility damage representation warranty disclaimer participant represent warrant legally entitled grant right promise set forth document respect submission provided entire risk implementing otherwise using draft deliverable approved deliverable assumed implementer user except stated herein participant expressly disclaim warranty express implied otherwise including implied warranty merchantability non infringement fitness particular purpose title related material event participant liable party lost profit form indirect special incidental consequential damage character cause action kind respect document whether based breach contract tort including negligence otherwise whether participant ha advised possibility damage
/laminar-protocol/laminar-chain.js,TypeScript,license http img shield io badge license apache 202 0 blue logo apache style flat square npm http img shield io npm v laminar api logo npm style flat square http www npmjs com package laminar api laminar chain j sdk library provides sdk access laminar ethereum laminar chain getting started install dependency bash yarn add polkadot api laminar api beta laminar chain create api instance laminar chain import apipromise ' polkadot api ' import wsprovider ' polkadot rpc provider ' import option ' laminar api ' async function main const provider new wsprovider ' w localhost 9944 ' const api new apipromise option provider await api isready use api main use api interact node query display account data const data await api query system account ' 5f98owfz2r5rcrvnp9vcndg33daasky3iuobspapubgn9ajn ' console log data tohuman laminar ethereum create api instance laminar ethereum import ethereumapi ' laminar api ' import web3 ' web3 ' const api new ethereumapi provider new web3 provider httpprovider network endpoint create api instance metamask import ethereumapi ' laminar api ' const api new ethereumapi provider window web3 currentprovider call contract import ethereumapi ' laminar api ' const api new ethereumapi provider window web3 currentprovider const run async call marginflowprotocol await api marginflowprotocol method balance poolid account call balance call syntheticflowprotocol api basecontracts syntheticflowprotocol method redeem fromtoken poolid amount send sendoption redeem call marginpoolinterfacecontract const contract api getmarginpoolinterfacecontract poolid call syntheticpoolinterfacecontract const contract api getsyntheticpoolinterfacecontract poolid await contract method getaskspread tokenid call getaskspread get margin allowance await api margin allowance account contractaddress margin contract grant await api margin grant account contractaddress run package api package api sdk access laminar ethereum laminar chain type package type polkadot j type definations laminar chain
/Opty-Fi/defi-adapters,Solidity,img src http avatar githubusercontent com u 71294241 400 u 0b62a061c11a7536c27b1d53760152b5e9bd40f5 v 4 alt header style width 200px align center float right defi adapter collection defi adapter compatible opty fi ' yield protocol earn protocol prerequisite install node j http nodejs org en download v12 0 0 learn javascript http developer mozilla org en u doc web javascript typescript http www typescriptlang org learn solidity http doc soliditylang org en latest v0 6 12 learn smart contract development environment like hardhat http hardhat org getting started learn testing framework like mocha http mochajs org learn assertion library like chai http www chaijs com passion financial freedom getting started development setup create env file set bip 39 compatible mnemonic environment variable follow example env example ' already mnemonic use website http iancoleman io bip39 generate one required get archive node url network used developing testing defi adapter proceed installing dependency sh yarn install defiadapter defi adapter vital building block executing opty fi http opty fi ' network strategy specification defi adapter help perform transaction like deposit withdraw staking un staking adding liquidity claim reward harvesting reward read call liquidity pool token contract address liquidity pool token balance staked token balance balance underlying token staked non staked liquidity pool token unclaimed reward token reward token contract address defi adapter smart contract requires implementation following interface iadapter sol contract opty interface defiadapters iadapter sol mandatory iadapterharvestreward sol contract opty interface defiadapters iadapterharvestreward sol optional iadapterstaking sol contract opty interface defiadapters iadapterstaking sol optional iadapterborrow sol contract opty interface defiadapters iadapterborrow sol optional iadapterinvestmentlimit sol contract opty interface defiadapters iadapterinvestmentlimit sol optional pro tip inherit iadapterfull interface iadapterfull sol contract opty interface defiadapters iadapterfull sol adapter contract protocol choose required implementation interface implementing iadapter interface implement adapter contract using interface similar harvestfinanceadapter sol contract 1 ethereum harvest finance harvestfinanceadapter sol unit test write unit test function across pool contract gathered step 1 might want use test utility contract like testdefiadapter contract mock testdefiadapter sol creating sandbox environment execute transaction based function signature target address returned getcodes style function defiadapter function directly tested defiadapter contract unit test harvestfinanceadapter sol found harvestfinanceadapter test 1 ethereum harvest finance harvestfinanceadapter useful command usage command compile smart contract hardhat yarn compile compile smart contract generate typechain artifact yarn typechain lint solidity code yarn lint sol lint typescript code yarn lint run mocha test yarn test network fork generate code coverage report yarn coverage network delete smart contract artifact coverage report hardhat cache yarn clean syntax highlighting use vscode enjoy syntax highlighting solidity code via vscode solidity http github com juanfranblanco vscode solidity extension recommended approach set compiler version add following field vscode user setting json solidity compileusingremoteversion v0 6 12 commit 27d51765 solidity defaultcompiler remote course v0 6 12 commit 27d51765 replaced version reference hardhat http hardhat org getting started ethereum development documentation http ethereum org en developer doc harvest finance doc http harvest finance gitbook io harvest finance
/defibasket/defibasket-contracts,TypeScript,p align center defi basket portfolio sharing platform simple design check prototype href http defibasket org defibasket org p p align center href http hardhat org img src http img shield io badge built hardhat f9c937 alt build hardhat href http github com defibasket defibasket contract action workflow main yml img src http github com defibasket defibasket contract workflow lint compile test badge svg alt test href ' http coverall io github defibasket defibasket contract branch main ' img src ' http coverall io repos github defibasket defibasket contract badge svg branch main ' alt ' coverage status ' href http github com defibasket defibasket contract blob main license img src http img shield io badge license gpl 3 blue alt license gpl 3 p contributing highly encourage participation community help shape development defi basket interested contributing question ping u twitter http twitter com defibasketlabs discord http discord gg 5avtgwkces use yarn http yarnpkg com dependency manager hardhat http hardhat org development environment compiling testing deploying contract contract written solidity v0 8 6 http github com ethereum solidity interface explained documentation developer http doc defibasket org technical ref readme 2 maintainer pedro guerra brandao pgbrandao http github com pgbrandao pedro defibasket org mailto pedro defibasket org joao alexandre vaz ferreira joaoavf http github com joaoavf joao defibasket org mailto joao defibasket org
/consenlabs/tokenlon-jssdk,TypeScript,tokenlon jssdk please visit new repo http github com consenlabs tokenlon v5 sdk current version tokenlon jssdk maintenance please wait subsequent version update see doc http doc token im tokenlon jssdk tokenlon digital era global limited
/KYRDTeam/krystal-core,TypeScript,introduction built openzeppelin http img shield io badge built 20with openzeppelin 3677ff http doc openzeppelin com smart contract krystal help interact protocol binance smart chain package manager use yarn package manager may use npm npx instead command bash script may changed accordingly setup 1 clone repo 2 yarn install compilation yarn compile compile contract solidity version setting create env env chain network following sample repo env includes common configs private key common infura api key meanwhile env chain network config particular chain network e etherscan key multisig etc env sample private key 0x private key interact blockchain infura api key xxx env eth mainnet sample etherscan key xxx mainnet fork http eth mainnet alchemyapi io archive chain url testing mainnet id 1 chain id mainnet fork block 12644714 start forking block testing multisig 0x multisig address gnosis safe http gnosis safe io supported testing 1 contract compiled run yarn compile yarn c step skipped subsequently 2 run yarn test h instruction bash yarn deploy test h c eth bsc polygon n mainnet testnet ropsten run test specific chain network h show help text c chain run supported eth bsc polygon n network run supported mainnet testnet ropsten mumbai f specific test run deploying 1 run yarn deploy h instruction bash yarn deploy test h c eth bsc polygon n mainnet testnet ropsten run test specific chain network h show help text c chain run supported eth bsc polygon n network run supported mainnet testnet ropsten mumbai f specific test run example command yarn test run test yarn test f test swap test test swap test coverage run yarn coverage coverage file
/0xfffangel/web3dex-python,Python,web3dex flexible python library interact evm like dex web3dex library provide unified interface sc based uniswap fork based web3 http github com ethereum web3 py supported dex chain avalance bsc cronos ethereum fantom moonbeam moonriver polygon get ready sh pip install web3dex start python script python web3dex ethereum import uniswap uniswap uniswap usdc 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 print reserve uniswap reserve usdc print liquidity uniswap liquidity usdc print liquidity uniswap liquidity usdc print reserve ratio 18f format uniswap reserve ratio usdc print price 18f format uniswap price usdc result shell reserve 64985095 457761 32622 06165275629 1660409488 liquidity 64985095 457761 liquidity 32622 565503187332 reserve ratio 0 0005019929788971377 price 0 000500486992281985 swap python import web3dex setup env uniswap web3dex ethereum uniswap usdc 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 wallet address private key amount 0 001 approve token wallet address allowance uniswap check approval wallet address usdc tx uniswap approve token usdc wallet address wallet address signed tx uniswap signtransaction transaction tx private key private key tx hash uniswap sendtransaction signed transaction signed tx uniswap waittransaction tx hash raise exception transactionexpection tx hash hex swap base token tx uniswap swapfrombasetotokens amount usdc wallet address signed tx uniswap signtransaction transaction tx private key private key tx hash uniswap sendtransaction signed transaction signed tx uniswap waittransaction tx hash raise exception transactionexpection tx hash hex print tx hash get updated balance print base balance 18f format uniswap balance wallet address print usdc balance 18f format uniswap balance wallet address usdc swap token base tx uniswap swapfromtokenstobase amount usdc wallet address signed tx uniswap signtransaction transaction tx private key private key tx hash uniswap sendtransaction signed transaction signed tx uniswap waittransaction tx hash raise exception transactionexpection tx hash hex print tx hash open pr new dex 1 define new dex config json chain folder ex uniswap web3dex configs ethereum uniswap json json provider http mainnet infura io v3 9aa3d95b3bc440fa88ea12eaa4456161 factory addr 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f router addr 0x7a250d5630b4cf539739df2c5dacb4c659f2488d factory abi file abi uniswapv2 factory abi json router abi file abi uniswapv2 router abi json liquidity abi file abi uniswapv2 liquidity abi json base symbol eth base contract 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 2 add new dex object chain script ex web3dex configs ethereum py python class uniswap dex def init self super init configs uniswap json 3 add class name group listed python uniswap
/Synthetixio/js,TypeScript,synthetix j synthetixio http circleci com gh synthetixio j svg style svg http github com synthetixio j warning library still construction beta please use caution official javascript library interacting synthetix protocol contract library used 2 different environment 1 common j module node environment 2 umd module browser environment installation node environment const synthetix require ' synthetixio j ' single page application import synthetix ' synthetixio j ' browser environment running npm build take index browser j file put script tag access synthetix window object const synthetix window const snxjs synthetix network ' mainnet ' note typescript application import synthetix network ' synthetixio j ' const snxjs synthetix network network mainnet usage instance expose prop given network synths source target user etc well helper function tobytes32 per synthetix http github com synthetixio synthetix blob develop index j l199 const snxjs synthetix network ' mainnet ' want interact contract simply follow convention await snxjs contractname methodname argument many argument require formatted tobytes32 also provide library note optionally pas blocktag someblocknumber get data specific block instead e g const unformattedsnxprice await snxjs contract exchangerates rateforcurrency snxjs tobytes32 ' snx ' const unformattedtotalsupply await snxjs contract synthsusd totalsupply also expose ether utils provides handy method formatting response query const formatether snxjs utils const snxprice formatether unformattedsnxprice const totalsupply formatether unformattedtotalsupply see example folder usage detail
/fintechees/Expert-Advisor-Cpp-Compiler,C++,expert advisor cpp compiler nodejs package help fintechee ' user compile c c mql source code make expert advisor runnable browser installed local pc network required compile c c mql source file know detail fintechee please access official website http www fintechee com main github repo http github com fintechee expert advisor studio fintechee c c mql compiler http github com fintechee expert advisor cpp compiler blob main cpp png fintechee c c mql compiler http raw githubusercontent com fintechee expert advisor cpp compiler main cppcompiler png prerequisite emscripten required compile c c mql file need install advance http emscripten org doc getting started downloads html installation instruction usage 1 installation download git repo extract zip file cd directory npm 2 run node app j access http www fintechee com web trader click console menubar left page choose c c tab panel open c c file click generate indicator generate ea c c source code json string generated modify original source code generated code generated part used define meta information program variable data output helpful make original code compilable click compile indicator compile ea finish modifying original code use mql indicator loader plugin mql ea loader plugin load output j webassembly generated compile step generated json string used parameter plugins please access page know detail http www fintechee com compatible mql tool page http www fintechee com compatible mql alternative generator generate indicator generate ea function 3 output file output file j webassembly stored sub directory static access static via http 127 0 0 1 3000 j output j file name j refers static tutorial tutorial coming soon license mit
/nova-wallet/nova-android-app,Kotlin,nova wallet android next get mobile app polkadot kusama ecosystem http img shield io twitter follow novawalletapp label follow style social http twitter com novawalletapp logo doc nova github png next gen application polkadot kusama ecosystem transparent community oriented focused convenient ux ui fast performance security nova wallet aim provide many polkadot ecosystem feature possible form mobile app unbiased network without restriction limit user developed former fearless wallet team based open source work apache 2 0 license license nova wallet android available apache 2 0 license see license file info
/gasolin/stakerwatch,JavaScript,stakerwat ch package version description staker npm version http img shield io npm v staker svg http www npmjs com package staker command line utility ethereum stakers staker freenodes npm version http img shield io npm v staker freenodes svg http www npmjs com package staker freenodes library pre defines node chain explorer gas estimator ethereum compatible chain staker contract npm http img shield io npm v staker contract svg http www npmjs com package staker contract token contract ethereum compatible chain staker hook npm http img shield io npm v staker hook svg http www npmjs com package staker hook deprecated react hook ethereum compatible chain staker command usage make sure node j http nodejs org installed device open terminal type npx staker help find skill staker command check full staker command usage http github com gasolin stakerwatch tree master package staker credit stakerwatch based saihubot http github com gasolin saihubot chatbot ops framework without server requirement ' command line adapter based react cli ink http www npmjs com package ink license staker use mit license changelog check changelog http github com gasolin stakerwatch blob gh page changelog md document check document http gasolin github io stakerwatch doc contribution plenty way contribute stakerwatch share creative usage social medium translate skill language report bug add idea http github com gasolin stakerwatch issue send patch http github com gasolin stakerwatch pull boostrap project clone repo npm run setup run package project npm run build deploy npm npm run publish
/FiveElementsLabs/orbit-defi,TypeScript,div align center img src http user image githubusercontent com 48695862 164207845 eabce4bd e5f7 4065 b4d7 0b8c32289704 png div h1 align center smart vault optimizer h1 div align center solidity http img shield io badge solidity 0 7 6 e6e6e6 style badge logo solidity logocolor black nodejs http img shield io badge node j 16 x 339933 style badge logo nodedotjs logocolor white discord http img shield io badge discord 7289da style badge logo discord logocolor white http discord gg wvpsdphe twitter http img shield io badge twitter 1da1f2 style badge logo twitter logocolor white http twitter com orbitfi website http img shield io badge website e34f26 style badge logo google chrome logocolor white http orbitdefi finance doc http img shield io badge doc 7b36ed style badge logo gitbook logocolor white http fiveelementslabs gitbook io orbit div orbit defi smart vault optimizer automates rebalances lp strategy effortlessly starting uniswap v3 chose uniswap v3 first protocol automate choice wa driven fact concentrated liquidity new paradigm increasingly sucking volume older design amms fact protocol providing concentrated liquidity new sushi trident market size volume concentrated liquidity protocol speaking 1 trillion annualized volume write doc number option strategy allowed protocol possible integration offer fact several vault provide strategy top uniswap v3 strategy simple indeed replicable orbit costly fee take 1 2 tvl overall effective respect holding asset take strategy agnostic approach aim increasing return liquidity provider uni v3 independently strategy choice installation bash git clone http github com fiveelementslabs orbit defi cd orbit defi yarn install usage create environment file env following content text infura mainnet http mainnet infura io v3 infura key alchemy mumbai http polygon mumbai g alchemy com v2 alchemy key alchemy polygon http polygon mainnet g alchemy com v2 alchemy key test private key 425 214 polygon private key 425 214 etherscan api key etherscan api key compile contract bash npx hardhat compile compile specific file selecting path npx hardhat compile contract positionmanager sol npx hardhat node network localhost project us hardhat find compiler configuration hardhat config test bash npx hardhat test test specific file selecting path npx hardhat test test action mint spec tx basic flowchart contract flow http user image githubusercontent com 48695862 170303316 23948c2c 24e1 4591 ad2c 3a1d0f1a9d07 png security find bug please contact u discord http discord gg wvpsdphe alternatively open issue github send email vincenzo fiveelementslabs com mailto vincenzo fiveelementslabs com documentation read orbit defi documentation website http fiveelementslabs gitbook io orbit licensing primary license orbit defi gnu general public license v2 0 gplv2 read full license license need get touch please send email vincenzo fiveelementslabs com mailto vincenzo fiveelementslabs com join discord server http discord gg wvpsdphe
/iclighthouse/Cycles.Finance,Motoko,cycle finance website http cycle finance canister id 6nmrm laaaa aaaak aacfq cai module hash 070a8e3cfb65204e29241278f19c5c440dabfbf6913e080441e647759102847e version 0 6 disclaimer project beta may defect dapp please knowledgeable participate voluntarily risk overview cycle finance icp cycle marketplace support bidirectional exchange icp cycle using multiplicative constant k model b k similar uniswapv2 restriction swapping project still beta limit placed swap order control risk icp max 10 icp swap min 10 000 e8s swap cycle max 3 10 14 cycle swap min 10 8 cycle swap swap volatility limit swap causing price fluctuation 20 rejected swap fee swapping fee 1 post fee model charged icps cycle icp transfer fee 10 000 e8s per transfer deducted ic network swapping fee usage icp charged moved liquidity reward pool 80 cycle charged moved liquidity reward pool 20 used canister gas liquidity amm market making model automatic market making model amm using multiplicative constant k model ab k liquidity reward pool liquidity provider claim liquidity reward proportion share hold plan participate iclighthouse liquidity mining program receive icl token reward note participate amm need add icp cycle asset liquidity pool amount two asset change user trade example add 1 icp 30 tcycles liquidity pool period time may withdraw 0 9 icp 33 3 tcycles possible amount doe work cyclesfinance designed facilitate swap icps cycle different way traditional exchange doe using canister smart contract allow user called liquidity provider deposit icps cycle pool smart contract allow trader buy sell asset user trade asset pay fee distributed liquidity provider proportionally based contribution asset pool image cf swap png liquidity pool liquidity pool hold icps cycle together represent trading pair asset cyclesfinance us pricing mechanism called multiplicative constant k market maker model formula b k used determine pricing pair b represent pool balance asset k total constant price said pool liquidity pool first liquidity provider set initial price asset pool supplying equal value token swap buyer swap icp cycle within pool based formula smart contract running rule use formula take amount one asset buyer send equivalent amount another asset purchased back buyer keeping total pool constant stable k example let u imagine icp cycle liquidity pool contains 10 icp 300 tcycles b therefore making pool constant value 3000 k implies pool starting price 30 tcycles per icp let u imagine trader come want buy 0 1 icp icp cycle pool new 9 9 icp 10 0 1 k 3000 stay constant new b 303 03 tcycles 3000 9 9 therefore pool would imply price 30 303 tcycles per icp keep k constant since add 3 03 tcycles 303 03 tcycles 300 tcycles pool buy 0 1 icp example next implied rate icp around 30 609 tcycles per icp 303 03 tcycles 9 9 icp price asset start trade away market price arbitrager see opportunity make risk free return therefore come trade price back market rate vital part icp cycle ecosystem technical feature achieving eventually consistency cyclesfinance face atomicity problem mainly icp internal transfer failure cycle send failure use best effort commit strategy together error handling mechanism ensure ultimate consistency updating state variable canister throw exception error encountered ensures internal state variable successfully saved already updated external call take best effort commit strategy prevent duplicate transaction error handling mechanism added regard error handling mechanism requires administrator governance contract trigger retransaction account unable receive cycle manager governance contract modify receiving account enhanced idempotency idempotency prevents repeated execution external canister submitted repeatedly event error call cyclesfinance transaction txid computable globally unique nonce mechanism account supported oracle quote support icp cycle swap price could used native oracle quote ic network cyclesfinance offer two form oracle quote including latest price liquidity null method cyclesfinance canister used query number icps cycle liquidity pool cycle icp e8s mean icp cycle price time weighted price liquidity null method cyclesfinance canister used query time weighted cumulative value icps cycle image cf priceweighted png liquidity mining support cyclesfinance provide data resource liquidity mining contract well space innovation community governance economic model liquidity method cyclesfinance canister used query time weighted cumulative value lp ' liquidity pool share image cf shareweighted png trading mining support cyclesfinance provide data resource trading mining query cumulative value trading volume global account basis scalable storage transaction record ensure cyclesfinance support large scale application scenario cyclesfinance canister store recent transaction stored persistently via external scalable canister usage command line interface note ui interaction interface http cycle finance basic unit icp canister e8s 1 icp 10 8 e8s icp cycle rate ic network change dynamically pegged xdr value 1 xdr 10 12 cycle value approx 1 4 usd icp cycle rate canister automatically formed market may deviate market icp account principal cycle wallet account principal used interact canister please note difference query icp cycle price dfx canister network ic call 6nmrm laaaa aaaak aacfq cai liquidity ' null ' cycle 2 190 693 645 field return value divided icpe8s 1 180 746 538 field indicate many cycle exchanged 1 e8s value multiplied 10 8 indicate many cycle exchanged 1 icp estimate record icpe8s 48 521 783 nat vol record swapicpvol 1 740 878 nat swapcyclesvol 573 069 740 022 nat shareweighted record updatetime 1 638 592 854 nat sharetimeweighted 3 894 326 391 123 nat unitvalue record 329155 999121 float64 0 972376 float64 share 809 508 285 nat cycle 266 454 525 225 963 nat priceweighted record updatetime 1 638 592 854 nat icptimeweighted 3 800 565 037 457 nat cyclestimeweighted 1 277 301 377 584 917 917 nat swapcount 0 nat64 icp cycle step1 get dedicated icp deposit account id depositaccountid dfx canister network ic call 6nmrm laaaa aaaak aacfq cai getaccountid ' icp principal accountid ' return depositaccountid example f2d1945ebc293bdc2cc6ef e84cf61f51ce6798fc4283 step2 send icp depositaccountid dfx ledger network ic transfer depositaccountid memo 0 e8s icp e8s amount step3 converting cycle parameter icp e8s amount amount sent step2 cycle wallet principal principal cycle wallet note icp account principal dfx canister network ic call 6nmrm laaaa aaaak aacfq cai icptocycles ' icp e8s amount nat principal cycle wallet principal null null null ' check wallet balance dfx wallet network ic balance cycle icp step1 use didc tool encode parameter note didc tool resource http github com dfinity candid tree master tool didc didc encode ' icp principal accountid null null ' ' text opt nat opt blob ' f blob return callargs example blob didl 02n 01m 02h 00 01 88 01 e1 18 fd6g 02 00 step2 converting icp parameter cycle amount amount cycle want convert parameter call args callargs got step1 dfx canister network ic call cycle wallet principal wallet call ' record canister principal 6nmrm laaaa aaaak aacfq cai method name cyclestoicp cycle cycle amount nat64 args call args ' check account balance dfx ledger network ic balance add liquidity add liquidity icp cycle added liquidity pool proportion calculated based current price excess refunded step1 get dedicated icp deposit account id depositaccountid dfx canister network ic call 6nmrm laaaa aaaak aacfq cai getaccountid ' icp principal accountid ' return example f2d1945ebc293bdc2cc6ef e84cf61f51ce6798fc4283 step2 send icp depositaccountid dfx ledger network ic transfer depositaccountid memo 0 e8s icp e8s amount step3 use didc tool encode parameter note didc tool resource http github com dfinity candid tree master tool didc didc encode ' icp principal accountid null null ' ' text opt nat opt blob ' f blob return callargs example blob didl 02n 01m 02h 00 01 88 01 e1 18 fd6g 02 00 step4 send cycle add liquidity parameter cycle amount amount cycle want add parameter call args callargs got step3 dfx canister network ic call cycle wallet principal wallet call ' record canister principal 6nmrm laaaa aaaak aacfq cai method name add cycle cycle amount nat64 args call args ' step5 enquire liquidity share dfx canister network ic call 6nmrm laaaa aaaak aacfq cai liquidity ' opt icp principal accountid ' return example share 489 381 556 field share liquidity hold record icpe8s 48 521 783 nat vol record swapicpvol 1 648 218 nat swapcyclesvol 541 650 948 359 nat shareweighted record updatetime 1 638 528 867 nat sharetimeweighted 695 045 889 662 nat unitvalue record 329748 544469 float64 0 970629 float64 share 49 990 000 nat cycle 16 484 143 085 896 nat priceweighted record updatetime 1 638 528 867 nat icptimeweighted 689 683 291 306 nat cyclestimeweighted 224 229 508 922 468 505 nat swapcount 0 nat64 remove liquidity step1 query liquidity share share 489 381 556 field return share held dfx canister network ic call 6nmrm laaaa aaaak aacfq cai liquidity ' opt icp principal accountid ' step2 remove liquidity parameter share amount must equal le value queried step1 parameter cycle wallet principal wallet principal used receive cycle caller principal receive icp dfx canister network ic call 6nmrm laaaa aaaak aacfq cai remove ' opt share amount opt nat principal cycle wallet principal null null null ' check account balance dfx ledger network ic balance dfx wallet network ic balance claim reward claim reward parameter cycle wallet principal wallet principal used receive cycle caller principal receive icp dfx canister network ic call 6nmrm laaaa aaaak aacfq cai claim ' principal cycle wallet principal null null null ' check account balance dfx ledger network ic balance dfx wallet network ic balance type definite canister setting record compute allocation nat controller vec principal freezing threshold nat memory allocation nat type canister status record cycle nat memory size nat module hash opt vec nat8 setting definite canister setting status variant running stopped stopping type vol record swapcyclesvol cyclesamount swapicpvol icpe8s type txnresult variant err record code variant icptransferexception insufficientshares invalidcyclesamout invalidicpamout nonceerror poolisempty unacceptablevolatility undefinederror message text ok record cycle balancechange icpe8s balancechange share sharechange txid txid type txnrecord record account accountid caller accountid cycleswallet opt cycleswallet data opt data detail vec record counterparty txid token0value balancechange token1value balancechange fee record token0fee nat token1fee nat index nat msgcaller opt principal nonce nonce operation operationtype ordertype variant amm orderbook share sharechange time time token0 tokentype token0value balancechange token1 tokentype token1value balancechange txid txid type txid blob type transfererror variant badfee record expected fee icp insufficientfunds record balance icp txcreatedinfuture txduplicate record duplicate blockindex txtooold record allowed window nanos nat64 type transstatus variant failure fallback processing success type tokentype variant cycle icp token principal type timestamp nat type time int type share nat type shareweighted record sharetimeweighted nat updatetime timestamp type sharechange variant burn share mint share nochange type sa vec nat8 type priceweighted record cyclestimeweighted nat icptimeweighted nat updatetime timestamp type operationtype variant addliquidity claim removeliquidity swap type nonce nat type liquidity record cycle nat icpe8s icpe8s priceweighted priceweighted shareweighted shareweighted share share swapcount nat64 unitvalue record float64 float64 vol vol type icptransferlog record fee icpe8s accountid status transstatus accountid updatetime timestamp value icpe8s type icpe8s nat type icp record e8s nat64 type feestatus record cumulfee record cyclesbalance cyclesamount icpbalance icpe8s fee float64 totalfee record cyclesbalance cyclesamount icpbalance icpe8s type errorlog variant icpsatomain record debit record nat64 accountid icpe8s errmsg transfererror time timestamp user accountid withdraw record credit record cycleswallet cyclesamount accountid icpe8s cycleserrmsg text icperrmsg opt transfererror time timestamp user accountid type erroraction variant delete fallback resendcycles resendicp resendicpcycles type data blob type drc207support record cycle receivable bool monitorable blackhole record allowed bool canister id opt principal monitorable self bool timer record enable bool interval second opt nat type cycleswallet principal type cyclestransferlog record principal status transstatus principal updatetime timestamp value cyclesamount type cyclesamount nat type config record cycle limit opt nat fee opt nat icp fee opt nat64 icp limit opt nat max cache number per opt nat max cache time opt nat max storage try opt nat min cycle opt nat min icp e8s opt nat storage canister opt text cyclesfee retention rate opt nat type blockindex nat64 type balancechange variant creditrecord nat debitrecord nat nochange type address text type accountid blob type cyclesmarket service getaccountid address text query add address opt nonce opt data txnresult remove opt share cycleswallet opt nonce opt sa opt data txnresult cyclestoicp address opt nonce opt data txnresult icptocycles icpe8s cycleswallet opt nonce opt sa opt data txnresult claim cycleswallet opt nonce opt sa opt data txnresult count opt address nat query canister status canister status feestatus feestatus query getconfig config query getevents opt address vec txnrecord query lasttxids opt address vec txid query liquidity opt address liquidity query lprewards address record cycle nat icp nat query txnrecord txid opt txnrecord query txnrecord2 txid opt txnrecord yield record apycycles float64 apyicp float64 record apycycles float64 apyicp float64 query version text query service cyclesmarket roadmap development ui interface open source contract code upgrade v1 0 opening liquidity mining community web http cycle finance github http github com iclighthouse cycle finance twitter http twitter com iclighthouse medium http medium com iclighthouse discord http discord gg fqzfggq7zv
/GooseFX1/gfx-web-app,JavaScript,div align center img height 142 src http github com goosefx1 gfx web app blob dev public img asset gfx logo gradient lite svg h4 href http goosefx io website span span href http doc goosefx io doc span span href http discord com channel 833693973687173121 833742620371058688 discord span span href http www goosefx telegram span span href http medium com goosefx medium h4 br br div goosefx full suite defi platform built solana blockchain serum dex offering variety unique decentralized peer peer financial product aim complete defi experience trade cryptocurrencies future nfts one interface utilizing capital across feature seamlessly key feature goosefx concentrated liquidity market maker clmm swap goose nest nft exchange nft exchange built auction house contract launchpad first ever single sided liquidity pool solana decentralized trading defi derivative perps depth detail visit technical documentation http doc goosefx io elaborates tokenomics feature roadmap detail web application built using react typescript yarn handle package management note environment variable needed develop locally need obtained via team member see contributing md http github com goosefx1 gfx web app blob dev contributing md detail running locally nvm use yarn install npx install peerdeps dev eslint config airbnb yarn start right reserved 2022 copyright
/ScopeLift/fakerdao,JavaScript,fakerdao minimum viable implementation mkr token governance auction pool token sell voting power highest bidder mkr holder lock token contract every seven day contract hold auction anyone submit bid denominated weth erc20 specified deployment highest bidder win right control mkr locked contract next seven day mkr depositor paid auction proportion mkr contributed end cycle mkr withdraws deposit permitted process start big detailed write fakerdao effect maker governance incentive read http www scopelift co blog fakerdao scopelift blog big development requirement npm v6 5 later node v11 6 later truffle v5 1 later solc v0 5 16 ganache cli v6 9 1 later infura id free account ethereum node setup create file called env look like following bash export infura id yourinfuraid export exchange address 0xdb33dfd3d61308c33c63209845dad3e6bfb2c674 export weth holder address 0xa71937147b55deb8a530c7229c442fd3f31b7db2 run following command bash npm install cd app npm install testing 1 project root start ganache npm run ganache 2 new terminal window run test npm run test kovan deployment project deployed kovan test network 0xbbb73ec8520c8d5cb1047635007c08bce13a6af0 required maker kovan address found abi address json sourced maker changelog http changelog makerdao com release kovan 1 0 3 contract json interact contract depositor need mkr get 1 click http kovan etherscan io address 0xcbd3e165ce589657fefd2d38ad6b6596a1f734f6 writecontract view write contract tab kovan token faucet 2 click connect web3 connect wallet 3 gulp method enter 0xaaf64bfcc32d0f15873a02163e7e500671a4ffcd gem input put address addrs input interact contract bidder need weth get 1 go http faucet kovan network 2 follow instruction connect github get 1 kovan ether 3 click http kovan etherscan io address 0xd0a1e359811322d97991e03f863a0c30c2cf029c writecontract go write contract tab kovan weth contract 4 click connect web3 connect wallet 5 scroll deposit method enter amount eth deposit click write complete transaction
/nova-wallet/nova-ios-app,Swift,nova wallet io next get mobile app polkadot kusama ecosystem http img shield io twitter follow novawalletapp label follow style social http twitter com novawalletapp logo doc nova github png next gen application polkadot kusama ecosystem transparent community oriented focused convenient ux ui fast performance security nova wallet aim provide many polkadot ecosystem feature possible form mobile app unbiased network without restriction limit user developed former fearless wallet team based open source work apache 2 0 license license nova wallet io available apache 2 0 license see license file info
/openmev/docs,CSS,doc openmev org http doc openmev org documentation reference material openmev nodejs http github com openmev doc action workflow nodejs yml badge svg http github com openmev doc action workflow nodejs yml openmev openmev aim provide credible neutral platform facilitating aggregation direct communication channel block validators block producer block synchronizer ethereum evm based network license licensed either apache license version 2 0 license apache license apache http www apache org license license 2 0 mit license license mit license mit http opensource org license mit option contribution unless explicitly state otherwise contribution intentionally submitted inclusion work defined apache 2 0 license shall dual licensed without additional term condition
/EthereansOS/ITEMS-Core,JavaScript,ethitem website http www ethitem com img scr http raw githubusercontent com b u l ethitem master asset img awesome gif repo progress full release oct 28 href http ethitem com doc html documentation ecosystem item top ethereum ethitem platform building item new class object top ethereum fusing erc20s erc721s erc1155s single super standard item unleash true power art game dapps defi img src http raw githubusercontent com b u l ethitem master asset img 1 ckalgi szwi7bgmqzhmvug jpg use item everywhere ethitems portable across interoperable entire ethereum universe imagine buying potion next raid favorite eth based game earning dai borrowing game item farming cryptovoxel item img src http raw githubusercontent com b u l ethitem master asset img 1 c awlx7niz gnji2y5kbzg jpg create create item collection set owner wallet contract able mint item program extension every individual item making truly portable wrap wrap erc20 erc721 erc1155 item empowering quality save gas batch swapping erc20s farm use erc1155s defi dapps swap erc721s uniswapa world possibility awaits defi nfts defi lover finally swap nfts collectible farm object arbitrage via defi dapps well nft store moreat long last nft erc20 ecosystem merged one explore explore swap arbitrage bid track price existing ethitems farm farm setup farming contract item full defi integration buidl every item built extendible contract undergird complex technology first general purpose interoperable programmable token standard ethitem call existing item via proxy contract without needing hardcode every address item programmable equity ethitem dfo ethitem protocol built top decentralized flexible organization dfo ruled 100 chainwithout need offchain intermediaryby holder programmable equity arte
/merofinance/webapp,TypeScript,div align center br &#9; href http mero finance img src public favicon android chrome 512x512 png width 200 br br p href http github com merofinance webapp graph contributor img src http img shield io github contributor merofinance webapp style flat square alt github contributor href http github com merofinance webapp commits &#9; img src http img shield io github commit activity merofinance webapp style flat square alt github commit activity href http gitmoji dev img src http img shield io badge gitmoji 20 20 ffdd67 svg style flat square alt gitmoji href http discord gg jpgvafv3rv img src http discordapp com api guild 869304943373348915 embed png alt discord server href http percy io 3b0d1c60 backd img src http percy io static image percy badge svg alt percy visual testing p div mero website welcome repository mero website react project implementing web3 allows user interract mero protocol interested contributing please check contribution guide http github com merofinance webapp blob master github contributing md development dependency install node j http nodejs org en download install yarn http classic yarnpkg com en doc install run app locally clone repository http www google com search q clone repository github local machine open terminal http www google com search q open terminal directory oq open terminal directory app directory change directory http www google com search q cd directory oq cd directory webapp directory run yarn run yarn start navigate http localhost 3000 launch application using mock data use following command env react app use mock 1 yarn start testing two type test supported unit test automation test need passing pr merged unit test following command used run unit test yarn test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information automation test following command used run automation test yarn run cy open run cypress open mode view test suite see run see cypress doc http doc cypress io guide overview cypress information enter private key main ethereum wallet anywhere mero cypress terminal want test using private key please create new wallet hold kovan eth mero employee ever ask private key never share anyone spec make call kovan testnet test initialise web3 connection using private key set environment variable running pipeline pulled github secret running locally need set set environment variable use export cypress private key cool private key test pas need enough kovan eth wallet cover gas cost around 20 dai get dai faucet http testnet aave com faucet
/hifi-finance/hifi-liquidator,Rust,hifi liquidator utility automatically liquidating underwater account hifi limitation compatible wbtc usdc pair
/steakbankfinance/steakbank-contract,Solidity,steakbank introduction repository contains contract implement steakbank protocol protocol provide full liquidity staked asset offer user better staking apy please refer steakbank doc http doc steakbank finance document whitepaper project site http steakbank finance dapp http app steakbank finance testnet dapp http testnet app steakbank finance twitter http twitter com steakbank telegram http steakbankfinance audit report directly download beosin download audit report beosin part1 http beosin com vaasapi report download num 8b4d1ffe5b71df9f8af895f568271337 part2 http beosin com vaasapi report download num 760357b59201300362ca8b0fd4c4a5fb local report also refer local audit report part1 audit smart contract security audit report steakbank pdf part2 audit smart contract security audit report steakbankimpl pdf run 1 install dependency shell npm install 2 compile shell npm run compile 3 run coverage unittests shell npm run coverage 4 flatten shell npm run flatten
/tacoinfra/harbinger-contracts,Python,harbinger contract repository contains reference implementation smart contract make harbinger get started harbinger visit main documentation http github com tacoinfra harbinger library provides functionality interacting harbinger oracle system user want post price might also interested harbinger cli http github com tacoinfra harbinger cli harbinger poster http github com tacoinfra harbinger poster hosted component providing similar functionality posting data harbinger entity wish sign price harbinger may want look harbinger signer http github com tacoinfra harbinger signer developer new harbinger component may interested harbinger lib http github com tacoinfra harbinger lib file structure following source file produce oracle normalizer contract oracle py harbinger oracle contract normalizer py harbinger normalizer contract convenience two contract precompiled michelson oracle tz normalizer tz respectively wish compile contract please see ' building testing ' additionally following file provide helper functionality top level contract fifo queue py fifo queue implementation common py common utility function building testing harbinger contract written smartpy http smartpy io please consult smartpy documentation http smartpy io demo reference html instruction install get started smartpy command line tool run test compile shell make manually compile contract shell make compile minter make compile normalizer manually test contract make test minter make test normalizer contract specification provided contract reference implementation harbinger implementation possible provide alternative implementation contract long conform abi oracle contract specification oracle contract bound single price feed contain unlimited number asset update must monotonically increasing start time specifically oracle contract configured following parameter signer public key public key signer provides price feed oracle asset list list asset oracle keep track higher number asset lead increased gas storage fee interacting oracle oracle contract ha following entrypoints update receives signed set update oracle contract push push data oracle normalizer contract revoke revoke oracle contract removing signer public key effectively trigger emergency shutdown oracle normalizer contract specification normalizer contract normalize single asset receive update one oracle update must monotonically increasing start time specifically normalizer contract configured following parameter oracle contract address address oracle contract provides update asset name name asset contract normalize number data point number data point store normalize higher number data point lead increased gas storage fee interactin normalizer normalizer contract ha following entrypoints update receives data oracle contract credit harbinger written maintained luke youngblood http github com lyoungblood keefer taylor http github com keefertaylor
/status-im/S-Pesa,Nim,p align center img src http raw githubusercontent com status im spesa master doc spesa png p h1 align center pesa h1 h2 align center smart pesa ussd sm interface smart contract defi decentralised application h2 h3 align center status client feature phone h3 smart pesa ussd sm interface smart contract defi decentralised application introduction introduction purpose purpose feature feature pesa ' pesa isnt doe tool come doe tool come get started get started requirement requirement contribute contribute community community developer developer principle vision goal principle vision goal principle principle vision vision goal goal todo todo license license introduction todo purpose connect enable anyone connected mobile network access smart contract defi decentralised application feature key management multi account wallet access smart contract abi pesa integration dapplet registry anyone connection mobile network predominantly focusing feature phone underserviced area pesa ' unlike status pesa decentralised client therefore understood trusted gateway decentralised technology also doe key management doe tool come pesa come want help create popup micro economy help lift people poverty hopefully help community adopt blockchain enabled technology get started nimble build spesa requirement nim 0 20 2 git ethereum node redis server contribute want help ' awesome simple thing community unlike fight club best way help actually talk project much blog post article twitter facebook answer question issue tracker http github com status im spesa issue help community member developer read contribution guide contributing md install developer version locally start contributing instruction doc contribute index md look issue labelled bug http github com status im spesa issue q 3aopen 3aissue label 3abug looking immediate impact project look issue labelled help wanted http github com status im spesa issue q 3aissue 3aopen label 3a 22help wanted 22 issue solve relatively easily look issue labelled good first issue http github com status im spesa label good 20first 20issue issue people want contribute try work small feature first advanced developer try tackle issue labelled feature request http github com status im spesa issue q 3aopen 3aissue label 3a 22feature request 22 beware though harder require lot back forth repository administrator order make sure going right direction product welcome contribution kind anyone principle vision goal software cultural artefact want embed ability uphold human right http www un org en universal declaration human right principle read status ' principle http status im principle liberty censorship resistance security privacy transparency openness decentralization inclusivity continuance resourcefulness vision pesa ' vision provide people access decentralised technology far mobile network reach connect global financial market goal todo todo handle ussd http post menu system pin based registration system key gen encrypt truncated hash phone number pin poc send receive mpesa integration http developer safaricom co ke doc command id handle address ' pphone numers make address first class citizen phone number attached labelling license software released licensed mit license mit apache 2 0 license apachev2
/byteball/stablecoin-interest-arbitrage,JavaScript,autonomous agent arbitrage stable interest token bonded stablecoins aa check price interest stable token oswap io http oswap io price deviate target open close deposit stable token sell buy stable token oswap order earn difference price see introductory article bonded stablecoins http medium com obyte using multi dimensional bonding curve create stablecoins 81e857b4355c learn interest stable token investor provide liquidity aa interest token get share exchange share profit arbitrage arbitrage action aa triggered companion bot also included manager run bot earns management fee success fee bot operator manager installing bash yarn testing aa test written using aa testkit http github com valyakin aa testkit bash yarn test creating arbitrage aa use obyte wallet send transaction factory aa 5wpgsr5kpkllrwu75b3fm6o4m7cpyoea following parameter deposit aa address deposit aa issue stable token exchange locking interest token deposit look address parameter tab corresponding stablecoin e g http ostable org trade 26xapppttyriosyncuv3ns2h57x5lzlj parameter oswap aa address oswap pool aa interest token traded stable token e g iusd ousd manager address manager ' bot issue arb command aa learn address running bot first time see management fee yearly fee paid manager share managed asset set 0 01 1 success fee success fee paid manager share aa ' profit set 0 1 10 factory create new arbitrage aa aa store fund investor bot issue arb command aa see arbitrage opportunity add arbitrage aa arb aa array conf json single bot manage several arb aa json arb aa bcmfndhnqdeecewakuxyihfe6gxaj2f6 running arbitrage bot bash node run j 2 errlog bot start print address single address refill byte send transaction aa also specify address manager creating arbitrage aa bot ' fund separate aa ' fund bot need hold small amount required trigger aa arbitrage work stable token overpriced oswap aa sends interest token deposit aa open new deposit get stable token exchange immediately sends oswap exchange back interest token amount token received oswap greater amount sent deposit aa ' profit trade executed atomically part chain aa trigger fails reason entire chain fails executing sequence aa check would profitable bounce ' happen price ha moved since command wa sent aa bot way aa lose investor ' money trying arb direction type arbitrage triggered anybody manager arb wa triggered non manager get reward 20kbytes twice bounce fee spent sending triggering transaction lose bounce fee arb fails stable token underpriced oswap aa us interest token buy cheap stable token oswap sends deposit aa close weakest deposit get interest token amount token received closing deposit greater amount sent oswap aa ' profit trade executed atomically aa check would result making profit otherwise bounce however aa lose money trying close deposit weakest close request challenged somebody else id deposit closed indicated bot sending arb command manager ' responsibility correctly identify weakest deposit manager allowed send arb command withdrawing management success fee manager ' bot withdraw fee sending withdraw management fee withdraw success fee command aa response receives fee accrued since previous withdrawal success fee paid interest token management fee paid share dilutes existing investor investor investing divesting provide liquidity participate profit aa investor send interest token aa get share exchange share price determined dividing aa ' asset interest token number existing share outstanding redeem user send share back aa get interest token exchange
/ilcalc/ilcalc.github.io,Clojure,impermanent loss calculator impermanent loss calculator automated market maker uniswap etc basic implementation support two token allows chose token proportion learn impermanent loss see http pintail medium com uniswap good deal liquidity provider 104c0b6816f2 use calculator visit http ilcalc github io
/vigvamapp/vigvam,TypeScript,vigvam status january 1 stopped delivering new code public repository purpose protect vigvam scammer hacker provide security guarantee user ' moving away open source policy wallet code publicly available release public beta version public security audit currently ' still actively developing product follow update site medium http vigvam app app manages wallet crypto key br explore defi nfts br ethereum bsc polygon optimism others vigvam http user image githubusercontent com 11996139 178014428 43cb4b5f cb50 4bea a226 472dd63bfacf jpg http vigvam app feature classic browser extension fast simple interaction web 3 0 world non custodial ' server central hub key belong user stored device encrypted form open source us best security approach support ledger http www ledger com device support social auth open login http openlogin com lightweight build source requires node j 14 http nodejs org yarn http yarnpkg com get source code bash git clone git github com vigvamapp vigvam git cd vigvam install app dependency bash yarn build application bash chrome chrome based browser yarn build firefox yarn build firefox add application browser locally 1 open chrome extension browser 2 enable developer mode 3 tap load unpacked 4 select local vigvam repository dir dist prod chrome unpacked misc script test bash yarn test audit npm dependency bash yarn npm audit analyze bundle bash yarn analyze
/Fair-Squares/fair-squares,Rust,fair square f middot twitter url http img shield io twitter follow fairsquares style social http twitter com fairsquares license http img shield io github license fair square fair square http github com fair square fair square blob main license discord http img shield io badge discord gray logo discord http discord gg 5u3dxe49v5 div align center img align top src http fair square nl asset f light png width 30 img align top src asset img web3 foundation grant badge white svg width 40 div br fair square connects supply demand house owner renter house investor motive want create affordable housing market investor house get social return renter cheaper housing want remove financial barrier investing real estate investor ' mean fully invest house social return end user coordination taking place different stakeholder achieve desired outcome runtime logic pallet come together orchestrating adhering strict rule set equitable system orchestration towards equitable housing market configurable governable stakeholder concerend willing work zooming much problem definition stakeholder solution paper website http fair square nl learn get touch u please join discord channel f http discord gg 5u3dxe49v5 current development funded web3 foundation grant program http github com w3f grant program br run build running locally 1 complete basic rust setup instruction doc rust setup md 1 cargo run release dev tmp root f node repo build locally cargo build command perform initial build sh cargo build release binary present create binary target release f node argument passed docker build run added dockerfile http github com fair square fair square blob main dockerfile repo build image following commmand docker build docker image image tagged starting v0 x x generate docker image see available image http github com fair square fair square pkgs container f node run command br docker run publish 127 0 0 1 9944 9944 tcp ghcr io fair square f node version f node dev w external change version line run docker linux first install docker http doc docker com get docker docker compose http doc docker com compose install run following command start single node development chain bash script docker run sh script need folder root project called local create folder command firstly compile code start local development network also replace default command cargo build release target release f node dev w external appending useful one follow connect polkadot j apps front end node template running locally connect polkadot j apps front end interact chain polkadot j http polkadot j org apps explorer rpc w localhost 9944 connects front end app interact node mean extensics call read chain state blockchain click http polkadot j org apps explorer rpc w localhost 9944 connect local blockchain run test cargo test
/centfinance/Symmetric.ExchangeUI,Vue,div align center img alt redoc logo src http raw githubusercontent com centfinance community main medium pack symmetric logo 256 png width 400px div h1 align center code cent exchange code h1 development create env file change environment variable default value app chain id 1 app gas price 100000000000 run build npm install npm run serve npm run build supported network ethereum main network gnosis celo kovan poa catalyst coming soon cent public network coming soon
/SiaCashCoin/Frontend-Staking-V2,TypeScript,scc frontend netlify status http api netlify com api v1 badge 2193263e af7b 463a ba13 ceca0aa87731 deploy status http app netlify com site siacashcoin deploys want contribute scc frontend please refer contributing guideline contributing md project find u telegram http siacashcoinchat contact team add new syrup farm pool frontend scc swap http siacashcoin com swap support bsc network token listed http www coingecko com http coinmarketcap com would like u publish new token ha yet listed send u pull request contact u telegram add
/antoncoding/oh-my-greeks,TypeScript,div align center h1 align center oh greek h1 h4 align center simple platform cross chain greek h4 p align center badge go p p align ' center ' img width 100 src src imgs greek dionysus png p div p intro need place see chain greek aggregated nicely hosting currently hosting http ohmygreeks co http ohmygreeks co ohmygreeks fleek co ohmygreeks fleek co get started shell npm install npm start protocol integration interface designed easy plugin option protocol vol product compliant need implement adaptor interface detailed src adaptor interface contribute contribute repo helping resolve existing issue feature request refactor code also feel free open feature request want see website
/UMAprotocol/docs,JavaScript,uma documentation website repository http doc umaproject org website built using docusaurus 2 http v2 docusaurus io modern static website generator please read instruction need run project locally powered vercel static img powered vercel svg http vercel com utm source uma 2fdocs installation yarn local development yarn start command start local development server open browser window change reflected live without restart server build need deployment process doe build automatically see deployment section yarn build command generates static content build directory served using static content hosting service deployment vercel team account vercel watch branch repo whenever new commit pushed master branch e g merging pr vercel deploy http doc umaproject org deployment github used currently using vercel deployment hosting instruction left posterity reference git user github username use ssh true yarn deploy using github page hosting command convenient way build website push gh page branch
/anysniper/Frontend,Vue,run sniper locally see wiki http github com anysniper frontend wiki project setup explanation component dapp http help anysnipers com en collection 3347092 quick guide anysniper full tutorial http help anysnipers com en article 5989339 anysniper dapp tutorial public access http app anysnipers com switch rinkeby testnet wallet limited version see tutorial run local full version image http user image githubusercontent com 98989620 186775106 ad5d5598 391c 4e43 92d1 16598822fffd png anysniper dapp repository contains code run anysniper dapp 500 active user logic code repository add custom dex src config j currently uniswap pancakeswap sushiswap degenswap dexs crono chain backend intended store user configuration contract scanner information favorite contract address copy trading target backend using parse server http parseplatform org use free backend service like back4app detail found http github com anysniper frontend wiki project setup minor issue copy trading fixed soon basically calculates amountout amountin one two file multiple line code almost logic sniping optimize pr welcome hope help space developing new project defi ' sure code nice use template boilerplate new project project setup npm install open src config j change parse url backend ' url create free server http back4app com create new app get applicationid javascriptkey app setting security key final configration would looking like parse app id ' r0qwhaqibnmhctk030rjgglyd9hstuytv ' parse url ' http parseapi back4app com ' parse master key ' ' parse j key ' 1mt3ew8i1yqux4sivqbdiaggfszvtz ' also need change mainnet rpc used fetch token balance create new project infura http infura io get rpc url compiles hot reloads development npm run serve compiles minifies production npm run build lint fix file npm run lint
/gamedaoco/gamedao-protocol,Rust,gamedao protocol
/maximebrugel/reverse-liquidity-split,Solidity,h1 align center reverse liquidity split rls h1 p align center implementation p idea reverse liquidity split inspired reverse stock split http www investopedia com term r reversesplit asp br tradfi company consolidates number existing share stock fewer higher priced share usually red flag advantage term regulation policy defi seems completely unnecessary divide balance every holder unless apply mechanism liquidity pool work rev token liquidity uniswap v2 br liquidity 1000 rev 1000 usdc br price 1 rev 1 usdc start 50 split calling split token function smart contract burn 50 uniswapv2pair balance call sync function javascript burn liquiditypool liqamount divisor iuniswapv2pair liquiditypool sync liquidity 500 rev 1000 usdc change price br 1 rev 2 usdc 100 increase conclusion great token pumping never forget real solution rather red flag increase volatility run project build project forge build run test forge test fork url http eth mainnet alchemyapi io v2 key test targeting mainnet uniswap v2 router factory installing toolkit project using foundry http github com gakonst foundry install rust cargo curl http sh rustup r ssf sh install forge cargo install git http github com gakonst foundry bin forge locked
/purefinance/pure.finance,JavaScript,pure finance website monorepo development sh npm install npx lerna run stream dev open browser http localhost 3000 adding new mini app 1 add new page component site page 1 add utility component appears home page 1 go end end test set following environment variable base node url mnemonic run test sh npm run test e2e
/we-commit/in-dex-explorer,TypeScript,mono repo trojan finance simple yet powerfull open source transaction explorer uniswap sushiswap http app trojan finance explorer br br img style margin left 10rem src asset 1 gif main feature live mempool includes mempool pendingtxs transaction aware incoming movement example may impact token price take mempool input data every new pending transaction decode get target dex router univ2 univ3 sushiswap token pool involved swap swap route swap method swap input output amount data classify tx store backend database connected websocket server monitor publish every new pending transaction failed confirmed dropped replaced change real time update mempool interface run real time update aware kind extendend network state like watching future transaction included confirmed netwrok state term dex swap token pair pool mean new impact changing price case token exosystem example watching ui u able realize token traded like really fast hot token beign traded give user defi trader better idea really happening network protocol dex token look difference following token get idea always hot token really fast update tx involving weth http app trojan finance explorer inputcurrency 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 hot token fast update tx involving dai http app trojan finance explorer inputcurrency 0x6b175474e89094c44da98b954eedeac495271d0f hot token fast update tx involving usdc http app trojan finance explorer inputcurrency 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 hot token tx involving link http app trojan finance explorer inputcurrency 0x514910771af9ca656af840dff83e8264ecf986ca example among use case get advantage real time swap information jump new token recently added uniswap sushiswap know real status token interest wake take action token become hot one moment another check whale movement realize much trading much token balance got available drop pump token check user trading time different wallet connect think yeah like real trading bot doe actually extend code hook implementation feed trading bot usefull data sayin among lot scenario user discover decide use trojan finance token eth price interface us uniswap sdk get price token listed explorer block information query gas blocknative api get latest next block information token transaction link interface generate couple usefull link selected token showed transaction easily see transaction detail etherscan validate known address tx tag interface show tag transaction header explorer case known whale address involved transaction use sibil list import public verified user http raw githubusercontent com uniswap sybil list master verified json looking way import whale address source backend usefull thing trojan doe backend hope discover start post first one token app start runing listening swap trade time got new token related dont token data go get token information network add database realize happends usually new token created network recetly added deployed main net actually aware new token beign swapped uniswap get opportunity jump good project similar way every tx trojan inspect address related receiver etc tag know actually aware example whale wake etc running clone reposity install dependency git clone http github com commit dex explorer git requirement node use nodejs v14 16 1 run yarn nodejs v14 16 1 recomend http github com nvm sh nvm yarn http classic yarnpkg com en doc install mongodb create account follow instruction create free database using shared cluster wait minute databaseis available create user get connection information later set atlas string env variable connect database mongodb cluster http www mongodb com cloud atlas register use mongo instance need replica set oplog mongo listener http doc mongodb com manual core replica set oplog oppinion fastest way cetralized data feed notify real time external service modification important need way really fast send new pending tx data front change tx status necesary actually hook service like trading bot telegram notification script slack etc api provider get least 1 key provider http www pokt network http dashboard alchemyapi io http infura io http etherscan io myapikey http getblock io en http www blocknative com check sample env create env file got two env file create env root folder serveruser pas id1 db name id2 atlas string mongodb serveruser pas cluster0 shard 00 00 id1 mongodb net 27017 cluster0 shard 00 01 id1 mongodb net 27017 cluster0 shard 00 02 id1 mongodb net 27017 db name ssl true replicaset atlas id2 shard 0 authsource admin retrywrites true w majority must replaced db name db name trojan db eth collection prefix table created collection prefix eth w cors url cors origin gas station api url http ethgasstation info api ethgasapi json blocknative api url http api blocknative com gasprices blockprices get key blocknative blocknative api key 9999999999999999999999999999999999999999999999999999 main websocket provider full url used listen event network main w w mainnet infura io w v3 99999999999999 list several provider key used get transaction data token pool etc run listener separated server origin mempool listener block listener confirmation listener use 4 infura free key different account avoid rate daily call limit infura key1 9999999999999999999999999999999999999999999999999999 infura key2 9999999999999999999999999999999999999999999999999999 infura key3 9999999999999999999999999999999999999999999999999999 infura key4 9999999999999999999999999999999999999999999999999999 alchemy mempool listener confirmation listener alchemy key1 9999999999999999999999999999999999999999999999999999 alchemy key2 9999999999999999999999999999999999999999999999999999 etherscan mempool listener confirmation listener etherscan key1 9999999999999999999999999999999999999999999999999999 etherscan key2 9999999999999999999999999999999999999999999999999999 1 key 2 provider use last backup resource case others provider available pokt key 9999999999999999999999999999999999999999999999999999 get block key 9999999999999999999999999999999999999999999999999999 important dex router address used check new transaction dex transaction univ2 0x7a250d5630b4cf539739df2c5dacb4c659f2488d univ3 0xe592427a0aece92de3edee1f18e0157c05861564 sushiv2 0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f used import token network init database token information cache save lot call network need token data like decimal decode parse swap amount correctly wrapped http wrapped tokensoft eth link yearn http yearn science static tokenlist json roll http app tryroll com token json sushiswap http raw githubusercontent com sushiswapclassic token list master sushiswap tokenlist json one inch http token 1inch eth link coingecko http token coingecko com uniswap json compound http raw githubusercontent com compound finance token list master compound tokenlist json defiprime http defiprime com defiprime tokenlist json messari http messari io tokenlist messari verified opyn http raw githubusercontent com opynfinance opyn tokenlist master opyn v1 tokenlist json snx http synths snx eth link set http raw githubusercontent com setprotocol uniswap tokenlist main set tokenlist json ave http tokenlist aave eth link agora http datafi theagora eth link cmcdefi http defi cmc eth link cmcstablecoin http stablecoin cmc eth link cmc200erc20 http erc20 cmc eth link kleros http t2crtokens eth link furucombo http cdn furucombo app furucombo tokenlist json kyber http api kyber network tokenlist mycryptoapi http uniswap mycryptoapi com zapper http zapper fi api token list uma http umaproject org uma tokenlist json bazar http raw githubusercontent com ethereansos organization interface master bazar token list dist decentralizedflexibleorganizations json zerion http tokenlist zerion eth link used locally init heroku apps set environment variable automatically heroku app name dex explorer used build front heroku env var used set heroku script moment heroku build client infura key google analitycs id heroku app url websocket server exposed react app chain id 1 react app google analytics id ua 999999999999999 1 react app network url http mainnet infura io v3 999999999999999 react app w url trojan http localhost 3001 http mysuperwebsocket herokuapp com ensure end react app app offline false skip preflight check true client env client folder react app chain id 1 react app google analytics id ua 999999999999999 1 react app network url http mainnet infura io v3 999999999999999 react app w url trojan http localhost 3001 react app app offline false skip preflight check true runing init script root folder yarn install go client folder cd client yarn install root folder connect mongodb create db create collection index required yarn ci ci node src utils initserver create index import known token pool get database initial data yarn yarn ip node src utils initserver init token ip node src utils initserver init pool import known addres get sample data base tag transaction known user tag yarn iw iw node src utils initserver init whale step required start app take time specially token pool pool scan factory creation block latest pretty much lot block need fast way get validate pool address information really usefull token decimal data start backend service env file created go repo root folder run block listener start common le important task block information clear cache table start wait get couple block information yarn lcs lcs node dev src listener common mempool listener start pending mempool listener used get new tx filter dex swap decode input data needed like expensive task must get network incoming transaction hash get transactionresponse detail classify yarn lm lm node dev src listener mempool confirmation listener start event listener filtering router address swap event topic getting confirmed block confirmation event transaction related updating pending transaction status correpond yarn lc lc node dev src listener confirmation start websocket app client server connected mongo cluster oplog us socket io room pattern serve live data token dex every time tx writen modified mongo oplog inform action send update websocket client subscribed token room also expose client build app public yarn web web node dev src websocket server start front end app client env file created go client folder run yarn install yarn start c first time start run yarn start start c used compile contract type yarn start point app runing http localhost 3000 development mode react script build server client app env setted heroku server run build script root folder remove old build folder install deps client app build app move root folder available server expose client build app express yarn install yarn build check internal build script package json build script build cd client yarn build cd tsc client package json build script build rm rf client build yarn yarn compile contract type react script build mv build client build go client folder remove old client build install deps client compile contract type react script build move root dir allowing express server serve client finally start app runing build server client project yarn web worker yarn worker yarn worker b yarn worker c check script used test locally check build correct web worker node dist websocket server j worker node dist listener common j worker b node dist listener mempool j worker c node dist listener confirmation j check procfile heroku worker web node dist websocket server j worker node dist listener common j worker b node dist listener mempool j worker c node dist listener confirmation j restriction work ethereum main net cheer community jump ul class li target blank href http discord gg vzkfp78aef discord li li target blank href http twitter com financetrojan twitter li li target blank href http medium com trojanfinance medium li li target blank href http github com commit github li ul
/LearnWeb3DAO/DAOHacks-Workshop,TypeScript,learnweb3 dao x eth global dao hack build chain dao automatic proposal execution project wa done ethglobal workshop daohacks 2022 content brought learnweb3 dao free developer focused web3 education platform take z structured pathway website http learnweb3 io discord http discord gg learnweb3dao twitter http twitter com learnweb3dao
/01-finance/flux,Solidity,flux protocol twitter url http img shield io twitter follow zero1 flux style social http twitter com zero1 flux flux protocol whitepaper http fluxdoc 01 finance english flux whitepaper flux developed zero one team flux decentralized secure non custodial digital encryption asset mortgage lending protocol flux ' currency market user able deposit specific crypto asset earn interest well lend certain crypto asset collateralizing asset paying certain amount interest currently flux registered conflux bsc heco okexchain polygon eth future lossless cross chain lending come true popular public chain solana arbitrum near layer2 compared lending product like compound aave ethereum network flux ha improved interest rate model mortgage model liquidation logic also contract call cost low execution efficiency high user experience good development potential unlimitable near future flux build richer decentralized lending market deploy info deployed contract publish deployed readme md
/SiennaNetwork/SiennaNetwork,Rust,div align center logo svg http sienna network twitter follow http img shield io twitter follow sienna network style plastic logo twitter http twitter com sienna network coverage status http coverall io repos github siennanetwork sienna badge svg branch dev s6krdi http coverall io github siennanetwork sienna branch dev contribution welcome http img shield io badge contribution welcome brightgreen svg style flat contributing md code style http img shield io badge code 20style open minded 239013fe contributing md coding style div mainnet address moved see receipt secret 4 deployment prod yml receipt secret 4 deployment prod yml date mainnet address production contract development quickstart sh git clone repo sh git submodule update init recursive nix shell optional bring cargo pnpm pnpm pnpm build latest fadroma chain scrt 1 2 devnet pnpm deploy latest smart contract written rust targeting secretnetwork ' fork cosmwasm std 0 10 wasm32 unknown unknown see package json package json script script available workflow command see also git submodules http git scm com book en v2 git tool submodules documentation importantly git submodule update init recursive command pnpm http pnpm io package manager importantly workspace feature http pnpm io workspace repository content artifact artifact contains compiled smart contract gitignored checksum gitignored contract contract contains rust source code smart contract well typescript code necessary build interact tge contract tge token generation event tge mint vest new token contract snip20 sienna contract tge snip20 sienna main sienna governance token contract mgmt contract tge mgmt vesting management contract contract rpt contract tge rpt remaining pool token splitter contract script deploy contract tge deploy tge deployment amm contract amm automated market maker amm sienna swap friend contract amm snip20 contract amm amm snip20 vanilla snip20 token usable amm contract factory contract amm factory sienna swap factory contract exchange contract amm exchange sienna swap exchange contract lp token contract amm lp token sienna swap lp token contract router contract amm router sienna swap router contract reward contract amm reward sienna reward contract launchpad contract amm launchpas sienna launchpad contract ido contract amm ido sienna ido script deploy contract amm deploy amm deployment script upgrade contract amm upgrade amm migration lend contract lend sienna lend private lending protocol contract market contract lend market contract oracle contract lend oracle contract overseer contract lend overseer contract interest model contract lend interest model deps deps contains submodules foundational framework fadroma deps fadroma git submodule pointing top fadroma deployment framework http github com hackbg fadroma take care building uploading contract behind scene frontends frontends contains client smart contract written j transcluded git submodules pointing repos siennajs frontends siennajs current client library sienna api frontends api upcoming mixed deploy client library dashboard frontends dashboard reward simulation dashboard reward pool monitor frontends reward pool monitor query status reward pool claim frontends claim tge claim frontend vest frontends vest tge vest frontend library library contains rust library used one smart contract amm shared library amm shared defines contract api sienna swap lend shared library lend shared defines contract api sienna lend receipt receipt contains response upload init transaction performed framework grouped chain id let keep track uploaded contract secret 4 deployment prod receipt secret 4 deployment prod yml current mainnet deployment pulsar 2 deployment active receipt pulsar 2 deployment active current testnet deployment script script contains utility script pertaining whole repo build md script build md build pnpm build chain md script chain md configure md script configure md deploy md script deploy md deploy pnpm deploy deployment md script deployment md generate md script generate md live md script live md receipt md script receipt md schema md script schema md status md script status md test md script test md test pnpm test token md script token md upload md script upload md setting setting contains value configurable property smart contract grouped chain id npm module imported deploy script access setting deploying specific chain testnet configuration may need systematically differ mainnet schedule json setting schedule json vesting schedule post deployment configuration deployment contract transferred master multisig account cli api wrapper repo support generating multisig transaction see hackbg motika http github com hackbg motika gui based multisig transaction signer
/miDaily/Daily-COP,Solidity,daily cop dlycop repository contains token relayer contract daily cop colombian peso stablecoin dly cop token erc20 token minted account minter role initially centralized done multisig address controlled different stakeholder daily later fase token collateralized chain minting possible deposit collateral making decentralized burned token holder anyone wa approved allowance token ha permit functionality described http eips ethereum org eips eip 2612 eip 2612 allowing approval made via signature easily create service cover transaction cost user ha snapshot functionality used case migration ha done reward need given token holder deployed layer 2 solution polygon contract dailycoptokenchild layer 1 ethereum contract dailycoptokenroot moved layer 1 ethereum using matic bridge deposit withdrawal function implemented child token contract mint function root token contrat limited predicate proxy contract bridge currently ha default admin role control change role minter role snapshot role depositor role case necessary collateralization protocol implemented minting done automatically protocol default admin role may dissapear making granted account renounce relayer contract added transaction signed user relayed account trusted relayers relayer role pay gas fee make use permit function token contract make possible permit transferfrom one transaction future charge fee dly cop token transparent relayer contract able update fee model contract upgradeable future transfer permit action done token example exchange without need user native network currency contract also improved relaying done account instead needing relayer role relayer role given account trusted service daily make sure token send intented recipient since part permit signature dev guide ' verify token etherscan verify contract etherscan hardhat etherscan http hardhat org plugins nomiclabs hardhat etherscan html nomiclabs hardhat etherscan plugin nomiclabs used want get contract verified etherscan use following command correct parameter sh npx hardhat verify network network name deployed contract address constructor arg 1 example verify dailycoptokenroot deployed 0xb32429acdd55a95561a12476ec37e6a941acc2ee goerli predicate proxy argument 0x37c3bfc05d5ebf9ebb3ff80ce0bd0133bf221bc8 npx hardhat verify network goerli 0xb32429acdd55a95561a12476ec37e6a941acc2ee 0x37c3bfc05d5ebf9ebb3ff80ce0bd0133bf221bc8 successfull verification return message similar following successfully verified contract dailycoptokenroot etherscan http goerli etherscan io address 0xb32429acdd55a95561a12476ec37e6a941acc2ee code make sure first created api key etherscan added etherscan api key local env file verify token polygonscan verify contract polygonscan plugin exists yet case etherscan manually mumbai testnet http mumbai polygonscan com verifycontract matic mainnet http polygonscan com verifycontract since contract use library exists mulitple file first flattened accepted done build flatten task hardhat sh npx hardhat flatten file example flatten dailycoptokenchild sol contract npx hardhat flatten contract polygon dailycoptokenchild sol flattened code uploaded single file solidity contract verify publish code possible following error returned sh parsererror multiple spdx license identifier found source file use combine multiple license please see http spdx org information myc case remove one spdx license identifier comment flattened code pasting map token matic po bridge map token matic bridge moved matic ethereum back listed matic ' po bridge proces currently still manual user interface controlled matic developer future become decentralized requisite get accepted token contract matic contract ethereum verified see section verify token etherscan verify token etherscan verify token polygonscan verify token polygonscan done yet token contract accepted layer go http mapper matic today map choose po bridge erc20 network mainnet testnet set token mintable enter address contract layer make sure token symbol appears automatically make sure contract recognised also enter email address want receive notification submit request coming day check got mapped bridge following explorer http mapper matic today
/Argennon-Project/ADAGs,Solidity,please check argennon community discord http discord gg 7u3cxnt5yn telegram http argennon reddit http www reddit com r argennon twitter http twitter com argennon org contributor badge start remove modify section contributor http img shield io badge contributor 9 orange svg style flat square contributor contributor badge end argennon project argennon classical pronunciation used ren non next generation cloud based blockchain smart contract platform argennon blockchain us hybrid proof stake hpos consensus protocol capable combining benefit centralized decentralized system argennon ledger storage transaction processing outsourced cloud normal personal computer smartphones limited hardware capability able validate transaction actively participate argennon consensus protocol property make argennon truly decentralized democratic blockchain one secure existing platform argennon cloud trustless publicly verifiable computational integrity ci achieved using succinct argument knowledge system stark snark data integrity guaranteed cryptographic accumulator time smart clustering algorithm keep bandwidth usage overhead cryptography manageable validators argennon protocol strongly incentivizes formation permission le network publicly verifiable cloud pvc server pvc server argennon conventional data server us computational storage resource help argennon network process transaction encourages development conventional networking storage compute hardware benefit area information technology contrast approach older blockchains incentivized development totally useless technology hash calculation using succinct argument knowledge system make main functionality argennon validator light enough implemented smart contract deploying validator contract another platform argennon could use established blockchains extra layer security addition contract facilitate trustless bridging asset argennon blockchain reduce execution fee validator contract used validating roll ups state transition initial draft argennon white paper found http raw githubusercontent com aybehrouz avm main pdf pdf addition link http www argennon com feature html provides brief overview important property argennon platform launch argennon main net erc20 token governance system deployed binance smart chain order represent investor ' share project give opportunity determine project ' path launch argennon blockchain token convertible 1 1 ratio native currency argennon blockchain argennon erc20 token argennon token arg r erc20 token intended represent investor ' share argennon project launch argennon blockchain arg erc20 token convertible 1 1 ratio native currency argennon blockchain meanwhile arg erc20 token act governance token arg erc20 smart contract profit distributor mean amount erc20 token registered profit source sent contract address amount distributed arg holder proportional arg balance holder arg token eligible vote argennon decentralized autonomous governance system adags order vote user need lock arg token least 6 month period able transfer token proposal get 66 2 3 total arg supply vote accepted adags adags argennon decentralized autonomous governance system adags e dagz smart contract able perform governance action action adags version functioning binance smart chain ethereum network include starting new token sale different configuration minting new arg token sending fund address grant changing threshold voting weight needed accepting proposal changed 0 55 0 8 total arg supply changing minimum lock period required voting changed 120 540 day changing required fee creating proposal changed 0 0 5 bnb changing administrator argennon contract operation possible adags current admin contract deploying new governance system operation proposed adags admin noted give admin special role admin adags changed normal proposal voting mechanism token sale several token sale may held launch argennon blockchain follow set predefined rule every token sale conducted using smart contract contract ha token ico token user may buy ico token contract ico token burnt converted arg token 1 1 ratio using contract time ico token redeemable mean anyone redeem ico token using contract get refund redemption price depends time since start token sale amount fund token sale ha raised far amount raised fund ha yet reached threshold defined contract user may redeem 100 price amount raised fund ha reached threshold redemption price drop price defined contract determined adags guaranteed user redeem price configured time interval determined adags time interval ico token may redeemable user convert arg token exact configuration token sale decided adags however redemption price le 50 redemption duration shorter 6 month token sale done earnings token sale automatically sent arg erc20 contract address hence distributed arg holder sent adags smart contract used grant program actually even time interval ico token still redeemable however since contract allow withdrawal fund redemption price could anything based amount remaining fund tokenomics final total supply argennon currency 100 billion must reached 30 year max half amount may minted launch argennon main net consequently arg erc20 token 50 billion cap half including 50 billion argennons minted launch argennon blockchain mainly used incentive reward minting arg erc20 token arg currency follow rule 5 billion founder ' share 95 4 75 billion founder ' share locked arg erc20 contract inside founder ' account transferred liquidated market first two year 5 billion founder ' initial minting allowance used awarding arg grant early contributor grant given people helped development growth argennon ecosystem grant must sold launch argennon mainnet grant 5 000 000 args given single person grant locked least one year grant documented http www argennon com grant html 1 billion first token sale sold 0 0005 per arg token sale conducted adags 39 44 billion controlled adags argennon governance system amount may used token sale air drop grant decided adags token sale public done using contract complying argennon token sale rule 50 billion minted launch argennon blockchain used argennon incentive mechanism argennon incentive mechanism similar mining reward blockchains therefore arg token minted order sold market add liquidity liquidity pool type activity price manipulation minting arg erc20 token ha limited maximum supply defined arg erc20 contract maximum allowed supply function time first year maximum supply 10 billion allowed maximum allowed supply increase 5 billion per year linearly could reach 50 billion cap nine year noted hard limit maximum supply arg erc20 token actual supply may lower amount launch argennon blockchain unminted arg erc20 token respect 50 billion cap considered reserve adags counterpart argennon blockchain contributor thanks go wonderful people emoji key http allcontributors org doc en emoji key contributor list start remove modify section prettier ignore start markdownlint disable table tr td align center href http github com liang0561 img src http avatar githubusercontent com u 75945582 v 4 100 width 100px alt br sub b liang0561 b sub br href financial liang0561 title financial href blog liang0561 title blogposts td td align center href http github com satoshimiracle img src http avatar githubusercontent com u 72975337 v 4 100 width 100px alt br sub b satoshimiracle b sub br href http github com argennon project adags issue q author 3asatoshimiracle title bug report href blog satoshimiracle title blogposts href content satoshimiracle title content href fundingfinding satoshimiracle title funding finding href idea satoshimiracle title idea planning feedback href question satoshimiracle title answering question href http github com argennon project adags pull q 3apr reviewed 3asatoshimiracle title reviewed pull request href usertesting satoshimiracle title user testing href security satoshimiracle title security td td align center href http github com rejinderi img src http avatar githubusercontent com u 4333016 v 4 100 width 100px alt br sub b rejinderi b sub br href blog rejinderi title blogposts href financial rejinderi title financial href fundingfinding rejinderi title funding finding href idea rejinderi title idea planning feedback td td align center href http medium com greedybucks img src http avatar githubusercontent com u 54760103 v 4 100 width 100px alt br sub b hacktivist b sub br href blog hacktivist24 title blogposts href fundingfinding hacktivist24 title funding finding td td align center href http github com tuananhthepussyhunter img src http avatar githubusercontent com u 71578941 v 4 100 width 100px alt br sub b tuananhthepussyhunter b sub br href blog tuananhthepussyhunter title blogposts href fundingfinding tuananhthepussyhunter title funding finding href question tuananhthepussyhunter title answering question td td align center href http github com codemaster138 img src http avatar githubusercontent com u 43313420 v 4 100 width 100px alt br sub b jake b sub br href idea codemaster138 title idea planning feedback href security codemaster138 title security td td align center href http github com uneevn img src http avatar githubusercontent com u 90345889 v 4 100 width 100px alt br sub b uneevn b sub br href security uneevn title security href idea uneevn title idea planning feedback href question uneevn title answering question td tr tr td align center href http github com ak223wd img src http avatar githubusercontent com u 50454050 v 4 100 width 100px alt br sub b ak223wd b sub br href fundingfinding ak223wd title funding finding td td align center href http github com fondofdogs img src http avatar githubusercontent com u 85778179 v 4 100 width 100px alt br sub b dogperson b sub br href blog fondofdogs title blogposts href content fondofdogs title content href idea fondofdogs title idea planning feedback href question fondofdogs title answering question href security fondofdogs title security td tr table markdownlint restore prettier ignore end contributor list end project follows contributor http github com contributor contributor specification contribution kind welcome
/abstracted-finance/shortdai,TypeScript,short dai package status smart contract circleci http circleci com gh abstracted finance shortdai svg style svg http circleci com gh abstracted finance shortdai frontend 1 http shortdai com frontend 2 http shortdai netlify app short dai usdc dai trading premium 0 fee description dai trading premium relative usdc doe 1 loan dai dydx 2 wei fee 2 convert dai usdc curve ' susd pool using susd pool gas cost lower 3 combine existing usdc converted usdc open maker vault usdc pool 0 interest writing 4 loan dai maker usdc pool 5 payback loan dai back peg 1 loan dai dydx 2 wei fee 2 convert dai usdc curve ' susd pool using susd pool gas cost lower 3 use existing usdc free dai maker usdc vault 4 payback loan 5 retrieve usdc address openshortdai 0x13b70f58f8e7fce3811401ff65d2df33ad5dc61d http etherscan io address 0x13b70f58f8e7fce3811401ff65d2df33ad5dc61d closeshortdai 0x41624f34142c181bd3bedd95867b62ac94b4c265 http etherscan io address 0x41624f34142c181bd3bedd95867b62ac94b4c265 shortdaiactions 0x0728e0023699186d5693bb8e7e762b9972b3852e http etherscan io address 0x0728e0023699186d5693bb8e7e762b9972b3852e vaultstats 0x5101ae0715fc5b0fcd33c574a15d0047a8f6e1a1 http etherscan io address 0x5101ae0715fc5b0fcd33c574a15d0047a8f6e1a1
/viaMover/smart-contracts,Solidity,http cdn image 1 medium com max 1600 1 ybk2kxe95 di 5tzv0 yqq png mover defi primitive made easy new deployed contract contract currently used mover v2 holypassage http etherscan io address 0x39ac24fd08991b1d69a9ef7189bc718c988ff5b3 migration bonus token claim contract holyvisor http etherscan io address 0x636356f857f89af15cb67735b68b9b673b5cda6c bonus multiplier oracle contract holyhand http etherscan io address 0x1ef7a557cfa8436ee08790e3f2b190b8937fda0e central token transfer proxy contract holywing http etherscan io address 0xd5b3230ea9bf7bad9541f8564fa2fa72b350427b token exchange proxy contract holypool http etherscan io address 0xaf985437dca19deff89e61f83cd526b272523719 asset pool contract holyvalor http etherscan io address 0xaf985437dca19deff89e61f83cd526b272523719 fund managing strategy contract holyredeemer http etherscan io address 0x496599b4de503d5c5c11882501af64d04025c6dd yield harvesting distributor contract smarttreasury http etherscan io address 0x94f748bfd1483750a7df01acd993213ab64c960f musdc smart treasury management contract arbitrum contract transferproxyv4 http arbiscan io address 0x34082fa0229979ffd8e6c327ce462ed6d619f9a2 central token transfer proxy v4 arb contract exchangeproxy http arbiscan io address 0x4632f0a161216fda13f4bece327516cc9c5357d0 token exchange proxy contract avalanche contract transferproxyv4 http snowtrace io address 0x4632f0a161216fda13f4bece327516cc9c5357d0 central token transfer proxy v4 avax contract exchangeproxy http snowtrace io address 0x988e42ea28b2692431d2b4c642934e23e698bbe1 token exchange proxy contract bsc contract transferproxyv4 http bscscan com address 0x34082fa0229979ffd8e6c327ce462ed6d619f9a2 central token transfer proxy v4 bsc contract exchangeproxy http bscscan com address 0x4632f0a161216fda13f4bece327516cc9c5357d0 token exchange proxy contract fantom contract transferproxyv4 http ftmscan com address 0xfdb9b2a9e3a94be3bd134f6066065cccea89926b central token transfer proxy v4 ftm contract exchangeproxy http ftmscan com address 0xa562f47748915251a6b68d5f05a4f72a788fc3b6 token exchange proxy contract assetpool http ftmscan com address 0xda90ab57fff622ab3398ad753ce2a10c36f548c5 asset pool fantom saving assetpoolrelay http ftmscan com address 0xca33234dc69c975386c486e5bd0b845c92af9589 relayer holder bridged token operation optimism contract transferproxyv4 http optimistic etherscan io address 0x34082fa0229979ffd8e6c327ce462ed6d619f9a2 central token transfer proxy v4 opt contract exchangeproxy http optimistic etherscan io address 0x4632f0a161216fda13f4bece327516cc9c5357d0 token exchange proxy contract polygon contract transferproxyv4 http polygonscan com address 0x568f6dc40b2520522dc4745d881c990e57672d94 central token transfer proxy v4 poly contract exchangeproxy http polygonscan com address 0xf8f9ddd008529f2282719b31651f59cea8c46fef token exchange proxy contract assetpool http polygonscan com address 0x77d5333d97a092ca01a783468e53e550c379dc3c asset pool polygon saving assetpoolrelay http polygonscan com address 0x739e0658f9feafc11365507ed97271a579e25bc0 relayer holder bridged token operation yielddistributor http polygonscan com address 0x7eef1ef2c2fdec9911b196e5d6bc6ecedd42c039 yield distribution contract strategypolygonmeshswapusdt http polygonscan com address 0xca33913c9c553e5c165e0413e0278bf03afa5cce saving strategy allocation meshswap strategypolygonbeefymaiusdt http polygonscan com address 0x3542500537465563ba6b49383eb10732bf9ec31a saving strategy allocation beefy vault ubt related contract strategypolygonbeefymaiusdt http polygonscan com address 0x2784c71d7f406232bce50a724c64c7104fa516d8 mover ubt nft ' polygon moverubtstakepool http etherscan io address 0x1f15f293c1cd3d05d58d3edeaf0c72c5a2dfeaff mover ubt staking pool mover staking node baseledger moverubtstakepool http etherscan io address 0xd39f523ee00aef6b75b76fecce36a8c09ee77b88 baseledger1f9tgkttrac95crk8862f646ckyvqcryfht9ktp moverubtstakepool http etherscan io address 0x88e7e1b3ec590512dcd8c8dbc1b8bd4cb15f1ee8 baseledger15p4mfuwjsfzu5k79r2uculhsm5g89w62mkqcy2 moverubtstakepool http etherscan io address 0xb494c12dee7bd77f27ad476f9709e54f1b410450 baseledger1f2t2g0tqkqpn7kwwp55v0cf4s3xgvgn8k7fa0h moverubtstakepool http etherscan io address 0x3f1256afbfae473f17f07c17b1ec0c9f0326fb49 baseledger19nekz80crxl9k89akf7h5hvhkq7337ynu55qmf moverubtstakepool http etherscan io address 0xd5f911a64156e5b79239d8ef76baa1c2f1991526 baseledger1u345rkefwu7ael45d4ws93jrquf04zk3k8kvmw nft contract unexpectedmove http etherscan io address 0x0769747d4cac06bc2320e0bb1efb31d53fa0aaa1 unexpected move movernft1 nft contract sweetandsour http etherscan io address 0x129b9083a9f02aed65e31644a8103d5aa2c73701 sweet sour sa nft contract olympusnft http etherscan io address 0x2733a766d2d79d26b2d23343db5bf38290f67f22 moving olympus nft give extra card skin dicenft http etherscan io address 0xb75acece1f77fe7059cfff8ef76f73b7e999edd2 interactive dice nft see diceproject org vaultnft http etherscan io address 0x0b7438606a13f4e91305b36b7596dda4679689e3 vault nft loot nft inspired rpg financial vault ceocapnft http etherscan io address 0x802630d770df0296ef4ae17d146172e5eb69ef70 ceo money redeemable cap nft ogtshirtnft http etherscan io address 0x6e0c982c05b6fb0d7465476ddef7b1b7cbe26fcb og redeemable shirt nft previously deployed contract contract deployed previously longer use holytoken http etherscan io token 0x39eae99e685906ff1c11a962a743440d0a1a6e09 holyheld token holyknight http etherscan io address 0x5d33de3e540b289f9340d059907ed648c9e7aadd holy knight contract manage lp staking holdertvllock http etherscan io address 0xe292dc1095b96809913bc00ff06d95fdffaae43a holder contract team token vested weekly tvl value time high condition holdertimelock http etherscan io address 0x0b713c0e7eeb43fcd7795c03ba64ea6a6f0e11ea holder contract reserve token trade mining launch holdervesting http etherscan io address 0x6074aabb7ea337403dc9dff4217fe7d533b5e459 holder contract operation vested 1 year attribution much codebase used previously deployed contract longer use modified existing work including compound http compound finance jumping point token code governance synthetix http synthetix io reward staking contract yearn http yearn finance yfi http ygov finance initial fair distribution implementation developer note version truffle truffle upgrade openzeppelin contract etc package json lock file version changing timeframe project development e g openzeppelin erc20upgradeable contract wa patched manually name symbol missed ' virtual ' specifier wa added version 3 4 exist one contract wa created repository solidity compiler version wa set 0 8 0 recent openzeppelin contract upgradeable release recommended use updated version package keep migration contract list manageable across chain keep separated truffle project repo remain concise provided respective directory
/mstable/mStable-subgraph,TypeScript,deprecated repo ha deprecated favour mstable subgraphs monorepo http github com mstable mstable subgraphs monorepo mstable subgraph subgraph mstable contract http github com mstable mstable contract graph http thegraph com setup prerequisite first ensure installed ganache http www trufflesuite com ganache truffle http www trufflesuite com truffle docker http doc docker com install next ensure docker daemon running clone graph node project http github com graphprotocol graph node locally navigate docker directory project e g cd graph node docker ' linux run setup sh directory set host ip address docker config point possible run node docker compose check service running log graphql postgres ipfs finally run ganache http 0 0 0 0 7545 available running docker image ganache cli p 7545 h 0 0 0 0 installation 1 yarn 2 yarn prepare config e ropsten kovan local staging mainnet 3 yarn codegen development firstly subgraph created running yarn create local lead number log graph node subgraph ha created deployed time yarn deploy local cause graph start processing block mapping event eventually subgraph created change made contract subgraph yaml graphql schema run yarn codegen create generated folder nb type checking performed build time yarn tsc ' work deployment 1 yarn 2 ensure correct config config config json 3 yarn prepare config 4 yarn codegen 5 yarn deploy config access token
/airswap/airswap-about,JavaScript,welcome discord http img shield io discord 590643190281928738 svg http chat airswap io twitter follow http img shield io twitter follow airswap style social subreddit subscriber http img shield io reddit subreddit subscriber airswap style social github star http img shield io github star airswap airswap protocol style social airswap http www airswap io open developer community focused decentralized trading system airswap technology power peer peer network using de facto standard rfq technology protocol md last look technology protocol md protocol making top choice traditional market maker entering decentralized financial system vision future form value represented digital asset flow freely reliably among people community around world mission become standard peer peer trading system fundamental primitive decentralized economy technology airswap curate peer peer network trading digital asset novel design protects trader counterparty risk price slippage front running market participant discover others trade directly peer peer using combination web protocol smart contract airswap technology open source code found github http github com airswap benefit core airswap enables two party perform atomic swap transaction side succeed entire transaction reverts transaction trustless way neither party need trust one another complete swap key coin airswap non custodial without deposit escrow every transaction peer peer counterparty risk intermediating participant infrastructure beyond ethereum competitive efficient trading firm provide liquidity via airswap competitive price hedge centralized exchange since peer peer price see price get without slippage front running price manipulation zero limitation swap two party two token smart contract mean standardized digital asset swapped custom price size matter swap settlement cheap efficient protocol protocol level swap two party signer sender signer party creates cryptographically sign order sender party sends order ethereum blockchain settlement request quote technology protocol md rfq automated request response protocol market maker running web server client request order via json rpc websocket last look technology protocol md automated streaming protocol allows market maker stream pricing client via json rpc websocket turn submit order server settlement counter http trader airswap io otc trading known counterparties via chat application email using airswap settlement largest trade http etherscan io tx 0x346a9f45c70d4f323c67fd0f348b2a8aaa7477a719557c27a8130c8873279d3b defi made airswap otc application several application available end user airswap web http www airswap io new open source web app instant swap airswap otc http trader airswap io industry standard otc interface large bespoke swap airswap cli http github com airswap airswap cli command line interface interact airswap network several dex aggregator market maker implemented airswap metamask swap http metamask io swap html swap directly metamask wallet browser extension market maker activity tracked dune dashboard http dune xyz query 28752 57978 analytics see airswap dashboard dune http dune com agrimony airswap v2 latest trading network community stats community airswap community asset held token holder operating open project transparent decision making product development process network technology contributor community aim maximally decentralized community member stake airswap token ast participate governance community activity benefit ideating drafting voting accepting proposal open process value quality craft software system thoughtful elegant secure envision create best form protocol product deliver transparency decision made open contribution open source new information continuously actively shared throughout inclusion contribution opportunity accessible inclusive every community member treated fairly rewarded consistently automation strive run organizational process execute relevant task entirely automatically using trustless transparent tool token airswap launched airswap token ast october 10th 2017 http medium com fluidity airswap token launch report fbd04b748eb1 original peer peer swap network token initially enabled trader announce availability today also function way contributor participate governance development ast give holder opportunity work commensurate holding opportunity earn commensurate contribution fundamentally requires active participation ast gateway joining contributing airswap community read community voted token treasury plan http github com airswap airswap aips issue 10 voter guide activity voting md governance generate new idea direction project cultivate transparency use process called airswap improvement proposal aip community proposal md aips give community way finalize proposal core contributor ongoing basis information see aip 1 http github com airswap airswap aips issue 1 check active proposal http github com airswap aips community capture selects prioritizes new project aip ratified calling vote accepted token holder community voting held codefi activate http activate codefi network staking airswap governance participate governance see voter activity voting md guide vote completed proposal considered finalized placed backlog selection contributor based requirement feasibility contributor may accept proposal prioritization implementation history airswap launched october 10th 2017 http medium com fluidity airswap token launch report fbd04b748eb1 year new product upgrade continuously published enable popularize benefit trading digital asset using decentralized protocol see year review 2018 http medium com fluidity 2018 year review d7f5cb0e5d76 2019 http medium com fluidity 2019 year review 6b40035e6edb airswap roadmap http medium com fluidity airswap roadmap 1c1a3c3b20d3 november 16th 2017 airswap http medium com fluidity airswap c83c001d5bbe april 25 2018 space http medium com fluidity space a36fa6753474 october 10 2018 airswap instant 2 0 http medium com fluidity airswap instant 2 0 d10906447838 april 26 2019 airswap trader http medium com fluidity introducing airswap trader 63a0ef9e67c0 august 6 2019 airswap delegate http medium com fluidity introducing airswap delegate 1c3db83be1db february 4 2020 phase ii kickoff http twitter com airswap status 1346542008345747457 transition complete http twitter com airswap status 1359190898110853122 2021 achieved initial goal delivered technology roadmap airswap open project community contributor pursue initiative continue develop grow network airswap recognized st louis fed leading peer peer trading protocol http research stlouisfed org publication review 2021 02 05 decentralized finance blockchain smart contract based financial market mit technology review protocol built survive http www technologyreview com 2018 02 22 145100 cryptocurrency bubble pop token built survive stanford journal blockchain law policy http stanford jblp pubpub org pub deconstructing dex release 1 trust machine 2018 film blockchain industry http www imdb com title tt7407496 used first ever peer peer swap tokenized security http tokenist com airswap facilitates first compliant security token transfer public blockchain rated 1 security among decentralized exchange dex http icorating com pdf 65 1 pnn3xh96srwtss1ymnn2msw805ii3md7uwkymrpa pdf founding member wrapped bitcoin wbtc represent bitcoin ethereum http www bitgo com newsroom press release wbtc brings bitcoin ethereum active ethereum community champion technology http medium com fluidity airswap devcon 5 43adcf758ba8 explore airswap discord server http chat airswap io airswap voting portal http activate codefi network staking airswap governance airswap twitter http twitter com airswap
/sunnyRK/ethonline-submission,Solidity,instcryp automated nft marketplace instcryp creates nft marketplace using different lego defi blockchian like 1 loss crypto saving platform win interest nft 2 different yield stratergy compound aave yearn nft 3 chainlink alarm clock vrf support defi automation randomness nft 4 developed piggbank protocol nft yield farming like sushiswap video demo http youtu xmwb3mf4c q aave compound yearn chainlink screenshots instcryp png http youtu xmwb3mf4c q instcryp participate instcryp 1 automatic instcryp pod pod created admin predefined time user come pod deposit token pod earn interest user crypto token lending protocol user come platform initially deposit dai usdc token pod credit user get stablecoin backed participant nfts pod deposit token lending protocol earn interest predefined time completes chainlink alarm clock verifies stop operation pod declare winner automatically using chainlink vrf among particiapants pod create interest nft winnig prize backed generated interest send pod winner 2 nft yield farming time piggybank whatever nfts generate instcryp pod smart contract transfer participant interest nfts piggybank piggybank yield famring protocol like sushiswap platform deposit nfts piggybank generate piggy token backed nfts reward even someone ' win prize pool could collect participation nfts amass certain number say 10 could earn piggy token backed nfts platform even interest nfts also use earn reward piggy nfts using piggybank nfts every nfts backed different amount stablecoin token b collection nfts platform measure user ' engagement platform c user ' measurement platform maintain future reward distribution plan governance change protocol use compound governance smart contract used decide change stratergy protocol like winning starteregy yield stratergy farming startergy block per reward startergy etc feature 1 single winner multiple winner startergy 2 yield startergy compound aave yearn 3 governance 4 yield farming like sushiswap 5 redeem single nft redeem nfts stablecoin run 1 clone repo http github com sunnyrk ethonline submission git 2 cd ethonline submission 3 npm install 4 node server j 5 currently deployed kovan network screenshots guideline 1 create pod contract owner createpod screenshots s1 png 2 join pod user stablecoin user get stablelcoin backed nfts createpod screenshots s2 png 3 joining pod metamask createpod screenshots s3 png 4 see live interest generating lending protocol timer running createpod screenshots s4 png 5 aftre depositing stablecoin user get stablecoin backed nfts createpod screenshots s5 png 6 see left side last pod finised amount disbursed winner address interest nft createpod screenshots s6 png 7 see interest nft winner prize winner createpod screenshots s7 png 8 pod finished smart contract automatically transfer nfts fund piggybank contract yield farming like sudhiswap generate piggyt token nfts every block even someone ' win prize pool could collect participation nfts amass certain number say 10 could earn piggy token backed nfts platform createpod screenshots s8 png tech stack 1 compound aave yearn chainlink alarm clock chainlink vrf nfts ethereum react j
/ubiquity/ubiquity-dollar,TypeScript,ubiquity dollar introducing flagship product ubiquity dao http ubq fi ubiquity ' algorithmic dollar uad algorithmic stablecoin maintains peg virtue monetary fiscal policy deployed smart contract found doc http dao ubq fi smart contract ubiquity dollar logo http user image githubusercontent com 4975670 153777249 527395c0 0c52 4731 8b0a 77b7885fafda png installation bash usr bin env bash ubiquity dollar installer git clone http github com ubiquity ubiquity dollar git yarn yarn start localhost 3000 http localhost 3000 committing code 1 automatically enforce http github com conventional changelog commitlint conventional commits http www conventionalcommits org en v1 0 0 format commit message frustrating junior developer promise ' quickly get used conventional commits specification lightweight convention top commit message provides easy set rule creating explicit commit history make easier write automated tool top 2 use prettier http github com prettier prettier eslint http github com eslint eslint staged file http github com okonet lint staged order enforce uniform code style please circumvent rule else technical debt may generate quickly metamask development wallet setup network setting make sure using following network configuration 31337 chain id hardhat network http 127 0 0 1 8545 rpc endpoint hardhat network shared private key hardhat developer know key key derived test test test test test test test test test test test junk mnemonic hardhat doc send asset value wallet 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d 0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a 0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6 0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a 0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba ubiquity dollar contract setup section ubiquity dollar core protocol smart contract ubiquistick nft ui related code need create env file inside contract folder least api key alchemy mnemonic filled indeed mnemonic used deploy locally first account admin smart contract run faucet get token address need uad manager address find output yarn start bash eth address enter address uad manager address enter address yarn hardhat network localhost faucet receiver eth address manager uad manager address sine stabilitate nihil habemus
/byteball/odex-frontend,JavaScript,odex decentralized exchange front end odex decentralized exchange hybrid decentralized exchange aim bringing together ease use centralized exchange along security privacy feature decentralized exchange order matched chain orderbook order matched signed decentralized exchange operator matcher ha sole ability perform transaction autonomous agent provides best ux exchange operator party interact directly dag exchange user simply sign order broadcasted orderbook design enables user queue cancel order seamlessly several matcher operate exchange based odex technology time share orderbooks exchange new order among thus improving liquidity odex exchange order submitted odex exchange however matched maker taker order indicate matcher exchange wa used submit order serf affliate charge fee user anyone become matcher affiliate watch order exchanged among matcher detect possible misbehavior matcher installation git clone http github com byteball odex frontend cd odex frontend yarn copy appropriate env xxxx file env edit necessary reflect domain name start frontend development environment yarn start deploy production livenet testnet frontend yarn sas yarn build build static file put build folder set folder web root nginx see example nginx vertual host config blob develop nginx conf contribution thank considering helping odex project accept contribution anyone grateful even smallest fix want help odex please fork setup development environment appropriate repository case want submit substantial change please get touch development team defi project channel obyte discord http discord obyte org verify modification line general goal project receive early feedback otherwise welcome fix commit send pull request maintainer review merge main code base please make sure contribution adhere coding guideline code must adhere much possible standard convention dry separation concern modular pull request need based opened master branch commit message properly describe code modified ensure test passing submitting pull request contact question idea suggestion reach development team defi project channel obyte discord http discord obyte org credit odex frontend based amp exchange http github com proofsuite amp client beautiful easy use decentralized exchange license code repository licensed mit license also included license file
/AlgoNetwork/UniInch,CSS,img src http github com algonetwork uniinch blob main logo png raw true uniinch uniinch defi exchange price aggregator help swap trading best price br support blockchain br polygon br avalanche br fantom br binance br add add support chain br http algonetwork github io uniinch img src http github com algonetwork uniinch raw main preview png br img src http github com algonetwork uniinch raw main preview2 png buy cryptocurrency http www mimi exchange token airdop http github com algonetwork bee sender v2
/Synthetixio/optimistic-trader,JavaScript,optimistic trader 1 clone repo 1 create env file private key followed private key include 0x 1 tinker code 1 run npm start extracting private key site private key use export account button copy url image http user image githubusercontent com 799038 81026229 5d751d80 8e47 11ea 87fe b22d07988f0f png take url use see private key locally javascript const exportlink ' paste export account ' console log &#9; ' private key ' &#9; ether wallet frommnemonic exportlink match account 1 replace g ' ' privatekey
/Open-C/CeloHub,TypeScript,celohub portal celo ecosystem find mobile apps developer tool educational resource celohub org http celohub org
/opz/DALP-frontend,JavaScript,dalp frontend run locally yarn install yarn start project structure web3 web3 related item available wallet j provider using react context api importing component import following variable wallet context dalpmanager dalpmanager contract dalptoken dalp contract wallet web3 provider account current metamask account import react usecontext react import walletcontext provider wallet const dalpmanager dalptoken account usecontext walletcontext calling contract method contract method called await dalptoken method balanceof account call
/idecentralize-finance/pulsar,JavaScript,pulsar pulsar contract let execute custom call blockchain let make use flasloans trading sequence need deploy contract since use polygon gas execute operation cheap use pulsar trading bot well install clone repo run npm install directly npm install npm idecentralize pulsar installed edit rename env example file env make sure never share file created demo1 call validate call call require 1 dai 1 5 matic make 1000 dai loan repay back cost 0 90 dai loan fee charge aave 1 matic sent msg value pay make successful trade fund wallet run demo1 also make custom call please open issue run one
/AnshuJalan/box-defi,Python,box defi box defi http box defi vercel app present defi farming gamified way tezos blockchain aligns incentive fun gamification using combination concept like liquidity pool semi fungible token flash loan low risk playing model feature box pool player lock kusd token receive seed token represent share liquidity pool seed token used unlock back kusd share locked box farm seed token received box pool planted magical box box farm planted seed must watered every watering period fully grown fruit fruit semi fungible token farmed box farm 5 different fruit varying rarity farmed fruit generated randomly revealed fully grown plant harvested de seeding fruit deseeded original seed token used farm fruit retrieved dapp fruit token get burnt seed token credited wallet player fruit wizard fruit wizard turn combination le rare fruit rarer one original set le rare fruit token burnt newly generated rare fruit given player flash loan box pool expose flash loan system used retrieve loan kusd returned 1 fee block note relevant instruction regarding gameplay listed website box defi vercel app http box defi vercel app crypto economics mechanic box defi creates gameplay environment highly risk free incentivised provided player play right starting kusd stablecoin deposit box pool generation possibly selling secondary fruit token hierarchy item related game circulation minimum risk free value free floating rate depending market seed token always exchanged underlying kusd stablecoin chosen prevent intense price fluctuation seed volatile secondary market additionally flash loan system incentivises large deposit pool fee accumulate time provide decent return unlocking liqudity burning seed fruit token de seeded original seed token could retrieved back thereby giving fruit minimum exchange value since token free floating value minimum price theoretically rarer fruit could selling higher price le rarer one secondary market incentivises user generate fruit higher rarity index using fruit wizard burnt fruit token ensure underlying seed cannot retrieved thus associated kusd liquidity permanently locked box pool promotes flash loan usage accumulation fee pool repo structure contract smart contract running box defi written smartpy dapp front end interact box defi system deploy helper script deploy box defi contract indexer box farm tracking indexer relevent link demo video http youtu zpnl 2udktc website http box defi vercel app deployed contract seed token kt1hgnudtkv1xgqgrupt3in2usu7psuzjf13 http hangzhou2net tzkt io kt1hgnudtkv1xgqgrupt3in2usu7psuzjf13 test kusd token kt1wm5foguzu2tvc6wgxzptumdcvz6hi9n7v http hangzhou2net tzkt io kt1wm5foguzu2tvc6wgxzptumdcvz6hi9n7v faucet kt1g2a32hjhhvom3j629fcolmwu3h7nrh9rd http hangzhou2net tzkt io kt1g2a32hjhhvom3j629fcolmwu3h7nrh9rd fruit token kt1mbelr7ivwzrx58lqcvqqp3ycnpb7rtqwm http hangzhou2net tzkt io kt1mbelr7ivwzrx58lqcvqqp3ycnpb7rtqwm box pool kt1eqdgnz4euzfbgcuuuebc8w4zq9qmrkfta http hangzhou2net tzkt io kt1eqdgnz4euzfbgcuuuebc8w4zq9qmrkfta box farm kt19qztze2pdbfwucqnugzmvambneaawcjq4 http hangzhou2net tzkt io kt19qztze2pdbfwucqnugzmvambneaawcjq4 task breakdown x paper designing x smart contract x unit testing contract x deployment system x art ui design x front end component x indexing system x connection front end contract x ui polishing
/alpdogan/gold-dicker,JavaScript,gold dicker install npm install run node tokenholdings j 0x j injection alt text http raw githubusercontent com alpdogan gold dicker main javascript injector png happy hacking
/dehidehidehi/impermax_to_csv,Python,doc imgs impermax title png effortlessly keep track 250 ever changing apy rate project affiliated impermax official release constantly identifying best apys impermax pain tool allows effortlessly compare best apys 250 unique token supply borrow apys 125 pair unique leveraged lp apys 6 blockchains eth matic arb avax moonriver ftm feature fetching live data 7 day average create python file following code run detailed instruction provided page python src impermax impermax csv import main enable logging name ' main ' enable logging main console output look something like doc imgs console output png data location may find example csv file generated script target csv directory feature plotting supply apr time little code snippet need generate chart specified stablecoin apr time even automatically detects variant usdc e dai e etc read see kind data fetch plot doc imgs plotting example 1 png python src impermax repository csv csv repository import csvrepository src impermax plot apr import plot repo csvrepository r repo find ticker ' usdc ' ' dai ' ' usdt ' ' mai ' ' mim ' plot repository data r bonus feature google sheet dedicated google sheet template linked directly paste data make copy http doc google com spreadsheet 13dkbapx0wsgnpdedprntfrgf qchmh4m1s5sufsako4 filter used stablecoins supply greater 100k usd available blockchains descending order comment dai usdc dai pair sushiswap matic chain ha best supply apr followed usdc e usdc e usdt e pair traderjoe avalanche chain doc imgs impermax example usage png installation requirement python 3 9 must installed http www python org downloads release python 390 git installed http git scm com downloads first time installation instruction create new folder cd terminal copy paste command note devs course run venv instead console git clone http github com dehidehidehi impermax csv git console cd impermax csv python setup py install retrieve live data impermax create new python file following content could desktop start impermax csv py python src impermax impermax csv import main enable logging name ' main ' enable logging main finally run python script commandline python start impermax csv py detailed usage data plotting feature python src impermax repository csv csv repository import csvrepository src impermax plot apr import plot src impermax common enums data column enum import plottablecolumns step 1 specify data want fetch data csv file created target csv many way retrieve specific subset data see different method repo csvrepository return data r repo find return data similar ticker case would return data imx imx e imx etc r repo find ticker imx return data multiple similar ticker r repo find ticker imx usdc return data imx pair r repo find ticker strict imx return data imx usdc pair r repo find ticker strict imx usdc example return data ethereum imx eth uniswap contract r repo find contract 0xa00d47b4b304792eb07b09233467b690db847c91 return data multiple contract address r repo find contract 0xa00d47b4b304792eb07b09233467b690db847c91 ethereum imx eth uniswap 0x8ce3bf56767dd87e87487f3fae63e557b821ea32 polygon imx weth quickswap step 2 chose plot select available option enum plot plottablecolumns supply apr plot plottablecolumns borrowed apr plot plottablecolumns borrowed plot plottablecolumns supply step 3 nothing plot repository data r data plot plot docker compose getting webscraper running couple click command docker regardless operating system docker first cd root repository local machine cd change path root repo run webscraper docker compose copy generated csv data file container local host docker compose cp impermax webscraper usr src app target csv target tip hey tool save ton time hopefully even money tip appreciated 0xcb6c86b53da5a1316ae6ba773a72bc4d0db4c021 eth mainnet avalanche polygon preferred chain let know feedback via discord dehidehi 8605 twitter dehikupo forking development fork improvement app must open source well gpl 3 0 license
/xdefilab/xhalflife-base,Solidity,xhalflife base xhalflifelinear linear decaying money stream protocol xhalflifelinear ha 4 parameter money streaming recipient address towards money streamed depositamount amount money streamed startblock stream start block stopblock stream end block xhalflifelinear inspired sablier protocol xhalflife exponentially decaying money stream protocol xhalflife protocol ha 4 parameter execution numstart k ratio eps protocol user ' reward split 2 part text deferred income text earned income new income enters text deferred income account numstart ethereum mainnet block time block number divided k asset text deferred income balance eps ratio cdot text deferred income text deferred income balance forwarded text earned income account needed asset text earned income free withdraw 50 single cashflow xhalflife free withdraw k log 2 1 ratio 13 1 since time ethereum mainnet block height numstart money stream template wish template money stream become one backbone standard crypto financing world detail refer yellowpaper xhalflife xvote xdex token farmed xdex voting pool ordinary farming pool founder team ' fund income rewarded xhalflife protocol
/gysr-io/core,JavaScript,gysr core repository contains solidity contract gysr core procotol including modular pool factory system token information project whitepapers audit resource see gysr io http www gysr io install use core contract interface library abis project npm install gysr core see documentation http doc gysr io developer learn interacting gysr protocol development node j npm required package management testing see instruction installation http doc npmjs com downloading installing node j npm project us openzeppelin http doc openzeppelin com truffle http www trufflesuite com doc truffle development testing deployment install package along dependency npm install test run unit test npm test run subset test npx truffle compile npx mocha exit recursive grep erc20competitiverewardmodule deploy copy env template env define infura key deployer index treasury address variable deploy gysr token kovan npx truffle migrate network kovan f 1 1 gysr token deployed define gysr address variable env file deploy factory contract kovan npx truffle migrate network kovan f 2 2 factory deployed define factory address variable env file deploy erc20 staking module factory kovan npx truffle migrate network kovan f 3 3 deploy erc20 competitive reward module factory kovan npx truffle migrate network kovan f 4 4 follow remaining migration step deploy contract library
/TokenBrice/blog,HTML,tokenbrice xyz blog respecting privacy made blog callout ' dev barely code yet wa able respect reader ' privacy unprecedented level space generator hugo http img shield io badge generator 20is hugo ff4088 logo hugo http github com gohugoio hugo theme meme http img shield io badge theme 20is meme 2a6df4 logo meme http github com reuixiy hugo theme meme source github http img shield io badge source 20on github 181717 logo github http github com tokenbrice blog hosted ipfs http img shield io badge hosted 20on ipfs 65c2cb logo ipfs http ipfs io tokenbrice xyz relies open source framework solution hugo rendering blog matomo privacy conscious analytics interested blog implement full ip anonymisation cooky non propagation compliance cnil guideline http www cnil fr site default file typo document configuration piwik pdf independent french ' administrative body acting privacy watchdog tokenbrice xyz also replicated ipfs http ipfs io ' entirely happy infrastructure yet think ' significant progress compared existing website tokenbrice xyz infrastructure overview http github com tokenbrice blog blob master static img 2020 hello world infrastructure png info http tokenbrice xyz post 2020 hello world build run sh yarn install yarn run build build module javascript page generate main j static j hugo allow use main j hugo send static j main j public yarn run optimize optimize image public img add filter need add filter follow procedure open data filter json add filter add value fr en fr tag value key newkey name french name translation en tag value key newkey name english name translation add newkey data medium json tag newkey name post name host host name link link medium date date finally compile new main j using yarn run build local yarn run build production add new filter category filter composed name class array value object edit data filter json add new filter category fr newcategory name nouvelle categorie class categoryclass value en newcategory name new category class categoryclass value need add key category add style src j app vue export default data return selectedfilters newcategory style categoryclass cssrules style follow using yarn run build new category visible clear web browser cache
/strykerin/Uniswap-dotnet,C#,uniswap dotnet nuget version defipulse http img shield io nuget v uniswap dotnet svg http www nuget org package uniswap dotnet nuget downloads http img shield io nuget dt uniswap dotnet svg dotnet standard wrapper uniswap v2 subgraph graph graphql api uniswap subgraph found http thegraph com explorer subgraph uniswap uniswap v2 installation available nuget http www nuget org package uniswap dotnet powershell install package uniswap dotnet version 1 0 0 register service di container order use package simply add configureservices method startup c class csharp service adduniswap usage access uniswap service simply get constructor injection csharp private readonly iuniswap uniswap public weatherforecastcontroller iuniswap uniswap uniswap uniswap example get liquid market pair following example show get liquid market pair csharp pool pool await uniswap getmostliquidmarketpairs get following json response json pair reserveeth 0 000000000000000282 reserveusd 0 00000000000009764515173366604499968328796917891 token0 symbol hore token1 symbol weth reserveeth 0 000367774762347336 reserveusd 0 1469467966437433309224845826987036 token0 symbol datcx token1 symbol weth
/realnimish/polkadot-amm,JavaScript,tutorial link create amm polkadot using ink tutorial md description tutorial guide developer build automated market maker amm dapp substrate based chain contract pallet support explain internal working amm develop one using ink rust based embedded domain specific language edsl deploy public testnet jupiter a1 patract using http polkadot j org apps also illustrate integrate smart contract react application using polkadot j module polkadot j browser extension amm following feature provide withdraw swap also support trading fee incentivize liquidity provider add liquidity slippage tolerance protect trader market fluctuation keep thing simple amm ' implement routing hence deal two token time amm maintain internal mapping store balance account instead dealing external token
/sambacha/yearn-protocol-nodejs,Solidity,copyright 2020 yearn finance contributor p align center img src http raw githubusercontent com gist sambacha 9a62174a080ead34271ff5d187a24343 raw 02cad2900f4cedb87895cc57729030e095d2869f gh banner svg align right width 350 &#9; h1 align left yearn protocol h1 h3 align center h3 p align center align center center nodejs version npm yearn finance vault 1 0 0 github license http img shield io badge license agpl blue svg http github com iearn finance yearn protocol blob master license lint http github com iearn finance yearn protocol workflow lint badge svg test http github com iearn finance yearn protocol workflow test badge svg twitter follow http img shield io twitter follow iearnfinance svg label iearnfinance style social http twitter com iearnfinance discord http img shield io discord 734804446353031319 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 734804446353031319 telegram http img shield io badge chat 20telegram blue svg http yearnfinance img alt discourse user src http img shield io discourse user server http 3a 2f 2fgov yearn finance 2f yearn protocol set ethereum smart contract focused creating simple way generate high risk adjusted return depositor various asset via best class lending protocol liquidity pool community made yield farming strategy ethereum getting started repo please read andre ' overview blog post http medium com iearn yearn finance v2 af2c6a6a3613 describing yearn finance work delegated vault blog post http medium com iearn delegated vault explained fa81f1c3fce2 explaining delegated vault work yeth vault explained http medium com iearn yeth vault explained c29d6b93a371 describing yeth vault work requirement run project need python 3 8 local development environment node j 10 x development environment ganache brownie local environment setup see instruction eth brownie http github com eth brownie brownie local env variable etherscan api http etherscan io apis infura http infura io etherscan token web3 infura project id local ganache environment installed npm install g ganache cli 6 11 resource yearn finance http yearn finance ethereum token list http tokenlists org http github com uniswap token list http github com uniswap token list semantic versioning http github com uniswap token list blob master readme md semantic versioning deployed contract registry list relevant smart contract github repository using interacting yearn product suite token contract yfi yearn ecosystem controlled yfi token holder submit vote proposal govern ecosystem token address yfi http etherscan io token 0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e 0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e v2 yield token v2 yield token used one lender time currently used curve pool yearns ybtc pool susd pool token address github ydaiv2 http etherscan io address 0x16de59092dae5ccf4a1e6439d611fd0653f0bd01 0x16de59092dae5ccf4a1e6439d611fd0653f0bd01 ydaiv2 sol http github com yearn itoken blob master contract ydaiv2 sol yusdcv2 http etherscan io address 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e 0xd6ad7a6750a7593e092a9b218d66c0a814a3436e yusdcv2 sol http github com yearn itoken blob master contract yusdcv2 sol yusdtv2 http etherscan io address 0x83f798e925bcd4017eb265844fddabb448f1707d 0x83f798e925bcd4017eb265844fddabb448f1707d yusdtv2 sol http github com yearn itoken blob master contract yusdtv2 sol ysusdv2 http etherscan io address 0xf61718057901f84c4eec4339ef8f0d86d2b45600 0xf61718057901f84c4eec4339ef8f0d86d2b45600 ysusdv2 sol http github com yearn itoken blob master contract ysusdv2 sol ytusdv2 http etherscan io address 0x73a052500105205d34daf004eab301916da8190f 0x73a052500105205d34daf004eab301916da8190f ytusdv2 sol http github com yearn itoken blob master contract ytusdv2 sol ywbtcv2 http etherscan io address 0x04aa51bbcb46541455ccf1b8bef2ebc5d3787ec9 0x04aa51bbcb46541455ccf1b8bef2ebc5d3787ec9 ywbtcv2 sol http github com yearn itoken blob master contract ywbtcv2 sol v3 yield token v3 yield token allow underlying asset spread across multiple lender currently used curve busd pool token address github ydaiv3 http etherscan io address 0xc2cb1040220768554cf699b0d863a3cd4324ce32 0xc2cb1040220768554cf699b0d863a3cd4324ce32 ydaiv3 sol http github com yearn itoken blob master contract ydaiv3 sol yusdcv3 http etherscan io address 0x26ea744e5b887e5205727f55dfbe8685e3b21951 0x26ea744e5b887e5205727f55dfbe8685e3b21951 yusdcv3 sol http github com yearn itoken blob master contract yusdcv3 sol yusdtv3 http etherscan io address 0xe6354ed5bc4b393a5aad09f21c46e101e692d447 0xe6354ed5bc4b393a5aad09f21c46e101e692d447 yusdcv3 sol http github com yearn itoken blob master contract yusdcv3 sol ybusdv3 http etherscan io address 0x04bc0ab673d88ae9dbc9da2380cb6b79c4bca9ae 0x04bc0ab673d88ae9dbc9da2380cb6b79c4bca9ae ybusdv3 sol http github com yearn itoken blob master contract ybusdv3 sol vault contract vault follow unique strategy designed maximize yield deposited asset minimize risk vault maintained controller oversees strategy execution strategy ' generated profit used buy respective vault underlying asset controller contract found http etherscan io address 0x9e65ad11b299ca0abefc2799ddb6314ef2d91080 code source code found http github com yearn yearn protocol blob develop contract controller controller sol vault vault address github weth http etherscan io address 0xe1237aa7f535b0cc33fd973d66cbf830354d16c7 0xe1237aa7f535b0cc33fd973d66cbf830354d16c7 yweth sol http github com yearn yearn protocol blob develop contract vault yweth sol yfi http etherscan io address 0xba2e7fed597fd0e3e70f5130bcdbbfe06bb94fe1 0xba2e7fed597fd0e3e70f5130bcdbbfe06bb94fe1 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol curve fi 3pool lp http etherscan io address 0x9ca85572e6a3ebf24dedd195623f188735a5179f code 0x9ca85572e6a3ebf24dedd195623f188735a5179f yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol curve fi lp http etherscan io address 0x5dbcf33d8c2e976c6b560249878e6f1491bca25c 0x5dbcf33d8c2e976c6b560249878e6f1491bca25c yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol curve fi busd lp http etherscan io address 0x2994529c0652d127b7842094103715ec5299bbed 0x2994529c0652d127b7842094103715ec5299bbed yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol curve fi sbtc lp http etherscan io address 0x7ff566e1d69deff32a7b244ae7276b9f90e9d0f6 0x7ff566e1d69deff32a7b244ae7276b9f90e9d0f6 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol dai http etherscan io address 0xacd43e627e64355f1861cec6d3a6688b31a6f952 0xacd43e627e64355f1861cec6d3a6688b31a6f952 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol tusd http etherscan io address 0x37d19d1c4e1fa9dc47bd1ea12f742a0887eda74a 0x37d19d1c4e1fa9dc47bd1ea12f742a0887eda74a yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol usdc http etherscan io address 0x597ad1e0c13bfe8025993d9e79c69e1c0233522e 0x597ad1e0c13bfe8025993d9e79c69e1c0233522e yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol usdt http etherscan io address 0x2f08119c6f07c006695e079aafc638b8789faf18 0x2f08119c6f07c006695e079aafc638b8789faf18 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol gusd http etherscan io address 0xec0d8d3ed5477106c6d4ea27d90a60e594693c90 0xec0d8d3ed5477106c6d4ea27d90a60e594693c90 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol curve fi compound lp http etherscan io address 0x629c759d1e83efbf63d84eb3868b564d9521c129 0x629c759d1e83efbf63d84eb3868b564d9521c129 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol curve fi musd lp http etherscan io address 0x1aef73d49dedc4b1778d0706583995958dc862e6 0x1aef73d49dedc4b1778d0706583995958dc862e6 yvault sol http github com yearn yearn protocol blob develop contract vault yvault sol strategy strategy address github vault strategycurve3crvvoterproxy http etherscan io address 0xc59601f0cc49baa266891b7fc63d2d5fe097a79d 0xc59601f0cc49baa266891b7fc63d2d5fe097a79d strategycurve3crvvoterproxy sol http github com yearn yearn protocol blob develop contract strategy strategycurve3crvvoterproxy sol curve fi 3pool lp http etherscan io address 0x9ca85572e6a3ebf24dedd195623f188735a5179f strategymkrvaultdaidelegate http etherscan io address 0x932fc4fd0eee66f22f1e23fba74d7058391c0b15 0x932fc4fd0eee66f22f1e23fba74d7058391c0b15 strategymkrvaultdaidelegate sol http github com yearn yearn protocol blob develop contract strategy strategymkrvaultdaidelegate sol weth http etherscan io address 0xe1237aa7f535b0cc33fd973d66cbf830354d16c7 strategyyfigovernance http etherscan io address 0x395f93350d5102b6139abfc84a7d6ee70488797c 0x395f93350d5102b6139abfc84a7d6ee70488797c strategyyfigovernance sol http github com yearn yearn protocol blob develop contract strategy strategyyfigovernance sol yfi http etherscan io address 0xba2e7fed597fd0e3e70f5130bcdbbfe06bb94fe1 strategycurveycrvvoter http etherscan io address 0xc999fb87aca383a63d804a575396f65a55aa5ac8 0xc999fb87aca383a63d804a575396f65a55aa5ac8 strategycurveycrvvoter sol http github com yearn yearn protocol blob master contract strategy strategycurveycrvvoter sol curve fi lp http etherscan io address 0x5dbcf33d8c2e976c6b560249878e6f1491bca25c strategycurveybusd http etherscan io address 0xb15ee8e74dac2d77f9d1080b32b0f3562954aee9 0xb15ee8e74dac2d77f9d1080b32b0f3562954aee9 strategycurveybusd sol http github com yearn yearn protocol blob master contract strategy strategycurveybusd sol curve fi busd lp http etherscan io address 0x2994529c0652d127b7842094103715ec5299bbed strategycurvesbtc http etherscan io address 0x4feeaeced575239b46d70b50e13532ecb62e4ea8 0x4feeaeced575239b46d70b50e13532ecb62e4ea8 strategycurvesbtc sol http github com yearn yearn protocol blob master contract strategy strategycurvesbtc sol curve fi sbtc lp http etherscan io address 0x7ff566e1d69deff32a7b244ae7276b9f90e9d0f6 strategydaicurve http etherscan io address 0xaa880345a3147a1fc6889080401c791813ed08dc 0xaa880345a3147a1fc6889080401c791813ed08dc strategydaicurve sol http github com yearn yearn protocol blob develop contract strategy strategydaicurve sol dai http etherscan io address 0xacd43e627e64355f1861cec6d3a6688b31a6f952 strategytusdypool http etherscan io address 0xe3a711987612bfd1dafa076506f3793c78d81558 0xe3a711987612bfd1dafa076506f3793c78d81558 strategytusdypool sol http github com yearn yearn protocol blob develop contract strategy strategytusdypool sol tusd http etherscan io address 0x37d19d1c4e1fa9dc47bd1ea12f742a0887eda74a strategyusdc3pool http etherscan io address 0x4720515963a9d40ca10b1ade806c1291e6c9a86d 0x4720515963a9d40ca10b1ade806c1291e6c9a86d strategyusdc3pool sol http github com yearn yearn protocol blob develop contract strategy strategyusdc3pool sol usdc http etherscan io address 0x597ad1e0c13bfe8025993d9e79c69e1c0233522e strategyusdt3pool http etherscan io address 0xc7e437033d849474074429cbe8077c971ea2a852 0xc7e437033d849474074429cbe8077c971ea2a852 strategyusdt3pool sol http github com yearn yearn protocol blob develop contract strategy strategyusdt3pool sol usdt http etherscan io address 0x2f08119c6f07c006695e079aafc638b8789faf18 strategycurvecompoundvoterproxy http etherscan io address 0x530da5aef3c8f9ccbc75c97c182d6ee2284b643f 0x530da5aef3c8f9ccbc75c97c182d6ee2284b643f strategycurvecompoundvoterproxy sol http github com yearn yearn protocol blob develop contract strategy strategycurvecompoundvoterproxy sol curve fi compound lp http etherscan io address 0x845838df265dcd2c412a1dc9e959c7d08537f8a2 strategycurvemusdvoterproxy http etherscan io address 0xba0c07bbe9c22a1ee33fe988ea3763f21d0909a0 0xba0c07bbe9c22a1ee33fe988ea3763f21d0909a0 strategycurvemusdvoterproxy sol http github com yearn yearn protocol blob develop contract strategy strategycurvemusdvoterproxy sol curve fi musd lp http etherscan io address 0x1aef73d49dedc4b1778d0706583995958dc862e6 delegated vault contract volatile asset also participate yield farming strategy part delegated vault currently one delegated vault alink controller deposit link aave borrows stable coin usdc initial health factor loan always 4 health factor drop 4 time controller repays portion debt order maintain health factor 4 stable coin borrowed e g usdc dai usdt etc depend strategy selected controller obtaining stable coin controller deposit one yvaults identified alink vault us strategycontrollerv2 contract http etherscan io address 0x2be5d998c95de70d9a38b3d78e49751f10f9e88b code source code strategycontrollerv2 http github com yearn vault blob master contract controller strategycontrollerv2 sol strategy strategy github strategyvaultusdc http etherscan io address 0x25faca21dd2ad7edb3a027d543e617496820d8d6 0x25faca21dd2ad7edb3a027d543e617496820d8d6 strategyvaultusdc sol http github com yearn yearn protocol blob develop contract strategy strategyvaultusdc sol vault address github alink http etherscan io address 0x29e240cfd7946ba20895a7a02edb25c210f9f324 0x29e240cfd7946ba20895a7a02edb25c210f9f324 ydelegatedvault sol http github com yearn yearn protocol blob develop contract vault ydelegatedvault sol governance contract yfi holder govern yearn ecosystem eligible receive portion protocol profit therefore yfi represents right govern platform claim earnings profit obtained yearn ' product order claim profit yfi holder stake token governance contract contract status address governance staking v2 http etherscan io address 0xba37b002abafdd8e89a1995da52740bbc013d992 code live 0xba37b002abafdd8e89a1995da52740bbc013d992 yearngovernance balancer v1 http etherscan io address 0x3a22df48d84957f907e67f4313e3d43179040d6e code old 0x3a22df48d84957f907e67f4313e3d43179040d6e yearnrewards yearn v1 http etherscan io address 0x0001fb050fe7312791bf6475b96569d83f695c9f code old 0x0001fb050fe7312791bf6475b96569d83f695c9f yearnrewards balancer v1 http etherscan io address 0x033e52f513f9b98e129381c6708f9faa2dee5db5 code old 0x033e52f513f9b98e129381c6708f9faa2dee5db5 yearnrewards gov staking v1 http etherscan io address 0xb01419e74d8a2abb1bbad82925b19c36c191a701 code old 0xb01419e74d8a2abb1bbad82925b19c36c191a701 status info contract utility summary yregistry http etherscan io address 0x3ee41c098f9666ed2ea246f4d2558010e59d63a0 code vault registry single source truth active yearn vault registry allows user query active yearn vault vault metadata detail http hackmd io jdwz6bausmm vrqrp bzxw vault registry uniswaproi http etherscan io address 0xd04ca0ae1cd8085438fdd8c22a76246f315c2687 code chain uniswap pool roi calculator aproracle http etherscan io address 0x97ff4a1b787ade6b94cca95b61f79417c673331d code allows chain rate comparison compound fulcrum aave dydx uniswapapr http etherscan io address 0x4c70d89a4681b2151f56dc2c3fd751abb9ce3d95 code chain uniswap pool apr calculator calculates value eth adjusted last year iearnapr http etherscan io address 0x9cad8ab10daa9af1a9d2b878541f41b697268eec code contract chain apr decision tree compound fulcrum aave dydx iearnmanager http etherscan io address 0x318135fbd0b40d48fcef431ccdf6c7926450edfb code chain stateless execution recommendation based iearnapr aprwithpooloracle http etherscan io address 0xae8f37f0e8ad690486bfa2495113d7e94b7a7ba6 code apr used stateless recommend function used change recommended provider iearnaprwithpool http etherscan io address 0xcd5f61c392b61f440991def98ff6af07fc6900d4 code apr used stateless recommend function used change recommended provider utility contract utility address curve ' ypool http etherscan io address 0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8 code 0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8
/plasmadlt/plasma-finance-token-list,JavaScript,plasma finance token list ethereum binance smart chain bsc polygon matic mainnet p align center img src http uploads ssl webflow com 5fb23ed0d183e443d48de300 60f7ddddcdb970cf579066c8 ethereum 20and 20polygon 20full 20token 20list 202 png p http github com plasmadlt plasma finance token list blob master plasma finance token list json br using token list show token major dexs plasmaswap uniswap sushiswap quickswap pancakeswap polygon bsc ethereum chain token list http tokenlists org add token plasma token list 1 press fork top right corner wait process complete git clone http github com plasmadlt plasma finance token list 2 add token image folder asset http github com plasmadlt token list tree master asset image requirement file extension png uppercase png considered invalid file name contract address png lowercase dimension 256 x 256 pixel recommended 512 x 512 pixel background preferably transparent fit dark mode well deny logo need light border background file size maximum 100kb tip optimize image size e g using simple drag drop online service tinypng 3 1 add token data plasma finance token list json address contract must checksummed check convert address checksummed address http web3 tool netlify app json address 0x054d64b73d3d8a21af3d764efd76bcaa774f3bb2 chainid 1 name plasma symbol ppay tag decimal 18 logouri http raw githubusercontent com plasmadlt token list master asset 0x054d64b73d3d8a21af3d764efd76bcaa774f3bb2 png please use chainid 1 ethereum mainnnet chainid 137 polygon mainnet chainid 56 bsc 3 2 tag add tag list token data use 3 tag json tag defi name defi market description decentralized finance protocol aavev2 name aave v2 description aave interest bearing token comp name compound description compound protocol balance token nft name nft description non fungible token index name defi index description tokenized basket high quality defi project stable name stablecoin description stablecoins may pegged currency like u dollar commodity price gold alliance name plasma alliance description plasma alliance ambitious project game changing defi protocol dex name dex token description token amm protocol wrap name wrapped description wrapped token pegged value cryptocurrency another chain eth2 name eth 2 staking description eth 2 staking token pool name pool description earn trading fee providing liquidity single transaction synths name synthetix description synthetic cryptocurrency synthetix protocol stock name stock description synthetic stock mirror protocol 3 3 add token plasma finance decentralized market page create token page add token market create page please fork second token list http github com plasmadlt plasma finance market tokenlist add token also 4 make new pr pull request git add git commit add token name git push origin branch name contact email apy plasma finance mailto apy plasma finance br telegram announcement group http oxplasma chat http oxplasmamedia social medium facebook http www facebook com plasmapay br plasma twitter http twitter com 0xplasma br spaceport twitter http twitter com cyberspaceport br useful link plasmapay http plasmapay com crypto wallet http app plasmapay com plasma finance http plasma finance platform market http apy plasma finance market hyperdex http apy plasma finance hyper dex dex liquidity management http apy plasma finance liquidity pool saving http apy plasma finance saving ido spaceport http apy plasma finance spaceport innovation hub http apy plasma finance innovation hub launchpad alliance http apy plasma finance launchpad spaceport landing http plasma finance spaceport documentation defi university http doc plasma finance medium ppay coinmarketcap http coinmarketcap com currency plasma finance br plasmaswap amm coinmarketcap http coinmarketcap com exchange plasmaswap br plasma earn campaigne cmc http coinmarketcap com earn project plasmafinance br ppay coingecko http www coingecko com en coin plasma finance br token ppay ethereum erc20 http etherscan io token 0x054d64b73d3d8a21af3d764efd76bcaa774f3bb2 polygon http polygonscan com token 0x08158a6b5d4018340387d1a302f882e98a8bc5b4 xppay ethereum erc20 http etherscan io token 0x9fd1d329bb687fef164f529f6f6dcd6f69e7b978
/powerpool-finance/powerpool-governance,Solidity,powerpool governance contract action status http github com powerpool finance powerpool governance workflow ci badge svg http github com powerpool finance powerpool governance action repository contains set smart contract used decision making powerpool community regarding protocol development protocol parameter smart contract upgrade provides opportunity vote cvp token holder including cvp locked especially voting participant beta gamma round using vested cvp token liquidity provider using bpt uni lp token participance governance mentioned group user available ethereum mainnet sidechains xdai matic detail specification http github com powerpool finance powerpool doc blob master specification powerpool governance md security review status audit progress contract ethereum main network active ppgovernorl1 0x1872b9692bd7ceabbefd30e40b03c548a9d79261 http etherscan io address 0x1872b9692bd7ceabbefd30e40b03c548a9d79261 timelock 0x34776a0dbb158935422e20c5ce897408fd334ad8 http etherscan io address 0x34776a0dbb158935422e20c5ce897408fd334ad8 cvp token 0x38e4adb44ef08f22f5b5b76a8f0c2d0dcbe7dca1 http etherscan io address 0x38e4adb44ef08f22f5b5b76a8f0c2d0dcbe7dca1 simplevoting 0x54ebaf8c34d4ada5a1d0936ca11394d858af13ac http etherscan io address 0x54ebaf8c34d4ada5a1d0936ca11394d858af13ac deprecated ppgovernorl1 0xdc27ad4351cec2099c438dae9f39aa38dbd50901 http etherscan io address 0xdc27ad4351cec2099c438dae9f39aa38dbd50901 timelock 0xa40522994c6c85e5717cd12d5f50de50a2a2c4e3 http etherscan io address 0xa40522994c6c85e5717cd12d5f50de50a2a2c4e3 ppgovernorl1 0x8234d0c4d27333e4103c3ebadc48b7da7cc72b45 http etherscan io address 0x8234d0c4d27333e4103c3ebadc48b7da7cc72b45 timelock 0x6415ce217a981bba24e12fc2cc14fb2c4ae08a7a http etherscan io address 0x6415ce217a981bba24e12fc2cc14fb2c4ae08a7a ppgovernorl1 0x88a6cee103d03a3250db46982109cb7cb7bd8f98 http etherscan io address 0x88a6cee103d03a3250db46982109cb7cb7bd8f98 timelock 0x0e05a5f58281ff5ab9aac81b9220b4defa84325e http etherscan io address 0x0e05a5f58281ff5ab9aac81b9220b4defa84325e contract matic network childcvp token 0x530d954549f3efa00799784bc7fe0c3fed76da19 http explorer matic network address 0x530d954549f3efa00799784bc7fe0c3fed76da19 contract testing development use yarn npm run following npm task yarn compile compile contract yarn test run test yarn coverage generate test coverage report
/0xdevnet/staking-and-reward,JavaScript,staking reward application 3 smart contract project 2 sol file erc20 token one token mock dai mdai acting colateral project user deposit mdai token tokenfram smartcontract depositing mdai get staking reward form dapp token technology used solidity truffle react web3 ganache metamask run project start local blockchain ganache connect local blockchain metamask import second account meta mask run truffle command truffle compile compile smartcontract truffle migrate reset migrate code blockchain start front end npm start react run localhost 3000 start deposit mdai imported account run truffle exec script issue token j distribute reward investor
/MikeSpa/DamnVulnerableDeFi,Solidity,cover png set challenge hack implementation defi ethereum featuring flash loan price oracle governance nfts lending pool smart contract wallet timelocks created tinchoabbate http twitter com tinchoabbate play visit damnvulnerabledefi xyz http damnvulnerabledefi xyz disclaimer solidity code practice pattern repository damn vulnerable educational purpose use production writeup 1 unstoppable send token outside depositetoken method line assert poolbalance balancebefore fails one use contract anymore 2 naive receiver flash loan call flashloan address need create contract call fct behalf victim naivereceiverlenderpool contract 10x fee empty contract function attack address victim public int256 0 10 pool flashloan victim 1 3 truster flash loan flashloan function trusterlenderpool contract ha line allow u call method contract variable want target functioncall data simply create contract call method use approve erc20 approve dvtoken j const abi function approve address spender uint256 amount const interface new ether utils interface abi const data interface encodefunctiondata approve attackcontract address token pool await attackcontract attack 0 attacker address token address data attack contract call custom function simply transfer token account 4 side entrance flash loan flash loan pool allow user deposit withdraw money flashloan function check end whether balance start flash loan since deposit withdraw money contract simply use flash loan make deposit contract flashloan fct confirm money back contract contract ha register deposit let u withdraw 5 rewarder flash loan pretty simple use flash loan deposit huge amount dvt reward pool gain reward token 6 selfie flash loan governance dao see hasenoughvotes need majority vote propose action borrow governance token flash loan 50 supply create new snapshot balance execute action choose drainallfunds transfer fund account 2 day later proposed action get executed receive money 7 compromised private key website give u two string 4d 48 68 6a 4e 6a 63 34 5a 57 59 78 59 57 45 30 4e 54 5a 6b 59 54 59 31 59 7a 5a 6d 59 7a 55 34 4e 6a 46 6b 4e 44 51 34 4f 54 4a 6a 5a 47 5a 68 59 7a 42 6a 4e 6d 4d 34 59 7a 49 31 4e 6a 42 69 5a 6a 42 6a 4f 57 5a 69 59 32 52 68 5a 54 4a 6d 4e 44 63 7a 4e 57 45 35 4d 48 67 79 4d 44 67 79 4e 44 4a 6a 4e 44 42 68 59 32 52 6d 59 54 6c 6c 5a 44 67 34 4f 57 55 32 4f 44 56 6a 4d 6a 4d 31 4e 44 64 68 59 32 4a 6c 5a 44 6c 69 5a 57 5a 6a 4e 6a 41 7a 4e 7a 46 6c 4f 54 67 33 4e 57 5a 69 59 32 51 33 4d 7a 59 7a 4e 44 42 69 59 6a 51 34 convert two hexadecimal string ascii obtain mhhjnjc4zwyxywe0ntzkyty1yzzmyzu4njfkndq4otjjzgzhyzbjnmm4yzi1njbizjbjowziy2rhztjmndcznwe5 mhgymdgyndjjndbhy2rmytllzdg4owu2odvjmjm1nddhy2jlzdlizwzjnjaznzflotg3nwziy2q3mzyzndbiyjq4 convert two string base64 ascii get two private key 0xc678ef1aa456da65c6fc5861d44892cdfac0c6c8c2560bf0c9fbcdae2f4735a9 0x208242c40acdfa9ed889e685c23547acbed9befc60371e9875fbcd736340bb48 private key belong two trusted oracle access two three oracle simply lower price nft buying one raise price balance exchange sell nft drain eth fro contract 8 puppet uniswap liquidity pool need take token lending pool withdraw token need deposit collaterl eth price dvt per eth determined uniswap exchange first need devalue dvt token uniswap done borrow dvt lending pool 10 eth deposit dvt uniswap get eth back revalue dvt 9 puppet v2 uniswap v2 liquidity pool uniswap oracle need take token lending pool puppetv2pool sol similar previous contract main differene value token calculated instead using pair balance us quote fct uniswapv2library sol attack stay though need devalue dvt token borrow weth cheaply first swap dvt weth devalue weth token borrow weth 10 free rider erc721 nft marketplace unisawp v2 flash swap vulnerability private buyone function handle check sure send sufficient amount ether call public buymany function except buymany call buyone several time never update value sent sent 15 ether buy nft price one second vulnerability function first transfer nft buyer j transfer seller buyer token safetransferfrom token ownerof tokenid msg sender tokenid pay seller j pay seller payable token ownerof tokenid sendvalue pricetopay precisely pay owner nft problem current owner nft longer seller buyer e u attack need get 15 ether able buy nfts get paid one get 15 ether first make swap uniswap dvt weth liquidity pair change weth eth 15 eth buy 6 nft 15 eth marketplace send attack contract 6 nfts 90 eth change 15 eth weth repay liquidity pair plus small fee send 6 nft buyer get 45 eth exchange finally withdraw 75 eth contract end gain 15 90 45 120 ether cost transaction 3 fee uniswap 15 eth flash loan buyer got 6 nfts 45 ether marketplace lost 75 ether seller lost nfts uniswap flash swap http doc uniswap org protocol v2 guide smart contract integration using flash swap 11 backdoor gnosis safe wallet proxy delegate call vulnerability walletregistry contract doe various check sending dvt assumes proxy owned beneficiary ha created beneficiary least beneficiary ha full control fund neither true one creating proxy insert backdoor contract gnosis safe wallet use proxy pattern logic gnosissafe contract user simply deploy proxy interact creation proxy contract possible make proxy contract execute delegate call use make newly created proxy vulnerable make proxy call function attack contract approve u transfer 10 dvt attack create attack contract deploy gnosissafeproxy beneficiary long respect various requirement walletregistry proxycreated exemple owner beneficiary registry send 10 dvt proxy create proxy gnosissafeproxyfactory createproxywithcallback function function calling walletregistry proxycreated call gnosissafe setup amongst parameter give setup choose make execute delegate call though setupmodules executor execute thus give function necessary parameter delegate call function attack contract function call erc20 approve function allow spender spend given amount token owner balance make proxy approve attack contract spent 10 dvt proxy wallet receive registry walletregistry proxycreated finish proxy receives token transfer attacker address via transferfrom 12 climber uup proxy accesscontrol vulnerabilites climbervault contract secure need become sweeper call sweepfunds sweep fund way change variable contract setsweeper internal called initialize deployment also see authorizeupgrade ha onlyowner modifer owner change implementation owner climbertimelock contract climbertimelock contrat ha two method execute call schedule execute schedule protected onlyrole proposer role execute check call gone schedule passed required delay require getoperationstate id operationstate readyforexecution check done execution call mean long one call executed schedule another one updatedelay 0 call executed attack order sweep fund deploy new vault contract upgrade implementation malicious contract done easily sweep fund timelock contract vault ' owner upgradeto first need gain access contract exploit vulnerability execute upgrade implementaion malicious contract deploy require getoperationstate id operationstate readyforexecution call still need pas need proposer role also need delay 0 since operation state need ready execution transaction scheduling execute call 1 give proposer role 2 reduce delay 0 3 upgrade implementation vault new malicious contract 4 schedule executing done simply call new sweepfunds method longer require caller sweeper transfer dvt attacker address
/princesinha19/pooled-loan,JavaScript,pooled loan defi chit fund img src http github com princesinha19 pooled loan blob master src asset logo png height 150 width 300 project us factory contract spawn new loan pool combine browser based frontend ethereum smart contract using web3 j anyone create pool using form application creation pool pool creator need fill necessary detail need choose lending pool aave mstable based choice new smart contract get generated using factory contract detail pool get stored graph using graph sdk participant able join chit fund pool available participate frontend need deposit collateral amount collateral generate yield lending platform aave mstable loan auction start least 2 participant join pool auction participant bid amount win loan want number auction depend upon total number participant pool highest bidder able claim loan auction period loan amount equal loan amount bid amount loan amount also equal collateral deposited beginning bid amount remain stored lending pool get distributed among participant yield generated lending pool auction advantage approach last participant get loan interest free top earns interest collateral interest paid borrower used earn additional interest also distributed among participant demo video youtube video http img youtube com vi x3kvd3sjvvo 0 jpg http youtu x3kvd3sjvvo running project locally 1 prerequisite make sure ' installed node j 12 rust correct target rust 2 install dependency yarn install 3 run local development server yarn start see package json full list script run yarn
/bonedaddy/go-indexed,Go,go indexed go indexed sdk interacting indexed finance http indexed finance smart contract using golang programming language includes library leverage ethereum rpc client cli querying smart contract cli discord bot essentially provides cli library like usage experience discord platform overview discord discord chat bot included allows making read call indexed finance contract discord message ha current capability return account balance indexpools contract return account staking balance stake reward earned staking contract return current token basketed indexpool notify arbitrary condition currently support stake earned cli basic cli used make simple query smart contract library todo installation shell git clone http github com bonedaddy go indexed cd go indexed go mod download make build cli creates executable current directory named gondx usage cli moment cli command available gondx pool please see output information discord first ' need create discord bot user used get appropriate access token following instruction star discord bot conencted infura shell gondx infura api key supersecretinfurakey discord bot discord token supersecretdiscordtoken view general help menu send following message channel bot read send message ndx view help menu notify command ndx notify help development update abis indexed j submodule make copy abi update generated golang code abis make gen binding note updating uniswap binding bit tedious usage waffle output combined json file isnt properly generating golang binding must manually copy abi combined json output file adding new tvl tracking default behavior tvl calculation derive price asset looking eth uniswap pair converting dai aave usd price determination process aave eth dai contract binding binding uniswapv2 oracle contract binding indexed uniswapv2 oracle binding uniswapv2 contract binding uniswapv2 support support development go indexed sending tip 0x5a361a1dfd52538a158e352d21b5b622360a7c13 http etherscan io address 0x5a361a1dfd52538a158e352d21b5b622360a7c13 fund received invested indexed finance via governance token ndx purchase pool token defi5 cc10 etc purchase
/reef-defi/reefswap-ui,TypeScript,reefswap ui open source interface reefswap protocol decentralized exchange reef token website http reefswap com pool reef documentation http doc reef finance doc prologue introduction reefswap interface support swapping token adding liquidity binding polkadot address ethereum evm developer guide installation cloning project installing dependency bash git clone git github com reef defi reefswap ui git cd reefswap ui yarn run run yarn start visit localhost 3000 build docker container bash cd reefswap ui docker build reefswap ui run docker bash docker run p 80 80 reefswap ui visit application localhost
/ultiarena/ulti-coin,Solidity,ulti coin contract lint http github com ultiarena ulti contract action workflow lint yml badge svg http github com ultiarena ulti contract action workflow lint yml test http github com ultiarena ulti contract action workflow test yml badge svg http github com ultiarena ulti contract action workflow test yml deployment mainnet http bscscan com token 0x42bfe4a3e023f2c90aebffbd9b667599fa38514f testnet http testnet bscscan com token 0x1ed837f59efa2b69c7e91a7d1bfa06fc9c20ea09 audit certik http www certik org project ultiarena usage format file yarn format lint file yarn lint compile file yarn compile run test yarn test deploy choose network nad put mnemonic secret json yarn coin deploy testnet yarn coin deploy kovan yarn coin deploy mainnet verify choose network yarn verify testnet contract address param1 param2 yarn verify kovan contract address param1 param2 yarn verify mainnet contract address param1 param2 generate bytecode yarn coin bytecode
/tacoinfra/harbinger-signer,TypeScript,harbinger serverless price feed signer harbinger signer signer harbinger oracle system harbinger signer serverless framework http serverless com application written typescript deployed amazon web service http aws amazon com get started harbinger visit main documentation http github com tacoinfra harbinger cryptographic signature generated amazon key management service http aws amazon com km highly service us hardware security module hsms app extensible produce feed apis use signing solution besides amazon km see ' customizing functionality ' library provides functionality signing harbinger price feed user interested posting price might also interested harbinger cli http github com tacoinfra harbinger cli harbinger poster http github com tacoinfra harbinger poster provide command line serverless method posting signed price data chain developer new harbinger component may interested harbinger lib http github com tacoinfra harbinger lib introduction harbinger tezos price oracle consists two main component em signer em retrieves price candle exchange cryptographically sign em poster em retrieves signed price feed signer sends signed data smart contract tezos network project reference price feed signer demonstrates retrieve price multiple exchange including coinbase pro binance gemini okex sign private key securely stored inside amazon key management service http aws amazon com km serverless framework http serverless com application deployed need spend time thinking managing server setup instruction order setup serverless application ' need perform following setup task first 1 install aws cli http doc aws amazon com cli latest userguide cli chap install html system 2 create aws access key http aws amazon com premiumsupport knowledge center create access key configure aws cli running aws configure command 3 login aws console account ha ability create km key ssm parameter grant permission use admin role work best 4 sure select correct region would like deploy serverless yml serverless yml file repository set use eu west 1 ireland region easily edit file select different region like important thing ensure region select console region specified serverless configuration file 5 aws console select km service select km service image 1 km selection png 6 click create key button click create key button image 2 create key png 7 select em asymmetric em key type select em sign verify em key usage select em ecc secg p256k1 em key spec click em next em button key configuration option image 3 create key png 8 next page input em alias em key optional em description em click em next em button create alias description image 4 create key png 9 next page define key administrator need change setting page unless would like give additional iam user role administrative permission key click em next em button continue define key administrative permission image 5 create key png 10 page define additional iam user role key usage permission need change setting page unless would like give additional iam user role usage permission key click em next em button continue define key usage permission image 6 create key png 11 click em next em accept default key policy grant access root user ' edit policy later give serverless application right sign key review edit key policy image 7 create key png 12 finally click em finish em see em success em message similar following success image 8 create key png 13 copy km key id clipboard save somewhere launch em system manager em em service em section console top left system manager image 9 system manager png 14 select em parameter store em left navigation bar parameter store image 10 system manager png 15 click em create parameter em button top left create parameter image 11 system manager png 16 name parameter tezos signer km key id give optional description leave setting default standard tier string type data type text paste enter km key id saved step 13 value without quote surrounding character click em create parameter em button create parameter image 12 system manager png coinbase pro api key setup following step required planning using coinbase pro api price data provider exchange ' currently require creating api key view price data using another exchange besides coinbase pro skip step 25 17 access coinbase pro api key setting http pro coinbase com profile api either link http pro coinbase com profile api accessing profile menu top right pro api setting image pro api key 1 png 18 click em new api key em button top right new api key image pro api key 2 png 19 give api key nickname check box em view em permission either save passphrase somewhere secure replace default random passphrase strong passphrase choice click em create api key em button create api key image pro api key 3 png 20 2 factor authentication enabled ' need go 2 step verification click em add api key em button add api key image pro api key 4 png 21 store api secret secure place click em done em button add api key image pro api key 5 png 22 see view key created ' need copy api key store somewhere next step click api key copy clipboard copy api key image pro api key 6 png 23 create another parameter named tezos coinbase pro api key give optional description parameter type securestring leave rest setting default input coinbase pro api key view permission value click em create parameter em button create parameter image 13 system manager png 24 create two parameter one named tezos coinbase pro api passphrase second one named tezos coinbase pro api secret value saved previously step 19 21 type securestring well deploying serverless application 25 clone repository local system install npm dependency typing npm inside repository directory type sl deploy stage stage stage coinbase binance gemini okex deploy application go well see output similar ' want save two endpoint use later serverless deploy image 15 sl deploy png 26 navigate back em km em aws console click em customer managed key em created earlier modify key policy click button say em switch policy view em edit key policy image 16 edit key policy png 27 click button say em edit em edit key policy image 17 edit key policy png 28 ' need modify key policy order enable iam role serverless application execute use key signing operation ' need insert additional json element section em statement em array section ' need insert highlighted screenshot ' forget separate statement comma code ' need insert json &#9; &#9; sid allow use key digital signing effect allow principal aws arn aws iam aws account id role harbinger signer exchange aws region lambdarole action km sign km verify km getpublickey resource important note must replace 3 section json statement double curly brace surrounding appropriate information string also space aws account id 12 digit numeric aws account id ' sure look root policy one adding able copy arn exchange string coinbase binance gemini okex lower case depending signer deploying region aws region deploying eu west 1 edit key policy image 18 edit key policy png determining tezos address km key used generate signature congratulation ' deployed serverless application automatically sign coinbase pro binance price market order book choose determine tezos public key sppk private key used sign price 1 curl info endpoint displayed ran last step sl deploy output sppk address need include x api key header set api key wa output previous sl deploy command full command curl silent h ' x api key api key ' http api gateway execute api eu west 1 amazonaws com binance info get message internal server error instead check lambda log inside aws console see went wrong likely either created system manager parameter correctly km key policy 100 correct see output like info output image info output png customizing functionality oracleservice http github com tacoinfra harbinger signer blob master src oracle service pluggable service handle serverless request signer initialized object conforming signer http github com tacoinfra harbinger signer blob master src signer interface object conforming candleprovider http github com tacoinfra harbinger signer blob master src candle provider interface list asset sign end user customize library custom signer candle provider custom asset asset list configured serverless yml http github com tacoinfra harbinger signer blob master serverless yml l60 list customized set asset custom candle provider object conforming candleprovider http github com tacoinfra harbinger signer blob master src candle provider interface retrieve candle object external feed candle provider injected oracleservice via constructor http github com tacoinfra harbinger signer blob dfd677ec8724b03483e65ac156a2213e22d771a0 handler l89 harbinger signer ha several candleprovider built binancecandleprovider http github com tacoinfra harbinger signer blob master src binance candle provider provides candle binance api coinbasecandleprovider http github com tacoinfra harbinger signer blob master src coinbase candle provider provides candle coinbase pro api geminicandleprovider http github com tacoinfra harbinger signer blob master src gemini candle provider provides candle gemini api okexcandleprovider http github com tacoinfra harbinger signer blob master src okex candle provider provides candle okex api custom signer object conforming signer http github com tacoinfra harbinger signer blob master src signer interface sign byte provide public key signer injected oracleservice via constructor http github com tacoinfra harbinger signer blob dfd677ec8724b03483e65ac156a2213e22d771a0 handler l89 harbinger signer ha one signer built awssigner http github com tacoinfra harbinger signer blob master src aws signer wrap call aws km service http aws amazon com km credit harbinger written maintained luke youngblood http github com lyoungblood keefer taylor http github com keefertaylor
/tacoinfra/harbinger-lib,TypeScript,harbinger lib harbinger lib self contained npm package written typescript contains functionality working harbinger price oracle http github com tacoinfra harbinger get started harbinger visit main documentation http github com tacoinfra harbinger library provides base functionality harbinger cli http github com tacoinfra harbinger cli harbinger poster http github com tacoinfra harbinger poster harbinger signer http github com tacoinfra harbinger signer library also useful developer want interact harbinger functionality poster signer user harbinger likely want use one preceding higher level component functionality harbinger lib contains following set functionality programatically update oracle contract coinbase another provider programatically deploy oracle normalizer contract programatically push data oracle normalizer contract programatically perform account reveals required programatically revoke oracle contract retrieve pretty printed oracle data utility working byte common crypto function base58 encoding hashing encoding decoding asn1 payload key manipulation utility signing byte aws km hsm http aws amazon com km working library using functionality client need initialize library following call typescript import initoraclelib ' harbinger lib ' initoraclelib building library shell npm npm run build credit harbinger written maintained luke youngblood http github com lyoungblood keefer taylor http github com keefertaylor
/ElasticBTC-XBT/elastic-bitcoin-xbt-contract,Solidity,xbt smart contract build status http github com elasticbtc xbt elastic bitcoin xbt contract workflow xbt 20smart 20contracts badge svg http github com elasticbtc xbt elastic bitcoin xbt contract nbsp nbsp coverage status http codecov io gh elasticbtc xbt elastic bitcoin xbt contract graph badge svg http app codecov io gh elasticbtc xbt elastic bitcoin xbt contract smart contract repository elastic bitcoin xbt implementation elastic bitcoin xbt http elasticbitcoin org official xbt contract address target uniswapv2 0x64fb96d0395f6bf105f35233911e3df2c5bf4ce8 http info uniswap org token 0x64fb96d0395f6bf105f35233911e3df2c5bf4ce8 etherscan 0x64fb96d0395f6bf105f35233911e3df2c5bf4ce8 http etherscan io token 0x64fb96d0395f6bf105f35233911e3df2c5bf4ce8 rebaser 0xb33d4e433443c0601c69a421152c8698a846e1e5 http etherscan io address 0xb33d4e433443c0601c69a421152c8698a846e1e5 airdrop 0x2cb3c989d47a87a2bf1a49b9868b1ea533570e2c http etherscan io address 0x2cb3c989d47a87a2bf1a49b9868b1ea533570e2c public sale 0xdb6a3ad80d2c3378ba8d921835b37e749515274c http etherscan io address 0xdb6a3ad80d2c3378ba8d921835b37e749515274c table content install install testing testing contribute contribute license license install bash install project dependency npm install testing bash run unit test npm test coverage contribute report bug within package please create issue repository submitting code ensure free lint error ha 100 test coverage bash lint code npm run lint view code coverage npm run test coverage license gnu general public license v3 0 c 2020 fragment inc license
/EthereansOS/WIMD-Interface,JavaScript,dragon first card game based href http medium com dfohub unimergency done ethitem arriving dragon dfohub weekly oct 17 e51c82370cac item link b rule info b http ethos eth link wimd html wimd website http whereismydragon eth link wimd card farming http whereismydragon eth link toggle farming wimd opensea collection http opensea io asset dragon wimd card smart contract http etherscan io address 0xb6ab68a44ecc9fb2244aab83eb2f6dba54205ebf wimd crafting game smart contract http etherscan io address 0x87ad9009c4fd0aaa7bfe74f7e00845b3f09ad0ce wimd dragon trasury smart contract http etherscan io address 0x32c87193c2cc9961f2283fca3ca11a483d8e426b good luck hunting
/powerpool-finance/power-oracle-contracts,JavaScript,power oracle contract action status http github com powerpool finance power oracle contract workflow ci badge svg http github com powerpool finance power oracle contract action power oracle decentralized cross chain price oracle working ethereum main network sidechains power oracle us uniswap v2 primary source time weighted average price twaps introduces economic incentive independent price reporter security review status unaudited contract ethereum main network active poweroracle proxyadmin 0x7696f9208f9e195ba31e6f4b2d07b6462c8c42bb http etherscan io address 0x7696f9208f9e195ba31e6f4b2d07b6462c8c42bb code proxy 0x50f8d7f4db16aa926497993f020364f739edb988 http etherscan io address 0x019e14da4538ae1bf0bcd8608ab8595c6c6181fb code implementation 0xf0d67691da5ad3813aaf412756d61f0f4390c6d2 http etherscan io address 0xf0d67691da5ad3813aaf412756d61f0f4390c6d2 powerpoke proxyadmin 0x7696f9208f9e195ba31e6f4b2d07b6462c8c42bb http etherscan io address 0x7696f9208f9e195ba31e6f4b2d07b6462c8c42bb code proxy 0x04d7aa22ef7181ee3142f5063e026af1bbbe5b96 http etherscan io address 0x04d7aa22ef7181ee3142f5063e026af1bbbe5b960x04d7aa22ef7181ee3142f5063e026af1bbbe5b96 code implementation 0xfe53ad2c2085636febc20a9f06a0826659a5b059 http etherscan io address 0xfe53ad2c2085636febc20a9f06a0826659a5b059 powerpokestaking proxyadmin 0x7696f9208f9e195ba31e6f4b2d07b6462c8c42bb http etherscan io address 0x7696f9208f9e195ba31e6f4b2d07b6462c8c42bb code proxy 0x646e846b6ee143bde4f329d4165929bbdcf425f5 http etherscan io address 0x646e846b6ee143bde4f329d4165929bbdcf425f5 code implementation 0xc0cd319c0066733c611fb9a8bd5f2a1c38eb74b2 http etherscan io address 0xc0cd319c0066733c611fb9a8bd5f2a1c38eb74b2 deprecated poweroracle implementation 0xa394922a1a45786583e5383cf4485a6f325d8807 http etherscan io address 0xa394922a1a45786583e5383cf4485a6f325d8807 previous implementation poweroracle implementation 0x4b6e556841a88b0682c0bc9abb6bdaf4572184b4 http etherscan io address 0x4b6e556841a88b0682c0bc9abb6bdaf4572184b4 previous implementation poweroracle implementation 0x3359bb31cd8f80a98a13856d3c89b71e7b51a0f0 http etherscan io address 0x3359bb31cd8f80a98a13856d3c89b71e7b51a0f0 previous implementation poweroracle proxy 0x019e14da4538ae1bf0bcd8608ab8595c6c6181fb http etherscan io address 0x019e14da4538ae1bf0bcd8608ab8595c6c6181fb previous proxy contract kovan test network testing development use yarn npm run following npm task yarn compile compile contract yarn test run test yarn coverage generate test coverage report
/pj4533/MobileFarmInfo,Swift,mobilefarminfo monitor yield farming return io
/powerpool-finance/cvp-vesting-contract,JavaScript,powerpool cvp vesting contract action status http github com powerpool finance cvp vesting contract workflow ci badge svg http github com powerpool finance cvp vesting contract action smart contract provides temporary lock following vesting cvp erc20 token received participant beta gamma testing round powerpool contract ha special function allows one vote using token locked contract detail ppvesting sol specification http github com powerpool finance powerpool doc blob master specification ppvesting md pptimedvesting sol specification http github com powerpool finance powerpool doc blob master specification pptimedvesting md security review status audited detail ppvesting sol security audit report pessimistic http github com powerpool finance powerpool doc blob master audit powerpool vesting security pdf ppvesting sol security audit report v2 pessimistic http github com powerpool finance powerpool doc blob master audit powerpool vestingv2 security pdf pptimedvesting sol security audit report mixbytes http github com powerpool finance powerpool doc blob master audit pptimedvesting mixbytes pdf contract ethereum main network active ppvesting 0x60842a6b44cca5eb7685d1135acf69b1336b28b3 http etherscan io address 0x60842a6b44cca5eb7685d1135acf69b1336b28b3 deprecated ppvesting 0xfd28be82e453860f41c36029175377f470af754b http etherscan io address 0xfd28be82e453860f41c36029175377f470af754b testing development use yarn npm run following npm task yarn compile compile contract yarn test run test yarn coverage generate test coverage report
/alofeoluwafemi/Piggy.Fi,JavaScript,problem sub saharan africa ha one highest inflation rate world individual family saving money local currency easy way guard life saving devaluation business make purchase usd sell local currency sometimes run loss value dollar go repurchase good higher amount sold equivalent local currency source http www imf org external datamapper pcpipch weo oemdc ssq case study country nigeria inflation 17 75 naira ha devalued drastically last 12 month usd 1 360 ngn high usd 1 500 ngn one point time fixed income earner saving n20 000 monthly 1 n360 last 12 month would saved sum n240 000 suppose equivalent 660 instead worth 500 year end resulting huge loss 160 value money due current inflation rate solution defi saving platform without need ethereum client metamask allows anyone save much stable currency u dollar leveraging stable cryptocurrencies usdt generating interest saving staking lending platform compound protocol venus protocol built binance smart chain low gas fee technical knowledge use ethereum client central organization hold user fund policy central bank controlling number dollar circulating economy wont affect user piggy fi http drewhyte west 1 s3 u west 1 amazonaws com piggy fi jpg award binance hackhaton winner 2021 defi prize hackhathon winner http drewhyte west 1 s3 u west 1 amazonaws com winner png
/jusdefi/jusdefi-contracts,JavaScript,jusdefi contract transparent implementation amplyfi professionally audited callisto network http callisto network jusdefi token jdfi security audit deployment contract address mainnet note jusdefi 0x75cdc4f6be18dc003dc2ae424f85d1243f0fb781 http etherscan io address 0x75cdc4f6be18dc003dc2ae424f85d1243f0fb781 jdfi token jdfistakingpool 0x7ec638ee0ca9591d74b338fcc3ac80ed19b1e6bf http etherscan io address 0x7ec638ee0ca9591d74b338fcc3ac80ed19b1e6bf jdfi token univ2stakingpool 0x199092da8de9168c6ddca6ed83c6b72de3b49978 http etherscan io address 0x199092da8de9168c6ddca6ed83c6b72de3b49978 jdfi weth uni v2 token feepool 0x4a04bb4c3e9bb8295d1d71e5e4c591b29ac79a1d http etherscan io address 0x4a04bb4c3e9bb8295d1d71e5e4c591b29ac79a1d uniswapv2pair 0xaa53df90b6ce10fed75d76415db10ccd35a599d2 http etherscan io address 0xaa53df90b6ce10fed75d76415db10ccd35a599d2 uniswap pair uni v2 token airdroptoken 0x1f89abfc1a80eae67b8036a49204823e8861eaf6 http etherscan io address 0x1f89abfc1a80eae67b8036a49204823e8861eaf6 jdfi token development install dependency via yarn bash yarn install compile contract via hardhat bash yarn run hardhat compile network default hardhat us hardhat network process use external network via url set url environment variable append command network generic bash url node url yarn run hardhat test network generic testing test contract via hardhat specify url fork mainnet setting fork url environment variable bash fork url node url yarn run hardhat test activate gas usage reporting setting report gas environment variable true bash report gas true yarn run hardhat test generate code coverage report using solidity coverage bash yarn run hardhat coverage
/cawfree/log-in-as-a-lobster,TypeScript,p align center img src asset logo jpeg width 30 alt lobsterdao p log lobster typescript implementation log lobster http lobster substack com p product hunt protocol grassroots used verify given wallet address holder asset lobsterdao http opensea io collection lobsterdao collection getting started shell yarn add log lobster typescript import checkaddressislobster ' log lobster ' async const isuseralobster await checkaddressislobster address ' 0x13880821e1d2453e77bcce113700765c65a0df90 ' isuseralobster wagmi return ngmi license mit license
/iammrjude/token_sale,JavaScript,token sale ico website frontend amp backend
/revert-finance/revert-backtester,Clojure,revert backtester fast backtester uniswap v3 position using backtester browser connected repl clojure def pool address 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 def token0 address 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 def token1 address 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 go def pool period backtester historic state mainnet pool address token0 address token1 address def backtest option tick lower 193380 tick upper 200310 liquidity 326453009134297 first timestamp first pool period dilute fee false reference price hodl def backtest result backtester backtest position pool period backtest option u dejs last backtest result price1 2800 561447581661804800445923843118 position active true date 1645203600 apr 40 798756877089499992439067416587414203 accum fees0 166 08025426813868469377 fees0 0 05728121020264660731 amount1 1 013650509408661188 pnl 259 307971699411288081104982934500459025162314463603570623 liquidity 326453009134297 price0 0 9999999999999999999999999999999999 accum fees1 0 06097927761789486278 il 77 548496566783063288340422500588600828351985579876 amount0 2656 898529 timestamp inst 2022 02 18t17 00 00 000 00 00 fees1 0 00001831200180145388 testing backtester set relevant open position testing full set open mainnet position meet following criterion minted last 30 day one mint deposit withdrawal scatterplot full png http user image githubusercontent com 21986 154587965 2ae05fc1 b562 4bf7 96d3 1b84f018d621 png histogram subset set also match following criterion range 100 time since minted histogram full http user image githubusercontent com 21986 154588209 e1d59e65 56f3 4316 82cd 2294bbffe53d png replicating test browser connected repl get full testing set clojure go def tracked position backtester tester fetch testing set take 100 tracked position 20 println backrtest specific position clojure go def p0 test po 191651 tracked position take 100 tracked position 20 println test first 100 position testing set take minute clojure go def tested positions100 backtester tester backtest position chunked take 100 tracked position 20 println test full testing set take minute clojure go def tested position backtester tester backtest position chunked identity tracked position 20 println render accuarcy plot clojure render accuracy plot tested positions100 render accuracy histogram position 100 time range clojure render accuracy histogram filter bn time range result 100 tested positions100 license copyright 2022 revert lab inc distributed mit license
/openware/open-finance-protocol,Ruby,rfc open finance protocol summary rfc open finance protocol standard unify backend communication financial institution design offer high security performance effective bandwidth usage ease implementation debugging mission mission open finance protocol simplify interconnection financial institution using modern easy implement protocol using reliable widely supported tool json web socket credit open finance protocol ha developed implemented openware http www openware com part opendax http www openware com product opendax crypto exchange software stack
/strykerin/DeFi-Pulse-dotnet,C#,defi pulse dotnet nuget version defipulse http img shield io nuget v defipulse svg http www nuget org package defipulse nuget downloads http img shield io nuget dt defipulse svg dotnet standard wrapper defi pulse api installation available nuget http www nuget org package defipulse powershell install package defipulse version 1 0 1 register service di container order use package simply add configureservices method startup c class csharp service adddefipulse defi pulse api key usage access defipulse service simply get constructor injection csharp private readonly idefipulse defipulse public weatherforecastcontroller idefipulse defipulse defipulse defipulse example get ethereum gas price following example show get ethereum gas price csharp gasprice gasprice await defipulse getgaspriceasync get following json response json fast 780 fastest 780 safelow 350 average 400 block time 14 03125 blocknum 11461145 speed 0 9989337462556375 safelowwait 13 7 avgwait 1 5 fastwait 0 5 fastestwait 0 5
/byteball/counterstake-bridge,JavaScript,counterstake assistant watchdog run bot assist user cross chain transfer facilitated counterstake protocol http counterstake org earn assistant reward initially 1 transfer bot also serf watchdog monitor ongoing transfer see fraudulent claim challenge sends counterstake looking win stake posted fraudulent claim challenge potential roi 66 7 see counterstake work http counterstake org work currently bot support transfer obyte ethereum bsc guarantee correct operation software might bug lead losing money use risk requirement nodejs 12 install get repo bash git clone http github com byteball counterstake bridge cd counterstake bridge yarn automatically compile ethereum contract install case error occures compile manually bash cd evm yarn global add truffle truffle compile run bash node run j bridge 2 errlog funding bot start print address like single address tnm2yrtjoanvgxmcfoh2fbvc3kyhz4o6 obyte address fund gbyte obyte token user likely expatriate chain larger balance enable serve larger transfer win competition assistant bot ethereum address 0xea6d65bae2e0ddf1a3723b139cb989fabcd63318 ethereum address fund eth erc20 token user likely expatriate chain larger balance enable serve larger transfer win competition assistant bot bsc address 0xea6d65bae2e0ddf1a3723b139cb989fabcd63318 bsc address fund bnb bep20 token user likely expatriate chain larger balance enable serve larger transfer win competition assistant bot larger balance also allow serve transfer parallel bot ' capacity exhausted next able assist user expatriation need fund bot imported token foreign chain transfer token bot via counterstake org http counterstake org specifying bot ' address recipient e g transfer gbyte obyte bot ' ethereum address transfer eth usdc ethereum bot ' obyte address note challenging period 3 day default therefore imported token available bot 3 day want top bot ' balance future plan advance transfer take 3 day track bot ' balance explorer respective chain email notification bot complains admin email email specify config counterstake bridge conf json case issue ' get notification admin email add check daemon j crontab see crontab txt line added crontab crontab empty run bash crontab crontab txt ' receive notification admin email bot crash check notification work leaving bot run production kill bot run bash node check daemon j receive email bot sendmail setup configured system usually ' add following setting conf json send email external smtp server instead json &#9; smtptransport relay &#9; smtprelay smtp server smtp gmail com &#9; smtpuser account mail server &#9; smtppassword password smtp authentication configuration check conf j available option override conf json important one infura project id infura project id sign infura get alchemy key alchemy key sign alchemy get format like json &#9; alchemy key &#9; &#9; polygon &#9; &#9; &#9; mainnet mainnet key &#9; &#9; &#9; testnet testnet key &#9; &#9; &#9; min reward ratio minimum net reward net gas fee bot expects earn assisting transfer bot ignore transfer pay lower reward default 0 005 0 5 max exposure max share bot ' balance specific token sent counterstake fraudulent claim challenge limit risk taking default 0 5 50 evm min transfer age minimum age second transfer evm based source chain deemed irreversible safe claim destination chain default 300 second 5 minute set lower value make sure bot claim transfer assistant bot also increase risk transfer reverted bot lose money evm count block finality bot see new claim transfer sent evm based chain ' find transfer timestamp earlier block evm count block finality block ago bot think transfer ' exist counterstake claim otherwise bot wait block check tranfer ha appeared source chain default 20 block set lower value make sure bot counterstakes earlier watchdog also increase risk transfer still appear source chain bot lose money blight whether run bot light obyte node default true running full node allows bot see new transaction slightly faster also secure bot ' need trust external source however full node take lot disk space initial sync take several day sockshost socksport host port connecting tor proxy default bot configured connect obyte node tor disable tor set sockshost null control address array device address obyte wallet usually gui wallet allowed view withdraw balance using chatbot interface payout address associative array withdrawal address keyed network running pooled assistant bot notice pooled assistant ha created specific bridge bot ' address set manager bot start using pool ' money claiming counterstaking bridge sufficient fund available ui contributing pool yet real option moment managing bot withdrawing fund bot start print pairing code like pairing code aza8qzvomenf7vvyo4ycw7u hiidob8apptmipttp 29 obyte org bb test 0000 use code pair gui wallet bot manage chat interface set control address conf json let bot know allowed manage default nobody allowed set payout address address enable withdrawal obyte ethereum address default withdrawal disabled like payout address obyte ejc4a7wqghezekw6rlo7f26sar4laqbu ethereum 0xbd2c1400ea794d837669d3a83ef8b3534579b5bf type help chat see available command particular use balance command view bot ' balance currency deposit add fund withdraw withdraw fund bot ' balance payout address adding new bridge see setup bridge j edit setupadditionalbridge appropriate adding new chain add new evm based chain see source code ethereum j bsc j add similar class use transfer j edit run emv deploy contract j deploy contract add new obyte based chain see obyte j define descendant class use transfer j edit run deploy aa j deploy autonomous agent add chain neither evm based obyte based develop programmable agent autonomous agent obyte smart contract ethereum chaincode hyperledger fabric implement counterstake protocol write class similar obyte j evm chain j use transfer j deploy agent case welcome submit pr add work repo running automated test autonomous agent bash yarn test aa test running automated test smart contract install run ganache using command line version ganache ganache cli run port 7545 default 8545 run bash cd evm npx truffle test
/pememoni/FairBlock,TypeScript,fairblock original logo http user image githubusercontent com 34263018 186832886 c4d7659c 3f31 43c1 ac04 39a9f3ef6b3d png fairblock front running protection mechanism blockchain application blockchain system quickly gaining popularity front running remains major obstacle fair exchange blockchain application fairblock show apply identity based encryption ibe prevent front running minimal bandwidth overhead approach decrypt block n transaction number message sent across network grows linearly size decrypting committee decrypt set n transaction sequenced specific block committee need exchange decryption share independent n comparison previous solution based threshold encryption scheme transaction block must decrypted separately committee resulting bandwidth overhead n project ha implemented fairblock consensus layer e consensus validators also one responsible extracting private key decrypting encrypted transaction block target project blockchain application built using cosmos sdk created starport alternative approach http github com pememoni fairblock sc fairblock implemented using smart contract communication layer smart contract blockchains avalanche ethereum check publication fairblock securecomm 2022 paper http eprint iacr org 2022 1066 thesis fairblock http uwspace uwaterloo ca handle 10012 18554 img width 953 alt screen shot 2022 02 23 7 06 26 pm src http user image githubusercontent com 34263018 155432112 3abcce88 989c 41f2 a00c 0fbf98892ea0 png get started blockchain install starport curl http get starport network starport v0 19 2 bash set correct gopath export path path go env gopath bin run fairblock blockchain starport chain serve serve command installs dependency build initializes start fairblock transaction set target encrypted message e g buying nft auction mev opportunity fairblockd tx fairblock submit target description target block height ibe private key extracted client submit encrpyted message bid offer sensitive information used front running attack leaked fairblockd tx fairblock submit encrypted plaintext message ibe encrpytion message public key derived target block height deposit sender encrypted message plaintext message converted sha256 client cryptographic commitment message never leaked public entity might want front run validators submit ibe private key share target block height fairblockd tx fairblock submit share ibe key share alice target block height alice original sender submits commitment plaintext encrypted message decrpytor us ibe private key share computes private key decrypt encrypted message incentive taking original sender ' deposit fairblockd tx fairblock commit decryption plaintext message sender decryptor plaintext commited decryption converted sha256 client side plaintexts never leaked public entity might want front run original sender decryptor reveals plaintext commited decryption take back win deposit fairblockd tx fairblock reveal decryption plaintext message sender decryptor query query current block information fairblockd q block query target fairblockd q fairblock list target output json query share fairblockd q fairblock list share output json query encrypted message fairblockd q fairblock list encryptedtx output json query commits fairblockd q fairblock list commit output json configure blockchain development configured config yml web frontend run following command install dependency start vue j based web app cd vue npm install npm run serve frontend app built using starport vue starport vuex package distributed identity based encryption 1 cd distributedibe ibe 2 go mod tidy 3 go test project ha built based vuvuzela tcpaillier project implementation ha vetted production setting use caution project ha tested linux useful resource identity based encryption http en wikipedia org wiki identity based encryption boneh franklin ibe scheme http crypto stanford edu dabo paper bfibe pdf dkg protocol blockchain ibe without trusted dealer http github com anoma ferveo ethereum dark forest http www paradigm xyz 2020 08 ethereum dark forest front running presentation phil daian ieee symposium security privacy http www youtube com watch v vr1v7aq8i3k feature youtu escaping dark forest http samczsun com escaping dark forest
/DAM-Protocol/Stroller-Protocol,JavaScript,stroller protocol client doc image strollerprotocol png need stroller currently user option wrapping surplus erc20 token keep stream running token earn interest since superfluid protocol relatively new defi yet introduced stream stroller protocol allows user earn yield erc20 token without compulsion wrap super token enabled creating stroller top stream enough super token keep stream running without penalty http stream mux com i224rw0001ro00iuzahgnsr14qitdxtpkr4tn5xxctju6e high mp4 use case user invest token defi protocol like aave harvest etc approve receipt token contract example alex invests usdt aave get amusdt return approves amusdt contract creates stroller whenever usdtx stream low balance keep stream running threshold amusdt token converted usdt transferred alex usdtx client doc image flowdiagram png using top service provided stroller protocol user tension free stream running dry approve create stroller relax protocol handle headache deployment chain address polygon mumbai strollmanager 0x896d448119f6901d27845f77083dfe5456c05099 br erc20strollout 0x20af3f0f49237d0c3f8557dbed9d4b1a6ed4d552 br aavev2strollout 0x7606bc78f13d8e9a1b38ce69fb508cbb0dfa7e13 rinkeby strollmanager 0x1166363d3005f96e6e2d940860bc346414e0cfb9 br erc20strollout 0xa6c537b0e5162b6a220522d0657749144d1a180e polygon po mainnet strollmanager 0x74ec90e367493b3d0e57f0b09eed760dfdaedc89 br erc20strollout 0x74408a7979a361db0e16c9d471ab786cf9a59ed3 br gelatostrollkeeper 0xc8c9e0e1b2e77bb846b90a08a4e5f2567cfa69f4
/deusfinance/dei-interface,TypeScript,dei finance interface setup yarn install run ' require env variable order run app simply run npm run dev open app localhost 3000
/EasyBlock-Finance/easyblock-frontend,JavaScript,easyblock make strongblock http strongblock com accesible everybody contract http github com dogud easyblock contract thanks purity ui dashboard http demo creative tim com purity ui dashboard
/xbc30/blockchain,Go,blockchain image pic png bitcoin liquid lightning schnorr taproot ethereum api cosmos tendermint cosmos hub fabric fabric uiexplorer defi compound pooltogether uniswapdefichainlink dapp eth eos tron iost go filecoin polkadot eth2 0
/JellyfishSDK/salmon,TypeScript,ci http github com defich salmon action workflow ci yml badge svg http github com defich salmon action workflow ci yml codecov http codecov io gh defich salmon branch main graph badge svg token iyl9k0wroa http codecov io gh defich salmon maintainability http api codeclimate com v1 badge 924a1c05249f72cf88e3 maintainability http codeclimate com github defich salmon maintainability npm http img shield io npm v defichain salmon http www npmjs com package defichain salmon defichain salmon mono repo defi blockchain price oracle service e2e setup includes infrastructure script serverless function price oracle service work progress publishing release type published prereleased github action automatically build package repo publish build artifact usage salmon designed aws lambda mind although individual package used fetch price push price oracle see configuration section information configuration salmon lambda function configurable via following environment variable ocean url url local remote whale instance network regtest testnet mainnet currency usd etc symbol comma separated list symbol fetch provider oracle id id oracle push price defichain private key ssm key ssm key aws private key api token optional api token certain provider e g tiingo finnhubb iexcloud intellij idea intellij idea ide choice writing maintaining library intellij ' file included convenience basic toolchain setup use intellij totally optional security issue discover security vulnerability defichain salmon please see submit privately http github com defich github blob main security md license disclaimer using defichain salmon repo user agree bound term license license
/Normalizex/1inch-api-v4,TypeScript,1inch api v4 medium v4 gif simple 1inch api v4 wrapper node j node j v11 0 0 typescript 4 6 3 introduction decentralised exchange dex 1inch ha unveiled v4 router bid make swap trade cheaper competing platform like uniswap sushiswap ethereum version 4 1inch router brings several major improvement dex including cheaper swap via lower gas cost improved rfq swap introduction dai standard permit according 1inch make swap 1inch router v4 average 5 4 cheaper swap made directly dexes uniswap much needed improvement rising cost gas fee ethereum feature full api coverage typescript support fully covered annotation comment installing using npm console npm normalizex 1inch api v4 using yarn console yarn add normalizex 1inch api v4 documentation find full documentation folder doc readme md doc readme md usage j import oneinchapi inchv4chains ' normalizex 1inch api v4 ' const inch new oneinchapi inchv4chains ethereum example j import oneinchapi inchv4chains normalizex 1inch api v4 const inch new oneinchapi inchv4chains ethereum const busd ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' const weth ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' const walletaddress ' 0x35552cf3ce8cc8a0f7fdc8aa88a89b92e9ab5fdb ' example inch chain return 1 inch swithchain inchv4chains binancesmartchain inch chain return 56 inch allowance busd walletaddress data &#9; return 0 inch approvespender data &#9; 0x1111111254fb6c44bac0bed2854e76f90643097d inch approvetransaction busd data &#9; &#9; &#9; &#9; &#9; &#9; data ' 0x095ea7b30000000000000000000000001111111254fb6c44bac0bed2854e76f90643097dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ' &#9; &#9; &#9; gasprice ' 15000000000 ' &#9; &#9; &#9; ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' &#9; &#9; &#9; value ' 0 ' &#9; &#9; &#9; inch healtcheck data &#9; status ' ok ' inch liquiditysources data &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; id ' bsc bi swap ' &#9; &#9; &#9; &#9; title ' biswap ' &#9; &#9; &#9; &#9; img ' http cdn 1inch io liquidity source logo biswap png ' &#9; &#9; &#9; &#9; img color ' http cdn 1inch io liquidity source logo biswap color png ' &#9; &#9; &#9; &#9; &#9; &#9; item &#9; &#9; &#9; inch presets data &#9; &#9; &#9; &#9; &#9; &#9; max result &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; complexitylevel 2 &#9; &#9; &#9; &#9; &#9; mainrouteparts 10 &#9; &#9; &#9; &#9; &#9; part 50 &#9; &#9; &#9; &#9; &#9; virtualparts 50 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; lowest gas &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; complexitylevel 0 &#9; &#9; &#9; &#9; &#9; mainrouteparts 1 &#9; &#9; &#9; &#9; &#9; part 1 &#9; &#9; &#9; &#9; &#9; virtualparts 1 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; complexitylevel 1 &#9; &#9; &#9; &#9; &#9; mainrouteparts 1 &#9; &#9; &#9; &#9; &#9; part 1 &#9; &#9; &#9; &#9; &#9; virtualparts 1 &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; &#9; inch token data &#9; &#9; &#9; &#9; &#9; &#9; &#9; symbol ' ' &#9; &#9; &#9; name ' network token bep20 ' &#9; &#9; &#9; decimal 18 &#9; &#9; &#9; address ' 0xdc0f0a5719c39764b011edd02811bd228296887c ' &#9; &#9; &#9; logouri ' http token 1inch io 0x0a913bead80f321e7ac35285ee10d9d922659cb7 png ' &#9; &#9; &#9; &#9; 284 item &#9; &#9; inch quote busd weth 50 1e18 data &#9; &#9; &#9; &#9; fromtoken &#9; &#9; &#9; symbol ' busd ' &#9; &#9; &#9; name ' busd token ' &#9; &#9; &#9; decimal 18 &#9; &#9; &#9; address ' 0xe9e7cea3dedca5984780bafc599bd69add087d56 ' &#9; &#9; &#9; logouri ' http token 1inch io 0x4fabb145d64652a948d72533023f6e7a623c7c53 png ' &#9; &#9; &#9; &#9; totoken &#9; &#9; &#9; symbol ' bnb ' &#9; &#9; &#9; name ' bnb ' &#9; &#9; &#9; decimal 18 &#9; &#9; &#9; address ' 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee ' &#9; &#9; &#9; logouri ' http token 1inch io 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c 1 png ' &#9; &#9; &#9; &#9; totokenamount ' 125276691940480656 ' &#9; &#9; fromtokenamount ' 50000000000000000000 ' &#9; &#9; protocol array &#9; &#9; estimatedgas 252364 &#9; &#9; donate course project wa made benefit personal convenience wanted share convenience github community send amount coin eth bsc network donation address 0x35552cf3ce8cc8a0f7fdc8aa88a89b92e9ab5fdb
/DeDogmaDao/dt-contracts,Solidity,h2 contract demmortaltreasure platform h2 contract nft src contract nft sol daotreasury src contract daotreasury sol gametreasury wip investmenttreasury wip weeklyfunddistributor wip library dterc721a src contract library dterc721a sol dtownable src contract library dtownable sol dtauth src contract library dtauth sol h2 flowchart h2 image flowchart flowchart png flokibb floki boat builder
/Badger-Finance/v2-ui,TypeScript,div img align right src doc image new badger png height 150 width 150 div badger ui badger ui react application focused providing user access smart contract developed mainted badger dao
/mcdexio/liquidity-mining,Python,liquidity mining mcdex mining round 1 xia jul 8th aug 8th total supply 410 000 mcb release 2 mcb block begin block 10 420 000 end block 10 624 999 2 shang total supply 205 000 mcb release 2 mcb block begin block 10 625 000 end block 10 727 499 3 zhou total supply 205 000 mcb release 2 mcb block begin block 10 727 500 end block 10 829 999 4 qin total supply 36 340 mcb release 0 2 mcb block begin block 10 830 000 end block 10 932 499 5 han total supply 318 200 mcb release 0 2 mcb block begin block 10 932 500 end block 12 523 499 mining reward distribution rule 1 mining reward calculated every block 2 lp ' position amm position amm share token balance total share token supply total position amm 3 net position lp j ' portfolio portfolio position position amm positon margin account 4 imbalance rate lp j ' portfolio imbalance rate ab portfolio position ab position amm 5 mining effective share lp effective share share token balance imbalance rate 10 effective share share token balance 89 80 imbalance rate 9 8 10 imbalance rate 90 effective share share token balance 0 1 imbalance rate 90 mean lp ' imbalance rate 10 still get mining reward fully balanced portfolio invalid mining share share token balance effective share 6 mining reward lp amm j reward lp j effective share sum effective share k reward amm j 7 amm j ' total effective mining value effective value j sum effective share k total share token supply amm position size usd j 8 distribute mining reward 2mcb block among amms reward amm j effective value j sum effective value k 2mcb amm list eth perp perpetaul amm 0xaaac8434217575643b2d2ab6f12ce8600c625520 http etherscan io address 0xaaac8434217575643b2d2ab6f12ce8600c625520 share token 0xae694fb9dcd1e6195519c0056b2ab19380b26ff2 http etherscan io token 0xae694fb9dcd1e6195519c0056b2ab19380b26ff2 feature 1 trace share token balance erc20 event 2 calculate save holder ' mining reward 3 pay mcb holder 4 api querying data usage install dependence apt get install postgresql pip3 install r requirement txt edit configure edit src config config py eth rpc url etherume http api url db url postgresql url run watcher python3 xia py use tool python3 tool py
/thanpolas/govbot,JavaScript,defi governance bot informs populates information regarding dao governance circleci http circleci com gh thanpolas govbot svg style svg http circleci com gh thanpolas govbot codecov http codecov io gh thanpolas govbot branch main graph badge svg token gmsgenfpys http codecov io gh thanpolas govbot project ha kindly supported sponsored uniswap dao uniswap balancer dao balancer install clone build git clone git github com thanpolas govbot git cd govbot npm needed environment variable project support env file dotenv gitignore convenience developing local needed environment variable found env template copy env edit snapshot org webhook coordination admins snapshot snapshot snapshot webhooks snapshot webhooks need post following endpoint post snapshot webhook twitter token follow guide get twitter token 1 account want tweet happen apply developer account twitter apply take day might ask followup question 1 developer account approved go developer portal create application twitter portal mark key token step create app 1 app created see dashboard 1 setting tab scroll user authentication setting click edit 1 toggle oauth 1 0a oauth 1 0a setting section 1 select app permission make sure read write 1 go back dashboard click key icon key token 1 regenerate consumer key note key value safe temporary document 1 regenerate access token secret note key value safe temporary document key available need populate following environmental variable twitter consumer key twitter consumer secret twitter access token twitter access token secret discord bot token follow guide create discord bot get token 1 go developer portal http discord com developer application 1 create application 1 go bot menu add expected permission 1 go oauth2 menu select bot scope 1 copy oauth2 url paste browser 1 help creating bot http discordpy readthedocs io en latest discord html bot token available need populate following environment variable discord bot token invited bot server need get id channel wish bot relay message set following environment variable discord gov channel id development operation maintenance reset local database npm run db reset local database migration command create new migration script npm run knex create migration name migration run migration npm run knex migrate running test locally use jest command run test specific one reset test database test look nuke test db environment variable set initiate test database nuking population use like bash nuke test db 1 jest update node version new node version available need updated following package json nvmrc circleci config yml deployment merge main deployment happen automatically heroku via circleci license copyright thanos polychronakis thanpolas author licensed isc docker compose http doc docker com compose reference overview docker desktop http www docker com product docker desktop dotenv http github com motdotla dotenv readme thanpolas http github com thanpolas tz http momentjs com timezone twitter apply http developer twitter com en apply access twitter portal http developer twitter com en portal dashboard uniswap http uniswap org balancer http balancer fi snapshot http snapshot org snapshot webhooks http doc snapshot org webhooks
/OctoFi/tentacle,Solidity,tentacle tentacle currently refactored next release tentacle 0 5 current functionality affected current contract operate normal new one deployed hopefully better ' coming code cleaner test core ganache mainnet fork documented newer solidity compiler used homemade high reliability oracle aggregator ethereum based defi apps need chain data bit streamlined execution functionality well tentacle logo http octo fi image project project tentacle jpg website octo fi http www octo fi demo soon try http octo fi image project project tentacle jpg getting started top smart contract referenced file dapp project include interface ' using solidity 0 5 0 javascript pragma experimental abiencoderv2 interface tentacleinterface function getexchangerate string calldata fromsymbol string calldata tosymbol string calldata venue uint256 amount external view return uint256 function gettokendecimalcount address tokenaddress external view return uint256 function gettokenaddress string calldata symbol external view return address function getsynthbytes32 string calldata symbol external view return bytes32 function getforexaddress string calldata symbol external view return address function arb address fundsreturntoaddress address liquidityprovidercontractaddress string calldata token uint256 amount string calldata exchange external payable return bool solidity 0 5 0 javascript interface tentacleinterface function getexchangerate string fromsymbol string tosymbol string venue uint256 amount external view return uint256 function gettokendecimalcount address tokenaddress external view return uint256 function gettokenaddress string symbol external view return address function getsynthbytes32 string symbol external view return bytes32 function getforexaddress string symbol external view return address function requestasyncevent string eventname string source external return string function getasynceventresult string eventname string source string referenceid external view return string function arb address fundsreturntoaddress address liquidityprovidercontractaddress string token uint256 amount string exchange payable return bool initialize tentacle mainnet simply include code javascript tentacleinterface tentacle tentacleinterface 0x ganache truffle documentation coming soon one best thing tentacle tentacle automatically detects kind asset looking though data come different provider parameter venue making getexchangerate call example get price eth usd way get price jpy eth 3rd parameter venue use blank ' ' default oracle future reference several venue provider get data throw deviate far average javascript uint jpyusdprice tentacle getexchangerate jpy usd default 100000 return 920 920 00 note replace default oracle provider would like data example want know uniswap ' price buy side use buy uniswap exchange want kyber ' sell side data use sell kyber exchange due way bancor work swap liquidity path simply use bancor querying bancor erc 20 many many integer getting price token token sure use large amount 1000000000 dai le one penny example due divisibility 18 example javascript uint price tentacle getexchangerate eth usdc uniswapbysymbolv1 100000000000000 support uniswap v 2 follows javascript uint price tentacle getexchangerate eth usdc uniswapbysymbolv2 100000000000000 javascript uint price tentacle getexchangerate btc dai sell uniswap exchange 100 javascript uint price tentacle getexchangerate eth dai bancor 1000000000000000 javascript uint price tentacle getexchangerate mkr eur 100000000000000 experimental javascript uint price tentacle getexchangerate aapl usd provider1 1 additionally hacky thing like retrieve safe gas price prevents front running within dapp querying synthetix ' gaspricelimit javascript uint gaslimit tentacle getexchangerate skip skip synthetix gas price limit 0 data event oracle addition pricing numerical data string data also retrieved using get geteventresult method get string data registered tentacle oracle optionally leave note oracle work detail used sporting event document note one might want store permanently temprarily expiration alien come want data human javascript string memory info tentacle geteventresult skip satoshi first block return time 03 jan 2009 chancellor brink second bailout bank restful api access getexchangerate functionality via restful api call e g javascript http api octo fi getexchangerate fromsymbol jpy tosymbol usd venue default amount 10000000000000000 soon live tentacle ' smart contract functionality added restful call soon find source code node j api app nodejsappexamples tentacleapi providing data oracle provider register provider name connect custom oracle contract dns style via tentacle oracle registry calling registeroracle function additionally tranfer oracle name provide contact detail case considering selling discover oracle provider via smart contract example oracle smart contract compatible tentacle proxy contract available contract example providedataexamples usergeneratedoracleexample sol simple example either return 500 2 deploy contract register registry paying small amount eth prevent spamming name check verify registration calling getoracleaddress function reputable well trustless oracle smart contract register within tentacle registry update new list reference source asset example currently main net asset example provider venue type eth default cryptocurrency btc default cryptocurrency dai kyberbysymbolv1 token usdc uniswapbysymbolv1 token link uniswapbysymbolv2 token mkr bancor token knc default token zrx default token tusd default token snx default token cusdc default token bat default token omg default token sai default token jpy default forex eur default forex chf default forex usd default forex gbp default forex aapl provider1 equity msft provider1 equity googl provider1 equity nflx provider1 equity brk provider1 equity fb provider1 equity baba provider1 equity v provider1 equity jnj provider1 equity tsla provider1 equity jpm provider1 equity dis provider1 equity spx provider1 etf voo provider1 etf qqq provider1 etf gld provider1 etf vxx provider1 etf top 20 erc 20 token available contract pegtokenexample sol contains template code live contract reference token using tentacle data pegged value chain asset alibaba stock example looking forward le primitive example leverage daos advanced collateralization technique etc also contract levfacility sol early stage begining creating token ha built leveraged short long credit facility margin trading future settled tentacle data early example contract example folder contains contract writing data oracle provider consuming data oracle consumer nodejsappexamples folder contains node j apps interface smart contract either read write oracle data getting data chainlink http chain link via tentacle retrieve data website chain asynchronously via chainlink integration coming soon ready javascript string status tentacle requestasyncevent http min api cryptocompare com data price fsym eth tsyms usd chainlink 1 3 block chainlink send website data tentacle access data without making transaction synchronously additionally access data website others already paid inputting url javascript string result tentacle getasynceventresult http min api cryptocompare com data price fsym eth tsyms usd chainlink similar integration augur provable band protocol coming soon transaction ha confirmed blockchain chainlink wait 1 3 block sends response smart contract
/interest-protocol/dinero-markets-old,TypeScript,seedling welcome interest protocol seedling doc asset gitbook 2 svg http doc interestprotocol com codecov http codecov io gh interest protocol dinero market branch main graph badge svg token o77fgab2mx http codecov io gh interest protocol dinero market twitter asset twitter svg http twitter com interest dinero discord asset discord svg http discord gg pjekqm4crk reddit asset reddit svg http www reddit com user interestprotocol interest protocol decentralized protocol designed provide money market asset class including nfts interest bearing token liquidity provider token high security money wing feature money wing borrow lend high yield stable vault liquidity farming fire technology fire core technology typescript http www typescriptlang org hardhat http hardhat org solidity http doc soliditylang org openzeppelin http openzeppelin com developer available package yarn add interest protocol contract useful command yarn compile yarn coverage warning node run memory write terminal export node option max old space size 8192 underlying protocol interest protocol integrates popular defi protocol maximize return user bsc network pancakeswap http pancakeswap finance chainlink http chain link venus http venus io bsc test net v1 contract upgradeable contract follow uup pattern name dinero proxy http testnet bscscan com address 0x57486681d2e0bc9b0494446b8c5df35cd20d4e92 implementation http testnet bscscan com address 0xd273f40b3b398b03428020329e430528793edcb3 code http github com interest protocol v1 core blob main contract token dinero sol interest token proxy http testnet bscscan com address 0x0d7747f1686d67824dc5a299aac09f438dd6aef2 implementation http testnet bscscan com address 0x9aced15124500d1fe9c2bc08c4b37762e066fc83 code http github com interest protocol v1 core blob main contract token interesttoken sol staked interest token proxy http testnet bscscan com address 0x9a7704d56ff363ed836fc09c34ba2663a96c71f8 implementation http testnet bscscan com address 0xb63d84823e4fdd14ba41876ce3e68db531484cb6 code http github com interest protocol v1 core blob main contract token stakedinteresttoken sol nftmarket proxy http testnet bscscan com address 0x37d309ffc97ed67d1dbc11b2e5f05367b599b073 implementation http testnet bscscan com address 0x22bc4f605b7db522c99887b72b2fe32ec3ff4c61 code http github com interest protocol v1 core blob main contract nftmarket sol casa de papel proxy http testnet bscscan com address 0x4702a58ebde5e09459052340dd1c1d818fe47d8b implementation http testnet bscscan com address 0xa67cdd9eee0320b2994558b52113c2138c54cb24 code http github com interest protocol v1 core blob main contract casadepapel sol library wrapper n implementation http testnet bscscan com address 0xddbd8fc4ef78bc8f9646d2550107b0bf03ee8369 code http github com interest protocol v1 core blob main contract librarywrapper sol pancake swap twap proxy http testnet bscscan com address 0x4a4d156a3f9b31ed3e4ede58aaff8d004355577a implementation http testnet bscscan com address 0x57ea7c23a54c25122a056e1b548a2624bc1d9c77 code http github com interest protocol v1 core blob main contract pancakeoracle sol oracle proxy http testnet bscscan com address 0x601543e1c59fe2485e8dba4298dd97423aa92f0b implementation http testnet bscscan com address 0x0e0da3de7343c21ca6f17818d5484eb082932b58 code http github com interest protocol v1 core blob main contract oracle sol bnb interest market proxy http testnet bscscan com address 0x42c0017e00219fc51405de1f47a7d85a885e56c5 implementation http testnet bscscan com address 0x70a29a73a473feaf5b4a668ff753757289733e3e code http github com interest protocol v1 core blob main contract interestbnbmarket sol btc interest market proxy http testnet bscscan com address 0x06b4a3622410270c40621d2e8e855386c54c323f implementation http testnet bscscan com address 0x25bed97287be9838782587fb3c7c5fa7add7176f code http github com interest protocol v1 core blob main contract interestmarketv1 sol thought balloon philosophy thought balloon follow famous facebook mantra move fast break thing interest protocol contract never go live test audit test net mvp possible combed formal verification tool chose upgradeable contract assure security post deployment tweak setting based community proposal contract never go v1 0 0 v2 0 0 upgrade whole new contract deployed upgrade involve code upgrade go normal security process resource interest protocol doc http doc interestprotocol com oz article http blog openzeppelin com workshop recap deploying efficient upgradeable contract eip 1822 http eips ethereum org eips eip 1822 social medium get touch info interestprotocol com twitter http twitter com interest dinero medium http medium com interestprotocol reddit http www reddit com user interestprotocol telegram http interestprotocol discord http discord gg pjekqm4crk
/madfish-solutions/yupana-protocol-core,JavaScript,yupana protocol description yupana protocol decentralized lending protocol individual protocol access financial service protocol permissionless transparent non custodial yupana protocol contract development repository follow development change architecture architecture yupana architecture png 1 ytoken core contract manages market implement fa2 interface ytoken collateral provided 2 pricefeedproxy proxy allows request price real oracle 3 interestrate provider method calculate supply borrow utilization rate project structure contract contract main contract compiled ytoken interestrate pricefeed partial code part imported main contract interestrate interestratemethods interestratetypes proxy pricefeedmethods pricefeedtypes ytoken adminmethods fa2methods fa2types lendingmethods lendingtypes wraptransfer maintypes migration script cli account action storage initial storage contract origination test test case readme md current file gitignore glossary underlying asset real asset provided lending protocol ytoken token single token specific token id inside core yupana fa2 represents specific underlying asset locked protocol collateral ytoken token used collateral take loan borrow amount underlying asset borrowed user loan cash amount underlying asset present contract borrowed reserve amount underlying asset stored protocol collateral factor rate represents borrow limit increase ytoken minted close factor max portion loan liquidated per single transaction reserve factor rate represents part interest go protocol reserve liquidation discount rate liquidator earn liquidate asset contract pricefeedproxy getprice asset name called ytoken otherwise transaction fails request price price feed expects response receiveprice entrypoint receiveprice called price feed response processed price sent ytoken contract receiveprice called getprice ha called operation prevent unexpected entrance reentrancy entered flag used entrypoints getprice asks price oracle receiveprice sends price oracle ytoken contract interestrate contract ha followed 3 entrypoints called anyone result send arbitrary contract getborrowrate borrows cash reserve getsupplyrate borrows cash reserve getutilizationrate borrows cash reserve entrypoints getborrowrate sends callback counted borrowrate getsupplyrate sends callback counted supplyrate getutilizationrate sends callback counted utilizationrate ytoken entrypoints mint function add token collateral allows add token system redeem function designed withdraw token platform borrow function borrowing token implemented logic freezing collateral token borrowing token repay function designed repay debt liquidate function allows another user liquidate someone ' debt entermarket allows designate token used collateral exitmarket allows indicate token longer used collateral quick start compile deploy contract network 0 run yarn 1 compile contract yarn compile 2 deploy contract chain mainnet yarn migrate hangzhounet yarn migrate hang granadanet yarn migrate gra testing run yarn test
/viaMover/mobile-app,JavaScript,http cdn image 1 medium com max 1600 1 mpz6v0441n gf4hm0t2nsa png mover defi saving account mover make internet economy easy available everyone app abstract blockchain complexity finally get great financial service defi benefit earn highest safest yield digital asset automatic portfolio management system also send receive swap 30 000 digital asset ethereum credit version wallet based best open source ethereum wallet ha ever existed rainbow http rainbow deep fan rainbow sock decided continue great work done open source community create import export non custodial wallet mover non custodial wallet mean wallet created owned import export wallet app use cloud back private key send receive swap 30000 token ethereum mover easily swap across 3000 token available ethereum network swap send receive erc20 erc721 token swap done using smart decentralized exchange aggregator ensure lowest fee best rate deposit earn yield asset choose earn highest safest yield digital asset disappoint mover ha proprietary robo advisory architecture ensures lowest fee highest available yield market safety via stablecoins saving internet doesnt boring complicated watch saving grow real time smart treasury every move move eth lp holder get claimable bonus treasury used cover expense app keep track claimable bonus perform claim burn simply watch share grow real time track nft portfolio keep track digital art portfolio move support erc721 erc1155 token always check beauty multichain support easily connect polygon matic bsc network via walletconnect favorite dapps app support custoemr support doe exist defi ' chat team right app ' next still alpha stage lot feature hidden planning expand soon well offering fiat ramp virtual physical debit card multichain support portfolio concierge smart suggestion
/deusfinance/staking-contracts,Solidity,depricated staking contract smart contract dea token staking mechanism audited certick team http www certik com project deusfinance pre requisite need following software machine git http git scm com downloads node j http nodejs org en download addition familiarity solidity http soliditylang org hardhat http hardhat org requisite set install dependency bash npm install create env file follow sample env file add requisite environment variable run bash npx hardhat compile start making change contributing feel free dive open http github com deusfinance staking contract issue new issue start http github com deusfinance staking contract discussion new discussion submit pr concern feedback join u discord http discord gg nwfztqev security security concern please email admin deus finance mailto admin deus finance license mit license md mainframe group inc
/Ricochet-Exchange/rex-bank,Solidity,rex bank ricochet project managing fixed rate collateral backed lending ethereum repository contains core smart contract test written typescript using framework hardhat ether library role based access used rex bank modifier reservedeposit reservewithdrawcollateral function commented old test written access wa simple admin user linter point code improvement error message long block timestamp related function used make time calculation mark visibility state variable bankstorage sol current state code two test case failing allow user withdraw collateral vault undercollateralized add origination fee vault ' borrowed amount message error error vm exception processing transaction reverted reason string ' enough collateral ' ' calculate correct collateralization ratio user ' vault ' ' liquidate undercollateralized vault ' test case commented interact oracle ha mocked however code ha rewritten ether except web3 eth sendtransaction function performance optimization faster run test script consider skipping node ' type checking setting environment variable node transpile 1 hardhat ' environment detail see documentation http hardhat org guide typescript html performance optimization design consideration transparency contract code simple enough understand anyone familiar solidity flexibility type collateral debt rate configured easy use deployment configuration simple enough anyone familiar ethereum web programming smart contract summary deployment bank owner specifies following parameter debt token token user borrow bank e usdc collateral token token bank accepts collateral e trb interest rate annual interest rate bank charge borrower origination fee fixed fee charged borrower collateralization ratio loan value amount borrower must maintain avoid liquidation liquidation penalty fixed fee charged borrower get liquidated period period calculating interest second deployed bank owner must deposit debt token bank ' reserve depositing debt token user deposit collateral token borrow bank ' debt token borrow borrower charged origination fee interest accumulate repay ' borrowed plus interest fee anytime price collateral fall bank owner liquidate borrower collateral repay debt local development december 2021 project wa migrated truffle hardhat version 2 8 0 waffle solidity version changed 0 5 0 0 8 4 tool used testing node version 16 6 1 npm version 7 2 0 3 test written typescript 4 5 2 ether version 5 5 2 chai matcher compiling npx hardhat compile testing npx hardhat test generating json file npm run build deployment deployment localhost testnet mainnet edit parameter ' interested using example configuration let daiaddress 0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea let trbaddress 0xfe41cb708cd98c5b20423433309e55b53f79134a let tellororacleaddress 0xfe41cb708cd98c5b20423433309e55b53f79134a let interestrate 12 let originationfee 1 let collateralizationratio 150 let liquidationpenalty 20 let period 86400 let trbusdrequestid 50 let daiusdrequestid 39 let initialprice 1000000 let pricegranularity 1000000 await deployer deploy bank interestrate originationfee collateralizationratio liquidationpenalty period trbaddress trbusdrequestid initialprice pricegranularity daiaddress daiusdrequestid initialprice pricegranularity tellororacleaddress replace value wish use bank deployment visit bank sol constructor detail parameter local development deprecated first truffle migrate contract deploy ganache setup contract using truffle console console approve deposit debt token e usdtoken bank ' reserve let bank await bank deployed let dt await usdtoken deployed let account await web3 eth getaccounts await dt approve bank address web3 utils towei 1000 ether account 0 await bank reservedeposit web3 utils towei 1000 ether account 0 running dapp deprecated start dapp using npm export port 3000 npm run dev working tellor oracle localhost deprecated initialize oracle object get account let oracle await tellormaster deployed let oracleaddress web3 utils tochecksumaddress oracle address let oracle2 await new web3 eth contract tellor abi oracleaddress let account await web3 eth getaccounts make request oracle await web3 eth sendtransaction oracleaddress account 0 gas 4000000 data oracle2 method requestdata usdt usdt usd 1000 0 encodeabi next submit 5 value mining await web3 eth sendtransaction oracle address account 1 gas 4000000 data oracle2 method submitminingsolution nonce 1 1000000 encodeabi await web3 eth sendtransaction oracle address account 2 gas 4000000 data oracle2 method submitminingsolution nonce 1 1000000 encodeabi await web3 eth sendtransaction oracle address account 3 gas 4000000 data oracle2 method submitminingsolution nonce 1 1000000 encodeabi await web3 eth sendtransaction oracle address account 4 gas 4000000 data oracle2 method submitminingsolution nonce 1 1000000 encodeabi await web3 eth sendtransaction oracle address account 5 gas 4000000 data oracle2 method submitminingsolution nonce 1 1000000 encodeabi bank contract usingtellor get current data oracle using let var await bank getcurrentvalue call 1 price contained var 1 update price await bank updateprice account 0 testing deprecated unit test smart contract functionality run using truffle test smoke testing deployment addition unit test run test manually contract ha deployed confirm everything work correctly dapp update debt collateral token price owner deposit debt token borrower deposit collateral withdraw debt borrow repay debt add remove collateral repay debt withdraw collateral borrower undercollateralized liquidate borrower owner withdraw collateral debt
/stableex/sx.vaults,C++,sx vault eosio smart contract href http www slowmist com en security audit certificate html id fe2593e1000c35d64787c00392c63e858dcad1608bec8bf6a69822e75cf3ffe7 img width 250px src http www slowmist com image logo security audit png v 1 1 href http www slowmist com security audit certificate html id fe2593e1000c35d64787c00392c63e858dcad1608bec8bf6a69822e75cf3ffe7 href http www slowmist com en security audit certificate html id fe2593e1000c35d64787c00392c63e858dcad1608bec8bf6a69822e75cf3ffe7 en sx vault follow interest yielding strategy designed maximize yield deposited asset minimize risk sha256 checksum local bash git checkout v1 0 0 eosio cpp vault sx cpp include shasum 256 vault sx wasm e7ef5b2a98b84aa70429e99e2bca9a3c52b87962b55fc0cd8b3632bd732f767e vault sx wasm eos mainnet bash cleos u http api eosn io get code vault sx code hash e7ef5b2a98b84aa70429e99e2bca9a3c52b87962b55fc0cd8b3632bd732f767e deposit user send eos token vault sx receive sxeos token redeem user send sxeos token vault sx receive back eos interest accumulated time period holding sxeos asset price vault initially priced 1 10 000 ratio interest accrued vault price ratio decrease thus increasing price deposit supply quickstart bash deposit eos sxeos 1 1 ratio cleos transfer myaccount vault sx 1 0000 eos redeem sxeos eos 1 1 ratio accrued fee cleos transfer myaccount vault sx 10000 0000 sxeos contract token sx table content table vault table vault action setvault table setvault action update table update table vault asset deposit vault deposit amount asset staked vault staked amount asset supply vault active supply name account account deposit balance time point sec last updated last updated timestamp example json deposit quantity 2000 0000 eos contract eosio token staked quantity 800 0000 eos contract eosio token supply quantity 1000000 0000 sxeos contract token sx account flash sx last updated 2020 11 23t00 00 00 action setvault set initial vault deposit balance supply authority get self params extended symbol deposit deposit symbol symbol code supply id liquidity supply symbol name account account deposit balance example bash cleos push action vault sx setvault ' 4 eos eosio token sxeos flash sx ' p vault sx action update update vault deposit balance supply authority get self vault account params symbol code id deposit symbol example bash cleos push action vault sx update ' eos ' p vault sx
/jensb89/anchor-earnings,Python,anchor earnings flask website show deposit earnings anchor protocol try going http anchor earnings herokuapp com directly http anchor earnings herokuapp com address terra address replace terra address address screenshots http github com jensb89 anchor earnings raw imgs macscreenshotearnings png img src http github com jensb89 anchor earnings raw imgs iphonescreenshotmain png width 400 img src http github com jensb89 anchor earnings raw imgs iphonescreenshotearnings png width 400 development run locally debug mode export flask debug 1 flask run clear project wa created one weekend super early stage yet deposit redemption anchor protocol well plot gain time shown code still massively improved want improve feel free submit pull request todos better error handling needed catch exception error code response showing meaningful warning html page etc handle transfer aust token handle interaction mirror contract using aust collateral check redemption calculation yield affected redeeming aust ust unit test contributing pull request welcome major change please open issue first discus would like change info merged commits main automatically trigger rebuild app heroku git push u origin main donate keep motivated support little project feel free donate following terra address terra1udrz5xmtj4vg7uwu653dpk54sleqfwcrdnpccy license mit http choosealicense com license mit
/aekiti/superchat,JavaScript,superchat superchat open source decentralized finance defi chat pp built mainly superhero com platform http superchat aekiti com contributing md contributing md superchat contract repo http github com aekiti superchat contract humandefihck project http devpost com software superchat project setup bash npm install compiles hot reloads development bash npm start compiles minifies production bash npm build license license markdown mit license copyright c 2020 kiti mbassy permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense sell copy software permit person software furnished subject following condition
/MadeInDreams-Team/idecentralize,JavaScript,idecentralize complete dex decentralized exchange also include admin panel add new token dex also implemented yield farming feature like sushiswap last step project nft contract included ui user interface interact leave
/smartcoding51/wevest-lending-protocol,Solidity,wevest protocol v1 repository contains smart contract source code market configuration wevest protocol v1 repository us hardhat development enviroment compilation testing deployment task wevest wevest protocol innovative lending protocol return profit borrower lender utilizing ' use right delegated interest rate structure ' wevest protocol 100 dao operated smart contract process loan repayment risk management processed without human intervention wevest protocol ha function implement loan three characteristic 1 interest free 2 maturity 3 leverage structure different general lending protocol biggest difference term technology summarized three way interest rate model liquidity pool management risk management documentation documentation wevest v1 following wevest v1 documentation http wevest protocol wevest gitbook io wevest protocol 1 link documentation learn protocol setup follow next step setup repository install node j npm run npm install create enviroment file named env fill next enviroment variable mnemonic first address used mnemonic add infura provider key alchemy take preference config level infura key optional etherscan key automatize verification contract etherscan etherscan key run npm run compile npm run test author kei nakano
/onuratakan/mix_merkletree,Jupyter Notebook,mix merkletree made python http img shield io badge made 20with python 1f425f svg http www python org open collab http colab research google com asset colab badge svg http colab research google com github onuratakan mix merkletree github license http img shield io github license naereen strapdown j svg http github com onuratakan mix merkletree blob master license mix deepface example http repository image githubusercontent com 329576405 d8b93800 59b2 11eb 9768 25dfdef4eea6 usefull merkle tree example please visit blog post medium http onuratakan medium com merkle tree python example cbb4513b8ad0
/tomuky/fastdefitutorial,JavaScript,fastdefitutorial simple one page website help people try decentralized finance
/byteball/btc-oracle,JavaScript,btc oracle oracle post data recent bitcoin payment obyte database par recent block got least 2 configurable confirmation collect output merkle tree post merkle root obyte data feed get proof particular bitcoin address receive particular payment user chat oracle bot sends bitcoin address bot responds merkle proof bitcoin address receive payment user copy paste merkle proof wallet order unlock fund smart contract data used trustless except trust oracle exchange bitcoins byte obyte asset including private asset blackbytes seller byte sends smart contract unlocked buyer provides merkle proof obtained oracle sent required amount bitcoins seller ' bitcoin address seller expiry period merkle proof provided oracle reproducible generated anyone running algorithm install install bitcore http bitcore io guide full node create new bitcore node bitcore create bitcore data obyte btc oracle add testnet work testnet bitcore data location data directory full bitcoin bockchain stored obyte btc oracle name node cd node folder cd obyte btc oracle install btc oracle service npm install btc oracle edit bitcore node json add btc oracle service remove web service file look like network livenet port 3001 service bitcoind btc oracle servicesconfig bitcoind spawn datadir home yourusername bitcore data exec usr lib node module bitcore node module bitcore node bin bitcoind start node automatically start btc oracle service bitcored start first time exit immediately complaining missing admin email conf setting email receive important notification node edit config bitcore conf json look like &#9; devicename btc oracle &#9; admin email admin yourdomain com &#9; email btc oracle alert yourdomain com &#9; hub obyte org bb &#9; bwantnewpeers false &#9; bsingleaddress true &#9; min confirmation 2 &#9; min available posting 100 &#9; sockshost 127 0 0 1 &#9; socksport 9050 &#9; sockslocaldns false &#9; control address device address gui wallet &#9; payout address obyte address allowed withdraw fund &#9; permanent paring secret sock setting recommended run node tor since trusted post true accurate data ' want potential attacker know ip address tor good way hide see min confirmation minimum number confirmation bitcoin transaction considered final posted oracle min available posting minimum number unspent output script try split large output number drop minimum see documentation headless wallet headless obyte core library ocore learn setting conf json editing conf json start node take time sync obyte bitcoin network every time node start print pairing code device pubkey a9bg4s0zi36pctp4p8snywz dgefm9dp75tcaci22byz pairing code a9bg4s0zi36pctp4p8snywz dgefm9dp75tcaci22byz obyte org bb 0000 put code site customer able start dialog bot clicking link href obyte a9bg4s0zi36pctp4p8snywz dgefm9dp75tcaci22byz obyte org bb 0000 start chat oracle chatbot could also take staight merkle proof adding bitcoin address pairing code href obyte a9bg4s0zi36pctp4p8snywz dgefm9dp75tcaci22byz obyte org bb 1bitcoineateraddressdontsendf59kue get merkle proof btc oracle open link control device specified control address access admin function see documentation headless wallet headless obyte type address see oracle ' address refill balance able pay fee security since trusted post true accurate data recent bitcoin transaction oracle lucrative target attacker fortunately oracle running chat interface make unnecessary accept incoming connection publicly known ip address mean addition standard security measure also completely hide ip address server potential attacker ' easy learn server attack first place although node ' accept incoming connection still ha establish outgoing connection least hub leak ip address avoid run node tor setting sockshost socksport sockslocaldns conf json also configure bitcoin node run tor adding proxy 127 0 0 1 9050 bitcoin conf
/ow3org/cardano-stake-pool-aws,Shell,cardano stake pool ops project aim simple way set cardano stake pool block producer relay node inside secure highly available fault tolerant aws cloud network implement easily configurable yet well opinionated approach based best practice found inside community soon intend providing script cloud provider custom environment feature installs latest cardano node v1 30 1 secure default simple aws setup 1 core 2 relay node automatic alarm notification cpu ram storage alert useful management tool beautiful graph thanks guild operator created great tooling stake pool operator spo managed pool offer high pledge also provide lot utility reward simply member feel free reach would love get know prerequisite guide assumes aws cli set locally ' incredibly simple process well explained within official documentation found http doc aws amazon com cli latest userguide install cliv2 html aws cli http doc aws amazon com cli latest userguide install cliv2 html installed machine run following command get authenticated bash aws configure next let ' install serverless cli tool authenticate npm install g serverless serverless serverless amazing tool automates setup aws account important note configure aws account need select region minimum offer 3 availability zone like u east 1 view region may select doc aws az zone md get started bash 1 let ' create env file make sure set variable appropriate cp env example env 2 need create ssh key pair authenticate device securely aws script generate ssh key pair sh 3 next let ' create stake pool environment including 1x block producer node 2x relay node npm run build stake pool take 3 hour testnet node 8 hour mainnet node process receive 2 email asking confirm subscription required order receive system alert 4 securely ssh cardano node navigate aws ec2 figure host use port defined env ssh cardano stake pool pem ubuntu ec2 12 68 116 220 compute 1 amazonaws com p 22 5 point assume node sync blockchain allows u create block producer node key certificate script generate block producer key sh please run command core node read comment detail useful command bash cardano node specific command start start block producer relay node restart restarts node service stop stop node service status view status node update alpha update node viewing filtering log log logstoday logsyesterday journalctl unit cnode since ' 2021 09 01 00 00 00 ' ' 2021 09 30 12 00 00 ' logmonitor monitor cardano node log creationlogmonitor monitor log output user data script mostly build node sh log output useful command gliveview systeminfo display system info server please beware delete aws stake pool resource npm run cleanup clean environment npm run cleanup guild npm run cleanup testnet npm run cleanup mainnet important note mainnet need regenerate kes key every 90 day use provided script automated future release cold key must generated stored air gapped offline machine exercise plenty test network operating mainnet node may also want check alias file helpful shortcut changelog please see release http github com meemalabs cardano stake pool aws release page information ha changed recently contributing please see contributing github contributing md detail one important command oftentimes used debugging bash tail f var log cloud init output log alias monitornodecreationlogs command log user data script build aws ubuntu server community help discussion best practice conversation would benefit searchable stake pool discussion github http github com meemalabs cardano stake pool aws discussion casual chit chat others using package join stake pool discord server http discord meema io security please review security policy http github com meemalabs cardano stake pool aws security policy report security vulnerability credit guild operator http github com cardano community guild operator chris breuer http github com chris1904 folk meema http github com meemalabs contributor contributor license mit license mit please see license license md information made meema inc
/fintechees/Fintechee-Tutorials,JavaScript,tutorial repository contains example created tutorial video youtube channel http www youtube com channel ucjbs l6ruxhtzlfrhduvgsg
/j-mueller/convex,Haskell,convex library working cardano node muesliswap http github com muesliswapteam muesliswap cardano contract contract convex muesli core lib convex muesli core readme md type function dealing muesli order convex muesli data export lib convex muesli data export readme md export muesli trade csv convex node client lib convex node client readme md convenience cardano node client convex blockfrost client lib convex blockfrost client readme md binding blockfrost ' submit endpoint convex price lib convex price readme md http api asset price convex option lib convex option readme md plutus implementation option http en wikipedia org wiki option finance contract contributing contribution bug report always welcome join discord http discord gg bcrrevudns server
/sambacha/boilerplate-fintech-legal-templates,Shell,legal boilerplate legal document 1 6k bsd 4 clause 755 license 428 network banner notice txt 4 9k network rule behavior adoc 803 nist network banner 3 1k readme md 769 index 480 doc 1 6k 15 cfr740 6 software export control md 14k compliance record md 1 5k data breach policy md 1 1k document disclaimer md 13k document retention policy md 11k incident response md 34k network validator md 216 readme md 4 3k software defect md 4 0k tos document md 3 6k website disclaimer md 458 package json 635 package json 96 pdf 39k militarily critical technical dataagreement pdf 96 release 34k lega doc v1 zip 76 template generate sh overview material intended general informational educational purpose user responsible obtaining legal business advice lawyer professional rely ' form ' library document without seeking advice attorney client relationship neither availability operation transmission receipt use ' form ' library document intended create doe create attorney client relationship relationship information provided connection use ' form ' library document privileged confidential notice document disclaimer start document provided copyright holder make representation warranty express implied including limited warranty merchantability fitness particular purpose non infringement title content document suitable purpose implementation content infringe third party patent copyright trademark right copyright holder liable direct indirect special consequential damage arising use document performance implementation content thereof name trademark copyright holder may used advertising publicity pertaining document content without specific written prior permission title copyright document time remain copyright holder document disclaimer end boilerplate legal template compliance record md data breach policy md document disclaimer md document retention policy md incident response tream md network validator md software defect md website disclaimer md government compliance certification form dd2345 militarily critical technical data agreement dm genser message security classification category marking phrase requirement dfars clause 252 204 7012 safeguarding covered defense information cyber incident reporting genser classification community security label certificate attribute authoritative source unclassified u yes yes eo 12958 confidential u yes yes eo 12958 secret u yes yes eo 12958 top secret u yes yes eo 12958 license spdx license identifier isc
/trnhgquan/CurveFi-1inch,JavaScript,
/oikos-cash/exchange,JavaScript,twitter follow http img shield io twitter follow oikos cash svg label oikos cash style social http twitter com oikos cash note project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console npm test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information npm run build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org
/pmuens/yield-farming,JavaScript,yield farming defi app implement concept yield farming liquidity mining following dapp university tutorial http www youtube com watch v cgxqc4dbgue setup npm install install start ganache http www trufflesuite com ganache install setup metamask http metamask io useful command npx truffle compile npx truffle migrate reset npx truffle console npx truffle exec path j npx truffle test npm run test truffle npm run start misc inside truffle console tokenfarm await tokenfarm deployed tokenfarm tokenfarm address name await tokenfarm name
/conlot-crypto/ethereum,Solidity,table content 1 learning solidity programming solidity development solidity statically typed contract oriented high level language implement smart contract ethereum platform code focused tutorial detailed explanation example code junior level day1 day3 medium level day4 day6 expert level day7 day9 2 ethereum knowledge solidity ethereum belows helpful ethereum knowledge know become expert industry day10 amm ethereum amm md day11 price oracle ethereum price oracle md day12 popular attack ethereum attack md day13 dao day14 governance 3 hardhat starter project http github com commonlot hardhat starter useful hardhat starter project package start smart contract development scratch recommend start using starter project
/izumiFinance/izumi-swap-core,JavaScript,iziswap core div align center href http izumi finance img width 900px height auto src image logo png div contract iziswap core incorporated innovative discretized liquidity amm model iziswap next generation dex maximize capital efficiency realizing limit order decentralized way design detail found paper iziswap building decentralized exchange discretized concentrated liquidity limit order http github com izumifinance izumi swap core blob main whitepaper iziswap 20building decentralized exchange discretized concentrated liquidity limit order pdf
/fsn-dev/fsn-faucet,Go,fsn faucet fusion testnet faucet
/ZeroPointThree17/radbag-wallet,JavaScript,radbag mobile wallet radix dlt p align center img alight center src src asset radish nobackground png width 100 p introducing radbag wallet radbag wallet first io android mobile wallet radix dlt ecosystem br br feature wallet include wallet creation import multi wallet multi address support ability display send receive xrd token qr code reader receiving payment ability stake unstake xrd validator ability create new token p float left img src src asset 6 5 inchscreenshot1 png width 100 img src src asset 6 5 inchscreenshot2 png width 100 img src src asset 6 5 inchscreenshot3 png width 100 img src src asset 6 5 inchscreenshot4 png width 100 img src src asset 6 5 inchscreenshot5 png width 100 img src src asset 6 5 inchscreenshot6 png width 100 img src src asset 6 5 inchscreenshot7 png width 100 p typical app installation app downloaded installed iphone apple app store using link br br b note b due dependence certain cryptographic library io v 13 0 supported br br p align center href http apps apple com u app raddish wallet id1608033916 img src src asset download app store badge png width 150 p also available android android 8 0 br br p align center href http play google com store apps detail id com raddishwallet hl en u gl u img src http i0 wp com radbag io wp content uploads 2022 03 googleplay 1 png resize 768 2c228 ssl 1 width 150 p installation development purpose app wa created using react native detailed installation instruction come already least xcode v12 0 node j v16 5 0 npm v7 19 1 installed go radbag wallet home directory run bash npm install go project home io directory run bash pod install go back project home directory run following start iphone io simulator bash npx react native run io android run bash npx react native run android contributing pull request welcome major change please open issue first discus would like change license mit http choosealicense com license mit
/ApeAcademy/ERC20,Python,ape academy erc20 template quick easy way build token powered apeworx usage note make sure template plugin installed first sh ape template gh apeacademy erc20 cd project name ape plugins install u ape test contributing contribute template please understand cookiecutter http www cookiecutter io work add test case define new test scenario test test
/gdsoumya/AtomicSwap,JavaScript,atomicswap completely chain atomic swap setup guide help setup automated atomic swap xtz eth 1 clone repository sh git clone http github com gdsoumya atomicswap git 2 install dependency sh cd atomicswap try npm 3 add config data try directory 2 directory createswap respond2swap directory ha config json file need filled need 2 tezos 2 ethereum activated address fund testnets carthagenet goerli use faucet get test fund carthagenet http faucet tzalpha net goerli http goerli faucet slock fill private key network make sure use separate account directory createswap config ' field swap amount default set 5xtz 0 04eth 4 configs set run either ethswap j tezswap j first one initates ethereum swap second one initiate tez swap first sh node createswap ethswap j sh node createswap tezswap j starting script recieve swap secret note starting second script wait till see message swap generated message pop swap xtz eth ha created start second script parallely different terminal run second script corresponds first one ethswap j ethrespond j tezswap j tezrespond j sh node respond2swap ethrespond j sh node respond2swap tezrespond j presented list available swap select swap hashedsecret wa generated previous script selected swap completed automatically script exit check account balance verify take 15 20 min swap completed start first script
/garethfuller/balancer-fyi-web,Vue,introduction repo frontend balancer fyi http balancer fyi balancer fyi alternative ui exploring interacting balancer http balancer finance pool development setup development environment first clone repo bash git clone http github com garethfuller balancer fyi web git cd balancer fyi web install dependency bash yarn install start app bash yarn dev app live http localhost 3000 http localhost 3000 docker ' rather spin app docker container bash docker compose app live http localhost 3000 http localhost 3000 deployment ci cd push merge main branch ci cd workflow triggered 1 linting test run 2 production docker image built 3 docker image pushed dockerhub 4 kubernetes deployment yml manifest updated applied cluster manual deployment deployment triggered manually action tab trigger deployment latest commit main branch 1 select production ci cd 2 select run workflow 3 click run workflow button rollback rollback specific commit triggered manually trigger rollback deployment 1 select rollback ci cd 2 select run worflow 3 paste commit sha want rollback 4 click run workflow button dependency following list relevant important dependency nuxt j http nuxtjs org frontend vue framework tailwindcss http tailwindcss com utility cs class framework ether j http doc ether io v5 j library interacting ethereum design system design system derived tailwind configuration file tailwind config j please see doc http tailwindcss com doc configuration configuration option development visual library design system accessed localhost 3000 tailwind http localhost 3000 tailwind todo add test critical component e g authbtn vue add filtering functionality add pool page add create pool functionality better abstraction subgraph query
/Vvaradinov/chargedefi-tracker,TypeScript,chargedefi tracker tracker chargedefi fi http tracker chargedefi fi project wa created easily track investment across different chargedefi vault farm boardroom one tab feature boardroom tracking farm tracking beefy vault tracking basic protocol stats expansion debt stats estimated daily increase boardroom beefy vault farm protocol stats tracking expansion rebase general tvl earnings history stats every epoch roi calculator development want fork extend functionality app install dependency wa build chakra ui http github com chakra ui chakra ui web3 j http github com chainsafe web3 j feel free pick anything roadmap build custom feature submit pr sh yarn install deploy webpack sh yarn build roadmap investment strategy automation replaced moneylegos farm 60 40 reinvest boardroom 60 40 reinvest custom strategy automated yield calculator daily weekly total yield calendar tracking spreadsheet track amount lp increase day track dollar value change day track protocol statistic day essentially nice table read write airtable google sheet ex example manual sheet http doc google com spreadsheet 1zy jl4owfvvktsknbzrfzofrvnyilthyammafctoksg edit gid 0 license mit
/0xTDF/Token-Weighted-Governance-Security-Exploit-Using-AAVE-Flash-Loans,Solidity,mit license license shield license url linkedin linkedin shield linkedin url token weighted governance security exploit using aave flash loan taking advantage aave flash loan gain unfair voting power poorly designed governance protocol flashvoter sol contains interesting potentially dangerous concept method used well established project http forum makerdao com urgent flash loan securing maker protocol 4901 calling developer rethink protocol implementation security development goal expand solidity knowledge develop deeper understanding defi aave protocol understand potential security vulnerability within smart contract governance protocol built open zeppelin http openzeppelin com solidity http doc soliditylang org en v0 8 6 aave http doc aave com developer license license distributed mit license see license information contact contact twitter 0xtdf http twitter com 0xtdf linkedin http www linkedin com ramwatson http www linkedin com ramwatson project link http github com 0xtdf chainshot aave security http github com 0xtdf chainshot aave security acknowledgement acknowledgement chainshot http www chainshot com markdown link image http www markdownguide org basic syntax reference style link license shield http img shield io github license othneildrew best readme template svg style badge license url http github com othneildrew best readme template blob master license txt linkedin shield http img shield io badge linkedin black svg style badge logo linkedin colorb 555 linkedin url http www linkedin com ramwatson
/AlbertoCruzLuis/DefiBankDapp,TypeScript,h1 align center welcome defibank h1 p img alt version src http img shield io badge version 0 1 0 blue svg cacheseconds 2592000 href http twitter com albertocruzdev target blank img alt twitter albertocruzdev src http img shield io twitter follow albertocruzdev svg style social p defi bank dapp created ethereum 101 course cadena dev href http defibank vercel app target blank img alt defibank landing src public asset landingpage png demo http defibank vercel app install sh npm install usage sh npm run dev tech nextjs react typescript tailwindcss graphql graph solidity hardhat author alberto cruz luis website http www albertocruzluis com twitter http twitter com albertocruzdev http twitter com http twitter com albertocruzdev github http github com albertocruzluis http github com http github com albertocruzluis linkedin http www linkedin com albertocruzluis http linkedin com http www linkedin com albertocruzluis show support give project helped readme wa generated readme md generator http github com kefranabg readme md generator
/Coin-Port/CoinPort,Python,coin port http coinport fi particular order custom date range multi address support detailed pool staked balance fixing overcounting token staked deposited client side api call rather server side may may move calulations client side without python pie chart display historical balance better graph multi currency support lightmode darkmode switch
/Celsians/celswap-interface,TypeScript,celswap interface open source interface celswap protocol decentralized exchange ethereum token website celswap org http celswap org interface app celswap org http app celswap org accessing celswap interface access celswap interface use ipfs gateway link visit app celswap org http app celswap org first install dependency build uniswap sdk package bash yarn yarn build yarn link install celswap dependency bash yarn yarn start run bash yarn start configuring environment optional interface default different network wallet connected 1 make copy env named env local 2 change react app network id network id 3 change react app network url e g http network id infura io v3 infura key note interface work ropsten kovan testnets
/Sovryn-Origins/origins,Solidity,origin origin platform smart contract badge version tag npm package http img shield io npm v origin launchpad svg style flat http www npmjs org package origin launchpad github tag latest date http img shield io github v tag distributedcollective origin issue pr github issue http img shield io github issue distributedcollective origin github pull request http img shield io github issue pr distributedcollective origin ci code coverage node j ci http github com distributedcollective origin action workflow node j yml badge svg http github com distributedcollective origin action workflow node j yml coverage status http coverall io repos github distributedcollective origin badge svg branch main http coverall io github distributedcollective origin branch main code style code style prettier http img shield io badge code style prettier ff69b4 svg style flat http github com prettier prettier metric activity github language count http img shield io github language count distributedcollective origin github commit activity http img shield io github commit activity distributedcollective origin github last commit http img shield io github last commit distributedcollective origin user manual skip general description structure review go creating adding origin sale new tier sale jump user manual user manual md main contract originsstorage originsadmin originsevents originsbase lockedfund originsstorage contract storage originsbase basically act harddisk system originsadmin basic contract currently two main role owner verifier owner ha right major decision making function owner ha many right including withdrawal proceeding thus recommended use multisig verifier currently ha right add address verified make someone verifier owner call addverifier function originsadmin originsevents contract event originsbase listed originsbase main contract doe major work sale tier single contract enough multiple sale unique token proceeding raised amount could taken owner pre set deposit address tier creation could done single function call done multiple call individual tier parameter edited well based tier id verification participant moment done address verifier add address tier address approved verification type also give freedom pas anyone thus allowing public sale sale time also dependent two different method mainly one duration calculated start time end timestamp another method supply last well deposit asset either rbtc erc20 compliant token well unique tier also transfer type none transfer ' set yet default unlocked token unlocked immediately waitedunlock mean unlock happen certain period locked mean token linear vesting vested token vested linearly difference voting power governance current version support none unlocked waited unlock vested contract also keep track participating wallet per tier number token sold per tier etc lockedfund currently ' functionality limited vest token withdraw token certain time period future allow feature like locked token unlocked token etc vesting us contract sovryn smart contract repo registry used case vestingregistry3 call graph call graph callgraph svg p simple project ' uml diagram uml diagram uml svg inheritance inheritance inheritance svg deployment deployment readme ' mentioned script folder mainly two origin script contains origin lockedfund related deployment interaction script token script contains token governance staking vesting etc related deployment interaction script deployment parameter please make sure read readme mentioned script folder running assumption admin ha lot power assumed right fair person party highly advised multisig admin rather eoa limitation deposit asset price lower token sold currently possible system simple solution divisor constant numerator denominator system instead rate system lockedfund single cliff duration per person tier based system would much better vesting registry updated waiting pr merged sovryn address validated cannot invalidated adding simple function suffice done next update improvement nft based sale decoupling tier lesser gas usage minimize stack deep error fee use origin platform contract ui setup maybe single contract act platform instead different tier based id tier based token address sold thus multiple tier based single contract handle multiple sale multiple tier done struct decoupling gas profiling function possible gas saving method added total unique wallet participated tier currently unique wallet participated tier counted unique wallet participated tier combined new storage structure required test related type sale added reduce reason string text size use numbering system error mainly lockedfund originsbase saleenddurationorts originsbase ha little upside storing might removable future
/sebastiantf/yield-nft,JavaScript,yieldnft passive income nfts collateral http devfolio co submission nftproject d942 introduction yieldnft peer peer marketplace allows generating yield idle nfts holder put nfts collateral lender access liquidity offer capital collateral nfts capital thus raised used promising automated yield generation strategy across defi yield thus generated distributed participant several nfts already available market value constantly going several collector buy nfts high price collector acquires nft ' much value generated sitting around idle inside wallet nfts generate return collector next sale cede ownership ' many platform around make use idle nfts yieldnft help collector use idle nfts generate passive income without give ownership lender looking high yield investment opportunity defi invest strategy le effort automated hedging risk liquidated would ' bear invested directly since nfts collectible often huge value associated protocol enables passively exploit huge value using win win strategy doe work nft holder list nfts marketplace open offer lender lender checking marketplace listed nfts see nft make offer nft holder lender reach consensus around offer yield generation strategy nft along fund offered lender transferred protocol ' escrow contract capital offered lender invested one high risk even leveraged yield generation strategy across defi protocol protocol would keep accruing yield strategy yield thus generated shared nft provider lender generating passive income otherwise idle nft liquidation event occurs investment strategy used protocol nft locked provider would transferred lender ' wallet giving lender full ownership tl dr alice nft provider bob charlie lender 1 alice list nft open offer 2 bob visit marketplace find alice ' nft 3 bob decides offer 1 5 eth alice ' nft 4 charlie visit marketplace find alice ' nft 5 charlie decides offer 2 eth alice ' nft 6 alice find offer nft dashboard decides proceed charlie ' offer 7 alice charlie finalize term offer mainly investment strategy used duration offer 8 alice charlie sign finalization txn alice ' nft fund offered charlie transferred protocol ' escrow contract 9 protocol invests fund chosen investment strategy harvest yield regular interval 10 offer reach end agreed tenure nft initial capital share yield transferred back provider lender relatively small share yield charged protocol fee 10 b liquidation event occurs nft would transferred lender near term roadmap first thing near term roadmap project would implement functionality facilitates creating pool nfts could supported multiple lender nft holder allowed pool together nfts single pool multiple lender would allowed offer capital single pool pooled fund help generate higher yield participant yield shared pro rata provider lender pool nfts restricted hold similar nfts relatively similar price begin event liquidation pooled capital currently three fate coming future liquidated nfts pool one agreed upon lender 1 liquidated nfts sold nft marketplace like opensea rarible proceeds sale distributed pro rata lender 2 liquidated nfts used create new fund join existing fund nftx http nftx org d1 token distributed pro rata lender 3 liquidated nfts sharded shard distributed pro rata lender feature also open marketplace interested participate ' enough capital offer whole nft also benefit nft provider may highly valuable nfts also take part generate passive income helping little guy another major functionality planned near term roadmap integration newly formed nft liquidity protocol like nft20 nftx etc could vastly improve user experience usage eliminating waiting period nft provider put nft receive optimal offer lender gallery showcase nfts currently participating marketplace also planned implemented either building native showcase gallery possible integration existing project like showtime http tryshowtime com explored exciting future future protocol look exciting owing composability innovation defi protocol ha validated battle tested ha garnered community support liquidity several extensible manner protocol develop exciting future protocol one veteran defi protocol like yearn finance alpha homora access huge liquidity cream v2 iron bank become lender marketplace protocol gain access huge collateralized liquidity cream v2 iron bank used protocol generate high yield nfts using highly leveraged strategy hedging risk idea protocol wa initially conceived functionality first place might ambitious protocol early day tl dr 1 many different nft holder put nfts single pool 2 protocol like yearn finance alpha homora etc offer huge capital pooled nfts 3 lender protocol draw collateralized liquidity cream v2 iron bank 4 protocol us huge liquidity generate higher yield investment strategy also research u good shall come mechanism capture represent value nfts much robust manner value determined utilized effectively lender
/realnimish/avalanche-amm,JavaScript,introduction tutorial learn build basic amm feature namely provide withdraw swap incentive mechanism like trading fee also deal erc20 token instead maintain mapping storing balance account keep thing simple build smart contract solidity frontend application help reactjs prerequisite basic familiarity reactjs solidity ' completed deploy smart contract avalanche using remix metamask http learn figment io network documentation avalanche tutorial deploy smart contract avalanche using remix metamask tutorial requirement node j http nodejs org en download release v10 18 0 metamask extension http metamask io download html browser ' amm automated market maker amm type decentralized exchange based mathematical formula price asset allows digital asset traded without permission automatically using liquidity pool instead traditional buyer seller us order book wa used traditional exchange asset priced according pricing algorithm example uniswap us p q k p amount one token liquidity pool q amount k fixed constant mean pool total liquidity always ha remain explanation let u take example amm ha coin coin b two volatile asset every time bought price go le pool purchase conversely price b go b pool pool stay constant balance total value pool always equal total value b pool size expand new liquidity provider join pool implementing smart contract let ' start boilerplate code create contract named amm import safemath library openzeppelin perform mathematical operation proper check solidity spdx license identifier mit pragma solidity 0 7 0 0 9 0 import openzeppelin contract utils math safemath sol contract amm using safemath uint256 next define state variable needed operate amm using mathematical formula used uniswap determine price asset k totaltoken1 totaltoken2 simplicity purpose maintaining internal balance mapping token1balance token2balance instead dealing erc 20 token solidity ' support floating point number reserve first six digit integer value represent decimal value dot achieved scaling number factor 10 6 precision solidity uint256 totalshares store total amount share issued pool uint256 totaltoken1 store amount token1 locked pool uint256 totaltoken2 store amount token2 locked pool uint256 k algorithmic constant used determine price k totaltoken1 totaltoken2 uint256 constant precision 1 000 000 precision 6 decimal place mapping address uint256 share store share holding provider mapping address uint256 token1balance store available balance user outside amm mapping address uint256 token2balance define modifier used check validity parameter passed function restrict certain activity pool empty solidity ensures qty non zero user ha enough balance modifier validamountcheck mapping address uint256 storage balance uint256 qty require qty 0 amount cannot zero require qty balance msg sender insufficient amount restricts withdraw swap feature till liquidity added pool modifier activepool require totalshares 0 zero liquidity following function used get present state smart contract solidity return balance user function getmyholdings external view return uint256 amounttoken1 uint256 amounttoken2 uint256 myshare amounttoken1 token1balance msg sender amounttoken2 token2balance msg sender myshare share msg sender return total amount token locked pool total share issued corresponding function getpooldetails external view return uint256 uint256 uint256 return totaltoken1 totaltoken2 totalshares using erc 20 token instead maintaining record balance need way allocate token new user interact dapp user call faucet function get token play solidity sends free token invoker function faucet uint256 amounttoken1 uint256 amounttoken2 external token1balance msg sender token1balance msg sender add amounttoken1 token2balance msg sender token2balance msg sender add amounttoken2 start implementing three core functionality provide withdraw swap provide provide function take two parameter amount token1 amount token2 user want lock pool pool initially empty equivalence rate set amounttoken1 amounttoken2 user issued 100 share otherwise checked whether two amount provided user equivalent value done checking two amount equal proportion total number respective token locked pool e amounttoken1 totaltoken1 amounttoken2 totaltoken2 hold solidity adding new liquidity pool return amount share issued locking given asset function provide uint256 amounttoken1 uint256 amounttoken2 external validamountcheck token1balance amounttoken1 validamountcheck token2balance amounttoken2 return uint256 share totalshares 0 genesis liquidity issued 100 share share 100 precision else uint256 share1 totalshares mul amounttoken1 div totaltoken1 uint256 share2 totalshares mul amounttoken2 div totaltoken2 require share1 share2 equivalent value token provided share share1 require share 0 asset value le threshold contribution token1balance msg sender amounttoken1 token2balance msg sender amounttoken2 totaltoken1 amounttoken1 totaltoken2 amounttoken2 k totaltoken1 mul totaltoken2 totalshares share share msg sender share hint style danger carefully notice order balance update performing function first deducting token user ' account last step updating share balance done prevent reentrancy attack endhint given function help user get estimate amount second token need lock given token amount use proportion amounttoken1 totaltoken1 amounttoken2 totaltoken2 determine amount token1 required wish lock given amount token2 vice versa solidity return amount token1 required providing liquidity amounttoken2 quantity token2 function getequivalenttoken1estimate uint256 amounttoken2 public view activepool return uint256 reqtoken1 reqtoken1 totaltoken1 mul amounttoken2 div totaltoken2 return amount token2 required providing liquidity amounttoken1 quantity token1 function getequivalenttoken2estimate uint256 amounttoken1 public view activepool return uint256 reqtoken2 reqtoken2 totaltoken2 mul amounttoken1 div totaltoken1 withdraw withdraw used user wish burn given amount share get back token token1 token2 released pool proportion share burned respect total share issued e share totalshare amounttokenx totaltokenx solidity return estimate token1 token2 released burning given share function getwithdrawestimate uint256 share public view activepool return uint256 amounttoken1 uint256 amounttoken2 require share totalshares share le totalshare amounttoken1 share mul totaltoken1 div totalshares amounttoken2 share mul totaltoken2 div totalshares remove liquidity pool release corresponding token1 token2 withdrawer function withdraw uint256 share external activepool validamountcheck share share return uint256 amounttoken1 uint256 amounttoken2 amounttoken1 amounttoken2 getwithdrawestimate share share msg sender share totalshares share totaltoken1 amounttoken1 totaltoken2 amounttoken2 k totaltoken1 mul totaltoken2 token1balance msg sender amounttoken1 token2balance msg sender amounttoken2 swap swap token1 token2 implement three function getswaptoken1estimate getswaptoken1estimategiventoken2 swaptoken1 first two function determine value swap estimation purpose last one doe conversion getswaptoken1estimate return amount token2 user get depositing given amount token1 amount token2 obtained equation k totaltoken1 totaltoken2 k remain operation give u k totaltoken1 amounttoken1 totaltoken2 amounttoken2 get value amounttoken2 solving equation last line ensuring pool never drained completely either side would make equation undefined solidity return amount token2 user get swapping given amount token1 token2 function getswaptoken1estimate uint256 amounttoken1 public view activepool return uint256 amounttoken2 uint256 token1after totaltoken1 add amounttoken1 uint256 token2after k div token1after amounttoken2 totaltoken2 sub token2after ensure token2 ' pool completely depleted leading inf 0 ratio amounttoken2 totaltoken2 amounttoken2 getswaptoken1estimategiventoken2 return amount token1 user deposit get given amount token2 amount token1 similarly obtained solving following equation k totaltoken1 amounttoken1 totaltoken2 amounttoken2 solidity return amount token1 user swap get amounttoken2 return function getswaptoken1estimategiventoken2 uint256 amounttoken2 public view activepool return uint256 amounttoken1 require amounttoken2 totaltoken2 insufficient pool balance uint256 token2after totaltoken2 sub amounttoken2 uint256 token1after k div token2after amounttoken1 token1after sub totaltoken1 swaptoken1 actually swap amount instead giving estimate solidity swap given amount token1 token2 using algorithmic price determination function swaptoken1 uint256 amounttoken1 external activepool validamountcheck token1balance amounttoken1 return uint256 amounttoken2 amounttoken2 getswaptoken1estimate amounttoken1 token1balance msg sender amounttoken1 totaltoken1 amounttoken1 totaltoken2 amounttoken2 token2balance msg sender amounttoken2 similarly token2 token1 swap implement three function getswaptoken2estimate getswaptoken2estimategiventoken1 swaptoken2 solidity return amount token2 user get swapping given amount token1 token2 function getswaptoken2estimate uint256 amounttoken2 public view activepool return uint256 amounttoken1 uint256 token2after totaltoken2 add amounttoken2 uint256 token1after k div token2after amounttoken1 totaltoken1 sub token1after ensure token1 ' pool completely depleted leading inf 0 ratio amounttoken1 totaltoken1 amounttoken1 return amount token2 user swap get amounttoken1 return function getswaptoken2estimategiventoken1 uint256 amounttoken1 public view activepool return uint256 amounttoken2 require amounttoken1 totaltoken1 insufficient pool balance uint256 token1after totaltoken1 sub amounttoken1 uint256 token2after k div token1after amounttoken2 token2after sub totaltoken2 swap given amount token2 token1 using algorithmic price determination function swaptoken2 uint256 amounttoken2 external activepool validamountcheck token2balance amounttoken2 return uint256 amounttoken1 amounttoken1 getswaptoken2estimate amounttoken2 token2balance msg sender amounttoken2 totaltoken2 amounttoken2 totaltoken1 amounttoken1 token1balance msg sender amounttoken1 completes smart contract implementation part complete code found contract amm sol contract amm sol deploy fuji c chain testnet deploying smart contract setting metamask log metamask click network drop select custom rpc metamask image metamask png fuji testnet setting network name avalanche fuji c chain new rpc url http api avax test network ext bc c rpc http api avax test network ext bc c rpc chainid 43113 symbol c avax explorer http cchain explorer avax test network http cchain explorer avax test network fund address given faucet http faucet avax test network deploy using remix open remix http remix ethereum org select solidity remix preview image remix png create amm sol file remix file explorer paste code contract amm sol contract amm sol navigate solidity compiler tab left side navigation bar click blue button compile amm sol contract note abi required next section navigate deploy tab open environment drop select injected web3 make sure metamask loaded click deploy button approve transaction metamask pop interface contract deployed successfully make note contract address hint style info application binary interface abi json object store metadata method contract like data type input parameter return data type property method like payable view pure etc learn abi solidity documentation http doc soliditylang org en latest abi spec html endhint creating frontend react going create react app set front end application frontend represent token1 token2 kar kothi respectively open terminal navigate directory create application text cd path directory clone github repository move newly avalance amm directory install dependency text git clone http github com realnimish avalanche amm git cd avalanche amm npm install react application keep react component src component directory boxtemplate render box containing input field header element right box token name button empty faucetcomponent take amount token1 kar token2 kothi input fund user address much amount providecomponent take amount one token kar kothi fill estimated amount token help provide liquidity pool swapcomponent help swap token another take amount token input field estimate amount token input field vise versa withdrawcomponent help withdraw share one ha also enables withdraw maximum limit containercomponent component render main body application contains center box containing tab switch four component swap provide faucet withdraw also render account detail pool detail ' time run react app use following command start react app text npm start visit http localhost 3000 http localhost 3000 interact amm walkthrough youtube link demo http img youtube com vi retlvgurvok 0 jpg http www youtube com watch v retlvgurvok demo conclusion congratulation successfully developed working amm model user swap token provide withdraw liquidity next step play around price formula integrate erc20 standard introduce fee incentive mechanism provider add slippage protection much troubleshooting transaction failure check account ha sufficient balance fuji block explorer http cchain explorer avax test network fund address given faucet http faucet avax test network zero balance preview image zero balance jpeg make sure selected correct account metamask one account connected site multiple account preview image multiple account jpeg author tutorial wa created sayan kar http github com sayankar yash kothari http github com yashkothari9 nimish agrawal http github com realnimish reach figment forum http community figment io u nimishagrawal100 query regarding tutorial reference uniswap work http doc uniswap org protocol v2 concept protocol overview uniswap work deploy smart contract avalanche using remix metamask http doc avax network build tutorial smart contract deploy smart contract avalanche using remix metamask
/sovreign-protocol/sovreign-contracts,TypeScript,build test http github com sovreign protocol sovreign contract action workflow build yml badge svg branch master http github com sovreign protocol sovreign contract action solidity http img shield io static v1 label solidity message 0 7 6 color success twitter follow http img shield io twitter follow sovreign org style social http twitter com sovreign org sovreign contract repo ha smart contract used sovreign http sovreign org contract http github com sovreign protocol sovreign contract tree master contract folder ha following structure facet contains diamond facet utilized farming contains yield farming contract well main staking vault governance contains contract related reigndao diamond set governance reward interface contains interface used across protocol library contains library mock contains mock contract used testing token contains sov reign token contract vesting contains vesting contract team early investor wrapper contains functionality related wrapping balancer lp svr check doc http github com sovreign protocol sovreign contract tree master doc folder audit report deployment information testnet mainnet solc project using solidity compiler version 0 7 6 dependency node v14 14 hardhat v2 openzeppelin contract v3 2 2 solc 0 7 docker docker compose command install dependency shell script yarn install compile shell script yarn compile test shell script yarn test test single shell script yarn test test testname test coverage shell script yarn coverage deployment important following env variable set tag mainnet forking enabled mainnet url rinkeby url etherscan api key default mainnet forking enabled set true env file mean hardhat us mainnet forking running script test deploy set contract shell script npx hardhat run script run deploy run scenario1 shell script npx hardhat run script run scenario1 run remix ide point local folder shell script docker compose go http localhost 8080 http localhost 8080 choose connect localhost workspace dropdown menu within file explorer acknowledgement repository wa composed based following repository barnbridge barnbridge dao http github com barnbridge barnbridge dao specifically commit http github com barnbridge barnbridge dao tree efbcc08282279c15a6d82908618f9279e14f22a2 barnbridge barnbridge barn http github com barnbridge barnbridge barn specifically commit http github com barnbridge barnbridge barn tree 1634b6b011f7ca1134ab66ef04c69217e1fa609e barnbridge barnbridge yieldfarming http github com barnbridge barnbridge yieldfarming specifically commit http github com barnbridge barnbridge yieldfarming tree 848330d25d2544c179a107584293bce03b71d13c ' pretty thankful hard work modification original work found subsequent commits repository made sovreign team http sovreign org license licensed apache2 license see license license information made heart sovreign team http sovreign org
/gokhanmelma/easy-staking-contracts,JavaScript,smart contract easystaking built openzeppelin http img shield io badge built 20with openzeppelin 3677ff http doc openzeppelin com easystaking provides alternative emission accruing application posdao http forum poa network posdao white paper 2208 participant stake liquidity provider user deposit stake http github com xdaichain stake token token deployed ethereum mainnet receive pre determined emission rate token locked contract easystaking give user additional choice stake token usage minimum deposit requirement v minimum 1000k posdao delegated staking several withdrawal option available user overall apr set lower easystaking posdao stakers effective emission accrual vary two method based posdao reward distribution percentage easystaking also provides emission distribution option stake liquidity provider specified liquidity pool receives emission every withdrawal event easystaking serf reduce overall amount stake active circulation provides option stake holder ethereum act mechanism limit available liquidity supply limited supply open market increase security posdao chain xdai stable chain see also http www xdaichain com stakers easy staking ui http easy staking xdaichain com security audit easystaking wa audited quantstamp find audit report http github com xdaichain easy staking contract blob master audit quantstamp xdai 20easystaking 20 20final 20report pdf run setup clone repo install dependency npm npm g npx testing run entire test suite npm test compiling create build contract directory contract ' artifact npx oz compile oz command http doc openzeppelin com cli deployment run deployment interactive mode npx oz create work user deposit stake http github com xdaichain stake token token contract withdraw along accrued emission time 2 type withdrawal 1 timed withdrawal user submits withdrawal request specified time period token accrued emission may withdrawn fee 2 instant withdrawal user request instant withdrawal pay small fee withdraw token accrued emission making deposit order make deposit user call deposit uint256 amount function easystaking contract directly send stake token easystaking contract using transfer transferfrom erc20 function stake token contract http etherscan io address 0x0ae055097c6d159879521c384f1d2123d1f195e6 contract generate unique id new deposit accept token deposit uint256 amount function requires token approved user first using approve erc20 function stake token easiest way make new deposit call transfer function stake token replenish existing deposit user call deposit uint256 depositid uint256 amount function specifying id existing deposit case easystaking contract accrue emission add specified amount deposit reset deposit ' timestamp current one function useful exchange making timed withdrawal withdraw token easystaking contract without fee user need submit withdrawal request using requestwithdrawal uint256 depositid function withdrawallockduration time ha elapsed user must call makerequestedwithdrawal uint256 depositid uint256 amount within withdrawal window defined withdrawalunlockduration user miss withdrawal window time period repeat step calling requestwithdrawal wait withdrawallockduration time calling makerequestedwithdrawal amount parameter allows user define amount token withdraw deposit balance obtained using balance address holder uint256 depositid public getter amount passed 0 mean user want withdraw token accrued emission withdrawing deposit fully partly user receive specified amount token accrued emission making instant withdrawal withdraw token easystaking contract immediately user need call makeforcedwithdrawal uint256 depositid uint256 amount case fee subtracted deposit example accruing emission 2 part make emission rate 1 personal time based calculated using sigmoid function based staking period amount time deposit staked max 7 5 2 general supply based calculated using linear function based total amount staked token relation total supply stake token max 7 5 also totalsupplyfactor defines percentage stake ' totalsupply 0 100 used supply based emission calculation factor changed owner accrued emission calculated user usershare remaining accrued amount 15 apr usershare sent assigned liquidity pool lp liquidityprovidersrewardaddress data example 1 sigmoid function http www desmos com calculator 2xtimbnzqw 2 total supply 8537500 stake 3 total supply factor 100 4 total staked 1500000 stake 5 instant withdrawal fee 3 1st example user deposit 1000 token make instant withdrawal near block case accrued emission close 0 fee 30 token user receives 970 token back lp also receives close 0 accrued emission 2nd example user deposit 1000 token 2 week 14 day user replenishes deposit adding additional 1000 token personal apr 2 67 see graph sigmoid function general apr 1500000 1000 8537500 0 075 100 1 32 accrued emission 1000 2 67 1 32 100 14 365 1 53 token assume year ha 365 day new user balance 1000 1 53 1000 2001 53 token deposit date reset restarts replenishment time point lp also receives accrued emission deposit replenishment 1000 15 2 67 1 32 100 14 365 4 22 token note user could instead chosen create 2nd deposit would created new deposit id reset deposit date generated accrued emission initial 1000 token deposit 3 month 90 day later user make timed withdrawal total amount 2001 53 token personal apr 6 94 general apr 1500000 2001 53 8537500 1 53 4 22 0 075 100 1 32 accrued emission user 2001 53 6 94 1 32 100 90 365 40 76 token lp also receives accrued emission timed withdrawal 2001 53 15 6 94 1 32 100 90 365 33 26 token timed withdrawal user receives 2001 53 40 76 2 042 29 token lp receives 33 26 token 3rd example user deposit 1000 token make timed withdrawal half 6 month 180 day personal apr 7 35 general apr 1500000 1000 8537500 0 075 100 1 32 accrued emission 500 7 35 1 32 100 180 365 21 37 token user receives 521 37 token new balance 500 token deposit date reset personal apr remains equal 7 35 continues grow withdrawal lp receives 500 15 7 35 1 32 100 180 365 15 6 token withdrawal window user request timed withdrawal must wait withdraw token within set window time lock period e g 12 hour withdraw set withdrawal window execute withdrawal e g 12 hour well user request timed withdrawal fails execute within allotted time stake token relocked contract doe update deposit date token relocked accrue emission according initial deposit timestamp role method available role anyone 1 deposit uint256 2 deposit uint256 uint256 3 requestwithdrawal uint256 4 makerequestedwithdrawal uint256 uint256 5 makeforcedwithdrawal uint256 uint256 owner owner change contract parameter claim unsupported token accidentally sent contract set function listed changed parameter value take effect 7 day function called 1 setfee uint256 allows owner set fee percentage instant withdrawal 2 default 2 setwithdrawallockduration uint256 allows owner change time period withdrawal request timed withdrawal available 12 hour default cannot exceed 30 day 3 setwithdrawalunlockduration uint256 allows owner change time period timed withdrawal available moment unlocking 12 hour default cannot le 1 hour 4 settotalsupplyfactor uint256 allows owner change value total supply factor defines percentage stake ' totalsupply 0 100 used supply based emission calculation larger factor smaller supply based emission 50 default 5 setsigmoidparameters uint256 int256 uint256 allows owner change sigmoid ' parameter b c used time based emission default value 75000000000000000 b 0 c 10000000000000 represent sigmoid page http www desmos com calculator 2xtimbnzqw 6 setliquidityprovidersrewardaddress address allows owner change address liquidity provider reward sent 7 claimtokens address address uint256 allows owner return token native coin mistakenly transferred easystaking contract address 8 transferownership address allows owner transfer ownership another address 9 renounceownership allows owner resign forever proxy admin proxy admin upgrade contract logic role wa abolished calling renounceownership http etherscan io tx 0x5b8ee5625ee76f90bc3444811185202af3bf29e8d1a72c2dc72767b32cfd14e9 proxyadmin contract http etherscan io address 0xec800ffdd7c4081911614fed9a6dd780ab264ea6 code note method described code
/phanlancer/keykey-contracts,Solidity,introducing keykey vampiric liquidity migration dex keykey keykey uniswap v2 lp token staking deflationary lp reward token keykey owned governed community using deflationary governance token protocol design liquidity provider incentive course one natural question many may would someone want provide liquidity keykey opposed uniswap uniswap liquidity provider earn pool trading fee actively providing said liquidity withdrawn portion pool longer receive passive income moreover protocol gain traction despite early liquidity provider risk getting return diluted bigger wealthier stakeholder venture fund exchange mining pool join protocol huge amount capital keykey one also provide liquidity pool earn reward form lock token however unlike uniswap lock token also entitle continue earn portion protocol fee accumulated lock even decide longer participate liquidity provision early liquidity provider become non dilutable stakeholder protocol earnings youll receive staking proportional amount lp token staked versus total amount lp token staked remember lock deflationary token early support diluted wacky infinite supply tokenomics pre miner approximately 18 total lock token supply many fish sea lock token distribution many u existing liquidity provider uniswap pool designed token distribution mechanic make easy possible existing uniswap liquidity provider start migrating protocol start providing liquidity earning lock token anyone holding uniswap lp token stake lp token corresponding initial list pool done start earning token reward start block 10780000 list eligible lp token added per chain governance lp ' decide every block 27 precious lock token created token equally distributed stakers supported pool however first 68000 block 10 day amount lock token produced 12x resulting 324 lock token minted per block incentivize early liquidity provider help streamline liquidity liberation initial set available pool cefi stablecoins usdt eth usdc eth dai eth susd eth defi protocol comp eth lend eth bzrx eth fsw eth yfv usdt cream eth synthetic asset snx eth uma eth oracle link eth band eth dia eth zoomernomics ampl eth yfi eth yfii eth yamv2 eth eth rmpl ultra tight 2x reward lock eth om eth mta eth susd based wnxm eth lrc eth ant eth lock weth pool get twice amount sure supply lock uniswap become eligible extra earnings lock live community vote add eligible pool change lock weight pool liquidity mean rule reward distribution current uniswap configuration 0 3 trading fee pool proportionately distributed pool liquidity provider keykey 0 25 go directly active liquidity provider remaining 0 05 get converted back lock distributed lock token holder protocol fund let ensure long term viability sustainability project following suggestion community 8 every lock distribution set aside development partnership incentive future iteration including security audit bootstrap early development partnership meme creation also allocated 2 27 total supply lock early stage growth liquidity liberation first 68000 block protocol inception 10 day migrating liquidity token staked onto keykey contract liberation movement involve taking uniswap lp token staked keykey redeeming uniswap respective token pair initializing new liquidity pool token new pool almost identical standard uniswap pool added feature fee accrued distributed lock token holder logic outlined liberation complete liquidity converted fueling first set keykey pool bring protocol operation immediately stakers dont need anything continue receive lock token reward providing liquidity going forward remember early liquidity provider stake pre mine ultimately rewarded approximately 18 lock total supply diluted lock tokenomics lp pre mine starting block 10780000 ending block 10848000 pre mine block 68000 pre mine reward 12x release model block reward 27 halving period 1800000 block year est 2372500 period block token block token period 0 premine 68000 324 22032000 1 1800000 27 48600000 2 1800000 13 5 24300000 3 1800000 6 75 12150000 4 1800000 3 375 6075000 5 1800000 1 6875 3037500 6 1800000 0 84375 1518750 7 1800000 0 421875 759375 7 halving period year 5 311 total supply 118472625 supply held preminers 18 597 protocol integration protocol smart contract level keykey share identical interface uniswap mean protocol currently compatible uniswap relatively simple integrate keykey work various defi ecosystem tool start integrating keykey smart contract code project including uniswap yam compound openzeppelin subjected license following list contract rough explanation locktoken http etherscan io address 0xb7bb4b08995b96bb5e577c5b02a237a6c625c172 token contract comp yam voting functionality keymaster http etherscan io address 0x0e41986db14ed784ff959c26d7fd7f2b7375f074 deposit lp token farm lock locksmith collect revenue convert lock send gatekeeper gatekeeper stake lock earn lock migrator migrate masterchef lp token uniswap keykey governoralpha timelock governance compound uniswapv2 uniswapv2 contract small modification migration contributing want contribute keykey make better help welcome
/CitizenDAO/Impact-Protocol,CSS,add homescreen http img shield io badge skynet add 20to 20homescreen 00c65e style badge labelcolor 0d0d0d logo data image png base64 ivborw0kggoaaaansuheugaaacaaaaabcayaaaadx42aaaaabgdbtueaalgpc xhbqaaacbjsfjnaab6jgaagiqaapoaaaca6aaadtaaaopgaaa6maaaf3ccule8aaaaegvyswzntqaqaaaacaafariaawaaaaeaaqaaaroabqaaaaeaaabkarsabqaaaaeaaabsasgaawaaaaeaagaah2kabaaaaaeaaabaaaaaaaaaaegaaaabaaaasaaaaaeaaqacaaqaaaabaaaaikadaaqaaaabaaaagwaaaadghq7vaaaacxbiwxmaaastaaaleweampwyaaaczmluwhrytuw6y29tlmfkb2jllnhtcaaaaaaaphg6eg1wbwv0ysb4bwxuczp4psjhzg9iztpuczptzxrhlyigedp4bxb0az0iwe1qienvcmugni4wljaipgogica8cmrmoljerib4bwxuczpyzgy9imh0dha6ly93d3cudzmub3jnlze5otkvmdivmjitcmrmlxn5bnrhec1ucymipgogicagica8cmrmokrlc2nyaxb0aw9uihjkzjphym91dd0iigogicagicagicagicb4bwxuczp0awzmpsjodhrwoi8vbnmuywrvymuuy29tl3rpzmyvms4wlyikicagicagicagicageg1sbnm6zxhpzj0iahr0cdovl25zlmfkb2jllmnvbs9leglmlzeumc8ipgogicagicagica8dglmzjppcmllbnrhdglvbj4xpc90awzmok9yawvudgf0aw9upgogicagicagica8dglmzjpszxnvbhv0aw9uvw5pdd4ypc90awzmoljlc29sdxrpb25vbml0pgogicagicagica8zxhpzjpqaxhlbfleaw1lbnnpb24 ntm8l2v4awy6ugl4zwxzrgltzw5zaw9upgogicagicagica8zxhpzjpqaxhlbfheaw1lbnnpb24 njq8l2v4awy6ugl4zwxyrgltzw5zaw9upgogicagicagica8zxhpzjpdb2xvclnwywnlpje8l2v4awy6q29sb3jtcgfjzt4kicagicagpc9yzgy6rgvzy3jpchrpb24 ciagidwvcmrmoljerj4kpc94onhtcg1ldge cnr0gvyaaae5surbvegnlvyjbfzvft3vl nt4yxoyilahf24embrszqhna1epzwwk0qxz2xk0apepajfngkzrcc1vylujyoisj22eyrflqbqaggqie0qxpamsyi1e9js0prcwgrx7njz5289702 lwarsz8zkz vv3vvufeee 8t h9wt7wbvb2ueknvxw9xreneww6bm5hxr4bnz4iuxmhqhwhbu3d81xgyr6cq5vmle9toen3e sbf t8u hwkd8suhqjigkhfrp5pw0cgov0gap9xx0cjwkshda2wvc 51yqm dwwtj7e u7i0xc1gr4m4hpe3ed ypqtw3imwzjnb1q2ofprjbdyz6nu zqjqmasd8nm9zgc5elmokeg 83okljdxqxerxzsfwaqhj4yopj9gwljh0a8tpinxmuvia4oejtiemq klgjwlh ri0vzjpwavlmimztouibihgtvcqlnt poxefod0rudg78ivhivz0mhwt1ar403fciim0m4 q76bhu3j3nrzqsn1vavgg uzgifid4nr8gleyyrwum6 jiraqsle2xa6xrv6k5 dsa w3u6ydcildbp0kr8x lwvd7wtl8dowmb7k4hiuz5qsgj0dwnmkxgohukbc4rlni6f8f8iipmkh0i7gv9 xob7 zgmsd82dznbqljembbvoksmk82bqeaesex3wtc jnhhrlhegu1urvl71ngyixv hq8geoiunznvdaaidzafpsrliqotjcr9ik78mpuca9gfclz76ofrln35pylvaw21mgptwvgzdolm0ts3uzzywfcc8bj8yjrceg3vrfbceip1tetgloigwcw 6pttmgrhv9up4vssfu7eti8t6g8ou1p97q2csd8pk9s2djbcp1h7pxh9so1lawlcrqu0o4uvsluvqcauq8zcwfiihdjl7n6tnpz2bigivktwg7z7satojzqospwagbyezzmbsff6pakwku4q4jinx1xyt lii2tkxpaoqmxjfyhniqxrr7zwye cny7kjad7jz1pdnwhrtfmnp9c6zoe9dklydwhlts nllxdk0unfzg1ytnpvakjk0kjehm2upclwrkg595b3ngtetbngsbyepzspacaqzja5jubnldiyn isqovqwnr24v336fzd6mqp2vqbpjhuvgubfxnathfial7yfv2fblpqdgjqeq7q xbvarbzdhvjcdqfzaykb tepa8vdabdfm563dymq7blqb5w2vys9dhzhtndhy5eyovtjhdminq jtugpkrcparcg1jpbw 5be1k8im9unhkhrrlhoyzjr gc6gldnpxq6oaulmpdwylnnmssjd1o g4ico5k 09onudxeh75hfsdyfw5nw8gg7ypjbeezz8vyzvpr2kq huaum4octu4ehj14cvfnbszs6wmmoz9oj1hvsbzuxv2yxm6fpb2hwwgu5e07kpzvytfsxdycb7cmdzayu9ixc3fn2w8zzm8yotfami8gfdupphenyjqew lw5uhnhoxgp1nvxq0fj6hjuyxledzinq4a1dlaaeijjpnqxs9hxisbvp19wn55bk98ea9gjjdjirax1vlzqrr8htr ditbamahlaqbfux2eubxdrannb hcerbfpjjeun9jif8qa5wwupd0wgmsixkzrp z8uvdhwogzkb7lb760ikisrmpma1vtjepoext3wfuv4 gtwn3rhgadtkgvwaft6ok ofqyh1gyf048r5y8grvlxidtizskxmpdadb0gr2rteq5udiobfc66ir3le hunxhfjnu7rqflxukeay8e2vqttts3vabmflxh8cuwjbqpwdorvxtzcg9jooakdvzh2l l0 ats13qauiocsslyg1twjktlzog0sxhlhc8qakucplpdrhg0me11lmqzbreg7r1c4mfpczcckow9tii iekcbeocm mo8vzamqgekzaps0rrywpkwjsoupvequyp2d f j5c4qpmi4h0p7yifz6ajwqmxuftyoqzb0tuw5ql8pze9ntkoyb e9pxholcqpxxvj0zaak5lmdktav5zino2tyrwmjypupbnahop6givcnfg8xa1egfjp6mzfesvehjlgksx7jk0h gerszksh2mbl4uazvhx 5cibzxhjzu8w4iqef6m7ktyogditvtpouj5gmo5uh rxobdl2 6jvvkw2m9tl9jaduwi4ghpnkawwz5ge2aemb 6ugpkeqi6kordruiaygdm2yqgrg16vl95uh 30yp99anfovea1fta aronrybixrw4c7mxvsjbtilii xws3bxyljonisdkkdcatuqlwded9p4avahda0lemuygllhky7rf9ayicxce 5cvs 1nczujwg8es5gy5nv8fuujn7elkhquzsa80g81fhltt0evv f eqms66yyceiasbzuqfylfug4 old0bpoj9vyxstvpuuw98svxjj20r4usskptwvl6mb 2m2ofvp3f1p0km6bl36pthn8gijaaudxvocl8mhz7bs5 tzrssl 7kyfar5 utrbrzwnuy63klzhe8lyaq6pfcnqm5lfabrfzjah7mxg8myzdkw pdmxwh wf4xzooppckx0aaaaasuvork5cyii http homescreen hn siasky net skylink aqdyckx uhdvbd5rap6r prldtdsx 0zm6doomswkaky w impact protocol citizen dao problem big idea could help humanity hard time getting funded become reality type idea ' fit framework government foundation grant vc angel investing idea either early ambitious solution new way fund public advancement via social impact bond sib dynamic nfts fund project prospectively retrospectively innovative funding model http citizendao io wp content uploads 2021 10 innovative funding model jpg social impact bond bond tldr government corporation want money something one option sell bond iou promise pay principle back interest bond one oldest documented financial instrument dating back 2400 bc mesopotamia since ' created war bond treasury bond municipal bond corporate bond fund modern world global bond market 120t late 2021 social impact bond recent creation first launched 2010 finance prisoner rehabilitation program uk sib form outcome based contracting project improve social outcome specific group citizen 2021 194 social impact bond active 421m invested great theory sib designed poor economic incentive model example investor ' get money back project fails meet initial kpis ' nothing investment reward investor percentage point interest successful another example lack transparency validation actual work funded citizen dao believe social impact bond much better enter web3 social impact bond http citizendao io wp content uploads 2021 10 crypto philanthropy3 jpg bond erc 1155 non fungible token bond unique financial asset fund project following category health housing education climate finance governance citizen dao member curate refine decide project get funding bond minted amount eth yield cdao governance utiliity token citizen dao bond revenue flow http citizendao io wp content uploads 2021 10 dynamic nfts 1 jpg work 1 go app citizendao io http app citizendao io 2 connect wallet find bond want customize 3 bond matures come place redeem claim cdao yield 4 sell bond secondary market maturity important resource communicate discord http discord gg svkqemrnm4 brainstorm miro http miro com app board o9j lxrwu6c invite link id 419363524209 development running dev environment prerequisite node http nodejs org en download plus yarn http classic yarnpkg com en doc install git http git scm com downloads install start hardhat chain bash yarn install yarn chain second terminal window start frontend bash yarn start third terminal window deploy contract bash yarn deploy contributing encourage triangle workflow http gist github com anjohnson 8994c95ab2a06f7d2339 development pull request going directly onto main branch essentially github flow http guide github com introduction flow model requirement maintainer discord james c 6086 deevolution 9729 brennen hodge 5274 tech dependency make dev environment docker based consistency ease use requirement use limited frontend release instruction frontend change ready send pull request merge fe skynet deploy branch use github action auto deploy skynet information skynet github action http doc siasky net developer guide deploy github action
/plasmadlt/staking-factory,TypeScript,staking reward factory factory allows create staking contract implement liquidity mining staking program erc20 token everyone create liquidity mining initiative program erc20 token participant stakers proportionally share stake get reward erc20 token program end 1 create liquidity pool plasmaswap http apy plasma finance liquidity pool add uniswap sushiswap 2 customize program time 3 configure contract deploy mainnet 4 create request publish contract plasmafinance creating issue pull request setup config migration set address token reward start work factory smart contract migration file ' 2 deploy contract ' eth reward token eth reward genesis 1614162900 add new unix deploy date stakingrewards sol set running time program start call notify method uint256 public rewardsduration 720 hour 1 step install yarn 2 step deploy mainnet truffle migrate network mainnet 3 step verify truffle run verify stakingrewardsfactory network mainnet 4 step create staking reward create token lm staking pool etherscan 1 go write contract adjust setting deployer wallet 2 setup deploy 3 set stakingtoken example liquidity pair example pair token p lp uni v2 slp 4 rewardamount reward token 5 rewardtotalamount reward token deploy stakingtoken address rewardamount uint256 rewardtotalamount uint256 call write sign tx 5 step fill treasury fill address staking factory contract call notify method send reward token staking contract 1 go write contract adjust setting deployer wallet 2 set stakingtoken example liquidity pair example pair token p lp uni v2 slp 3 rewardamount amount reward token remuneration sent contract staking factory notifyrewardamount stakingtoken address rewardamount uint256 call write sign tx 5 step add stakingrewards contract plasma finance ask support list community incentive product token page plasma finance depth documentation staking factory available doc plasma finance http doc plasma finance plasmadlt team responsible use code use risk
/Konjungate/Konjungate-Core,C++,readme md
/masaun/GLM-stake-pool,Solidity,glm stake pool introduction glm stake pool smart contract order provide opportunity yield farming golem ' glm token holder staking uniswap lp token pair glm eth stake pool nbsp workflow 1 create uniswapv2 pool glm token eth add liquidity 2 create uni v2 lp token glm eth 3 stake uni v2 lp token glm eth glm stake pool contract 4 smart contract glm stake pool contract automatically generate reward every week golem governance token ggc generated reward current formula generating reward 10 staked uni v2 lp token glm eth amount week generated week staker receive reward golem governance token depends share pool claim reward 5 claim reward distributes reward claimed staker un stake uni v2 lp token time claiming reward executed time nbsp diagram workflow diagramglm stake pool http user image githubusercontent com 19357502 105049591 29fb2180 5ab0 11eb 97e7 2505e70a29db jpg nbsp technical stack solidity solc v0 5 16 truffle v5 1 60 web3 j v1 2 9 node j v11 15 0 library openzeppelin contract v2 5 1 etc nbsp setup 1 install module npm install br 2 add env root directory please reference env example create env br 3 compile migrate contract rinkeby testnet npm run migrate local br 4 test mainnet fork approach ganache cli ganache cli fork http mainnet infura io v3 infura key ref http medium com samajammin interact ethereums mainnet development environment ganache 3d8649df0876 current block number mainnet http etherscan io block test npm run test test stake pool contract npm run test stake nbsp remaining task next step replace glmmocktoken contract glmmocktoken sol official glm token contract newgolemnetworktoken sol additional implementation glm stake pool glm erc20 currently progress additional implementation golem governance token ggc governance structure e g community voting function glm token holder add liquidity pool golem governance token ggc implement front end ui nbsp reference golem glm contract http github com golemfactory gnt2 tree master gnt2 contract src contract gnt2 erc20 token migration gnt glm http blog golemproject net glmupdate glm migration tracker http glm golem network golem hackathon resource http github com golemfactory hackathons awesome golem http github com golemfactory awesome golem doc http handbook golem network introduction golem overview golem architecture golem network hackathon http gitcoin co issue golemfactory hackathons 4 100024409 br test mainnet fork approach ganache cli infura http medium com samajammin interact ethereums mainnet development environment ganache 3d8649df0876 current block number mainnet http etherscan io block
/Web3ID/web3id,HTML,dappsid blog education web3indonesia educational open course making understand protocol blockchain indonesia feature 4 content type article category contributor page publication system draft published preview unpublished content article page slug system 2 contributor type featured default seo social medium friendly role based access control api route article category contributor page getting started clone proyek ini ke komputer anda masuk ke directori dan lakukan penginstalan yarn atau npm install development jalankan development server bash npm start npm run dev buka http localhost 1337 http localhost 1337 dengan browser default anda dan lihat hasilnya masuk ke setting user permission plugins public permission dan checklist find dimenu article category contributor dan page anda dapat mulai mendaftar administrator kemudian mengedit dan menambahkan konten halaman plugin dan juga content type builder dan setelah selesai silahkan push ke repositori ini cara berkontribusi tulisan artikel contribution silahkan email kami support web30 id mailto web3 indonesia gmail com license mit license http github com web3id web3id blob main license sponsor partner near protocol http near org adalah platform aplikasi terdesentralisasi yang cukup aman untuk mengelola aset bernilai tinggi seperti uang atau identitas dan cukup berkinerja untuk membuat mereka berguna untuk orang sehari hari menempatkan kekuatan dari web terbuka di tangan mereka dgrants http grant gtcdao net adalah platform hibah terdesentralisasi memfasilitasi pengembang open source membuat hibah untuk mengumpulkan kontribusi dengan cara yang terdesentralisasi
/yam-finance/synths-sdk,TypeScript,synths sdk ci http github com yam finance synths sdk action workflow main yml badge svg http github com yam finance synths sdk action workflow main yml documentation sdk http yam finance github io synths sdk synth contract http yam finance github io synths sdk contract using yam uma synths sdk official asset file http github com yam finance synths sdk blob master src asset json raw file http raw githubusercontent com yam finance synths sdk master src asset json install sh yarn add synths sdk use import synths synths sdk import ether ether create ether provider instance const provider new ether provider web3provider web3provider initialize sdk official yam synths const synthssdk await synths create ethersprovider provider connect sdk synth const upunksasset await synthssdk connectasset upunks 0921 example method call const gcr await upunksasset getgcr alternatively pas synth object modify existing synths local test network deployment const chainid 1 const userassetsconfig synthsassetsconfig chainid upunks name september cycle 09 year 21 collateral weth token address 0x86140a763077155964754968b6f6e243fe809cbe token 18 emp address 0xf8ef02c10c473ca5e48b10c62ba4d46115dd2288 new true type finlib pool address 0x6e01db46b183593374a49c0025e42c4bb7ee3ffa location sushiswap expired false const synthssdk await synths create ethersprovider provider userassetsconfig userassetsconfig development cloning synths repo copy env template file fill variable sh copy env template file env fill variable yarn install yarn test local testnet deployment sh yarn hardhat node yarn hardhat deploy network localhost
/giddyphysicist/ParallelSwapForRefFinance,Vue,abstract developed algorithm optimize parallel swap two token algorithm ideal ref finance paradigm multiple liquidity pool per token pair contract given swap amount token algorithm maximizes swap value token b taking account liquidity swap fee various b liquidity pool solution elegant mathematically verifiable using calculus algebra simple implement avoids brute force operation requires single call near api retrieve liquidity pool minimal complicity intent broadcasting overview video quick overview project check youtube video http youtu tztfcrylnac detailed description detail mathematical derivation closed form solution optimal parallel swap please peruse white paper parallelswapwhitepaper pdf problem statement figure 1 illustration parallel swap problem parallel swap overview png algorithm overview offer flow chart summary algorithm implementation process given set pool desired amount input token trade first calculate mu next use mu calculate allocation token per pool delta next check value delta 0 one exists say pool j set allocation pool delta j equal zero remove pool list pool recalculate mu remaining pool lead final output optimal value allocation token delta pool figure 2 algorithm flow chart algorithm flow chart png assumption given assumption 1 several pool token token b pair different liquidity fee 2 user want swap b several time different amount task find best combination swap additional assumption 3 currently algorithm assumes pool follow constant product x time k model 4 generally assumed multiple pool demonstrate approximately price b however assumption strictly necessary algorithm work multiple pool found different price assumed trading arbitrage opportunity would undertaken reach equilibrium using algorithm price difference large simple solution would trade best price rather splitting swap parallel swap would make sense pool price least close price comparable price requirement algorithm work 5 pool swap amount token cannot negative math assumes fee based delta would assume gain fee taking token forcing delta non negative prevents account fee complicated way pool price b negative delta expected would expected happen due price difference algorithm would prescribe negative value delta pool removed consideration would case worst price pool note process removing pool follows directly implementation lagrange multiplier solution presence inequality constraint case inequality constraint allocation token pool must non negative simulation result show example set bonding curve two pool equal price different liquidity figure 3 bonding curve bonding curve png next figure show calculated expected optimal solution figure 4 optimal solution best trade png getting started make sure node j installed computer cloning repo open command prompt main repo folder type npm run dev load local dev server run basic version app acknowledgement made use excellent template following source first iteration front end http github com trevorjtclarke near vue tailwind http github com trevorjtclarke near vue tailwind donate like repo material consider donating near giddyphysicist near consider donating eth 0x2263b05f52e30b84416ef4c6a060e966645cc66e
/Coinversation/coinpro,Rust,coinversation protocol coinversation protocol project use redspot frame install redspot first follow tutorial http patractlabs github io substrate contract book en redspot tutorial html complie 1 yarn install 2 npx redspot compile test 1 npx redspot test compile deploy 1 npx redspot run deploy compile
/centfinance/Symmetric.PoolsUI,Vue,div align center img alt redoc logo src http raw githubusercontent com centfinance community main medium pack symmetric logo 200 png width 400px div h1 align center code symmetric liquidity pool code h1 project setup npm install compiles hot reloads development npm run serve compiles minifies production npm run build lint fix file npm run lint supported network ethereum main network celo gnosis kovan poa catalyst coming soon license gpl 3 0 license
/kadirpekel/algorig,Python,welcome algorig ultimate algorand smart contract development rig algorig compact intuitive cli tool try ease algorand smart contract development tooling still preserving flexibility simply utilizes pyteal algorand python sdk make sure smart contract development feel quite native fluent setup installation setting algorand sandbox get started ' need algorand node containing algod kmd service running preferably local environment able interact algorand blockchain manage account shortest way run algorand node development purpose installing algorand sandbox locally accomplish simply checkout algorand sandbox repository run typing command bash git clone http github com algorand sandbox git cd sandbox sanbox sandbox ready algod kmd service running locally release configuration private network suitable local development getting started smart contract development ' need algorand account smart contract develop algorand blockchain thankfully algorand sandbox default configuration come default wallet named unencrypted default wallet also containing couple account already ha significant algo balance quite sufficient enough start bash sandbox goal wallet list wallet unencrypted default wallet default id de87213c0d084688bb4e40fe2045e16a also list account default wallet come sandbox installation bash sandbox goal account list w unencrypted default wallet online dnsnrcj6wo4lcvne6o6jhyszq7c725rvjmmtt4gcbouh4vpmpmzyuvbflu dnsnrcj6wo4lcvne6o6jhyszq7c725rvjmmtt4gcbouh4vpmpmzyuvbflu 4000008000000000 microalgos offline dre4xuejbpvhhfiuwt5sgh3jigs5rdubwyxasa72pinnuvfjiy6sfkslee dre4xuejbpvhhfiuwt5sgh3jigs5rdubwyxasa72pinnuvfjiy6sfkslee 1000002000000000 microalgos offline hpamdtcs3b2bzugp5jundnbkvwxypkpc56veyt3wybeonpvd6hjluhmtvq hpamdtcs3b2bzugp5jundnbkvwxypkpc56veyt3wybeonpvd6hjluhmtvq 4000008000000000 microalgos please refer algorand sandbox project page configuration option detail feel free pick one account listed contract owner assign setting algorig project get started algorig since ' done local algorand node setup ' ready develop algorand smart sontract using algorig start let ' first configure virtual environment located project directory home folder smart contract project bash mkdir mydefi cd mydefi python venv venv source venv bin activate virtual environment ready may install algorig best way install algorig simply using pip command shown bash pip install algorig point since put tool belt ' ready initialize fresh new algorig project typing command bash rig init signing address dnsnrcj6wo4lcvne6o6jhyszq7c725rvjmmtt4gcbouh4vpmpmzyuvbflu command create two thing first one main configuration file able configure smart contract development environment json cat protocol json algod address http localhost 4001 algod token aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa kmd address http localhost 4002 kmd token aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa wallet name unencrypted default wallet wallet password signing address dnsnrcj6wo4lcvne6o6jhyszq7c725rvjmmtt4gcbouh4vpmpmzyuvbflu teal version 4 num global byte slice 0 num global ints 0 num local byte slice 0 num local ints 0 app id 0 might also noticed used contract owner account address utilizing signing address parameter likewise use cli parameter help u overriding default configuration value mostly supposed conform default setting algorand sandbox setup done furthermore init command also proposes stub python module called protocol py contains main entry point smart contract development ' simply class declaration special name application also inherits implement base class baseapplication come algorig module python protocol py pyteal import algorig app import baseapplication class application baseapplication def get approval program self implement contract using pyteal return int 1 def op example command self str str int int 42 example method used cli command print f ' str str int int ' may notice application class simply proposes method called get approval program one ' expected implement main smart contract logic also might noticed op example command method starting special prefix op algorig simply translates special named class method cli command directly used manage smart contract operation supposed interact smart contract see available command simple type rig rig help bash rig help sage rig h v init create update example command positional argument init create update example command optional argument h help show help message exit v version show program ' version number exit ' notice example command ready typed finger tip type command see expected output bash rig example command myparam123 hello myparam123 command doe nothing rather simply printing console command generally supposed perform operation deployed smart contract presumably utilizing applicationcall available transaction call ' see later write deploy first contract mentioned previously get approval program method main entry point algorand smart contract ' simply expected return pyteal node object algorig handle rest ok let ' write simple contract accepts application create update transaction respectively python protocol py def get approval program self implement contract using pyteal return cond txn application id int 0 int 1 txn completion oncomplete updateapplication int 1 congrats implemented first algorand smart contract point since ' need deploy contract algorand blockchain algorig help u deploy built command create performing magic behind order save u writing many boilerplate code achive first let ' find command work acutally running bash rig create help usage rig create h app args app args optional argument h help show help message exit app args app arg seems legit using command directly without given parameteres case let ' run command bash rig create processing transaction a35easts6anoo5htafiwzaapswjj653zfm74apmhe46zikxdnqdq confirmed round 2342525 application created id 1 success built command essentially compiled teal code created application create transaction automatically sent algorand blockchain throughout algod service referring algod address algod token setting located config file case setting already default value referring sandbox algod service started locally json protocol json algod address http localhost 4001 algod token aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa another side effect commmand whenever application initially created blockchain command save keep id application config file using configuration key app id point dump content config file ' notice app id setting wa absent previously json app id 1 setting basically help algorig locate application whenever want interact example also another built command called update us setting locating application created previously ' good time also see deploy change contract ok let ' change bit contract time let contract accept applicationcall transaction perform task contract case simply expect sigle arg hello world approve transaction python protocol py def get approval program self implement contract using pyteal def call return txn application args 0 byte ' hello world ' return cond txn application id int 0 int 1 txn completion oncomplete updateapplication int 1 txn completion oncomplete noop call able send update override existing contract using command bash rig update processing transaction h3zbgvx4svpaphpzt23q3lhimtoqbey2h6sdhgarcablwrb7jnla confirmed round 5493 application updated successfully congratulation developed deployed also updated first smart contract alogrand blockchain interact smart contract far ' already seen algorig smoothens algorand smart contract development smart tooling method already created first smart contract updated using built command time let ' assume need interact contract purpose last update contract expects u send application call transaction single parameter value hello world let ' try implement command together see develop perform contract operation python protocol py algorig app import baseapplication algosdk future import transaction class application baseapplication def op send greeting self greeting self submit transaction applicationcalltxn sp self algod suggested params complete transaction oncomplete noopoc index self config getint ' app id ' sender self config ' signing address ' app args greeting ' simple implemented send greeting command interact contract let ' first locate bash rig help usage rig h v init create update send greeting positional argument init create update send greeting optional argument h help show help message exit v version show program ' version number exit also may check detail new command seeing helper instruction command bash rig send greeting help usage rig send greeting h greeting positional argument greeting optional argument h help show help message exit since send greeting command ready fingertip run see work expected bash rig send greeting hello world processing transaction lbf5nqom2wwiz4zupavtpkxtk7md5todpw2jo65ugnsasq4izt2q confirmed round 6054 perfect interacted contract deployed blockchain let ' see happens send different parameter contract bash rig send greeting boooo algosdk error algodhttperror transactionpool remember transaction 4gfywbaswi7t5gerjko5r4guuxudh4lqgco55bvukjnxncqqakja transaction rejected approvalprogram cool last transaction simply rejected supply desired parameter dealing group transaction implement atomic operation transaction need grouped way ensured executed successfully call atomic operation algorig grouping one transaction done baseapplication submit transaction method let ' see work ' take popular algorand auction demo ' setupauctionapp operation brevity python protocol py algorig app import baseapplication algosdk future import transaction class application baseapplication def op auction setup self nft holder address nft id int nft amount int 1 sp self algod suggested params fund app txn transaction paymenttxn sp sp sender nft holder address receiver self config ' app address ' amt 1 000 setup app txn transaction applicationcalltxn sp sp complete transaction oncomplete noopoc sender self config ' signing address ' index self config ' app id ' app args ' setup ' transfer nft txn transaction assettransfertxn sp sp sender nft holder address receiver self config ' app address ' index nft id amt nft amount self submit group fund app txn setup app txn transfer nft txn custom configuration setting may end adding setting protocol json configuration file refer accordingly implementing contract example may want keep address belonging actor operation case simply add protocol json file refer using instance field config come baseapplication class instance let add one example json funder address dnsnrcj6wo4lcvne6o6jhyszq7c725rvjmmtt4gcbouh4vpmpmzyuvbflu use application class needed python protocol py algorig app import baseapplication algosdk future import transaction class application baseapplication def op fund self amt int sp self algod suggested params fund app txn transaction paymenttxn sp sp sender self config ' funder address ' receiver self config ' app address ' amt amt self submit fund app txn add setting many want keep config file overriding default behaviour baseapplication ' always free change underlying functionality come baseapplication instance would like modify default behaviour clear state program simply override corresponding method shown python class application baseapplication def get clear state program self default behaviour wa simply returning int 1 return txn sender ' hpamdtcs3b2bzugp5jundnbkvwxypkpc56veyt3wybeonpvd6hjluhmtvq ' please checkout app py review baseapplication class base implementation contribute contribution always welcome sending pull request please make sure setup development environment correctly added modifed corresponding unit test regarding contribution checked code agains flake8 style rule please ' hesitate contirubute like use algorig development environment start contributing simply checkout repository create virtual env install project locally bash git checkout http github com kadirpekel algorig cd algorig python venv venv source venv bin activate pip install e dev ' ready rock unit test algorig utilizes pytest test runner type command run unit test bash pytest coding style algorig code base follows default flake8 style guiding rule sending pull request please also make sure code pass flake8 check bash flake8 algorig disclaimer project early stage please use risk license copyright c 2021 kadir pekel permission hereby granted free charge person obtaining copy software associated documentation file ' software ' deal software without restriction including without limitation right use copy modify merge publish distribute sublicense sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided ' ' without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
/mangofarmbsc/mango-farm,TypeScript,mango frontend project contains main feature mango application
/garyb9/eth-defi-testing,Solidity,ethereum defi testing contract alt text http blockchainstock azureedge net feature 302be9b00e737c42c47be1d4a02f59dfdb1d41d777d53fe89a38eb506c5262ec jpg defi contract testing feature aave chainlink makerdao dai compound gnosis uniswap erc20 erc165 erc721 erc1155 defi running brownie hardhat truffle ganache
/raphael-mazet/simplefi-server,JavaScript,simplefi simplefi make easy manage decentralised finance investment portfolio getting started 1 clone repo git http github com raphael mazet simplefi server git 2 create env file prisma directory add psql database db port yourport db username yourusername db password yourpassword db host yourhost db name yourdbname database url postgres db username db password db host db port db name b add etherscan api key etherscan api key api key 3 install initialise dependency npm install npx prisma generate 4 start backend server nodemon index j 5 run client refer simplefi client http github com raphael mazet simplefi client documentation built express http expressjs com fast unopinionated minimalist web framework node j postgresql http www postgresql org open source relational database prisma http www prisma io open source database toolkit contributing improvement remixes welcome please donate open source project gitcoin http gitcoin co grant 2235 simplefi author raphael mazet github http github com raphael mazet linkedin http www linkedin com raphael mazet
/ankurdubey521/HurriCARE,JavaScript,p align center h1 align center hurricare h1 h3 align center stay protected even toughest time h3 p align center decentralized insurance platform pay premium based location get super fast guaranteed relief fund hit cyclone hurricane p hurri care1 png http postimg cc xdxbyfcp hurri care1 png http postimg cc ck3fbn7f register apply insurance hurri care2 png http postimg cc 261msswk hurri care2 png http postimg cc zb10dpp6 premium paid user location hurri care4 png http postimg cc p5mb3zhj hurri care4 png http postimg cc zyvt3hvt check premium payment status superfluid hurri care6 png http postimg cc nz1jmwfw hurri care6 png http postimg cc 5y6nrn05 technology stack frontend img src http img shield io badge react 20 2320232a svg style badge logo react logocolor 2361dafb oracle alarm clock img src http upload wikimedia org wikipedia common 4 4d chainlink logo jpg height 40 width 120 premium streaming img src http raw githubusercontent com superfluid finance protocol monorepo head sf logo png height 25 width 100 login img src http postimg cc cmgdn5dv metamask png height 30 width 150 img src http postimg cc w4lqxnhq portis png height 30 width 90 deployment mumbai testnet img src http postimg cc hkqvzy0d matic2 png height 30 width 110 provide apply insurance cyclone hurricane app using permanent location connect metamask portis wallet site chainlink oracle connected openweatherapi fetch climate condition permanent location decide premium amount superfluid start streaming premium amount u wallet opt stop stream chainlink alarm clock schedule weekly check check eligible payout chainlink oracle fetch current weather condition active user fixed amount dai paid user eligible run locally clone repository git clone http github com ankurdubey521 hurricare cd frontend install dependency yarn install run react app npm start demo youtube hurricare http img youtube com vi kz0prlzstt8 0 jpg http www youtube com watch v kz0prlzstt8
/gmguild/gmJEWEL,TypeScript,greedy merchant guild hello welcome monorepo greedy merchant guild find many treasure repository contains source code following tool used greedy merchant guild contract contract contract used greedy merchant guild contract written solidity vyper backend backend simple backend written python used serve api used frontend ui ui front end website hosted gmg money development utilise brownie development environment run comprehensive test please familiarise brownie
/preston4896/Minecraft-NFT-Server,JavaScript,minecraft nft server minecraft server world player buy sell virtual land item cosmetic good build thriving game economy github http img shield io github license preston4896 minecraft nft server build http travis ci org preston4896 minecraft nft server svg branch main goal create nft based ecosystem based open world game using popular game like minecraft tap gaming audience younger older alike introduce sperax implementing dao like governance server allow better community management creating functioning virtual economy based sperax powered fungible token allowing player trade game virtual currency sperax coin implementing unique system lending nft item putting collateral fungible token defi based model project structure bash readme md front end smart contract defi sol erc1155 sol governance sol minting sol test component nfts nfts used project would custom set tool weapon armor cosmetic item would unobtainable normal minecraft gameplay could traded bought sold economy project aim self regulated economy player would really decide value certain non fungible token term virtual currency economy could introduce specialization server player could offer minecraft skill exchange fungible token defi defi one hot topic blockchain space right project aim integrate nft based defi lending within minecraft server economy basically player lend nft token player putting collateral exchange small amount interest staking project aim add staking mechanism player would able stake fungible token earn something like meme project ' pineapple point would used redeem nft token governance project wish emulate dao like structure player control decision taken project voting proposed update via governance token top 100 owner governance token would allowed add proposal community member holding governance token earned partipiating minting defi would quadratically vote smart contract alt text blob image png erc1155 sol contract create non fungible fungible asset project would available smart contract part project also responsible creation porject ' governance token minting sol contract allow user stake fungible game token order mint nft token game item land smart contract would similar meme wherein user earn something like pineapple point set number pineapple token redeem nft token defi sol contract would peer peer lending contract lender lend nft token price see fit nft token kept escrow borrower access token would pay certain interest order retain access token event borrower unable pay interest nft transferred back lender governance sol governance smart contract similar dao smart contract allowing governance token holder vote proposal proposed one top 100 governance token holder vote direction community take voting would amount value assigned vote governance token older would square root amount token held thereby reducing influence whale vote contribution thank considering help source code welcome contribution anyone internet grateful even smallest fix ' like contribute project please fork fix commit send pull request maintainer review merge main code base license code licensed gnu lesser general public license v3 0 http www gnu org license lgpl 3 0 en html
/OctoFi/octofi-erc20-smart-contract,Solidity,img src logo svg alt openzeppelin height 40px doc http img shield io badge doc f0 9f 93 84 blue http doc openzeppelin com contract npm package http img shield io npm v openzeppelin contract svg http www npmjs org package openzeppelin contract build status http circleci com gh openzeppelin openzeppelin contract svg style shield http circleci com gh openzeppelin openzeppelin contract coverage status http codecov io gh openzeppelin openzeppelin contract graph badge svg http codecov io gh openzeppelin openzeppelin contract library secure smart contract development build solid foundation community vetted code implementation standard like erc20 http doc openzeppelin com contract erc20 erc721 http doc openzeppelin com contract erc721 flexible role based permissioning http doc openzeppelin com contract access control scheme reusable solidity component http doc openzeppelin com contract utility build custom contract complex decentralized system first class integration gas station network http doc openzeppelin com contract gsn system gas fee audited leading security firm last full audit v2 0 0 overview installation console npm install openzeppelin contract openzeppelin contract feature stable api http doc openzeppelin com contract release stability api stability mean contract ' break unexpectedly upgrading newer minor version usage installed use contract library importing solidity pragma solidity 0 6 0 import openzeppelin contract token erc721 erc721 sol contract mycollectible erc721 constructor erc721 mycollectible mco public ' new smart contract development head developing smart contract http doc openzeppelin com learn developing smart contract learn creating new project compiling contract keep system secure always use installed code neither copy paste online source modify library designed contract function use deployed ' need worry needlessly increasing gas cost learn guide sidebar teach different concept use related contract openzeppelin contract provides access control http doc openzeppelin com contract access control decide perform action system token http doc openzeppelin com contract token create tradeable asset collective distribute via crowdsales http doc openzeppelin com contract crowdsales gas station network http doc openzeppelin com contract gsn let user interact contract without pay gas utility http doc openzeppelin com contract utility generic useful tool including non overflowing math signature verification trustless paying system full api http doc openzeppelin com contract api token erc20 also thoroughly documented serf great reference developing smart contract application also ask help follow contract ' development community forum http forum openzeppelin com finally may want take look guide blog http blog openzeppelin com guide cover several common use case good practice following article provide great background reading though please note referenced tool changed tooling ecosystem continues rapidly evolve hitchhiker guide smart contract ethereum http blog openzeppelin com hitchhiker guide smart contract ethereum 848f08001f05 help get overview various tool available smart contract development help set environment gentle introduction ethereum programming part 1 http blog openzeppelin com gentle introduction ethereum programming part 1 783cc7796094 provides useful information introductory level including many basic concept ethereum platform depth dive may read guide designing architecture ethereum application http blog openzeppelin com designing architecture ethereum application 9cec086f8317 discus better structure application relationship real world security project maintained openzeppelin http openzeppelin com developed following high standard code quality security openzeppelin meant provide tested community audited code please use common sense anything deal real money take responsibility implementation decision security problem might experience core development principle strategy openzeppelin based include security depth simple modular code clarity driven naming convention comprehensive unit testing pre post condition sanity check code consistency regular audit latest audit wa done october 2018 version 2 0 0 please report security issue find security openzeppelin org contribute openzeppelin exists thanks contributor many way participate help build high quality software check contribution guide contributing md license openzeppelin released mit license license
/sunnyRK/chainlinkExternal,Solidity,alarm pod alarm pod loss crypto saving platform win interest using trustless blockchain technology using chainlink alarm clock chainlink vrf function aave protocol contract owner create pod trigger chainlink alarm clock wait finish time period time period accures interest deposited crypto token deposited participant staker time period one see live interest generate dashboard time period complete chainlink alarm clock recognize using callback function chainlink alarm clock trigger chainlink vrf function get winner among participant using randomness functionality vrf chainlink vrf decide winner admin need disburse original token user original token interest winner let ' see demo video demo http www youtube com watch v iurn0h7ef 8 chainlink aave screenshots chainlinkaave png http www youtube com watch v iurn0h7ef 8 alarm pod run 1 clone repo http github com sunnyrk chainlinkexternal git 2 cd chainlinkexternal 2 npm install 3 node server j 4 currently deployed kovan network screenhots 1 create pod contract owner createpod screenshots screenshot1 png 2 see pod created chainlink alarm clock triggered timer running chainlink alarm clock screenshots screenshot2 png 3 one participant joining pod dai token participate screenshots screenshot3 png 4 see pod totalcontract balance generated paricipant investment total pod balalnce joining amount required join pod even live interest accuring aave protocol poddetails screenshots screenshot4 png 5 chainlink alarm clock recognized timer finish chainlink vrf declared winner winnerdeclare screenshots screenshot5 png 6 new pod created old pod come right side winning prize detail contract owner disburse amount participant old pod screenshots screenshot6 png 7 disburse amount contract owner disburse screenshots screenshot7 png 8 check winner total prize right side top total winning totalwinning screenshots screenshot8 png current future task mind 1 use en ethreum name service give flexibilty user tech stack ethereum solidity web3 j chainink decentralized oracle chainlink alarm clock wait particular time period finish pod chainlink vrf choose winner aave earn interest next j semantic ui react
/sushiswap/sushiswapV1,Solidity,sushiswap sushiswap original sushiswapv1 repo extracted archived canary branch reference subtree entrypoint http github com sushiswap sushiswap tree 56cedd0e06a6cf665083b3a662f9f77b80303ebe http github com sushiswap sushiswap tree 56cedd0e06a6cf665083b3a662f9f77b80303ebe
/apeboard/pools,TypeScript,next j http nextjs org project bootstrapped create next app http github com vercel next j tree canary package create next app getting started first run development server bash npm run dev yarn dev open http localhost 3000 http localhost 3000 browser see result start editing page modifying page index tsx page auto update edit file api route http nextjs org doc api route introduction accessed http localhost 3000 api hello http localhost 3000 api hello endpoint edited page api hello page api directory mapped api file directory treated api route http nextjs org doc api route introduction instead react page learn learn next j take look following resource next j documentation http nextjs org doc learn next j feature api learn next j http nextjs org learn interactive next j tutorial check next j github repository http github com vercel next j feedback contribution welcome deploy vercel easiest way deploy next j app use vercel platform http vercel com new utm medium default template filter next j utm source create next app utm campaign create next app readme creator next j check next j deployment documentation http nextjs org doc deployment detail
/Hover-Labs/kolibri-contracts,Python,kolibri directory structure deploy npm package deploy system smart contract smartpy smart contract compiled michelson code migration migrtion tool moving contract version
/onuratakan/mix_blockchain,Jupyter Notebook,mix blockchain made python http img shield io badge made 20with python 1f425f svg http www python org open collab http colab research google com asset colab badge svg http colab research google com github onuratakan mix blockchain github license http img shield io github license naereen strapdown j svg http github com onuratakan mix blockchain blob master license mix blockchain http repository image githubusercontent com 327011401 19648180 59b2 11eb 8c8a da82d30da958
/Frenzoid/DAPP_Bank,JavaScript,decentralized bank decentralized bank interest loan defi blockchain ethereum solidity erc20 truffle ganache web3 j react j meant learn blockchain technology img src asset scrsht png run 1 install following dependency node truffle ganache 2 make sure truffle config j setted ganache network 3 execute command npm 4 execute command truffle migrate reset 5 execute command npm start testing execute command truffle test run test
/wuwe1/damn-vulnerable-defi-brownie,Solidity,damn vulnerable defi brownie find question http www damnvulnerabledefi xyz index html quick start bash git clone http github com wuwe1 damn vulnerable defi brownie cd damn vulnerable defi brownie test question brownie test test one question brownie test k test compromised put exploit code test test py comment exploit go solution find solution spoiler tag git clone branch spoiler http github com wuwe1 damn vulnerable defi brownie
/DeFireX/defirex-protocol-v3,Solidity,defirex protocol v3 defirex solidity smart contract ver 3 audited pessimistic http github com pessimistic io audit blob main defirex 20security 20audit 20by 20pessimistic 20public pdf
/levelkdev/swapr-sdk,TypeScript,swapr sdk getting started running test run test follow step must least node v16 installed first clone repository sh git clone http github com levelkdev swapr sdk git move dxswap sdk working directory sh cd swapr sdk install dependency sh npm install run test sh npm run test eco router trade swapr us multiple trade find best protocol route trader currently supported dexs protocol ethereum arbitrum one gnosis chain polygon swapr uniswap v2 sushiswap honeyswap levinswap baoswap curve wip cow protocol quickswap dfyn trade class extendable new dexs added sdk extending trade adding required method
/polylastic/smart-contracts,Solidity,polylastic protocol polylastic polx index designed track token performance within ever evolving elastic finance industry efi index include elastic cryptocurrencies seigniorage token algorithmic stablecoins cash system whatever come next index weighted based value community support measured number stakers well market cap token novel mechanism allows u capture technical innovation community strength like traditional index polylastic track project significant usage demand well show vibrant community commitment ongoing development tokenv2 network taxation binance smart chain deployed binance smart chain token address 0xbe510da084e084e3c27b20d79c135dc841135c7f verified source code http bscscan com address 0xbe510da084e084e3c27b20d79c135dc841135c7f code token binance smart chain deployed binance smart chain token address 0xe29ac6ea53dea5211155f9d7c8c41beee852efa0 verified source code http bscscan com address 0xe29ac6ea53dea5211155f9d7c8c41beee852efa0 code development instruction yarn install install dependency echo pk private key env add testing private key npx hardhat compile compile contract npx hardhat test run test migration inside script folder test inside test folder
/defichaininfo/Jellyfish.NET,C#,nuget http img shield io nuget dt jellyfish net svg http www nuget org package jellyfish net jellyfish net welcome jellyfish net want build net application operates defichain come right place warned project huge active development already use part jellyfish net others yet want contribute feel free help appreciated jellyfish net project net port defichain jellyfish http github com defich jellyfish used communicate defichain full node contains tool library build net application defichain goal roughly sync apis feature provided defichain team let net developer utilize full potential jellyfish net us modern net technology programming technique built newly released net 6 c 10 support nullable reference type api method follow task based approach async await pattern use jellyfish net today prerequisite defichain full node running computer also set rpc username password full node use jellyfish net install jellyfish net nuget package nuget org create client start calling api method csharp var client new jellyfishclient http foo bar localhost 8554 var price await client oracle listpricesasync already complete ' already use existing jellyfish apis also mean functioning api client well json serialization support apis also include upcoming decentralized stock loan oracle apis every finished api kept sync defichain jellyfish development library code like transaction signing wallet management yet ported future library done address account api heavy check mark blockchain api heavy check mark governance api heavy check mark icxorderbook api heavy check mark loan api heavy check mark masternode api heavy check mark mining api heavy check mark misc api heavy check mark net api heavy check mark oracle api heavy check mark poolpair api heavy check mark rawtx api heavy check mark server api heavy check mark spv api heavy check mark token api heavy check mark wallet api heavy check mark api json rpc heavy check mark block buffer crypto json heavy check mark network heavy check mark testing transaction transaction builder transaction signature wallet wallet classic wallet encrypted wallet mnemonic license disclaimer like original jellyfish project using jellyfish net repo user agree bound term license http github com defichaininfo jellyfish net blob main license mit license
/eric19960304/vvs-finance-profit-simulator,Python,vvs finance profit simulator script find best fixed reinvestment harvest put back interval vvs finance explanation img src http raw githubusercontent com eric19960304 vvs finance profit simulator main demo 8000 png mean invest 8k usd vvs finance http vvs finance farm current apr vvs usdc pool 2000 best b fixed b interval harvest every 531 minute swap http vvs finance swap half harvested earning usdc convert http vvs finance add vvs usdc lp token stake back pool farm http vvs finance farm way earn around 3643 63 usd 1 week see example section higher capital shorter best fixed reinvestment interval optimize profit large capital reinvestment interval decreased time one way may update param cap apr script find best fixed reinvestment interval use 1 modify param section script match situation 2 install dependency run script pip install r requirement txt python vvs profit simulator py example img src http raw githubusercontent com eric19960304 vvs finance profit simulator main demo 1000 png img src http raw githubusercontent com eric19960304 vvs finance profit simulator main demo 3000 png img src http raw githubusercontent com eric19960304 vvs finance profit simulator main demo 16000 png img src http raw githubusercontent com eric19960304 vvs finance profit simulator main demo 100000 png
/Synthetixio/contract-linker,JavaScript,snx contract auto redirect netlify status http api netlify com api v1 badge aa988a7b 353d 4f71 93c4 037df373d314 deploy status http app netlify com site contract linker deploys snx auto redirection tool us http 302 temporary redirects redirect latest version synthetix protocol contract etherscan ' conveninence often deal contract directly linking deployed contract blog post etc please use contractname case sensitive auto redirect latest contract version e g http contract synthetix io synthetix link latest underlying full list contract name please look developer doc http developer synthetix io api doc deployed contract html testnets goerli rinkeby ropsten please prefix testnet lowercase e g http contract synthetix io goerli synthsusd bookmark utility run following get list bookmark import browser get useful addresbar keyboard shortcut e g could type feepool goerli easily go feepool address goerli npm run bookmark import file bookmark html file chrome via image http user image githubusercontent com 799038 68231553 4acd7900 ffc9 11e9 9d86 9a8abb1d179a png
/GigameshGarages/SageNet,JavaScript,introduction multi dimensional money streaming vault escrow yield bitcoin cash protocol context inspired streaming money lecture andreas antonopolous spatio temporal dimension concept money streaming represents idea continuous payment finite period time block number used proxy time continuously update balance workflow provider set money streaming contract prospective payer interact contract start stream right away depositing fund required chosen period payee able withdraw money contract based ongoing solvency payment rate stream factor current block height starting block height stream term payment rate length metadata updated time party pledge signature stream stopped point time party without chain consensus stream period ended wa previously stopped party payee entitled withdraw deposited fund component money streaming consumption token money streaming convergence token money streaming strategy vault money streaming yeild farming money streaming indexed oracle
/harendra-shakya/anonim,JavaScript,built lending borrowing protocol like aave wa project made without tutorial building first researched aave never used aave understanding work built live server http anonim ten vercel app note 1 please use rinkeby testnet 2 everything working used chainlink keeper charging rewarding apy work fund code working fine could also check video http www linkedin com post harendra shakya 622649229 boom made build lending borrowing activity 6950774885971304448 rovs utm source linkedin share utm medium android app linkedin ' working
/sota-platform/sota-token-contracts,Solidity,sota token sale sota token governane token sota platform audited certik read http github com sota platform sota token contract blob master audit certik verification report sotanext pdf mainnet address 0x0dde6f6e345bfd23f3f419f0dfe04e93143b44fb http etherscan io token 0x0dde6f6e345bfd23f3f419f0dfe04e93143b44fb seed sale token sale contract sota token price 0 1 usdt accepted usdt eth convert eth usdt best rate via uniswap min amount 1000 usdt max amount 10000 usdt dec 20 dec 31 mainnet address 0x6c5ddde620e8a8be3dd9fc984c0e549ed60fcae5 http etherscan io address 0x6c5ddde620e8a8be3dd9fc984c0e549ed60fcae5 presale token sale contract sota token price 0 1 usdt accepted usdt eth convert eth usdt best rate via uniswap min amount 200 usdt max amount 20000 usdt start sale jan 20 2021 mainnet address 0x18178d87e6a6db2e97503570f4dddc893eded7b4 http etherscan io address 0x18178d87e6a6db2e97503570f4dddc893eded7b4
/sakuracasino/roulette-contract,JavaScript,sakuracasino roulette circleci http circleci com gh sakuracasino roulette contract svg style svg http circleci com gh sakuracasino roulette contract http github com ivandiazwm crypto roulette blob master preview jpg raw true usage install package run npm install sakuracasino roulette contract save request abi address j const abi network require ' sakuracasino roulette contract ' console log abi return abi roulette contract console log network 0 contract address return contract address kovan network development checklist x implement contract pooling x implement color betting blockhash based random x implement test liquidity bet x deploy v0 1 eth testnet x implement bet x implement ui bet x implement chainlink vrf x update ui wait vrf callback x implement bet fee x implement correct dai permit interface x implement bet limit x allow non eip 2612 token improve contact storage management delete unused data use mainly event revision liquidity max bet limit security implement chainlink vrf bet queue migrate dev environment hardhat deploy v1 0b matic testnet investigate implementation eth 2 0 bacon chain vdf polkadot babe vrf deploy v1 0stable matic bsc mainnet running project 1 run make install installing node dependency 2 run make run running ganache server 3 run make test checking everything ok run gui instead make run make sure ganache server port 8545 4 run make migrate deploying contract local ganache testnet return env variable frontend ui ' paste also want run ui 5 run make vrfsigner start mock vrfcoodrinator operator oracle ' run bet request always de pending disclamer remember ' run make test vrfsigner running additional command make compile compiles contract make migrate migrates contract ganache blockchain make console lauch truffle console gananche node make test run test publish new package version npm package associated repository expose information contains roulette contract abi information contract different network address deploy contract network need update file network j associated information network ' exist yet add new entry network deploy new package version 1 update network j mentioned 2 make sure update package json package lock json version desired version publish 3 run make publish try publish npmjs org success permission disclaimer contract currently repo match deployed specified contract address network deploy contract remix 1 run make flatten return flatten roulette sol contract 2 copy roulette sol remix environment deploy contract want deploy contract deprecated 1 make sure defined network description network j contract address empty 2 make sure correct api mnemonic env file 3 define network variable network name call make deploy live example deploy kovan network kovan make deploy live 4 optionally ' predefined command like make deploy kovan common network 5 deployed please update contract address network j 6 call make flatten flatten roulette sol contract verifying etherscan
/mariuspod/defi_blocks,Solidity,defi block description basic poc graphical code builder generates solidity smart contract code given blockly block alt text block block http github com mariuspod defi block raw main image yearn blockly png yearn dai strategy blockly block currently ' implementing daicompoundbasic strategy yearn http github com iearn finance yearn starter pack blob master contract strategy strategydaicompoundbasic sol come custom blockly http developer google com blockly block used parametrize strategy switch depositor rewardor exchange token wanted optimized strategy without writing single line solidity code tool generates smart contract code applying configured block given template file provided logic currently limited idea wa ' doable code programming smart contract could used created fun project ethonline 2020 hackathon http hack ethglobal co showcase defi block recrsqxg3tdndjdg5 note code currently hard wired basically always ouputs daicompoundbasic yearn strategy atm joy usage quick dirty implementation thing right generate solidity code preconfigured block daicompoundbasic strategy yearn npm install node index j generated smart contract code found generated defi block sol future example poc generates solidity code based template version smart contract yearn however ' tied yearn could generate smart contract respect certain design pattern logically mapped blockly creating blockly parser language generator solidity maybe even vyper could next thing implement might also integrated web app user could click together new strategy generate solidity code fly maybe could even compiled run remix similar tool many option ' time buidl rocket
/jet-lab/jet-governance,TypeScript,jet governance jet governance dapp utilising element spl governence oyster href http jet governance page dev devnet deploy run frontend cd app npm install npm run start npm run build compile app build directory localhost 3000 browser troubleshooting downgrade node fix econnreset npm install g n n 16 6 2
/Alexangelj/usul,JavaScript,multilateral optionality asset transfer buyer two party contract ha option trade asset asset b pre determined exchange rate fixed limited time period
/complusnetwork/complus-master-heco,Solidity,complus master contract heco license mit http img shield io badge license mit green svg http github com complusnetwork complus master heco blob master license contribution complus network http img shield io badge contribution welcome brightgreen svg style flat http github com complusnetwork complus master heco issue website http img shield io website green red http shield io svg label website http heco complus network contract determine yield farming staking protocol huobi eco chain listed deployed contract hash complus com 0xd329d4fb3e3f666f7499962fa097447eb8505942 http hecoinfo com address 0xd329d4fb3e3f666f7499962fa097447eb8505942 contract timelock 0x85df3e25fd50961e94eaa8084eb9ef0ba3e3441e http hecoinfo com address 0x85df3e25fd50961e94eaa8084eb9ef0ba3e3441e contract multicall 0xc9a9f768ebd123a00b52e7a0e590df2e9e998707 http hecoinfo com address 0xc9a9f768ebd123a00b52e7a0e590df2e9e998707 contract converterregistrycontract 0xb8d8b45a1ea8bcfa1e7e3574879bd699dc7ef3f6 http hecoinfo com address 0xb8d8b45a1ea8bcfa1e7e3574879bd699dc7ef3f6 contract xcom 0xf77d7585d6585eb3adc6b4e86bfb20467c05ab68 http hecoinfo com address 0xf77d7585d6585eb3adc6b4e86bfb20467c05ab68 contract maestro 0xd1b99940bf5676a5f8a56a95bfe5931404dd1fbf http hecoinfo com address 0xd1b99940bf5676a5f8a56a95bfe5931404dd1fbf contract sudosu 0xa13f3df930b92990f1676aa910edf18ebdfc46a6 http hecoinfo com address 0xa13f3df930b92990f1676aa910edf18ebdfc46a6 contract huobi eco chain heco source code http github com huobigroup huobi eco chain heco explorer http hecoinfo com
/Okiki-Olugunna/Crowdfunding-DeFi,Solidity,crowdfunding defi project entity raising fund ha 3 funding round reach target funding series series b series c donor contribute cause using weth end funding round raised target extra fund swapped usdt uniswap v3 supplied aave v3 generate yield extra fund supplied fund kept aave v3 minimum 180 day 180 day passed owner crowdfund call endyieldfarming withdraw usdt aave swap back weth using uniswap owner ended yielding fund swapped donated crowdfund redeem gift calling claimrewards function
/huwiler/defichain-masternode-scripts,Shell,defichain masternode script important script still active development choose use may run bug please report issue simple script allows keep track whether node working properly specifically check ensure node sync continuing operate main chain also notifies reward received local remote chain split detected find block split occurred give instruction fix please either send message submit pull request change suggestion rarely program bash ' likely ' made silly mistake see readme code install instruction running every hour via crontab masternode
/BenSparksCode/simple-lending-protocol,Solidity,simple lending protocol borrow dollar pegged stablecoin productive cryptoassets starting xsushi contract system usdz dollar stable token minted collateral mint burn managed controller controller central system manager keep record user ' collateralized position ratio etc keep track usdz xsushi price using sushiswap twap ha ability liquidate undercollateralized position protocol plan v1 mvp version educational purpose intended real financial use protocol parameter 3 annual interest borrowing collateral xsushi start stablecoin dollar pegged called usdz borrow usdz collateral 150 collateralization ratio 150 col ratio lower position liquidated amount would bring back 150 col ratio withdraw collateral col ratio 200 ' withdraw collateral would make col ratio 200 liquidation keep thing simple liquidation market sell entire xsushi collateral via sushiswap usdc usdc redeemable 1 1 usdz keep usdz approx dollar pegged even ha little trade volume liquidator executes liquidate batchliquidate address e debt position liquidating position 10 xsushi diverted liquidation fee remaining 90 swapped usdc 10 liquidation fee 2 go liquidator 8 protocol treasury borrowing delay 10 block depositing collateral borrowing prevent flash loan attack usdz likely illiquid start lend borrow accounting process user deposit xsushi approving calling deposit store amount xsushi deposited collateral emits deposit event user call borrow passing amount borrow calculates usdc value user ' xsushi collateral xsushiprice via sushiswap calculates compound interest user owes outstanding debt lastborrowed using time block calculates collateral ratio colratio user given current debt interest colratio 200 reverts enough collateral colratio 200 user borrow 200 colratio calculates borrowable xsushiprice colratio 200 amount borrowable reverts amount high set user debt prev debt interest amount borrowed set user ' lastborrowed restart interest compounding new total debt figure emits borrow event anyone call liquidate passing address ha position check address ha position reverts address ha position calculates totaldebt amount address debt interest debt since lastborrowed usdz figure calculates usdc value user ' xsushi collateral xsushiprice via sushiswap calculates colratio address xsushiprice collateral totaldebt colratio 150 reverts collateral ratio still safe colratio 150 liquidation process start 90 xsushi swapped usdc sushiswap 8 xsushi transferred internally protocol 2 xsushi transferred internally liquidater set user debt collateral 0 emits liquidation event protocol plan v2 gasless function call yield bearing collateral asset gov token owns treasury directs development protocol airdrop gov token borrowing earns gov token transferring earns gov token liquidating earns gov token resource abracadabra doc http wizard69 gitbook io abracadabra money github http github com abracadabra money magic internet money blob main contract helper yearnliquiditymigrationhelper sol aave doc http doc aave com developer github http github com aave protocol v2 maker liquidation 2 0 module http doc makerdao com smart contract module dog clipper detailed documentation uniswap v2 price http uniswap org doc v2 advanced topic pricing pricing trade swap http uniswap org doc v2 smart contract integration trading smart contract
/farhanx/alnafi,Solidity,alnafi hi farhan khan find code especially written help building blockchain based solution example blockchain stuff smart contract truffle solution dapps erc 20 token nfts defi web3 solidity ethereum many course detail http portal alnafi com page blockchain course detail code divided four different folder find 1 programming ethereum solidity smart contract folder shared example build smart contract using solidity languae using solidity javascript order test contract using truffle framework course first course introduce core concept blockchain technology working flow starting technical theory public blockchain ethereum taking journey begin creating transaction provide enough knowledge quickly start writing smart contract using ethereum solidity language already working object oriented programming language easily understand solidity concept never worked programming language recommended join course reading object oriented programming concept several exercise teach set configure system pre requisite tool working blockchain technology end course skill set ethereum node run truffle framework compile using solidity create smart contract use ganache simulator many use test network ethereum blockchain network like ropsten rinkeby live transaction smart contract experiment also learn store value like ether smart contract address owner withdraw money 2 decentralized application development dapp dapps course second course blockchain specialization track must completed first course starting course also must minimal understanding website development database concept pre requisite teach many model world become decentralized instead centralized furthermore centralized system healthy traditional critical system course teach next generation web 3 technology web application development called dapp decentralized application course teach connect web application directly blockchain network using web3 library call smart contract using html based interface decentralized storage work host dapp using ipfs interplanetary file system journey learn nodejs php based apache server use local computer development also learn metamask usage dapp exercise especially call smart contract using metamask 3 security role blockchain course expose sensitivity solidity language smart contract give insight knowledge security best practice essential designing dapp contact take journey beginning dao forking result attack vector best security pattern implement smart contract complete insight exercise use oracle service using third party oracle service like probable chainlink resolve vulnerability within smart contract upgrade pattern 4 defi application development course last one public blockchain engineering discus decentralized finance defi protocol understand crypto tokenomic work fungible non fungible token implement erc 20 token erc 721 nft token using smart contract also deep dive ito sto ieo stable coin work protocol like liquidity pool decentralized exchange dex cex uniswap discussed practical
/coherence-finance/beamsplitter,TypeScript,beamsplitter logo http github com coherence finance beamsplitter blob master beamsplitter png raw true npm version http badge fury io j coherence finance 2fsdk svg http badge fury io j coherence finance 2fsdk license agpl v3 http img shield io badge license agpl v3 blue svg http www gnu org license agpl 3 0 discord support http badgen net badge icon discord icon discord label http discord gg xs5nehxak8 beamsplitter coherence ' cryptocurrency etf program solana http solana com monorepo contains chain program well client sdk interacting beamsplitter us anchor http project serum github io anchor framework simplifies development solana use program construct deconstruct chain etf like token installing sdk chain building client interacts beamsplitter install sdk sh yarn add coherence finance sdk looking example check example md file src example md calling program chain writing solana program make cpi beamsplitter rust better doc coming soon building deploying program building source deploying instance beamsplitter use step first install anchor http project serum github io anchor getting started installation html ' dependency next install necessary test client dependency bash yarn next compile program generate idl test anchor ' build http project serum github io anchor cli command html build command bash anchor build deploy program anchor ' deploy http project serum github io anchor cli command html deploy command bash anchor deploy beamsplitter live testing anchor therefore beamsplitter us mocha http github com piotrwitek mocha typescript wrapper around mocha http mochajs org integration test added test directory execute test bash yarn test
/Amovane/Dexduels,Solidity,readme arbitrage program demo using web3js lib implement interaction dex running smartbch chain like benswap mistswap etc way also run evm compatible sidechain modification notice demo wa made order share arbitrage model please must careful run production enviroment problem still need resolve like consensus problem strategy summary according dexduels dexes program would generate pair dexes make arbitrage attempt according different pair input token output token wa generated base symbol quote symbol pair dexes would make profitable swap pair token usage install mongodb http doc mongodb com manual installation fill property env template file like rename env smart bch w w smartbch w greyh smart bch http http global uat cash quote symbol eben flex quote arbitrage base symbol wbch base arbitrage base qty 1 amount base arbitrage interval 5000 interval check opportunity trigger profit usd 4 profit trigger arbitrage http proxy setting proxy machine ha configured dexduels dexes benswap mistswap name dex would participate arbitrage wallet address wallet address wallet private key account private key wallet run node dexduels j contact ' interested quant web3 technology friend share experience discord add friend http discord com channel yooso 3441 telegram osoooy http osoooy wechat p align center img 200 height 200 src http wx3 sinaimg cn mw2000 008ryvhtgy1gznjbty7v3j30by0byjs0 jpg p
/BerkeleyBlockchain/dapper-labs-consulting,JavaScript,dapper lab consulting external consulting project dapper lab dex
/defiat-crypto/defiat-frontend-v2,TypeScript,getting started create react app project wa bootstrapped create react app http github com facebook create react app available script project directory run yarn start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make edits also see lint error console yarn test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information yarn build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information yarn eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org
/defispartan/LiquidYield,CSS,liquid yield http liquidyield finance project maximize yield liquidity provider leveraging aave uniswap market provide 100 exposure price ethereum frontend built using react j launch local development server root directory command npm run start create production build server deployment create build directory command npm run build smart contract project us truffle framework contract migration located respective folder compile smart contract run command truffle compile file truffle config j provides layout network deployment instruction deploying specific network ganache start local ganache instance enter truffle development terminal run command truffle develop note ' known issue ganache may trouble running node version 14 get error hanging terminal running command may use nvm switch older node version 12 worked within terminal run migrate deploy contract local ganache instance ropsten deploy contract ropsten ' need infura api key wallet ropsten eth root directory ' need make env file pk web3 wallet private key mnemonic ropsteninfura infura url api key alternatively skip env hardcode value truffle config j truffle config j setup ropsten deployment migrate smart contract network truffle migrate network ropsten
/alejoacosta74/token-swap-exchange,JavaScript,project eth arg swap deployed kovan built openzeppelin http img shield io badge built 20with openzeppelin 3677ff http doc openzeppelin com img alt nodejs src http img shield io badge node j 20 2343853d svg style badge logo node j logocolor white img alt react src http img shield io badge react 20 2320232a svg style badge logo react logocolor 2361dafb img alt mocha src http img shield io badge mocha 238d6748 style badge logo mocha logocolor white img alt google cloud src http img shield io badge google 20cloud 20 234285f4 svg style badge logo google cloud logocolor white 1 project implement poc token swap exchange application dapp ethereum final project demo web app seen http 34 69 122 108 token swap http 34 69 122 108 token swap 2 main feature two smart contract written solidity arg erc20 token contract ethswap exchange contract fronted built react j deployment kovan test network integration ethereum via web3 metamask infura io secret address handled truffle hdwallet provider web3 event subscribed via infura w api 3 pre requisite order deploy project detailed following pre requisite required available api project key infura io http infura io kovan endpoint kovan ether token holder account may requested via faucet http faucet kovan network metamask enabled browser 4 framework dependency source code language solidity development environment node j npm truffle dotenv truffle hdwallet react j ethereum client http infura io metamask wallet 5 usage bash git clone http github com alejoacosta74 token swap exchange git token swap exchange cd token swap exchange install truffle installed npm install g truffle install dependency npm install truffle init truffle compile deploy smart contract kovan truffle migrate network kovan start local development react server npm start 6 access dapp deployed contract deployed contract project deployed kovan following address arg token 0x72b64b69315e6de186ad2c450781b408aacdbdcb http kovan etherscan io address 0x72b64b69315e6de186ad2c450781b408aacdbdcb ethswap contract 0x36d66f8fc414c7c96c9d5d9526c4440d5185578d http kovan etherscan io address 0x36d66f8fc414c7c96c9d5d9526c4440d5185578d accesing dapp visit http 34 69 122 108 token swap http 34 69 122 108 token swap dapp screen shot buy buy doc buycapture png sell sell doc sellcapture png
/sambacha/evo-whitepaper,TeX,br img src http raw githubusercontent com sambacha evo whitepaper master cover img png br evoprotocol embededd volumetric optionality protocol v1 0 0 3 embedded volumetric optionality protocol note uniswapv3 integration section released abstract evo protocol dynamically adjusting erc compatible protocol adjusts based volume br evo token minted burned demand deposit withdraw operation directly via contract initiated protocol operation deposit br withdraw br transfer br operation contribute transfer rate transfer rate tracked aggregate individually e per address period time tracking last 25 day time period v2 upgrade include upgrading time date new libray http github com bokkypoobah bokkypoobahsdatetimelibrary time period defined per market basis meaning choose computed optimal time period based historical analysis multiple 4 6 etc suggested example 25 day ha 36000 minute divided block time 4 give 9000 gasevo determined aggregate dynamically individually address based transactional e volumetric transactional information stored updated smart contract previous transaction br three operation deposit withdraw transfer equally contribute transfer rate tracked totally individually per holder smart contract period last 25 day br token price determined dynamically individually holder based information stored updated smart contract previous transaction http raw githubusercontent com gist sambacha 2cd97b61b0a29dd18f0d12fb0029ee73 raw 67c4785230a544558263beb4ede534ad2b3a0bc4 equation svg utility en specifcaiton de spezifikation note specific implementation based reference specification described whitepaper latex tex given enough liquidity gasevo ha way compute exchange rate towards base instrument eth br like movement bigger significant volume interpreted market trend e gwei pricing br utilizing small volume movement disincentivizing larger one without compensation holder every exceeding bulge bracket trade token tracked smart contract higher transactional fee applied withdraw ' consumption ' note describe transactional fee sometimes interest fee language marked depreciated confers implies rate return somewhat deterministic however case per se entirely possible trade could transfer rate period epoch transference fund daily volume threshold doe impose interest fee br threshold ha exceeded percentage token get burned transfer deposit withdraw base instrument eth br threshold tracked individually per address average rate function operate br architecture engineering discussed chapter 2 safeguard tooling discussed chapter 3 security please contact mailto sam freighttrust com bug security issue thank license spdx license identifier sspl 1 0
/maAPPsDEV/recovery-attack,JavaScript,solidity game recovery attack inspired openzeppelin ' ethernaut http ethernaut openzeppelin com recovery level try mainnet task contract creator ha built simple token factory contract anyone create new token ease deploying first token contract creator sent 0 5 ether obtain token since lost contract address game completed recover remove 0 5 ether lost contract address hint 1 selfdestruct send ether 2 contract address deterministically calculated learn 1 calculating new contract address 2 selfdestruct difficult challenge common flub solidity developer lose newly created contract address becomes frustrating especially also lose transaction receipt mean retracing step method finding contract address via raw sender information calculate contract address contract address deterministically calculated yellow paper address new account defined rightmost 160 bit keccak hash rlp encoding structure containing sender account nonce thus define resultant address new account b96 255 kec rlp n 1 easier way represent function address rightmost 20 byte keccak rlp sender address nonce sender address contract wallet address created new contract nonce number transaction sent sender address sender factory contract nonce number contract creation made account rlp encoder data structure default serialize object ethereum keccak cryptographic primitive compute ethereum sha 3 keccak 256 hash input recreating remix let calculate address new contract created existing contract located 0x890ca422059d877085ce763187ddb12b62ab809d let assume first ever contract creation address nonce transaction count 1 interesting fact nonce 0 always smart contract creation event 1 documentation http github com ethereum wiki wiki rlp rlp encoding 20 byte address 0xd6 0x94 integer le 0x7f encoding byte value rlp 1 0x01 2 remix compute following address public address keccak256 0xd6 0x94 addr 0x01 3 yield 0x048559a2982f50c268b80e14b1a98a1524295016 presumably first address new smart contract existing contract deploy 4 get subsequent contract address simply increment nonce security consideration money laundering potential blog post http swende se blog ethereum quirk vulns html elaborates potential using future contract address hide money essentially send ether deterministic address contract currently nonexistent fund effectively lost forever decide create contract address regain ownership anonymous ethereum anyone follow current transaction trace well monitor future contract address transaction pattern used derive real world identity source code contract contains bug risk use mainnet solidity spdx license identifier mit pragma solidity 0 4 22 0 9 0 import openzeppelin contract utils math safemath sol contract recovery generate token function generatetoken string memory name uint256 initialsupply public new simpletoken name msg sender initialsupply contract simpletoken using safemath uint256 public variable string public name mapping address uint256 public balance constructor constructor string memory name address creator uint256 initialsupply public name name balance creator initialsupply collect ether return token fallback external payable balance msg sender msg value mul 10 get balance account function balanceof address account public view return uint256 return balance account allow transfer token function transfer address uint256 amount public require balance msg sender amount balance msg sender balance msg sender sub amount balance amount clean function destroy address payable public selfdestruct configuration install truffle cli skip already installed npm install g truffle install dependency yarn install test attack run test truffle develop test truffle develop test using network ' develop ' compiling contract everything date nothing compile contract hacker destroy token contract 769ms 1 passing 853ms
/liamzebedee/ohdex,TypeScript,ohdex circleci http circleci com gh liamzebedee ohdex tree master svg style svg http circleci com gh liamzebedee ohdex tree master bridge token chain copyright liam zebedee mick de graaf 2019 setup yarn cd package cd contract yarn build cd multichain yarn start run chain ethereum name kovan yarn start run chain ethereum name rinkeby cd deployer node env development yarn deploy testnets cd relayer node env development yarn start cd bridge ui node env development yarn dev faucet testnets poa sokol http faucet poa network goerli http goerli faucet slock rinkeby http faucet rinkeby io kovan http faucet kovan network ropsten http faucet ropsten
/EthereansOS/super-saiyan-token,Solidity,super saiyan token href http uniswap info token 0xb4ae194a0dcf1b4080b164c1d775ee06e0817305 uniswap href http opensea io asset 0xe8bd225aab19cd3cc0e98bd510e4b2fab91247a4 1031500871419234211074616426984759611806302958341 opensea href http dapp dfohub com addr 0xd5f8e370130ebbf6df7bf742866ff056331fd73c buidlers sandbox href http b u l github io super saiyan token documentation history thousand year ability transform new token standard wa considered legend ercs harbored potential wa hidden ethereum world erc20 erc1155 standard alone powerful enough technique unleash synthesizing ancient erc20 technique advanced erc1155 one created ethitem standard first experimental ethitem token super saiya jin ssj achieves standard interoperability unlock true power ethereum governance token manage proposal buidlers sandbox dfo upgradeable digital art nft ssj token first example accomplished innovating state art ethitem technology href http ethos eth link item html ethitem token standard await see else ethereum galaxy brings img src http raw githubusercontent com ethereansos super saiyan token master ssj gif let customizations begin super saiya jin token ssj first experiment involving item standard erc1155 nft href http opensea io asset 0xe8bd225aab19cd3cc0e98bd510e4b2fab91247a4 1031500871419234211074616426984759611806302958341 opensea erc20 token href http uniswap info token 0xb4ae194a0dcf1b4080b164c1d775ee06e0817305 uniswap find erc1155 nft take look href http etherscan io address 0xe8bd225aab19cd3cc0e98bd510e4b2fab91247a4 readcontract etherscan contract try query 1 aserc20 function inserting following token id 1031500871419234211074616426984759611806302958341 reach correspective erc20 version href http etherscan io address 0xb4ae194a0dcf1b4080b164c1d775ee06e0817305 etherscan psst hey pro user calculate hex value token id see happens whats purpose ssj anyway begin erc20 voting token href http dapp dfohub com addr 0xd5f8e370130ebbf6df7bf742866ff056331fd73c buidlers sandbox dfo erc1155 also contains interesting expandable metadata extremely useful unleash true power decentralization avoids mandatory annoying brand related procedure like token listing dex amms logo approval ssj realized extension href http github com b u l eth item token standard ethitem token standard farm start ruling sandbox dfo using href http uniswap info pair 0x0a71ac080b82a794757b00e2f2d96e0e9463f48d usd stablecoin href http www unifihub com unifi href http dapp dfohub com staking 0x792bf16b9c6cad4c180c0031f32c39eb51d6a290 liquidity mining mint usd go href http www unifihub com unifihub com beginning ssj distribution 7 7 77 900 ssj wa distributed among wallet holding 900 buidl arte unifi 100 ssj 10 100 000 ssj wa sent href http etherscan io address 0x25756f9c2cceacd787260b001f224159ab9fb97a nerv operation wallet inflate supply 100 ssj day total 36 500 ssj yearly 5 50 000 ssj wa sent href http etherscan io address 0x5d40c724ba3e7ffa6a91db223368977c522bdacd dfohub wallet owned buidl holder rest 755 000 76 locked href http etherscan io address 0xee4ccfb9341e27abe3c8de2f63694cc1ba71026b sandbox dfo wallet farmed href http dapp dfohub com staking 0x792bf16b9c6cad4c180c0031f32c39eb51d6a290 ssj usd stakers sandbox quorum 300 000 ssj max cap 500 000 youll able reach 4 5 month early test item using ssj token uniswap erc20 approach href http etherscan io tx 0x83b0bfba8b936e9df48b041e165c05eb5f7debb9af69463a76e5c0ce7bac7f93 uniswap v2 approve href http etherscan io tx 0x3e02983346674ef1b8b1160fe9fd880414deff0d6356f64c902cbcc0cd69d23b uniswap v2 add liquidity item token eth href http etherscan io tx 0x21f38e8d8244ad950e00febba765ba2f8ea80b1e03a9032928cc7a57f4fde103 uniswap v2 remove liquidity item token eth href http etherscan io tx 0x1896bae5da015412d23d8ad3348a4b9188dfbcd1acd25db6931cabb0492a52f7 uniswap v2 add liquidity item token erc20 href http etherscan io tx 0x69022eada4372c329edfbc8385866c1ccd7bd705952bf8f4f31fed868a726239 uniswap v2 remove liquidity item token erc20 href http etherscan io tx 0x42898b045f809888e4d489cabb0683b83ecc74ff1ec6f71c42a4431a80d84fee uniswap v2 swap item token eth href http etherscan io tx 0x628d50cedf03e8fef10cc522df55e67f812a8247aa275abd8ebe5311960db756 uniswap v2 swap eth item token href http etherscan io tx 0xe2a6c508bedc73ada144084bad04919fc6b1519b8f03329e7488287a6bbfab35 uniswap v2 swap item token erc20 href http etherscan io tx 0x1debe4f2e05fc99611f81713f2108dffb46dfbf4474dae829a7890c8ce704c07 uniswap v2 swap erc20 item token mooniswap erc20 approach href http etherscan io tx 0xe5fb75bee1cf5f490b4e83bcc7bcc6d1eef4234aa0be6b00610dee3391ffac22 mooniswap approve href http etherscan io tx 0x6edf771cf8483eb5d93b7d8283b23270e8241480ee331260112d7c3726e94dc8 mooniswap add liquidity item token eth href http etherscan io tx 0xa5a3a415f7b0f098bcc914f877f78858db9ccc7e2a63492aa5bbd95e07e872af mooniswap remove liquidity item token eth href http etherscan io tx 0x538035b714ffbe947b3595f724457c97e7b27549e2afac5cae1cce6b848ef6b0 mooniswap add liquidity item token erc20 href http etherscan io tx 0xb56b613222e02162e5bbb2f6c728aa426a0980fd10ac8907e3dd707faa6eab26 mooniswap remove liquidity item token erc20 href http etherscan io tx 0xdda28163e7199e6cfdd5274103c2975ffa1dcb007124079694943ace368a4ec6 mooniswap swap item token eth href http etherscan io tx 0x3cf86d5914b1e8513036926b8f91b997a8d217d77edfafb18cb721b535226d10 mooniswap swap eth item token href http etherscan io tx 0xbd4ae5e4bdfa4b9a57c25970c2f2a1a3eab9d5483e6345035903d78c75b00019 mooniswap swap item token erc20 href http etherscan io tx 0xdfbb21397e42e23b75ed46e4f473c767e3af6ebe282f5491480ae8ac19f28c19 mooniswap swap erc20 item token balancer erc20 approach href http etherscan io tx 0x376dbd77426f42c71a8585ee3337ce99924b3a8ae6a1f84e66f966fa277ed762 balancer approve href http etherscan io tx 0x294596ddd6b806fd500068b48e316264041a9d207763e3653f5f8399d752438c balancer add liquidity item token href http etherscan io tx 0xa756126028cdb137ee04d5db44674d2354a9c5a0e02d7f400d3d9a179dbe1978 balancer remove liquidity item token erc20 href http etherscan io tx 0xccf7295a8b3db6a6f1949d315a0dfca887e9bb6e34d4a49d57e31ca0e466b14e balancer remove liquidity item token href http etherscan io tx 0x8c6aa7866b8dd9e2bca0da5e06f775410c5f17d371ae88fb68dda1f32b2924f4 balancer swap item token erc20 href http etherscan io tx 0x90bdd5e2f41338a0179590377271b6302b09a70ca5b7423f767e4b29f4815d72 balancer swap erc20 item token forkdelta erc20 approach href http etherscan io tx 0xa2b8fe9c4f8d97401d7db45270f65de2c21c56823ffed75622db0d64331dae4d forkdelta approve href http etherscan io tx 0x00475f07b6b7ad9114c07f84ae6158167297821ae7d15278285f8475f2073528 forkdelta add href http etherscan io tx 0xe9a940042737de275735dde73bd4d6cd26b45c2e5f6ba55eacfd4aa111ffc6bc forkdelta exchange buy order 1inch erc20 approach href http etherscan io tx 0x81b1ba4ed93dbbeac6606aa0a1952043a308bee9e692f263b1ca394e89eed0ed 1inch approve href http etherscan io tx 0x8b1955320138ac22e2a7cc7498e3192b3ad46ad90a5e135ac893dcc4e4671cbe 1inch lock href http etherscan io tx 0xef16bd340d029ab280213123a25bbbe503c0990e4f160c6710ccb644f8b299ec 1inch infinite approve href http etherscan io tx 0xbb363683f612a8870d2f72e2b59d67c0425ce1b8052eedc7d7ddff417514c383 1inch exchange item token eth href http etherscan io tx 0xea2b9d5fd5518b91cc76e05b79d268a2fca09a6a3ec4e78eceb44481bd0321ba 1inch exchange eth item token opensea erc 1155 approach href http etherscan io tx 0x5c5d6636fabe16d45fee385a46e907317fd66bcc35bbf306656e5520bf9cd876 opensea gift wallet href http etherscan io tx 0xe3ab895773860aa701f6c710ed255adaca95bef7c021b3b6c54be59602f7e9aa opensea trade
/rachit2501/Lenders.Finance-Protocol-Beta,Solidity,protocol video http youtu ghjxmfq hfw architecture protocol png protocol aim provide underlying layer upon developer build apps special time based erc20 token protocol consists two party liquidity provider borrower liquidity provider create wrapper token erc20 choice add position providing givent liquidity money deposit smart contract send protocol like aave compound yearn etc depending upon blockchain earn interest interest later distributed liquidiity provider party borrower people come protocol take certains time given wrapped token take loan borrower need pay small amount fee security deposit calculation two documented one rule followed fee security deposit loan fee paid one time distrubuted amoung lp gain security money amount get liquidated case borrower ' payback loan time liquidation amount withdrawn loan completely paid back tokenomics wrapped token given ha max supply depends upon underlying asset 1 1 ratio token taken time basis security fee paid accordingly token bounded time ha restictions token cannot send another wallet wallet contract interaction permitted token amount adjusted depending upon time factor gain made part yield farming statergy lp etc sole property borrower ha nothing protocol ' tokenomics interest model interest model based ellipse style graphical representation rellying graph make chance people taking 100 underlying liquidity go since approach towards end interest need paid consequently liquidity availaible withdraw lp x axis graph ha range 0 1 since ration borrowed total liquidity note borrowed amount calculation done adding amount requested borrow equation axis currently hardcode 5 10 percentage later would moved governance model graph formed shifting ellipse towards axis bottom point ymin implies equ formed would x 2 ymax 2 ymax ymin 2 1 solving get ymax sqrt 1 x 2 ymax ymin x b security deposit security deposit calculated using numberofdays amount securityrate note math currenlty research since disparancy expected result following yet implemenated feature included sprint 2 3 feel free contact case interested working following also applicable issue listed project repo todo target finish presenting hackmoney judge aave compound integration fix liquidation function point reserve deposited rather original liquidity currently bug fix interest rate model mathmetical model disparancy arriving current implementation relies way based calculation inspired aave building j sdk solidity interface developer build apps upon expand ecosystem vision project testing deploying chainlink integration interestratestatergy contract calculate equivalent eth value erc20 token current mvp doe us oracle price fee hence number would work underlying asset weth fix truffle migration working ui current deployment includes manually deployment contract fix new interest related payment issue research development point based priority borrower financial advantage eg
/sjuanati/damn-vulnerable-defi,Solidity,damn vulnerable defi challenge 1 unstoppable ' lending pool million dvt token balance offering flash loan free wa way attack stop pool offering flash loan start 100 dvt token balance challenge 2 naive receiver ' lending pool offering quite expensive flash loan ether ha 1000 eth balance also see user ha deployed contract 10 eth balance capable interacting lending pool receiving flash loan eth drain eth fund user ' contract single transaction big plus challenge 3 truster lending pool offering flash loan case new pool ha launched offering flash loan dvt token free currently pool ha 1 million dvt token balance nothing ' worry might able steal pool challenge 4 side entrance surprisingly simple lending pool allows anyone deposit eth withdraw point time simple lending pool ha 1000 eth balance already offering free flash loan using deposited eth promote system must steal eth lending pool challenge 5 rewarder ' pool offering reward token every 5 day deposit dvt token alice bob charlie david already deposited dvt token reward ' dvt token luckily really popular nowadays ' another pool offering free flash loan upcoming round must claim reward challenge 6 selfie new cool lending pool ha launched ' offering flash loan dvt token wow even includes really fancy governance mechanism control could go wrong right start dvt token balance pool ha 1 5 million objective steal challenge 7 compromised poking around web service one popular defi project space get somewhat strange response server snippet http 2 200 ok content type text html content language en vary accept encoding server cloudflare 4d 48 68 6a 4e 6a 63 34 5a 57 59 78 59 57 45 30 4e 54 5a 6b 59 54 59 31 59 7a 5a 6d 59 7a 55 34 4e 6a 46 6b 4e 44 51 34 4f 54 4a 6a 5a 47 5a 68 59 7a 42 6a 4e 6d 4d 34 59 7a 49 31 4e 6a 42 69 5a 6a 42 6a 4f 57 5a 69 59 32 52 68 5a 54 4a 6d 4e 44 63 7a 4e 57 45 35 4d 48 67 79 4d 44 67 79 4e 44 4a 6a 4e 44 42 68 59 32 52 6d 59 54 6c 6c 5a 44 67 34 4f 57 55 32 4f 44 56 6a 4d 6a 4d 31 4e 44 64 68 59 32 4a 6c 5a 44 6c 69 5a 57 5a 6a 4e 6a 41 7a 4e 7a 46 6c 4f 54 67 33 4e 57 5a 69 59 32 51 33 4d 7a 59 7a 4e 44 42 69 59 6a 51 34 related chain exchange selling absurdly overpriced collectible called dvnft 999 eth price fetched chain oracle based three trusted reporter 0xa73209fb1a42495120166736362a1dfa9f95a105 0xe92401a4d3af5e446d93d11eec806b1462b39d15 0x81a5d6e50c214044be44ca0cb057fe119097850c must steal eth available exchange challenge 8 puppet ' huge lending pool borrowing damn valuable token dvts first need deposit twice borrow amount eth collateral pool currently ha 10000 dvts liquidity ' dvt market opened uniswap v1 exchange currently 10 eth 10 dvt liquidity starting 100 eth 100 dvts balance must steal many token possible lending pool end attack eth balance ' decreased
/elysia-dev/elyfi,TypeScript,elyfi repository contains smart contract source code market configuration elyfi repository us hardhat development enviroment compilation testing deployment task elyfi elyfi adding real estate defi concept expansion current crypto crypto application elyfi introduce traditional asset open financial market elyfi document http elyfi doc elysia land v eng describing elyfi work using elyfi elyfi dapp http elyfi elysia land community join telegram http elysia official kakaotalk http open kakao com gupsowkb asking question protocol forum elyfi completed soon join participate fully running elyfi protocol governance installation set env file project directory add following environment variable secret key deploying contract admin infura api key etherscan api key install dependency yarn deploy elyfi protocol ha two component core component including moneypool contract main part elyfi protocol main entry point elyfi protocol reserve component ha supporting contract tokenization therefore deployment done two process deploying core component yarn deploy core network networkname deploying reserve component yarn deploy reserve network networkname tag asset symbol reserve test convenience assume waffle ' wallet mapped order deployer account1 account2 account3 run test script run specific test code yarn test test contract index test compile yarn test zap test contract index test run scenario script dynamically load scenario json yarn test test suite scenario test run script subgrap testing yarn hardhat deploy network ganache yarn task createwithdraw network ganache asset asset address pool pool address coverage yarn coverage open coverage index html docgen genenerate markdown doc smart contract natspec markdown doc template contract hb template edit file replace docgen yarn docgen contract address mainnet eth contract address moneypool 0xa93008fd32eb24e488ddaa6c0aa152559fda9e8c datapipeline 0x128af7e290eccde0050f33a1b5a4bc8b2bb4d817 dai ltoken 0x527c901e05228f54a9a63151a924a97622f9f173 dai dtoken 0x62324ce2e14bb94512ec26c9ff0be2cad8c83d1b dai tokeninzer 0xc6701e7be98a79485364419961838eb141141aaf usdt ltoken 0xe0bda8e3a27e889837ae37970fe97194453ee79c usdt dtoken 0x62324ce2e14bb94512ec26c9ff0be2cad8c83d1b usdt tokeninzer 0x68f69ab21242e194ebd7534b598e26180dd92616 usdc ltoken 0xe0bda8e3a27e889837ae37970fe97194453ee79c usdc dtoken 0xf917147d8ed7b57c107d36576f4ccde410ae29b6 usdc tokeninzer 0xd86f51c8d0f10aad267fb42e143d6d0b97ae9b23 bsc contract address moneypool 0x0bdfef5f8b75741d33a22d85022244cbe793da24 datapipeline 0xa63830cccdcd380b00ef00f070357cb03cdc2e7b busd ltoken 0x5bb4d02a0ba38fb8b916758f11d9b256967a1f7f busd dtoken 0xe9f638c2ba70ea022c710eaeef14824f126d0c34 busd tokeninzer 0x0d768c1507b5099cb37e5d28b1959b831b5ebf9e primary account mainnet name address moneypool owner 0x715b006d4723977ccdb1581a62948f6354752e62 csp elyloan 0x9fcdc09bf1e0f933e529325ac9d24f56034d8ed7 council 0x53c14659bf777b2d7e0a7fba4d5dff87d594495c bsc name address moneypool owner 0x8d86dd9fe7318e04cc51440c0252663f7fecf01e csp elyloan 0x9fcdc09bf1e0f933e529325ac9d24f56034d8ed7 council 0x1ba25f40ba5befcffef536709271e3098345b0cc graph http thegraph com explorer subgraph id 56zkjawq8kq1mjmym4zxwe7bv8fgswucnbt7jcxi8nfn view playground http thegraph com hosted service subgraph donguks elyfi bsc
/JuanXavier/damn-vulnerable-defi,Solidity,cover png set challenge hack implementation defi ethereum featuring flash loan price oracle governance nfts lending pool smart contract wallet timelocks created tinchoabbate http twitter com tinchoabbate level 1 unstoppable x ' lending pool million dvt token balance offering flash loan free wa way attack stop pool offering flash loan start 100 dvt token balance article detailed explanation http medium com juanxaviervalverde damn vulnerable defi unstoppable level 1 solution a1a31a632996 2 naive receiver x ' lending pool offering quite expensive flash loan ether ha 1000 eth balance also see user ha deployed contract 10 eth balance capable interacting lending pool receiveing flash loan eth drain eth fund user ' contract single transaction big plus article detailed explanation http medium com juanxaviervalverde damn vulnerable defi naive receiver level 2 solution 17d6a4763c7b 3 truster x lending pool offering flash loan case new pool ha launched offering flash loan dvt token free currently pool ha 1 million dvt token balance nothing ' worry might able take pool single transaction article detailed explanation http medium com juanxaviervalverde damn vulnerable defi truster level 3 solution 3a08d34ad07b 4 side entrance x surprisingly simple lending pool allows anyone deposit eth withdraw point time simple lending pool ha 1000 eth balance already offering free flash loan using deposited eth promote system must take eth lending pool article detailed explanation http medium com juanxaviervalverde damn vulnerable defi side entrance level 4 solution 8d76d4d629e1 5 rewarder x ' pool offering reward token every 5 day deposit dvt token alice bob charlie david already deposited dvt token reward ' dvt token upcoming round must claim reward oh way rumour say new pool ha landed mainnet ' offering dvt token flash loan article detailed explanation http medium com juanxaviervalverde damn vulnerable defi rewarder level 5 solution b0b94079cce1 6 selfie x new cool lending pool ha launched ' offering flash loan dvt token wow even includes really fancy governance mechanism control could go wrong right start dvt token balance pool ha 1 5 million objective take article detailed explanation http medium com juanxaviervalverde damn vulnerable defi selfie level 6 solution aa7bcf507aec 7 compromised x poking around web service one popular defi project space get somewhat strange response server snippet http 2 200 ok content type text html content language en vary accept encoding server cloudflare 4d 48 68 6a 4e 6a 63 34 5a 57 59 78 59 57 45 30 4e 54 5a 6b 59 54 59 31 59 7a 5a 6d 59 7a 55 34 4e 6a 46 6b 4e 44 51 34 4f 54 4a 6a 5a 47 5a 68 59 7a 42 6a 4e 6d 4d 34 59 7a 49 31 4e 6a 42 69 5a 6a 42 6a 4f 57 5a 69 59 32 52 68 5a 54 4a 6d 4e 44 63 7a 4e 57 45 35 4d 48 67 79 4d 44 67 79 4e 44 4a 6a 4e 44 42 68 59 32 52 6d 59 54 6c 6c 5a 44 67 34 4f 57 55 32 4f 44 56 6a 4d 6a 4d 31 4e 44 64 68 59 32 4a 6c 5a 44 6c 69 5a 57 5a 6a 4e 6a 41 7a 4e 7a 46 6c 4f 54 67 33 4e 57 5a 69 59 32 51 33 4d 7a 59 7a 4e 44 42 69 59 6a 51 34 related chain exchange selling absurdly overpriced collectible called dvnft 999 eth price fetched chain oracle based three trusted reporter 0xa73209fb1a42495120166736362a1dfa9f95a105 0xe92401a4d3af5e446d93d11eec806b1462b39d15 0x81a5d6e50c214044be44ca0cb057fe119097850c starting 0 1 eth balance must steal eth available exchange article detailed explanation http medium com juanxaviervalverde damn vulnerable defi compromised level 7 solution ef9c5f31b0d7 8 puppet x ' huge lending pool borrowing damn valuable token dvts first need deposit twice borrow amount eth collateral pool currently ha 100000 dvts liquidity ' dvt market opened uniswap v1 exchange currently 10 eth 10 dvt liquidity starting 25 eth 1000 dvts balance must steal token lending pool article detailed explanation http medium com juanxaviervalverde damn vulnerable defi puppet level 8 solution a156a28cef01 9 puppet v2 x developer last lending pool saying ' learned lesson released new version ' using uniswap v2 exchange price oracle along recommended utility library enough start 20 eth 10000 dvt token balance new lending pool ha million dvt token balance know article detailed explanation http medium com juanxaviervalverde damn vulnerable defi puppet v2 level 9 solution 266a2ee7c70 10 free rider x new marketplace damn valuable nfts ha released ' initial mint 6 nfts available sale marketplace one 15 eth buyer ha shared secret alpha marketplace vulnerable token taken yet buyer ' know ' offering payout 45 eth whoever willing take nfts send way want build rep buyer ' agreed plan sadly 0 5 eth balance wa place could get free eth least instant article detailed explanation http medium com juanxaviervalverde damn vulnerable defi free rider level 10 solution e39fc43296c7 11 backdoor incentivize creation secure wallet team someone ha deployed registry gnosis safe wallet someone team deploys register wallet earn 10 dvt token make sure everything safe sound registry tightly integrates legitimate gnosis safe proxy factory ha additional safety check currently four people registered beneficiary alice bob charlie david registry ha 40 dvt token balance distributed among goal take fund registry single transaction article detailed explanation 12 climber ' secure vault contract guarding 10 million dvt token vault upgradeable following uup pattern owner vault currently timelock contract withdraw limited amount token every 15 day vault ' additional role power sweep token case emergency timelock account proposer role schedule action executed 1 hour later goal empty vault article detailed explanation 13 safe miner somebody ha sent 2 million dvt token 0x79658d35ab5c38b6b988c23d02e0410a380b8d5c address empty ' pas challenge take token may need use prior knowledge safely article detailed explanation play visit damnvulnerabledefi xyz http damnvulnerabledefi xyz disclaimer solidity code practice pattern repository damn vulnerable educational purpose use production
/blockparty-sh/insane-clown-ponzi,JavaScript,insane clown ponzi contract address 0x1a581bdf6b5746440ddd2f8b7d613d5e21641972 introduction ponzi hello welcome insane clown ponzi first ponzi defi nft dapp smartbch ponzi advanced financial technique deposit pay past investor future investor pay lead gigantic gain able invest others however money deposit effectively immediately gone make money must deposit bch point bch distributed others invested ponzi 10 fee applied 5 distributed amongst 5 sent first invested ponzi others invest ponzi scheme receive cut deposit proportional investment ponzi compared total ponzi size well provides incentive convince others good idea balance withdrawn time clicking withdraw button minimum withdraw affect save enough brain start claiming appear tent start dancing receive 50 fee want make money want claim right away another added benefit introduction collectible nft ponzi scheme allows others speculate ponzi scheme ' fee without actually investing ponzi scheme buying secondary market innovation possible really smart contract feature stated enable receive fee future investment ' also unique design name come unique motivational quote addition watch dance circus tent homepage happy bonding curve supply limited amount one able acquire price increase 1 2021 time one purchased known bonding curve pillar 21st century mathematics calculate future price formula 0 01 1 1 2021 0 01 referring price bch first index next purchase secondary market buying may think great idea want invest ponzi scheme however want speculate future investment ponzi scheme tokenizing enables may want purchase others order receive fee receive may want part order invest ponzi possibility endless selling currently nft marketplace smartbch however one trade p2p fashion via telegram something similar click symbol header click name want sell show panel allows transfer another address sure check address correct thanks http github com adrianbarwicki eth ponzi fund used base ponzi http github com openzeppelin openzeppelin contract nice contract http github com blockparty sh smartslp manager wa used speed initial development
/0xmikko/layer-cake-swap-node,Rust,title white http user image githubusercontent com 26343374 106140486 e5dae180 617f 11eb 86e9 cb4204589d6c png layercakeswap layercakeswap dex protocol consumes 7 time le gas sup 1 sup comparison uniswap based l2 network solves following problem high gas rate make defi expensive user 12 18 usd per swap 1 000 usd eth defi user prefer trust ethereum arent willing migrate side chain solution like binance smart chain poa etc gas efficiency user interact layercakeswap smart contract ethereum using familiar interface additional setup required even layercakeswap contract api accessible smart contract ethereum smart contract emits event manage operation l2 network based polkadot substrate gas efficiency come executing calculation data storage l2 network advanages http user image githubusercontent com 26343374 106137793 4405c580 617c 11eb 8b6c 59190649bbe8 png version implement business logic trading pair eth erc20 token ethereum contract frontend located http github com mikaellazarev layer cake swap client demo video http youtu 4ittqwgjaeq http youtu 4ittqwgjaeq live demo http lcswap dltxperts com http lcswap dltxperts com project wa developed encode hackathon ' 2021 gas consumption comparison operation uniswap layercakeswap deposit eth 22 656 deposit token 48 628 swap token eth sup 2 sup 165 969 22 656 addtoliquidity pool research 22 656 withdraw liquidity pool research 22 656 withdraw eth data yet withdraw token data yet sup 1 myfootnote1 sup swap operation uniswap gas consumption wa measured eth dai pair sup 2 myfootnote1 sup gas uniswap wa measured eth dai swap work work http user image githubusercontent com 26343374 106125934 cf2b8f00 616d 11eb 8874 2ae3d08ccf6b png 1 user interacts smart contract ethereum network usual 2 contract process method emits event 3 lcswap listens event execute order l2 supported operation deposit asset ethereum token deposit process http user image githubusercontent com 26343374 106126399 5f69d400 616e 11eb 9d63 7e2360e5da49 png order swap liquidity pool management order process http user image githubusercontent com 26343374 106126526 845e4700 616e 11eb 89be 752d8ea2f472 png withdraw process withdraw process http user image githubusercontent com 26343374 106127954 08fd9500 6170 11eb 891a 550223ceb0b3 png legend legend http user image githubusercontent com 26343374 106128944 e15afc80 6170 11eb 9880 5fc25f9e3fe6 png install dev mode project contains configuration file help get started hammer wrench rust setup setup instruction working rust http www rust lang org programming language found substrate developer hub http substrate dev doc en knowledgebase getting started follow step install rustup http rustup r configure rust toolchain default latest stable version clone contract repo deploy ethereum smartcontract 1 clone contract repo git clone http github com mikaellazarev layer cake swap client 2 run hardhat blockchain npx hardhat node close tab hardhat node work background 3 deploy smartcontract yarn deploy local 4 run frontend yarn start clone substrate node repo config 1 clone repo git clone git github com mikaellazarev layer cake swap node git 2 go src folder frontend folder open env local file 3 would contain something like react app backend addr http localhost 8000 react app vault address 0xe7f1725e7734ce288f8367e1bb143e90bb3f0512 react app token address 0x5fbdb2315678afecb367f032d93f642f64180aa3 react app chain id 1337 4 copy react app vault address react app token address need configure substrate node 5 go back substrate node directory 6 copy env example env file set web3 provider dev pruposes would hardhat address web3provider http localhost 8545 7 go polkaswap pallet directory ' former name layer cake swap project cd pallet polkaswap src 8 open lib r file insert vault contract address token address without 0x prefix rust vault contract address pub const vault contract address ' static str e7f1725e7734ce288f8367e1bb143e90bb3f0512 token contract agaist eth erc20 contract address dai case pub const token contract address ' static str 5fbdb2315678afecb367f032d93f642f64180aa3 9 return root directory run substrate node dev mode make dev contributing contributing repository please first discus change wish make via issue email method owner repository making change credit thanks anthony beaumont inspiration dan forbes tech support naming idea disclaimer application provided fault developer make representation warranty kind concerning safety suitability lack virus inaccuracy typographical error harmful component software inherent danger use software solely responsible determining whether software product compatible equipment software installed equipment also solely responsible protection equipment backup data provider liable damage may suffer connection using modifying distributing software product
/NaikAayush/rupya,HTML,rupya zero collateral lending platform focus seamless lending agriculture problem traditional market unsecured semi secured lending biggest part economy current defi infrastructure ha built overcollateralized lending hence uncollateralized lending scoring need hour india agriculture industry employ 41 49 working population seamless way lend borrow trade financing essential rupya unsecured zero collateral lending platform tapping market revolutionise defi financing focus incentivising agriculture loan borrowing rupya work lender lend asset particular currency pool used loan earn interest liquid fund planned deposited aave curve borrower approved submit loan request request verified stakers stakers final verdict approval stakers stake rup key approving loan staked rup liquidated case verified borrower default pay track defi track zero collateral lending platform web3 integration web2 could compared like kiva co trying capitalise traditional unsecured lending market wider accessibility agriculture related project agri 10x focus lending agriculture sector file layout contract contains smart contract used rupyatoken loan borrow etc faucet webapp faucet app easily get rup rupya token usdc seamless usage platform webapp main dapp built using angular contains functionality platform technology polygon network superfast blockchain transaction ipfs distributed storage encrypted user profile loan detail etc covalent real time chain data via api faucet information across dashboard stackos decentralized deployment 3 frontend apps faucet main app landing page chainlink price feed calculating interest earned staking rup tied usdc test net vrf loan contract superfluid stream interest earned lender regularly pay back loan borrower screenshots screenshots 1 cover png screenshots 2 lend png screenshots 3 stake png screenshots 4 faucet png screenshots 5 borrow png
/mathijs81/tokenblend,TypeScript,tokenblend asset allocation enzyme fund ethereum wallet entry hack money hackathon 2021 dapp perform token asset allocation either native ethereum wallet enzyme vault current feature implemented adjust rebalance token blend slider deposit supported token yield generating idle token withdraw necessary rebalancing native wallet generate simple trading plan reach desired blend token swap token swap using paraswap native wallet uniswap ethglobal showcase page tokenblend http showcase ethglobal co hackmoney2021 tokenblend live demo http mathijs81 github io tokenblend demo video demo video http img youtube com vi qcvpbpok3f0 0 jpg http www youtube com watch v qcvpbpok3f0 run develop see source web subdirectory dapp blockchain directory contains utility run hardhat fork mainnet locally easily test uniswap idle
/masaun/watch-nft-based-cdp,Solidity,watch nft based cdp collateralized debt position introduction luxury watch nft based cdp collateralized debt position smart contract allow user borrow watchsignals token wst depositing luxury watch watch nft collateral user create watch nft based luxury watch luxury watch price current luxury watch price retrieved watchsignals luxury watch price oracle via chainlink user deposit watch nft watchcdp pool depositing watch nft user borrow watchsignals token wst watchcdp pool user borrow wst 60 watch price collateralized watch nft depositing collateral borrowing structure simlar makerdao ' cdp mcd user repay user repay watchsignals token include principal interest watchcdp pool user finish repay user withdraw deposited watch nft watchcdp pool br watchsignals token wst erc20 token original token watchsignals br use watchsignals luxury watch price oracle via chainlink retrieving watch price data http doc chain link doc watchsignals config nbsp workflow diagram workflow watchcdp contract also watchcdp pool diagramwatch nft based cdp collateralized debt position http user image githubusercontent com 19357502 114325486 541e2600 9b6b 11eb 828f b85976da759b jpg nbsp version version following chainlink v0 6 smart contract solidity solc v0 6 12 truffle v5 1 60 web3 j v1 2 9 openzeppelin solidity v3 2 0 ganache cli v6 9 1 ganache core 2 10 2 nbsp setup 3 prepare execution script 1 get api key infura http infura io br 2 add env root directory referencing env example need set 3 thing env mnemonic mnemonic infura key infura key deployer address deployer address br 2 install module install npm module root directory npm install br 3 compile migrate contract kovan testnet npm run migrate kovan br 4 script testing whole process kovan 1 process creating watch nft deposit watch nft collateral watchcdp pool borrow watchsignals token wst npm run script watchcdp borrow br 2 process repay watchsignals token include principal interest watchcdp pool withdraw deposited watch nft watchcdp pool npm run script watchcdp repay case want execute script executed must migrate process3 need execute step 1 2 br video demo video demo executing script kovan testnet http youtu w8of0szcuas br remark arbitrum verison progress br watchcdp contract also watchcdp pool br another script part script calling oracle using watchsignals luxury watch price oracle via chainlink npm run script watchsignalsluxurywatchpriceoracle script creating watch nft npm run script watchnftfactory br reference watchsignals luxury watch price oracle via chainlink article http watchsignals com watch blog luxury watch data blockchain chainlink html doc http doc chain link doc watchsignals config chainlink chainlink contract v0 1 6 include solidity v0 6 based package http www npmjs com package chainlink contract arbitrum public testnet kovan arbitrum http developer offchainlabs com doc public testnet deploy arbitrum using truffle http developer offchainlabs com doc contract deployment chainlink virtual hackathon spring 2021 http chainlink 2021 devpost com
/aresprotocols/ares-module,Java,module middot github license http img shield io badge license gpl3 2fapache2 blue license gitlab status http gitlab parity io parity substrate badge master pipeline svg http gitlab parity io parity substrate pipeline pr welcome http img shield io badge pr welcome brightgreen svg discord http img shield io badge discord join 20chat blue svg http discord gg gwgg63zjvk p align center img src badge black svg width 400 p ' pallet repo protocol example video http www youtube com watch v hlyhshfkzjw substrate node template substrate node pallet deal aggregator register unregister pallet oracle request result callback add pallet test code add pallet ocw use chain worker fetcher price add chain aggregate price support multi token price substrate front end template front end display registration result event chain query oracle price data warehouse price query chain data history fetch data oracle scanner transfer token aggregator listen oracle event request fetch aggregate price return oracle learn http github com aresprotocols module tree main fetch data aggregate data warehouse fetch huobi binance okex price privide api oracle visite use learn http github com aresprotocols module tree main aggregate getprice suppot btc eth dot http api aresprotocol com api getpartyprice btcusdt msg success code 0 data market null symbol btcusdt price 18319 72 node null sn null systs 1607528442761 1607528442761 build 1 start node enter substrate node template make build start target release node template dev tmp 2 start front enter substrate front end template run yarn start 3 start aggregator enter fetch data run npm index j use start front send register unregister initial request feed data action node template
/byteball/bonded-stablecoin-buffer,JavaScript,autonomous agent buying t2 token buffer aa help buy t2 token keeping fee 1 another configured threshold fund reserve currency sent aa bot check current state curve trigger aa buy specific number t2 token curve several purchase might required order convert entire deposited amount t2 purchase ha small enough order move price much pay large fee purchased t2 token sent directly user ' address new aa created user manages fund single user buffer aa used allow user buy t2 token one step paying non obyte cryptocurrencies btc eth usdt etc buy interest token http ostable org buy page ostable org new buffer aa created user input currency converted gbyte using swapping service simpleswap io output gbyte sent buffer aa bot trigger aa possibly several time convert deposited gbytes t2 token send user anybody trigger aa execute purchase t2 token companion bot included watch transaction happening curve estimate effect calculates amount t2 token bought without paying fee would exceed 1 trigger aa bot also send additional gbytes aa compensate user fee charged swapping service additional gbytes also converted t2 installing bash yarn testing aa test written using aa testkit http github com valyakin aa testkit bash yarn test running bot bash node run j 2 errlog complains missing table create bash node db import j bot listens port 8080 8081 testnet serf backend buy interest token http ostable org buy page ostable org serf following endpoint get api create buffer create new buffer aa user parameter address user address want receive t2 token curve aa address curve aa buying get api get expected compensation get estimation compensation simpleswap exchange amount amount input currency currency amount gbyte post api create order record newly created exchange order parameter buffer address property simpleswap order
/tacoinfra/harbinger-cli,JavaScript,harbinger cli harbinger cli source command line utility called harbinger cli node binary package written typescript contains functionality working harbinger oracle http github com tacoinfra harbinger get started harbinger visit main documentation http github com tacoinfra harbinger library provides functionality interacting harbinger oracle system user want post price might also interested harbinger poster http github com tacoinfra harbinger poster hosted component providing similar functionality posting data harbinger entity wish sign price harbinger may want look harbinger signer http github com tacoinfra harbinger signer developer new harbinger component may interested harbinger lib http github com tacoinfra harbinger lib install cli install pre packaged cli npm run following npm g tacoinfra harbinger cli harbinger help build library source run shell npm npm run build functionality note harbinger installs symlink named hbg executes harbinger binary shortcut case ' want type full name harbinger ha following function deploying oracle normalizer contract update contract price feed push data oracle normalizer contract pretty print value oracle contract revoke oracle contract triggering emergency shutdown getting started harbinger ha fully interactive complete documentation simply pas help harbinger subcommand instance shell harbinger help print harbinger documentation harbinger deploy oracle print documentation deploy oracle subcommand common flow following set command demonstrates common flow deploying working harbinger oracle shell deploy oracle contract harbinger deploy oracle print kt1 address oracle contract deploy normalizer contract harbinger deploy normalizer oracle contract address address print kt1 address oracle contract push update oracle contract normalizer contract every 120 second harbinger update oracle contract address kt1 address oracle normalizer contract address kt1 address normalizer update interval 120 credit harbinger written maintained luke youngblood http github com lyoungblood keefer taylor http github com keefertaylor
/solaris-protocol/solaris-ui,TypeScript,solaris ui href ' http solarisprotocol com ' img src ' http raw githubusercontent com solaris protocol solaris ui new asset ui png ' alt ' solaris ui ' aria label ' solarisprotocol com ' solaris lending borrowing protocol brings flashloans solana blockchain inspired aave compound built top solaris protocol http github com solaris protocol solaris protocol solana http solana com pyth http pyth network solaris channel discord http img shield io badge discord 23general 20 40 20solaris 20protocol 78468c svg style flat square http discord gg pjh4tuuzep solaris channel telegram http img shield io badge telegram solarisprotocol 78468c svg style flat square http solarisprotocol solaris channel telegram http img shield io badge twitter solarisprotocol 78468c svg style flat square http twitter com solarisprotocol installation clone repository bash git clone http github com solaris protocol solaris ui cd solaris ui edit environment env file use command bash yarn start start development yarn build create production build development install following extension code editor linting ease work code eslint prettier stylint styled component contributing best way submit feedback report bug open github issue please sure include operating system device version number step reproduce reported bug keep mind participant expected follow code conduct
/bmorphism/shitcoin,Python,devs png shitcoin devs welcome web3 anon early 1 1 http medium com osmosis introducing osmosis frontier d9da158b22d0 race make token http mobile twitter com alpeh v status 1479220092336496648 community value liquid osmosis frontier http frontier osmosis zone junoswap http junoswap com anywhere cw20 sold may wonder get denom value world changing ibc asset doe rac become ibc 6bdb4c8ccd45033f9604e4b93ed395008a753e01eecd6992e7d1ea23d9d3b788 osmosis frontier assetlist json http github com osmosis lab assetlists blob 3f31ff89eb910fe4efe1de074e74a6bcd32e57a3 osmosis 1 osmosis frontier assetlist json l1381 wonder shitcoin help usage install pip3 install shitcoin create dao create cw20 without becoming cosmwasm expert get juno head dao dao http daodao zone dao juno18z6rxlnmw0f86maxuzv0z6mwtxrflam8xjpsqacy6y5m5eu34y7qjqegk2 go 0 defi hero without code 0 5 usd create dao http daodao zone dao create take note cw20 token address example dao http daodao zone dao juno18z6rxlnmw0f86maxuzv0z6mwtxrflam8xjpsqacy6y5m5eu34y7qjqegk2 ha juno14cr367h7vrgkx4u6q6prk2s29rlrp8hn478q2r9zrpyhkx7mx5dsuw7syw dude starlanes python3 python 3 9 12 main mar 26 2022 15 44 31 clang 13 1 6 clang 1316 0 21 2 darwin type help copyright credit license information shitcoin import cw20 ibc denom cw20 ibc denom transfer channel 169 cw20 juno14cr367h7vrgkx4u6q6prk2s29rlrp8hn478q2r9zrpyhkx7mx5dsuw7syw ' ibc 8c8bfd62ea45671adeba13835af3deaaa0661ea7d1283bb1c54d679898db29fb ' follow step permissionless dex amm choice http doc osmosis zone integrate frontend html add asset onto osmosis asset page list asset use denomination value obtained ibc quiet confidence poin drop new token frens aligned fellow traveler celebrate launch finding something fun watch c span http www c span org video 516464 1 house hearing financial innovation digital currency describe encourage ape stuck help copy pasta w existing cw20 submit necessary pr thoughtfully adjusting http github com osmosis lab osmosis frontend pull q 3apr 3aclosed rac profit 1 swap token aligned daos chain create lp allow unencumbered flow value incentivize participation dispensing reward epoch extra street cred write deflationary tokenomics publicly stick time convert small portion value network stable exit fiat hot cocoa nap thereby monetizing community without resorting predatory surveillance capitalism support team behind shitcoin default alive however would please u start dao long pull rug http www youtube com watch v gcflglbi ke learn fundamental http www youtube com playlist list plegcf wlh2rlohv xuglqrts 9jxrckia discover missing market shitty nash equilibrium use sovereign programmable money nudge participant play better game http medium com virgilgr ethereum game changing technology literally d67e01a01cf8 fun always remember everything need commodified insist sharing spoil direct donation topos institute http crm bloomerang co hosteddonation apikey pub ea742ae0 60bf 11eb ad37 023f69b29baf widgetid 18432 work tirelessly help u solve actually hard problem http www youtube com watch v 894cggiieku also check anoma http anoma net vision paper pdf disgusted ponzinomics still interested governance innovation
/nutbox-dao/nutbox-contract,Solidity,nutbox contract local development prerequirements node truffle ganache installed install dependency yarn compile contract truffle compile run test truffle test deploy contract run script script deploy j sh endpoint http localhost 8545 key private key gaslimit 10000000 gasprice 50000000000 node deploy j see output like sh url http bsc dataseed binance org deployer 0x281c93162fb45f06e9d8c1688075640e86bf01ec depoly cost 0 069551005 depoly block number 15414978 contract address committee 0xd10e4c1e301a13a9b874bd1757c135eda075769d mintableerc20factory 0xa183d96a7e84bf77fb7825026fa8b9bf6894cfa8 communityfactory 0x1a4eee210bc54a75d25989546f648474edf1c0a3 linearcalculator 0x6ab448c1c6e1870602d3fb867f167029bbfb3181 spstakingfactory 0xf7fa41bf814edc767691ddb1864a334d83f4acf7 erc20stakingfactory 0xf870724476912057c807056b29c1161f5fe0199a erc1155stakingfactory 0x76303be21ef601e68639b541b035ca33d247b5fe deployed contract bsc committee 0xd10e4c1e301a13a9b874bd1757c135eda075769d mintableerc20factory 0xa183d96a7e84bf77fb7825026fa8b9bf6894cfa8 nutpower 0x5de2a9993eccbfab4d83a5dcc0911c0e80a08aba communityfactory 0x1a4eee210bc54a75d25989546f648474edf1c0a3 linearcalculator 0x6ab448c1c6e1870602d3fb867f167029bbfb3181 spstakingfactory 0xf7fa41bf814edc767691ddb1864a334d83f4acf7 erc20stakingfactory 0xf870724476912057c807056b29c1161f5fe0199a cosmosstakingfactory 0xad6a0c0017559d051264e1657d627107d6b12f0d gauge 0x6f2686b34d23dcbf79a33a2eea5e92d84b942d91 erc1155stakingfactory 0x76303be21ef601e68639b541b035ca33d247b5fe register chain 1 steem sp delegation 2 hive 3 atom 4 osmosis 5 juno 6 steem sp witness proxy
/pooltogether/v4-docs,JavaScript,pooltogether v4 doc documentation built using docusaurus 2 http v2 docusaurus io contributing update deployed contract ' find deployed network doc deployment mainnet md generated using yarn doc v4 mainnet http github com pooltogether v4 mainnet project pt v4 prize pool network note includes multiple blockchains ethereum polygon optimism etc testnet md generated using yarn doc v4 testnet http github com pooltogether v4 testnet project pt v4 prize pool test network rinkeby optimistic kovan etc update network new deployment 1 depending ' updating git clone mainnet testnet project linked 2 run yarn doc generate either mainnet md testnet md file 3 replace similarly named file project located doc deployment new file contributing pooltogether doc contributing doc site great way get involved dev community help devs along way check guideline http github com pooltogether v4 doc blob main contributing md generate markdown file solidity natspec comment install solidity doc gen npm install solidity docgen get correct compiler version npm install solc 0 7 npm solc 0 7 6 put updated template contract hb template folder directory contract want generate run npx solidity docgen solc module solc 0 7 template gernerate markdown file typescript commments npm install save dev typedoc typedoc plugin markdown typedoc doc src index see http www npmjs com package typedoc plugin markdown detail update search index algolia create env file application id api key write access edit config json file start url updated website sitemap url updated website ex doc http dev pooltogether com sitemap xml v4 doc index name install jq brew install jq run docker run env file env e config cat config json jq r tostring algolia docsearch scraper add new page create markdown file respective versioned doc versioned sdk directory add internal link relative absolute path work end link trailing installation console yarn install local development console yarn run start command start local development server open browser window change reflected live without restart server clear cache console yarn docusaurus clear build console yarn build command generates static content build directory served using static content hosting service deployment console git user github username use ssh true yarn deploy using github page hosting command convenient way build website push gh page branch
/OctoFi/octofi-dao-templates,JavaScript,dao template build status http travis ci org aragon dao template svg branch master http travis ci org aragon dao template octo fi dao template best way kickstart aragon organization using template template set smart contract create organization scratch configure according provided parameter involve smart contract code modifying template even though ' usually really easy must done extreme care always recommended third party security audit review template code modified mainnet ready template aragon creates put template repo external audit despite come without guarantee template consider secure today may vulnerable unknown security hole discovered road moreover user ha created organization may grant transfer permission way make organization insecure find information template deployment address deployment repo http github com aragon deployment tree master environment mainnet aragon 0 8 aragon 0 8 client ha switched following template company http github com aragon dao template tree master template company company template aragonpm eth company board http github com aragon dao template tree master template company board company board template aragonpm eth membership http github com aragon dao template tree master template membership membership template aragonpm eth reputation http github com aragon dao template tree master template reputation reputation template aragonpm eth template audited part 0 8 release aragon 0 7 aragon 0 6 0 7 following template used client create organization user democracy http github com aragon dao template tree aragon v0 7 kit democracy democracy kit aragonpm eth multisig http github com aragon dao template tree aragon v0 7 kit multisig multisig kit aragonpm eth template audited part 0 6 0 7 release whg consensys diligence build template aragon template shared published npm contains contract deployment testing utility help build template template monorepo use template shared internally help help support feel free contact u time spectrum http spectrum chat aragon app development
/StableLend/StableCoin,Python,stablecoin collaterlized debt position
/block42-blockchain-company/liquid-icx,Python,liquid icx licx secure icon network earn staking reward staying liquid licx protocol icon network staking icon network native token icx staked protocol give stakers passive return form icx token staked token locked moved icx staked licx licx irc 2 token standard implementation 1 licx represents 1 icx staked licx pool main goal licx implementation user able transfer asset still getting staking reward licx used personal use stake icx still able transfer one wallet another reward earned getting restaked redelegated user get compounding interest investment protocol use irc 2 token use licx instead icx similar wrapped asset network example weth protocol hold icx hold licx instead user also benefit network staking reward protocol user spend icx accept licx instead allow user also receive staking reward stated ratio licx icx always stay 1 1 licx achieving air dropping reward prep term air drop doe happen transfer function increase amount licx wallet based amount licx specific wallet ha time distribution allows ease use user always know amount icx dealing interacting licx depositing withdrawal deposit depositing icx licx protocol put asset licx pool user receive licx ratio 1 1 wallet proof deposited icx licx pool depositing icx licx pool take 2 term 2 day licx becomes transferable eligible reward icon network staking reward first distributed 2 term necessary step two term licx unlocked transferable withdrawal depositing licx licx protocol withdraw icx ratio 1 1 licx pool withdrawing licx take 5 20 term day based unstaking period icon network currently ha number day depends amount icx staked icon network higher icon network staked fewer day need wait unstake user manually claim icx ha unstaked unstaking period user would stake would also wait amount day unstake reward staking reward distribution network happen per term ha manually triggered anyone trigger function execute claiming new reward distribution licx eligible user restaking redelegating icx wallet le 10 licx eligible prevent dust attack number may subject change licx function licx implement standard irc 2 method name symbol decimal totalsupply balanceof transfer participate pool protocol also method implemented join python def join self delegation str none ' payable function add join mint request wallet convert icx licx request resolved per term distribute function wallet ha maximal 10 join request per term licx token locked 2 term since producing reward yet meaning transfer icx also staked delegated prep address user provided calling function case user doe care doe pas delegation voting power proportionally divided prep score currently delegating leave python def leave self value int none add leave burn request wallet convert licx back icx similar joining request leave request resolved per term user specify leaving amount value meaning burn licx token part case value passed function call token burned next distribute cycle vote python def vote self delegation str allows user joined protocol change delegation meaning previous delegation removed new one added claim python def claim self sends currently available user ' icx score back account distribute python def distribute self function distribute reward eligible wallet currently wallet 10 icx value changed involved protocol also resolve wallet join leave request function mint burn licx total supply wallet balance updated everyone call function benefit whole ecosystem future incentive call function implemented development installation start local development choose two option 1 install run tbears docker container quick easy 2 install tbears pip docker bash docker run name local tbears p 9000 9000 v path repo liquid icx score work iconloop tbears mainnet command following download tbears docker image create start container create volume attach stdin stderr container pip macos bash install develop tool brew install leveldb brew install autoconf automake libtool pkg config install rabbitmq start service brew install rabbitmq brew service start rabbitmq create working directory mkdir work cd work setup python virtualenv development environment pip3 install virtualenv virtualenv p python3 source bin activate install icon score dev tool work pip install tbears linux bash install leveldb sudo apt get install libleveldb1 libleveldb dev install libsecp256k sudo apt get install libsecp256k1 dev install rabbitmq start service sudo apt get install rabbitmq server create working directory mkdir work cd work setup python virtualenv development environment virtualenv p python3 source bin activate install icon score dev tool work pip install tbears
/ShieldDao/shieldDao-website,JavaScript,shielddao front end website front end sheilddao website created react next j run run project install package first yarn install npm install run dev server yarn dev build project yarn build start building yarn start analyze bundle size yarn analyze
/masaun/arbitrageur-between-sgr-and-eth,Solidity,arbitrageur sgr sogur token eth introduction arbitrageur sgr sogur token eth solidity smart contract allows user get opportunity execute automatic arbitrage sgr sogur token eth nbsp workflow diagramarbitrageur btw sogur uniswap http user image githubusercontent com 19357502 100517139 02808a80 31cc 11eb 8b6a dae2bfe99846 jpg nbsp setup 1 add env file based env example add env file br 2 install module npm install br 3 compile migrate contract ropsten testnet npm run migrate ropsten br 4 execute script ' instead testing npm run script arbitrage nbsp remark exeute script step4 need whitelisted sogur support execute script ropsten advance case using ropsten need add pair sgr eth liquidity uniswap pool create factory contract address using addliquiditysgrandeth method http github com masaun arbitrageur sgr eth blob master contract flashswaphelper sol l45 l58 nbsp reference sogur smart contract http github com sogurcurrency smart contract deployed contract address mainnet ropsten http github com sogurcurrency gitcoin hackathon issue 2 gitcoin bounty arbitrage profit transacting uniswap sogurs smart contract http gitcoin co issue sogurcurrency gitcoin hackathon 4 100024001 br uniswap flash swap http uniswap org doc v2 core concept flash swap flash swap developer http uniswap org doc v2 smart contract integration using flash swap exampleflashswap sol http github com uniswap uniswap v2 periphery blob master contract example exampleflashswap sol flashswap example http github com austin williams uniswap flash swapper
/trick77/overline-relay,Shell,overline relay node run overline node relay mode mining bother read readme md ' required docker docker compose 10g ram may work le may crash every would want run relay overline node 1 use private backend interchange 2 help network 3 use sdk json api interact blockchain 4 run first create file named env store secure cookie key value pair something like scookie mysecretstring unless ' using traefik front docker stuff need uncomment line docker compose yml start ' uncomment ' using traefik ' ' uncomment line ' able connect relay unsecure way want sync genesis block docker compose want use existing blockchain dump speed inital sync see relay node syncing old block forever download recent blockchain dump import relay node wget http community multichains org easysync db zip import dump sh easysync db zip dump imported start relay using docker compose see relay docker compose log tail 1000 could connect relay ' ui exposed port 9090 followed instruction stop relay node docker compose stop relay node get rid blockchain data docker compose v ' traefik label stuff ignore remove ' running traefik
/ohmydai/ohmydai-contracts,TypeScript,oh da circleci http circleci com gh ohmydai ohmydai contract svg style shield http circleci com gh ohmydai ohmydai contract npm scoped http img shield io npm v ohmydai contract http www npmjs com package ohmydai contract semantic release http img shield io badge 20 20 f0 9f 93 a6 f0 9f 9a 80 semantic release e10079 svg http github com semantic release semantic release built openzeppelin http img shield io badge built 20with openzeppelin 3677ff http doc openzeppelin com twitter follow http img shield io twitter follow ohmydai io http twitter com ohmydai io ref src twsrc 5etfw chain option implementation available openzeppelin ethereum package mainnet ropsten rinkeby kovan testnets website ohmydai io http ohmydai io twitter ohmydai io http twitter com ohmydai io medium ohmydai http medium com ohmydai telegram ohmydai io http joinchat dsuxh1qcm e7srqfzzywxq email ohmydai io gmail com mailto ohmydai io gmail com contributing project us gitflow http datasift github io gitflow introducinggitflow html branching model development must done feature branch merged develop release cut develop branch merged master commit done master release automatically generated circleci running semantic release http semantic release gitbook io project also us openzeppelin sdk http openzeppelin com sdk familiarized tooling
/ahmetozlu/the_smart_contract_burger_store,JavaScript,smart contract burger store project focus real life case study developing ethereum smart contract manage burger store case study adopted various case use smart contract real life business info check related medium post http ahmetozlu93 medium com building smart contract business cd620b00801b basicaly smart contract developed project provides function customer order burger safe payment get invoice mark order delivered function function burger store get order send price send invoice safe payout function repository present practice setup blockchain develop ethereum smart contract deploy contract test theory basically 3 component project component explanation burger store deploys contract owns customer order burger buy smart contract provides safe robust contract immutable given business flow chart explains sample flow usage smart contract p align center img src http user image githubusercontent com 22610163 118378443 9a3c2e80 b5dc 11eb 8848 a3fd094f9f34 png width 720 p functionality bunch function implemented case study function adopted business case function detail sendorder function send order customer use function checkorder function check order sendprice function send price owner burger store deploys smart contract use function sendsafepayment function send safe payment customer use function sendinvoice function send invoice owner use function getinvoice function get invoice markorderdelivered function mark order delivered customer use function event triggered activity ordersent event trigger order sent pricesent event trigger price sent safepaymentsent event trigger safe payment sent invoicesent event trigger invoice sent orderdelivered event trigger order delivered function event modified used business logic requirement quick demo first clone repository build project using truffle command truffle build p align center img src http user image githubusercontent com 22610163 115788152 ecb67080 a3cb 11eb 938f 5ba3c7c6d7f3 png p building project starting ganache provides ethereum blockchain network local smart contract deployed using truffle command truffle migrate reset p align center img src http user image githubusercontent com 22610163 115788246 0b1c6c00 a3cc 11eb 8e16 ea92f32ff8ef jpg p use developed unit test class http github com ahmetozlu smart contract burger store blob main test burger test j perform unit testing truffle test p align center img src http user image githubusercontent com 22610163 115788372 31420c00 a3cc 11eb 84a5 5287b0f89c55 png p citation use code publication please cite online author ahmet ozlu title case study ethreum smart contract managing burger store year 2021 url http github com ahmetozlu smart contract burger store author ahmet ozlu license system available mit license see license file info
/AngleProtocol/sdk,TypeScript,img src logo svg alt angle sdk height 40px angle sdk angle sdk angle sdk warning warning estimator estimator example example ethereum read write ethereum read write example example 1 keeper function keeper function constant constant lib lib test test build use development enviroment build use development enviroment sdk build application top angle protocol http angle money warning sdk open beta constantly development use risk please make sure ' using last sdk version otherwise result address may incorrect estimator estimator utility function preview result angle ' operation j import estimatemint parseamount ' angleprotocol sdk ' compute amount stablecoin ' get mint const stablecoinsobtained await estimatemint parseamount usdc 1 ' usdc ' ' ageur ' console log stablecoinsobtained ethereum read write located call folder function example scripted interaction angle protocol ' contract j import ether ' ether ' import chainid harvest ' angleprotocol sdk ' harvest collateral strategy const signer initialize ether signer const receipt await harvest chainid mainnet ' ageur ' ' usdc ' signer await receipt wait keeper function located call folder set function used build keeper bot constant located constant folder contract address parameter abis lib located lib folder set class utility used work big number test run test suite 2 env variable needed provider url api push transaction mnemonic mnemonic test wallet build use development enviroment 1 properly generate abi type run yarn generate type abis 2 build sdk run yarn build 3 built run yarn link create symbolic link package local yarn repository 4 add local package project go root directory project would typically run yarn add run yarn link angleprotocol sdk notice angleprotocol sdk name sdk project package json file update sdk rerun step 1 linking newest version done automatically project need rerun step 2 3
/OctoFi/octofi-dao-templates,JavaScript,dao template build status http travis ci org aragon dao template svg branch master http travis ci org aragon dao template octo fi dao template best way kickstart aragon organization using template template set smart contract create organization scratch configure according provided parameter involve smart contract code modifying template even though ' usually really easy must done extreme care always recommended third party security audit review template code modified mainnet ready template aragon creates put template repo external audit despite come without guarantee template consider secure today may vulnerable unknown security hole discovered road moreover user ha created organization may grant transfer permission way make organization insecure find information template deployment address deployment repo http github com aragon deployment tree master environment mainnet aragon 0 8 aragon 0 8 client ha switched following template company http github com aragon dao template tree master template company company template aragonpm eth company board http github com aragon dao template tree master template company board company board template aragonpm eth membership http github com aragon dao template tree master template membership membership template aragonpm eth reputation http github com aragon dao template tree master template reputation reputation template aragonpm eth template audited part 0 8 release aragon 0 7 aragon 0 6 0 7 following template used client create organization user democracy http github com aragon dao template tree aragon v0 7 kit democracy democracy kit aragonpm eth multisig http github com aragon dao template tree aragon v0 7 kit multisig multisig kit aragonpm eth template audited part 0 6 0 7 release whg consensys diligence build template aragon template shared published npm contains contract deployment testing utility help build template template monorepo use template shared internally help help support feel free contact u time spectrum http spectrum chat aragon app development
/StableLend/StableCoin,Python,stablecoin collaterlized debt position
/FUSIONFoundation/myfusionwallet,JavaScript,myfusionwallet official wallet implementation fusion protocol love developer join developer community today telegram http fsndevcommunity feature wallet x send asset x send time locked asset x create asset attribute x generate san quantum swap x make swap x take swap x recall swap running locally order run wallet locally need gulp http github com gulpjs gulp installed want run without compiling download pre compiled version release http github com fusionfoundation myfusionwallet release page execute following command build head project bash cd myfusionwallet install dependency bash npm install create build bash gulp open wallet browser open dist index html troubleshooting experiencing issue suggestion would glad hear 1 join u telegram http fsndevcommunity 1 submit ticket zendesk http fusionnetworks zendesk com hc en u request new 1 submit issue http github com fusionfoundation myfusionwallet issue
/dsynths/dsynths-app-v2,TypeScript,dsynths exchange trade stock commodity decentralized fashion kyc signup setup yarn install run ' require env variable order run app simply run yarn dev open app localhost 3000
/Opdex/opdex-v1-api,C#,opdex platform api web api project aggregate opdex smart contract transactional data providing restful connection underlying protocol discord http img shield io discord 798074378856169482 color 235865f2 label discord logo discord logocolor 23ffffff http discord gg psjr4ns85k want learn view opdex documentation http doc opdex com run api see local environment setup http doc opdex com doc platform api environment setup guideline looking get involved check contributing guideline contributing md
/xBacked-DAO/xbacked-sdk,TypeScript,xbacked sdk official sdk xbacked protocol allows third party software bot communicate seamlessly xbacked protocol installation yarn install xbacked dao xbacked sdk usage j import account vault convertfrommicrounits ' xbacked dao xbacked sdk ' const acc new account network ' localhost testnet mainnet ' mnemonic process env seed phrase current value placeholder vault id change depending net use const vault new vault id 123456 await acc createvault collateral 100 mintamount 50 vault global vault state const vaultstate await acc getvaultstate vault data specific vault const myvault await vault getuserinfo account address await acc getaddress const friendsvault await vault getuserinfo account address friendsaddress might want calculate chain latest cr friendsvault collateralratio vaultstate liquidationcollateralratio partial liquidation available friendsvault liquidating await acc liquidatevault address friendsaddress debtamount 500 vault
/alexgfh/ingametoken,JavaScript,game coin p align center href http www youtube com watch v p6im1mj1rnu img src src logo dark background png raw true width 256 alt logo p video demonstration http www youtube com watch v p6im1mj1rnu use game coin http ingamecoin xyz easily implement cryptocurrency game though ' yet audited usage commercial project service already perfectly suitable test project even hobby project sample game us api play cactus land http alexgfh itch io cactus land check unity project http drive google com file 1qqf67s5cdlfkebkjfo6dqotu9iqmfzwu view withdrawn game coin trade others potentially serum exchange automated market maker eventually even send across different game
/gaugaudu45/debank-seed-checker,C#,alt text http github com gaugaudu45 debank seed checker blob main untitled png raw true multithread seed checker ethereum seed software generates address seed check token balance througth debank api currently work ethereum binance avax matic fantom optimism cronos arbitrum network software doesnt check nfts defi service setup address count seed number address generated seed set 1 10 stable work number thread set 1 10 stable work list seed list seed check work 12 24 word seed compilation use release x86 compilation stable work compilation error nbitcoin lib todo thing added later 1 formatted output 2 add network 3 proxy support 4 work private key 5 check nfts donation eth 0x4c286bfb3e1f716f2e9888b0752c24d59e83edeb
/broxus/octusbridge-frontend,TypeScript,octusbridge frontend source code installation first install nodejs http nodejs org v16 use nvm http github com nvm sh nvm best solution manage nodejs version next install npm globally ' using nvm ' need install npm npm intall npm g install dependency command npm ci development start developing run command npm start start webpack dev server hmr build production distributive build production distributive run command npm run build build production ready distributive license agpl v3 license
/incentivus/ABCD,Python,different scenario abcd abcd paper http sina sharif edu mtefagh paper abcd pdf pointer transaction bob cheat btc alice funding 83550e59614ea0cfa45305f8345577a1b3c514b72ee856bd28a61564e3ae7e64 btc bob funding bc8c76ff0561d67c2c90b7966990b0aed5f1a856311f377a6cff293e83c7eea9 btc bob funding 2 d9efb603daf1cf67825eacfb7ea3ae91aca1434b4bd31e9df4702640c6a79b4d btc alice margin deposition 32b57b6735500e7790cd6a483ab2d4edfb6329fdd78ba2b6f8abab41ee2d1bda btc alice guarantee deposition 2ebb9297bbcbae5c4d23abb23cfb7105bbadaedb312c0ca30c15cc923b1198e0 btc bob premium deposition bb5534564336e3bb2f5a579f15dbd388f7c23e9cd85a1de2ef36e0cd42959d41 btc bob principal 4c2ae192a0614ac039849b4458ea552d4e87532e0003a1ce6f0da13f0c1037ad ltc carol htlc ede37f5e8d9b2addde9f37181d7306a12acb693ca3de0ba5f3f7b69e33528be6 btc alice redemption a777d5b832a6b880eac0c50c7298d0906433b563b7b7a4211a525d714ec1c2f9 btc alice return redemption back eb7256513fdf142ed10bf5282726816e31a6f3980135427a42f3afced72a0f7a btc bob return principal back bob cheat d435c10a601c279feb99d02153a58053bad254d6501cf8bcb11303a5c6d4411e ltc carol return htlc back bcfaa25db28186ed666a468c0d2a9b28b8571c8aa583f3f72b399ee72d959497 alice default btc alice funding a731630c22a628f9e0cc07e2be0c34c8e4ab8d3cdc9dd3fe66232c9239192d3c btc bob funding 59f27fa5cd1e21b1c26eca910500e20439f1d9413085627386937c37dd9d90e5 btc bob funding 2 dd38c1aab116a2dbe9be42ca1aa05f0ba2c0f0f57b48cda343dd48f68878e8d5 btc alice margin deposition 8d893cba96609ed9bac3aa00a6f9b60ec1db7700bcd3a420d4f80f33f7162ca1 btc alice guarantee deposition 834c9d05d402f4a5446a4224a28268c85f07b9a9a9b7b14aafbce6458b61d124 btc bob premium deposition f5129a91a9e75b0203f2797130b5c1188cefac11ff6832e3d961e3eea143d022 btc bob principal 0454346e5b900e8c287525d7d71f88c747e831b7b9a22e5c120b44637303688a ltc carol htlc ff1747c78317a67f5f785d438549567157cfc232a4d4c209ccb738e61bb6d093 btc bob return principal back alice default 041796d1c451d93022e4a1549bec5074dbbdbf5c7ac261432d0258167eebbbf0 btc bob withdraw guarantee d76eac4119c2899273b23edc3993e4d2b67698efef750010bb11affdfeaebaeb ltc carol return htlc back 6e770ccc005e45a2b83ede3c519961ff0c526b5265d953a674e2c3449b53d675 party cooperate btc alice funding 3ff1b05e07821a223c26c25bba09e8fcb43e6011219ea4724d0147ffa33bd490 btc bob funding 2976c93da7bf64d9cf9de288a88527423f4f229f4d05840973f84ab5dde20289 btc bob funding 2 ec00529de5c60578441d3d505a5b967341fd74c7907657ab64e829510508f917 btc alice margin deposition e995392e96dab5a21873f3a065f43580872b164e497ba5bfe825ddbf656638ee btc alice guarantee deposition f8829d64cc768843d579c48ecbf15aee1ada4d78d814394da5a49fe24b1eabc2 btc bob premium deposition bfc89056c5d510d5928e3b5d90a357ebc4b238cb5abcb6bc6be57dd36ac7845e btc bob principal b446849d20f6f49a6b18a5e308c687d30b71b20e3f647a1b3ae1bd545abd794c ltc carol htlc d439f0d473a19ab727bf8d24fa04a8f66af59f3494dd9c6cd8efec6961f14bcb br btc alice redemption c7bfbe7ed371dbec0e5cea8e6331ec413d9d7e8a7edf5abcc0911aa6a34c74f3 br btc bob htlc output 95b180d5aeac59177e358eb88ed1952167d3daf4fda7dda9085c495434e9a67c br ltc alice htlc output 700777a444cebc89ec2fc4b79ffde5c27631d07f6c7078e450a9be9f16f56d0d br btc carol htlc output d0e09d2dd486ba55dcee81843867cec111d9cd0f929902eae3e3512397099f40 br
/Celsians/celswap-core,TypeScript,celswap core action status http github com celsians celswap core workflow ci badge svg http github com celsians celswap core action celswap fork uniswap http uniswap org several modification base token part every token pair lowered fee 0 3 0 15 local development following assumes use node 10 install dependency yarn compile contract yarn compile run test yarn test
/sol-farm/so-defi,Rust,sodefi set rust crate working defi protocol across solana ecosystem supported protocol orca raydium atrix crate defi config configuration parsing create support parsing output various api ' offered following protocol orca raydium atrix provides helper parsing configuration api ' available orca raydium defi atrix working atrix crate want import defi token list par public tokenlist pull name token mint useful brute forcing name market given ' coin pc constituent usage usage information please see various unit test included crate module
/AlpsFinance/alpsfinance-website,TypeScript,alp finance website getting started first run development server bash npm run dev yarn dev open http localhost 3000 http localhost 3000 browser see result
/tripplyons/EasyERC20,Solidity,easyerc20 create erc20 token easy use decentralized app http easyerc20 com http easyerc20 com complex request message skwbd 1836 discord screenshot easyerc20 com screenshot png roadmap implemented feature factory contract token contract test contract react frontend live website http easyerc20 com live network polygon network live verified 0xd65d608663616c3bdcd20c2e5e679ed1d8dc3f74 http polygonscan com address 0xd65d608663616c3bdcd20c2e5e679ed1d8dc3f74 unimplemented feature additional live network ethereum expensive deploy probably anytime soon arbitrum bsc avalanche c chain contract development usage installation shell git clone http github com tripplyons easyerc20 git cd easyerc20 npm install running test case shell npx hardhat test local testnet using hardhat network http hardhat org hardhat network start testnet shell npx hardhat node deploy easyerc20factory testnet shell npx hardhat run network localhost script deploy j interface development usage installation shell cd interface npm install localhost server shell npm run start
/tardigrade-social/Tardigrade,TypeScript,tardigrade http github com tardigrade social tardigrade blob master doc static img tardigrade logo png discord http discord gg bujayafxrr inspired caw http www reddit com r satoshistreetbets duplicate up121h caw white paper decentralized social network tardigrade pure utilitarian vision manifesto token agnostic username node connection ' vertex attempt zero knowledge proof deposit box timelocking ipfs pubsub signature chaining harvesting call social medium tech stack composability competition tardigrade social attempt focalize share desired decentralized social medium ecosystem brings control medium back inot user creator hand tardigrade even shortwhile applying research problem outlined manifesto became apparent possibility laid outside caw ' token ' always popped back signature send eth make erc20 composable integratable attempting make user spend gas exchange update caw state even crunching bit chained message signature gas limit seemed ambitious tokenomics situation enables offer topology game theory quickly vault become tip jar honour box situation permit sufficient token bequeaths regardless performing experiment straight point inheriting stable coin internally hoisted erc20 anyways tardigrade social orbital meshnet goal tardigrade aspires pure vision manifested vision caw zksnarked social graph unlocks composability defi value primitive injectible composable every part social medium tech stack moderation data algorithm feedback loop ever platform one chooses offer vault interface timelocking match deadline ipfs pubsub chained signature send system unlock low security metagames none le sufficient tardigrade focalizes shared desire decentralized social medium idea persistence rudimentary element social graph wise decision reduce cost switching social medias genesis story caw communitycaw http twitter com communitycaw drafted specification http www reddit com r satoshistreetbets duplicate up121h caw white paper decentralized social network decentralized social network contains open call implementors cawdrivium attempt implement explore specification around conservative starting point social medium cryptographically denies right forgotten seven classical liberal art grammar logic rhetoric geometry mathematics astronomy music wa bubonic plague renaissance emerged seen outcome world knowledge wisdom monopolized ignorant profit prestige cawdrivium hope offer place collectivly offer opportunity acheiving liberalis quality free man goal many way skin specification speak current goal cawdrivium simply start testing opinion hopefully solicit feed back different option tech stack tried code feedback welcome consider research project fact caw creator seems apprehensive accepting solo project technology note ipfs http github com ipfs go ipfs orbit db http github com orbitdb orbit db node j http nodejs org en download version 14 installing node j recommended check checkboxes related dependency metamask http metamask io hardhat http hardhat org eip 712 http eips ethereum org eips eip 712 eip 1155 http eips ethereum org eips eip 1155 eip 2535 http eips ethereum org eips eip 2535 eip 2535 http eips ethereum org eips eip 2535 specification call proxy contract developer may unfamiliar new emerging standard diamand multi facet proxy possible standard make proxy immutable removing editing function one acheive immutability utilizing benefit like unlimited contract size avoiding passing large structs contract terseness import endless interface proposal developer set contract complex yolo one done contract instead nightly version protocol build mutably diamond battle tested community frozen current version update started new nightly diamond standarderc20 http etherscan io address 0xf3b9569f82b18aef890de263b84189bd33ebe452 code autogenerated contract tool perhaps similar erc20 create http vittominacori github io erc20 generator well fine doe block 0x000 burn address caw burn directed 0x0 0dead http etherscan io address 0x000000000000000000000000000000000000dead crux smart contract side seems faciliting eip 712 http eips ethereum org eips eip 712 v4 signature stand sort micropayment channel incentive liking creating following caw ' like exploring perhaps even internal merkle tree structure see many user chain permit message web3 react http github com noahzinsmeister web3 react react typescript seems bread butter front end web3 moment still exploring persistent storage message ques would love hear debate different storage medium thinking initially ' explore arweave filecoin orbit db like passing material opensource feel free use code caw implementation contribute repo fun idea fund sci hub http sci hub se stakepool buy elsivier create alternative platform publishing science give open access monetary incentive one
/mangata-finance/mangata-blog,HTML,mangata blog run bundle exec jekyll serve livereload info http jekyllrb com doc
/tidelabs/tidext,Rust,tidext library submit tifi e xt rinsics tidechain http github com tidelabs tidechain node via rpc project currently active development usage take look example example example folder various tidext usage example cargo run example local initializing api client rust let client clientbuilder new set signer signer build await client total supply currencyid tdfy await submitting extrinsics submit extrinsic returning success transaction accepted pool rust client swap currencyid tdfy 1 000 000 000 000 currencyid wrapped 4 1 000 000 swaptype limit none await documentation package published crate io yet find documentation http tidelabs github io tidext generate node metadata cargo install git http github com tidelabs subxt branch tidechain force subxt metadata tidext tidechain metadata scale format byte integration testing test require running tidechain node communicate done spawning instance substrate node per test tidechain node path bin tidechain cargo test license sup entire code within repository licensed href license gplv3 sup
/taraldefi/taral,TypeScript,readme ha generated file blueprint md p align center img src http raw githubusercontent com taraldefi taral main package doc asset logo svg alt logo width 150 height 150 p h1 align center taral doc h1 p align center &#9; &#9; href http github com badge shield img alt custom badge src http img shield io badge custom badge f39f37 svg height 20 href http github com taraldefi taral graph commit activity img alt maintained src http img shield io badge maintained 3f yes green svg height 20 &#9; p p align center b taral local development environment clarity contract b br sub development environment stack smart contract support unit test integration test sub p br http raw githubusercontent com taraldefi taral main package doc asset line png table content table content getting started getting started thank thank local testnet local testnet development smart contract development smart contract unit test unit test integration test integration test future work future work faq faq contributor contributor license license http raw githubusercontent com taraldefi taral main package doc asset line png getting started getting started getting started developing smart contract need first install package calling install sh installs certain version clarity cli ' using interact smart contract locally unit test mode http raw githubusercontent com taraldefi taral main package doc asset line png thank thank ' possible without wonderful work stack http www stack co powering everything clarigen http github com obylabs clarigen api provider contract generation code package shared borrowed gratitude clarigen modified fit usecase clarity j sdk http github com blockstack clarity j sdk native cli provider code package shared native cli borrowed gratitude blockstack clarity j sdk clarigen modification clarinet http github com hirosystems clarinet used checking smart contract powering private testnet testing still using private testnet clarity docker rely clarinet catamaran swap http github com friedger stack swap swap code based largely stack swap smart contract swap verification function exception one run directly bitcoin node using blockcypher api external dependency arkadiko http github com arkadiko dao arkadiko currently used integrating arkadiko functionality private testnet going use arkadiko deployed contract outside testing environment http raw githubusercontent com taraldefi taral main package doc asset line png local testnet local testnet docker folder contains docker compose configuration run local testnet stack blockchain environment scratch start following private testnet component postgres database bitcoin puppet chain stack node stack api local stack blockchain explorer contains two docker compose file bns yaml docker compose yaml want import bns data run docker compose f bns yaml pull docker compose f bns yaml build docker compose f bns yaml import bns data provisioning private testnet bns data folder moving forward starting stack docker compose pull docker compose build docker compose note want import bns data need comment environment line bns import dir provisioning private testnet bns data stack blockchain api container otherwise container panic ' find file import bns data need uncomment previously commented environment line aware stack blockchain experience connection refused problem stack blockchain api duration bns data import import api become ready accept event stack blockchain node http raw githubusercontent com taraldefi taral main package doc asset line png development smart contract development smart contract contract folder contains smart contract powering taral development progress developing updating new smart contract need generate abi json file typescript interface file index file exposing neat simple way accessing smart contract interface running yarn generate http raw githubusercontent com taraldefi taral main package doc asset line png unit test unit test unit test run offline version clarity cli without docker stack blockchain http raw githubusercontent com taraldefi taral main package doc asset line png integration test integration test integration test run local testnet stack started docker way run first start local testnet cd docker docker compose wait local testnet fully started execute integration test yarn integration test http raw githubusercontent com taraldefi taral main package doc asset line png future work future work start development taral token split monorepo multiple separate repository codebase get larger http raw githubusercontent com taraldefi taral main package doc asset line png faq faq help taral project glad asked taral project developed open source developer please contact u discord telegram want help project token token currently developed ticker tal get released actively developing taral update clear timeline http raw githubusercontent com taraldefi taral main package doc asset line png contributor contributor &#9; img alt doru cioclea octavian src http avatar githubusercontent com u 39082034 460 v 4 width 100 http github com dorucioclea img alt vincent l src http avatar githubusercontent com u 26676242 460 v 4 width 100 http github com vl5613 img alt src http joeschmoe io api v1 random width 100 http github com taraldefi taral blob main contributing md doru cioclea octavian http github com dorucioclea vincent l http github com vl5613 http github com taraldefi taral blob main contributing md http raw githubusercontent com taraldefi taral main package doc asset line png license license &#9; licensed isc http opensource org license isc
/hanahem/romedao-calculator,TypeScript,romedao reward calculator reward calculator romedao http romedao finance go without saying thanks lobis http github com lobishqworkspace inspiration calculator app directly affiliated romedao calculator link pinned discord trading deploy locally clone repo run yarn yarn run dev start developing locally env variable needed doe work calculatorcontext data fetching happens use ether instantiate contract call various function read compute needed data send usecalculator hook calculator tsx component data computed formatted displayed contribute contribute thing need fixed refactoring needed either report bug issue issue http github com hanahem romedao calculator issue create issue http github com hanahem romedao calculator issue announce building fix directly create pull request contribute fork repo profile edits create pull request based develop format ' format follow create issue better communication experience issue template title title issue type bug enhancement feature request detail detail ' yes pr template title title issue type bug enhancement feature request detail detail fix link issue needed rome contribution open everyone ' hesitate bring knowledge come enhance skill also good repo start learning web3 front end development ' forget look romedao http romedao finance social contact twitter http twitter com 0xethercake needed
/tacoinfra/harbinger-poster,TypeScript,harbinger serverless poster harbinger poster reference implementation server side hosted poster harbinger oracle system harbinger poster serverless framework http serverless com application written typescript deployed amazon web service http aws amazon com get started harbinger visit main documentation http github com tacoinfra harbinger library provides functionality posting update harbinger user interested posting price might also interested harbinger cli http github com tacoinfra harbinger poster provides non hosted poster solution entity wish sign price harbinger may want look harbinger signer http github com tacoinfra harbinger signer developer new harbinger component may interested harbinger lib http github com tacoinfra harbinger lib introduction order ensure data harbinger tezos price storage contract kept date choose run aforementioned command line process http github com tacoinfra harbinger cli periodically retrieves signed price coinbase pro api generates tezos operation update contract deploy serverless framework http serverless com application amazon web service http aws amazon com run every 5 minute perform task automatically course free run cli tool instead serverless application ' require run long lived server clear need run one command line updater em em serverless updater running ' hurt anything though setup instruction already deployed storage normalizer contract using command line harbinger utility beginning step ' done please go back complete step first order setup serverless application ' need perform following setup task first 1 install aws cli http doc aws amazon com cli latest userguide cli chap install html system 2 create aws access key http aws amazon com premiumsupport knowledge center create access key configure aws cli running aws configure command 3 login aws console account ha ability create km key ssm parameter grant permission use admin role work best 4 sure select correct region would like deploy serverless yml serverless yml file repository set use eu west 1 ireland region easily edit file select different region like important thing ensure region select console region specified serverless configuration file 5 aws console select km service select km service image 1 km selection png 6 click create key button click create key button image 2 create key png 7 select em asymmetric em key type select em sign verify em key usage select em ecc secg p256k1 em key spec click em next em button key configuration option image 3 create key png 8 next page input em alias em key optional em description em click em next em button create alias description image 4 create key png 9 next page define key administrator need change setting page unless would like give additional iam user role administrative permission key click em next em button continue define key administrative permission image 5 create key png 10 page define additional iam user role key usage permission need change setting page unless would like give additional iam user role usage permission key click em next em button continue define key usage permission image 6 create key png 11 click em next em accept default key policy grant access root user ' edit policy later give serverless application right sign key review edit key policy image 7 create key png 12 finally click em finish em see em success em message similar following success image 8 create key png 13 copy km key id clipboard save somewhere launch em system manager em em service em section console top left system manager image 9 system manager png 14 select em parameter store em left navigation bar parameter store image 10 system manager png 15 click em create parameter em button top left create parameter image 11 system manager png 16 name parameter tezos poster km key id give optional description leave setting default standard tier string type data type text paste enter km key id saved step 13 value without quote surrounding character click em create parameter em button create parameter image 12 system manager png coinbase pro api key setup following step required planning using coinbase pro api price data provider exchange ' currently require creating api key view price data using another exchange besides coinbase pro skip step 25 17 access coinbase pro api key setting http pro coinbase com profile api either link http pro coinbase com profile api accessing profile menu top right pro api setting image pro api key 1 png 18 click em new api key em button top right new api key image pro api key 2 png 19 give api key nickname check box em view em permission either save passphrase somewhere secure replace default random passphrase strong passphrase choice click em create api key em button create api key image pro api key 3 png 20 2 factor authentication enabled ' need go 2 step verification click em add api key em button add api key image pro api key 4 png 21 store api secret secure place click em done em button add api key image pro api key 5 png 22 see view key created ' need copy api key store somewhere next step click api key copy clipboard copy api key image pro api key 6 png 23 create another parameter named tezos coinbase pro api key give optional description parameter type securestring leave rest setting default input coinbase pro api key view permission value click em create parameter em button create parameter image 13 system manager png 24 create two parameter one named tezos coinbase pro api passphrase second one named tezos coinbase pro api secret value saved previously step 19 21 type securestring well 25 clone repository local system edit line 48 49 serverless yml replace empty string public address kt1 oracle contract deployed cli earlier optionally ' also like push data normalizer post also edit line 52 53 specify public address kt1 normalizer contract otherwise leave empty string post update 26 install npm dependency typing npm inside repository directory type sl deploy stage exchange replace exchange one coinbase binance gemini okex deploy application go well see output similar ' want save two endpoint use later serverless deploy image 15 sl deploy png 27 navigate back em km em aws console click em customer managed key em created earlier modify key policy click button say em switch policy view em edit key policy image 16 edit key policy png 28 click button say em edit em edit key policy image 17 edit key policy png 29 ' need modify key policy order enable iam role serverless application execute use key signing operation ' need insert additional json element section em statement em array section ' need insert highlighted screenshot ' forget separate statement comma code ' need insert json &#9; &#9; sid allow use key digital signing effect allow principal aws arn aws iam aws account id role harbinger poster exchange aws region lambdarole action km sign km verify km getpublickey resource important note must replace 3 section json statement double curly brace surrounding appropriate information string also space aws account id 12 digit numeric aws account id exchange string coinbase binance gemini okex lower case depending exchange signer using region aws region deploying eu west 1 edit key policy image 18 edit key policy png funding tezos account pay fee congratulation ' deployed serverless application automatically poll coinbase pro signed price oracle every 5 minute update storage contract lastest signed price small amount fee required perform storage update ' need send xtz address represented km key created previously determine address send fee 1 curl info endpoint displayed ran last step sl deploy output tz2 address need include x api key header set api key wa output previous sl deploy command full command curl silent h ' x api key api key ' http api gateway execute api eu west 1 amazonaws com exchange info get message internal server error instead check lambda log inside aws console see went wrong likely either created system manager parameter correctly km key policy 100 correct see output like info output image info output png 2 fund tz2 account transferring small amount xtz please note brand new account need also use burn cap 0 257 option send credit harbinger written maintained luke youngblood http github com lyoungblood keefer taylor http github com keefertaylor
/ahmetozlu/decentralized_banking_system,Solidity,decentralized banking system decentralized banking system dapp built ethereum blockchain smart contract solidity
/AngelDao/NFTrickle,JavaScript,nftrickle purpose nftrickle nfthack 2021 project utilizing erc20 erc1155 superfluid http doc superfluid finance superfluid project meant offer unique pattern might useful selling erc1155 giving proportional ownership contributers within given timeframe using superfluid framework contract shop shopfactory shopfactory shopfactory called seller nft mint shop move seller nft shop escrow length shop sale given seller shop shop hold nft escrow receives outflow stream endblock given buy seller reached reached stop function called anyone end stream collect sum flow buyer send seller sum buyer must individually claim nft calling claim function simply distributes portion nft based contribution shop additional project wa built angeldao http www angeldao org
/0xHashstack/open-ui,SCSS,getting started create react app project wa bootstrapped create react app http github com facebook create react app available script project directory install dependency run yarn project directory run yarn start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make edits also see lint error console yarn test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information yarn run build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information yarn run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment http facebook github io create react app doc deployment yarn run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify http facebook github io create react app doc troubleshooting npm run build fails minify
/backbonecabal/sushi-sdk,TypeScript,ycabal sushi sdk nodejs http github com backbonecabal sushi sdk action workflow nodejs yml badge svg http github com backbonecabal sushi sdk action workflow nodejs yml http sushi sdk netlify app npm bash npm install ycabal sushi sdk sdk guide creating sushiswap pair factory sushiswap pair factory instance joint together token token self contained instance expose easy method call start using sushiswap export class sushiswappair constructor private sushiswappaircontext sushiswappaircontextforchainid sushiswappaircontextforproviderurl export enum chainid mainnet 1 ropsten 3 rinkeby 4 gorli 5 kovan 42 interface sushiswappaircontextbase fromtokencontractaddress string totokencontractaddress string ethereumaddress string setting sushiswappairsettings undefined export interface sushiswappaircontextforchainid extends sushiswappaircontextbase chainid chainid number export interface sushiswappaircontextforproviderurl extends sushiswappaircontextforchainid providerurl string export class sushiswappairsettings slippage number deadlineminutes number disablemultihops boolean constructor setting slippage number undefined deadlineminutes number undefined disablemultihops boolean undefined slippage setting slippage 0 005 deadlineminutes setting deadlineminutes 20 disablemultihops setting disablemultihops false import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' contract address token want convert totokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' chainid chainid mainnet pas provider url well want providerurl provider url setting new sushiswappairsettings supplied use 0 005 0 5 please pas full number decimal 0 7 would 0 007 slippage 0 005 supplied use 20 deadline minute deadlineminutes 20 supplied try use multihops true require swap direct pair disablemultihops false create factory const sushiswappair await sushiswappair createfactory catching error export class sushiswaperror extends error public name ' sushiswaperror ' public code errorcodes public message string constructor message string code errorcodes super message message message code code export enum errorcodes noroutesfound 1 cannotfindchainid 2 tokenchainidcontractdoesnotexist 3 tradepathisnotsupported 4 generateapprovemaxallowancedatanotallowed 5 fromtokencontractaddressrequired 6 fromtokencontractaddressnotvalid 7 totokencontractaddressrequired 8 totokencontractaddressnotvalid 9 ethereumaddressrequired 10 ethereumaddressnotvalid 11 youmustsupplyachainid 12 invalidfromortocontracttoken 13 sushiswap pair factory totoken expose token contract information like decimal symbol name get totoken token export interface token chainid chainid contractaddress string decimal number symbol string name string usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' contract address token want convert totokencontractaddress ' 0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const totoken sushiswappairfactory totoken console log totoken totoken chainid 1 contractaddress ' 0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9 ' decimal 18 symbol ' aave ' name ' aave token ' fromtoken expose token contract information like decimal symbol name get fromtoken token export interface token chainid chainid contractaddress string decimal number symbol string name string usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' contract address token want convert totokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const fromtoken sushiswappairfactory fromtoken console log fromtoken fromtoken chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' trade generate trade information need show user dapp find best route price automatically still need send transaction confirm swap generate transaction still need estimate gas get sign send dapp confirm swap also return hasenoughallowance tradecontext trade response allowance approved moving token amount sending sushiswap router false true still return quote false need make sure send approval generated data first able swap advise check allowance execute trade anyway fail onchain use hasgotenoughallowance method check also generateapprovemaxallowancedata generate transaction user appove moving token please note ropsten rinkeby gorli kovan use weth main currency unlike mainnet us everything get le route testnets async trade amount string promise tradecontext export interface tradecontext amount requested convert formatted readable number render straight box baseconvertrequest string min amount receive taking slippage price change sushiswap contract throw formatted readable number render straight box minamountconvertquote string expected amount receive formatted readable number render straight box expectedconvertquote string portion trade 0 03 go liquidity provider protocol incentive liquidityproviderfee string unix datestamp trade expires doe expiry looking long hooked onto quotechanged emit new valid quote tradeexpires number route path mapped full token info routepathtokenmap token route text display dapp easily routetext string pure route path array nothing else routepath string full list every route tried expected convert quote ordered best expected convert quote worse 0 best alltriedroutesquotes expectedconvertquote string routepatharraytokenmap token routetext string routepatharray string allowance approved moving token amount sending sushiswap router false true reactive get trade quote return false approval transaction old context still say false hasenoughallowance boolean token info fromtoken token token info totoken token hold balance context reactive top account generated need query regen trade info frombalance balance user ha enough perform trade doe consider gas price right eth erc20 hasenough boolean total balance user ha formatted already balance string transaction need send approve swap doe estimate gas fill blank send dapps picker choose speed transaction string string data string value string stream emits quote ha changed emit matter listen source truth reactive dapp dont listen user could end sending sushiswap transaction price date quotechanged observable tradecontext generate trade doe return data make sure data stay sync quotechanged finished trade please call general clear keep timeouts stream running call kill quotechanged subscription watcher timeouts execute new trade new amount instance clear destroy void export interface token chainid chainid contractaddress string decimal number symbol string name string export enum chainid mainnet 1 ropsten 3 rinkeby 4 gorli 5 kovan 42 usage erc20 erc20 import sushiswappair chainid tradecontext ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' contract address token want convert totokencontractaddress ' 0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory amount proper entered amount enter 10 pas 10 work const trade await sushiswappairfactory trade ' 10 ' subscribe quote change trade quotechanged subscribe value tradecontext value hold info obviously new trade info console log trade baseconvertrequest ' 10 ' minamountconvertquote ' 0 014400465273974444 ' expectedconvertquote ' 0 014730394044348867 ' liquidityproviderfee ' 0 030000000000000000 ' tradeexpires 1612189240 routepathtokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' routetext ' 1inch dai weth aave ' routepath ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' alltriedroutesquotes expectedconvertquote ' 0 014730394044348867 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol 1inch decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' symbol ' aave ' decimal 18 name ' aave token ' routetext ' 1inch weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' expectedconvertquote ' 0 014606303273323544 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' symbol ' aave ' decimal 18 name ' aave token ' routetext ' 1inch dai weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' expectedconvertquote ' 0 013997397994408657 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' symbol ' aave ' decimal 18 name ' aave token ' routetext ' 1inch usdc weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' expectedconvertquote ' 0 000000298264906505 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' symbol ' aave ' decimal 18 name ' aave token ' routetext ' 1inch usdt weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' hasenoughallowance true totoken chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' fromtoken chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' frombalance hasenough true balance 3317 73129463 transaction 0x7a250d5630b4cf539739df2c5dacb4c659f2488d 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 data 0x38ed1739000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000359578d85cf61000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000b1e6079212888f0be0cf55874b2eb9d7a5e02cd900000000000000000000000000000000000000000000000000000000601683e30000000000000000000000000000000000000000000000000000000000000003000000000000000000000000419d0d8bdd9af5e606ae2232ed285aff190e711b000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000001985365e9f78359a9b6ad760e32412f4a445e862 value 0x00 done trade aka sent ' need anymore call trade destroy eth erc20 import sushiswappair weth chainid tradecontext ' simple sushiswap sdk ' const sushiswappair new sushiswappair use weth import lib bare mind use network rinkeby use weth rinkeby fromtokencontractaddress weth mainnet contractaddress contract address token want convert totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory amount proper entered amount enter 10 pas 10 work const trade await sushiswappairfactory trade ' 10 ' subscribe quote change trade quotechanged subscribe value tradecontext value hold info obviously new trade info console log trade baseconvertrequest ' 10 ' minamountconvertquote ' 446878 20758208 ' expectedconvertquote ' 449123 82671566 ' liquidityproviderfee ' 0 030000000000000000 ' tradeexpires 1612189240 routepathtokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth 1inch ' routepath ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' hasenoughallowance true totoken chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' fromtoken chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' frombalance hasenough false balance ' 0 008474677789598637 ' transaction ' 0x7a250d5630b4cf539739df2c5dacb4c659f2488d ' ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' data ' 0x7ff36ab5000000000000000000000000000000000000000000000000000028a4b1ae9cc00000000000000000000000000000000000000000000000000000000000000080000000000000000000000000b1e6079212888f0be0cf55874b2eb9d7a5e02cd90000000000000000000000000000000000000000000000000000000060168ee30000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000419d0d8bdd9af5e606ae2232ed285aff190e711b ' value ' 0x8ac7230489e80000 ' alltriedroutesquotes expectedconvertquote ' 449123 82671566 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 446400 4834047 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 446400 4834047 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 446356 68778218 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 446356 68778218 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 446345 24608428 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 446345 24608428 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 347402 73288796 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 346246 52439964 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 346246 52439964 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 346246 52439964 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 345845 48248206 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 345845 48248206 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 345845 48248206 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153353 27776886 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153171 51955671 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153171 51955671 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153171 51955671 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153099 84287111 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153099 84287111 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 153099 84287111 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 10090 42827381 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth comp dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 10090 42827381 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth comp dai 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 176 25846115 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth comp usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 176 25846115 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth comp usdc 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth comp usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth dai usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth comp usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' expectedconvertquote ' 0 00167195 ' routepatharraytokenmap chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' routetext ' weth usdc usdt 1inch ' routepatharray ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x111111111117dc0aa78b770fa6a738034120c302 ' done trade aka sent ' need anymore call trade destroy erc20 eth import sushiswappair weth chainid tradecontext ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' use weth import lib bare mind use network rinkeby use weth rinkeby totokencontractaddress weth mainnet contractaddress ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory amount proper entered amount enter 10 pas 10 work const trade await sushiswappairfactory trade ' 10 ' subscribe quote change trade quotechanged subscribe value tradecontext value hold info obviously new trade info console log trade baseconvertrequest ' 10 ' minamountconvertquote ' 0 00022040807282109 ' expectedconvertquote ' 0 00022151807282109 ' liquidityproviderfee ' 0 03000000 ' tradeexpires 1612189240 routepathtokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai comp weth ' routepath ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' alltriedroutesquotes expectedconvertquote ' 0 00022151807282109 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai comp weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 00022151807282109 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai comp weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000217400884509221 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216692105524981 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216165414503092 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216165414503092 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216165414503092 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216113740987982 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216113740987982 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000216113740987982 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch dai usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000207416610491746 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000206879660311982 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000206879660311982 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000206879660311982 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000206675889551395 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000206675889551395 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000206675889551395 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000201332888879835 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc comp weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000201332888879835 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdc comp weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 00000000454541448 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt comp weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 00000000454541448 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' decimal 18 symbol ' comp ' name ' compound ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt comp weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc00e94cb662c3520282e6f5717214004a7f26888 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000004421040886 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000004406314787 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000004406314787 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000004406314787 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt dai weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000003689610342 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000003689610342 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' expectedconvertquote ' 0 000000003689610342 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' routetext ' 1inch usdt usdc weth ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' hasenoughallowance true totoken chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' symbol ' weth ' decimal 18 name ' wrapped ether ' fromtoken chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' frombalance hasenough true balance ' 3317 73129463 ' transaction ' 0x7a250d5630b4cf539739df2c5dacb4c659f2488d ' ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' data ' 0x18cbafe5000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000c875c0e2d96200000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000b1e6079212888f0be0cf55874b2eb9d7a5e02cd90000000000000000000000000000000000000000000000000000000060168fe80000000000000000000000000000000000000000000000000000000000000004000000000000000000000000419d0d8bdd9af5e606ae2232ed285aff190e711b0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000c00e94cb662c3520282e6f5717214004a7f26888000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' value ' 0x00 ' done trade aka sent ' need anymore call trade destroy hasgotenoughallowance method return true false user ha enough allowance move token call eth erc20 always return true need check moving erc20 eth erc20 erc20 async hasgotenoughallowance amount string promise boolean usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const hasgotenoughallowance await sushiswappairfactory hasgotenoughallowance ' 10 ' console log hasgotenoughallowance true allowance method return allowance user ha move token token picked always returned hex formatted call eth erc20 always return max hex need check moving erc20 eth erc20 erc20 async allowance promise string usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const allowance await sushiswappairfactory allowance console log allowance ' 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ' generateapprovemaxallowancedata method generate transaction approval moving token user us max hex possible mean want swap token later please note approval per erc20 token picked another token swapped would need send sign transaction within dapp remember enough allowance mean 2 transaction 1 extend allowance using transaction next one actually execute trade call eth erc20 always throw error need moving erc20 eth erc20 erc20 async generateapprovemaxallowancedata promise transaction export interface transaction string string data string value string usage import sushiswappair chainid ' simple sushiswap sdk ' contract address token want convert const fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert const totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp const ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const transaction await sushiswappairfactory generateapprovemaxallowancedata console log transaction ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' data ' 0x095ea7b30000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ' value ' 0x00 ' findbestroute method return best route amount want trade async findbestroute amounttotrade string promise routequote usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const bestroute await sushiswappairfactory findbestroute ' 10 ' console log bestroute expectedconvertquote 0 014634280991384697 routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' routetext ' 1inch weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' findallpossiblerouteswithquote method return possible route quote ordered best quote first index 0 async findallpossiblerouteswithquote amounttotrade string promise routequote usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' contract address token want convert totokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const allpossibleroutes await sushiswappairfactory findallpossiblerouteswithquote ' 10 ' console log allpossibleroutes expectedconvertquote ' 0 014634280991384697 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' routetext ' 1inch dai weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x6b175474e89094c44da98b954eedeac495271d0f ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' expectedconvertquote ' 0 014506490902564688 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' routetext ' 1inch weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' expectedconvertquote ' 0 011506490902564688 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' routetext ' 1inch usdc weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' expectedconvertquote ' 0 000000291402712857 ' routepatharraytokenmap chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' routetext ' 1inch usdt weth aave ' routepatharray ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' findallpossibleroutes method return possible route take trading async findallpossibleroutes promise token export interface token chainid chainid contractaddress string decimal number symbol string name string usage import sushiswappair chainid ' simple sushiswap sdk ' const sushiswappair new sushiswappair contract address token want convert fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' pas provider url well want providerurl provider url chainid chainid mainnet create factory const sushiswappairfactory await sushiswappair createfactory const allroutes await sushiswappairfactory findallpossibleroutes console log allroutes chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0xdac17f958d2ee523a2206206994597c13d831ec7 ' decimal 18 symbol ' usdt ' name ' tether usd ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 ' decimal 18 symbol ' usdc ' name ' usd coin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' chainid 1 contractaddress ' 0x6b175474e89094c44da98b954eedeac495271d0f ' decimal 18 symbol ' dai ' name ' dai stablecoin ' chainid 1 contractaddress ' 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 ' decimal 18 symbol ' weth ' name ' wrapped ether ' chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' decimal 18 symbol ' aave ' name ' aave token ' tokenfactorypublic along side also exposed helpful erc20 token call gettoken method return token information like decimal name etc async gettoken promise token export interface token chainid chainid contractaddress string decimal number symbol string name string usage import tokenfactorypublic chainid ' simple sushiswap sdk ' const tokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' const tokenfactorypublic new tokenfactorypublic totokencontractaddress chainid mainnet const token await tokenfactorypublic gettoken console log token chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' decimal 18 symbol ' 1inch ' name ' 1inch token ' allowance method return allowance user ha allowed able moved behalf sushiswap need allowance higher amount swapping able move token user always returned hex formatted async allowance ethereumaddress string promise string usage import tokenfactorypublic chainid ' simple sushiswap sdk ' const tokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' const tokenfactorypublic new tokenfactorypublic totokencontractaddress chainid mainnet const ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' const allowance await tokenfactorypublic allowance ethereumaddress console log allowance ' 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ' balanceof method return balance user hold token always returned hex formatted async balanceof ethereumaddress string promise string usage import tokenfactorypublic chainid ' simple sushiswap sdk ' const tokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' const tokenfactorypublic new tokenfactorypublic totokencontractaddress chainid mainnet const ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' const balanceof await tokenfactorypublic balanceof ethereumaddress console log balanceof ' 0x00 ' totalsupply method return total supply token exist always returned hex async totalsupply promise string usage import tokenfactorypublic chainid ' simple sushiswap sdk ' const tokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' const tokenfactorypublic new tokenfactorypublic totokencontractaddress chainid mainnet pas provider url well want providerurl provider url const totalsupply await tokenfactorypublic totalsupply console log totalsupply ' 0x09195731e2ce35eb000000 ' generateapproveallowancedata method generate data approval able move token user send transaction generates data send generateapproveallowancedata spender string value string string usage import tokenfactorypublic chainid ' simple sushiswap sdk ' const tokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' const tokenfactorypublic new tokenfactorypublic tokencontractaddress chainid mainnet pas provider url well want providerurl provider url contract address allowing move token behalf const spender ' 0x7a250d5630b4cf539739df2c5dacb4c659f2488d ' amount wish allow move example us max hex time operation need move token cost 2 transaction 1 approve allowance 1 actually contract call move token const value ' 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ' const data tokenfactorypublic generateapproveallowancedata spender value console log data ' 0x095ea7b30000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ' getallowanceandbalanceof method get allowance balance token multicall request return hex formatted async getallowanceandbalanceof ethereumaddress string promise allowanceandbalanceof export interface allowanceandbalanceof allowance string balanceof string usage import tokenfactorypublic chainid ' simple sushiswap sdk ' const tokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' const tokenfactorypublic new tokenfactorypublic tokencontractaddress chainid mainnet pas provider url well want providerurl provider url const ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' const result await tokenfactorypublic getallowanceandbalanceof ethereumaddress console log result allowance ' 0x2386f01852b720 ' balanceof ' 0x4d3f3832f7 ' tokensfactorypublic along side tokenfactorypublic also exposed way call many contract us multicall super fast gettokens method return token information like decimal name etc async gettokens tokencontractaddresses string promise token export interface token chainid chainid contractaddress string decimal number symbol string name string usage import tokensfactorypublic chainid ' simple sushiswap sdk ' const tokensfactorypublic new tokensfactorypublic chainid mainnet pas provider url well want providerurl provider url const token await tokensfactorypublic gettokens ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' console log token chainid 1 contractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' symbol ' aave ' decimal 18 name ' aave token ' chainid 1 contractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' symbol ' 1inch ' decimal 18 name ' 1inch token ' contract call along side also expose sushiswap pair contract call method state changing return data send use bespoke stuff pair sushiswappaircontractfactorypublic also exposed package pas chainid providerurl export interface sushiswappair async allpairs parameter0 bignumberish promise string async allpairslength promise string state changing async createpair tokena string tokenb string promise string async feeto promise string async feetosetter promise string async getpair parameter0 string parameter1 string promise string state changing async setfeeto feeto string promise string state changing async setfeetosetter feetosetter string promise string usage sushiswappairfactory import sushiswappair chainid ' simple sushiswap sdk ' contract address token want convert const fromtokencontractaddress ' 0x1985365e9f78359a9b6ad760e32412f4a445e862 ' contract address token want convert const totokencontractaddress ' 0x111111111117dc0aa78b770fa6a738034120c302 ' ethereum address user using part dapp const ethereumaddress ' 0xb1e6079212888f0be0cf55874b2eb9d7a5e02cd9 ' const sushiswappair new sushiswappair totokencontractaddress fromtokencontractaddress ethereumaddress chainid mainnet pas provider url well want providerurl provider url create factory const sushiswappairfactory await sushiswappair createfactory contract call sushiswap pair contract http etherscan io address 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac code sushiswappairfactory contractcalls using sushiswappaircontractfactorypublic import sushiswappaircontractfactorypublic chainid ' simple sushiswap sdk ' const sushiswappaircontractfactorypublic new sushiswappaircontractfactorypublic chainid mainnet pas provider url well want providerurl provider url contract call sushiswap pair contract http etherscan io address 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac code sushiswappaircontractfactorypublic sushiswapcontractfactorypublic async allpairs parameter0 bignumberish promise string async allpairslength promise string state changing acreatepair tokena string tokenb string string async getpair token0 string token1 string promise string usage import sushiswapcontractfactorypublic chainid ' simple sushiswap sdk ' const sushiswapcontractfactorypublic new sushiswapcontractfactorypublic chainid mainnet pas provider url well want providerurl provider url contract call http etherscan io address 0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac code sushiswapcontractfactorypublic sushiswaproutercontractfactorypublic state changing addliquidity tokena string tokenb string amountadesired bignumberish amountbdesired bignumberish amountamin bignumberish amountbmin bignumberish string deadline bignumberish string state changing addliquidityeth token string amounttokendesired bignumberish amounttokenmin bignumberish amountethmin bignumberish string deadline bignumberish string async factory promise string async getamountsout amountin bignumberish path string promise string async quote amounta bignumberish reservea bignumberish reserveb bignumberish promise string state changing removeliquidity tokena string tokenb string liquidity bignumberish amountamin bignumberish amountbmin bignumberish string deadline bignumberish string state changing removeliquidityeth token string liquidity bignumberish amounttokenmin bignumberish amountethmin bignumberish string deadline bignumberish string state changing removeliquidityethsupportingfeeontransfertokens token string liquidity bignumberish amounttokenmin bignumberish amountethmin bignumberish string deadline bignumberish string state changing removeliquidityethwithpermit token string liquidity bignumberish amounttokenmin bignumberish amountethmin bignumberish string deadline bignumberish approvemax boolean v bignumberish r byteslike byteslike state changing removeliquidityethwithpermitsupportingfeeontransfertokens token string liquidity bignumberish amounttokenmin bignumberish amountethmin bignumberish string deadline bignumberish approvemax boolean v bignumberish r byteslike byteslike string state changing removeliquiditywithpermit tokena string tokenb string liquidity bignumberish amountamin bignumberish amountbmin bignumberish string deadline bignumberish approvemax boolean v bignumberish r byteslike byteslike string state changing swapexactethfortokens amountoutmin bignumberish path string string deadline bignumberish string state changing swapethforexacttokens amountout bignumberish path string string deadline bignumberish string state changing swapexactethfortokenssupportingfeeontransfertokens amountin bignumberish amountoutmin bignumberish path string string deadline bignumberish string state changing swapexacttokensforeth amountin bignumberish amountoutmin bignumberish path string string deadline bignumberish string state changing swaptokensforexacteth amountout bignumberish amountinmax bignumberish path string string deadline bignumberish string state changing swapexacttokensforethsupportingfeeontransfertokens amountin bignumberish amountoutmin bignumberish path string string deadline bignumberish string state changing swapexacttokensfortokens amountin bignumberish amountoutmin bignumberish path string string deadline bignumberish string state changing swaptokensforexacttokens amountout bignumberish amountinmax bignumberish path string string deadline bignumberish string state changing swapexacttokensfortokenssupportingfeeontransfertokens amountin bignumberish amountoutmin bignumberish path string string deadline bignumberish string usage import sushiswaproutercontractfactorypublic chainid ' simple sushiswap sdk ' const sushiswaproutercontractfactorypublic new sushiswaproutercontractfactorypublic chainid mainnet pas provider url well want providerurl provider url contract call http etherscan io address 0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f code sushiswaproutercontractfactorypublic test whole repo covered test output test suite 21 passed 21 total test 133 passed 133 total snapshot 0 total time 32 287s ran test suite issue please raise issue link http github com joshstevens19 simple sushiswap sdk thanks package brought josh stevens http github com joshstevens19 aim able keep creating awesome package help ethereum space grow easier use tool allow learning curve get involved blockchain development easier also making ethereum ecosystem better want help vision allow invest time creating cool package please sponsor http github com sponsor joshstevens19 every little help sponsoring ' supporting able maintain existing package extend existing package ethereum matures allowing build package ethereum due able invest time thanks everyone
/senarma/dapp-dai-brlx,JavaScript,dapp dai brlx using chainlink oracle get exchange rate usd dolar brl real use mint brlx token locking dai contract video running dapp http youtu km iu c0l6w
/degen-vc/infinity-contracts,JavaScript,infinity protocol infinity token infinity token dynamic fee transfer fot deflationary token 100 million total supply fot change throughout cycle call change jump starting dynamic fot beginning cycle 5 autonomously increase jump 0 5 time 1 million token transferred transfer occur trading course 14 million token transferred fot reach maximum 12 50 fot token burnt 50 fot token sent liquid vault cycle 637 500 token burnt 637 500 sent liquid vault quantum fee transfer token transferred reach 1 275 million token positive rebase expands supply 500 000 note liquid vault also include capacity burn token therefore increase degree infinity deflationary liquid vault liquid vault smart contract hold project token anyone send eth receive back lp token smart contract liquid vault could also lock uni v2 lp token period buyer could claim charge eth fee thus reducing 50 discount eth could used purpose permanently lock lp token sending zero address still giving buyer lp discount power vault power vault similar contract liquid vault hovewer additional functianality buy pressure option eth balance power vault swapped infinity token uniswap time depth information infinity protocol available medium http medium com infinitywin infinity protocol ec2e3b84e988 infinityprotocol io http infinityprotocol io local development prerequisite node v10 16 0 http www npmjs com package node v 10 16 0 higher hardhat v2 1 2 http www npmjs com package hardhat v 2 1 2 solidity v0 7 4 http github com ethereum solidity release tag v0 7 4 setup test install dependency npm run test npm run test compile contract npm run compile
/cusdt-LINK/alpha-swap,TypeScript,netlify status http api netlify com api v1 badge 37396827 3981 436c 8335 c019c101ff73 deploy status http app netlify com site awesome ride a20cdd deploys description ' build alpha swap need help let u know ' building alphaswap alpha swap mainnet mainnet deployed http swap alphadao money router address 0x6074761ae58b88ac6b12396a290164e0e20b46fe factory address 0x87383f77addeb3cead7a78009afccf53c9f5bfcf multicall address 0x5e38556236cc1ddb30c9405bcb0ef0aaba6d2961
/manifoldfinance/mev-openrpc,JavaScript,title openrpc specification version 2021 07 27 semver v0 3 0 mev openrpc openrpc spec mev enabled client soource flashbots doc mev http raw githubusercontent com flashbots doc staging doc flashbots auction miner mev geth spec v03 md simple summary defines construction usage mev bundle miner provides specification custom implementation required node change mev bundle used correctly abstract mev bundle stored node bundle providing extra profit miner added block front transaction motivation believe without adoption neutral public open source infrastructure permissionless mev extraction mev risk becoming insider ' game commit organisation releasing reference implementation participation fair ethical politically neutral mev extraction specification key word must must required shall shall recommended may optional document interpreted described rfc 2119 http www ietf org rfc rfc2119 txt miner configuration miner must accept following configuration option miner maxmergedbundles int max number mev bundle included within single block definition relay external system delivering mev bundle node relay provides protection attack mev bundle bundle list transaction must executed together order provided bundle must executed non bundle transaction bundle higher bundle adjusted gas price transaction bundle must execute without failure return status 1 transaction receipt unless hash included revertingtxhashes list representing bundle communication relay node use object following property property type description tx array rlp signedtransaction list transaction bundle transaction signed rlp encoded blocknumber uint64 exact block number bundle executed mintimestamp uint64 minimum block timestamp inclusive bundle executed maxtimestamp uint64 maximum block timestamp inclusive bundle executed revertingtxhashes array bytes32 list hash transaction allowed return status 0 transaction receipt mev block block containing zero ' mev bundle ' whenever say block contains bundle mean block includes transaction bundle order bundle unit work transaction bundle block subunit discernible unit work part bigger unit work transaction subunit bundle block bundle subunit block total gas used sum gas unit used transaction unit work average gas price transaction equivalent transaction minerfee min feecappergas basefee priorityfeepergas unit work sum average gas price total gas used subunit divided total gas used unit direct coinbase payment value transaction recipient set coinbase address contract coinbase payment payment smart contract coinbase address coinbase payment sum direct coinbase payment contract coinbase payment within unit work eligible coinbase payment sum direct coinbase payment contract coinbase payment within unit work gas fee payment average gas price total gas used within unit work eligible gas fee payment gas fee payment excluding gas fee payment transaction spotted miner publicly visible transaction pool bundle scoring profit sum eligible coinbase payment eligible gas payment bundle profit difference balance coinbase account end beginning execution unit work measure transaction profit bundle profit block profit balance coinbase account change following way unit work balance change transaction average gas price total gas used direct coinbase payment contract coinbase payment bundle average gas price total gas used direct coinbase payment contract coinbase payment block block reward average gas price total gas used direct coinbase payment contract coinbase payment adjusted gas price unit work profit divided total gas used unit work bundle adjusted gas price bundle scoring profit divided total gas used bundle v0 3 frac delta coinbase sum u g tm sum cap u g tm sum u g bundle u score used sort bundle u ordered list transaction bundle set transaction mempool g gas used transaction c fee cap per gas transaction delta priority fee per gas transaction e effective fee per gas transaction equal min c basefee delta miner fee per gas transaction equal e basefee delta coinbase coinbase difference direct payment bundle construction bundle contain transaction nonce following current nonce signing address transaction preceding bundle bundle must contain least one transaction upper limit number transaction bundle however bundle exceed block gas limit always rejected bundle may include eligible coinbase payment bundle contain payment may discarded bundle adjusted gas price compared bundle maxtimestamp value must greater equal mintimestamp value accepting bundle network json rpc node must provide way exposing json rpc endpoint accepting eth sendbundle call specified v02 rpc mdx endpoint accepting call relay requirement restrict node source code done infrastructure level bundle eligibility bundle correctly constructed must blocknumber field set specifies block included node ha already progressed later block number bundle may removed memory transaction bundle must priorityfeepergas equal greater block basefee 1 gwei selected block bundle correctly constructed may mintimestamp maxtimestamp field set default value field 0 meaning 0 block timestamp value accepted value 0 block timestamp compared current block timestamp greater maxtimestamp bundle must included block may removed memory block timestamp le mintimestamp bundle must included block removed memory awaits future block block construction mev bundle must sorted bundle adjusted gas price first one one added block long gas left block number bundle added le equal maxmergedbundles parameter remaining block gas used non mev transaction constructing block next bundle added first bundle must generate least 99 bundle adjusted gas price time sorting first bundle naturally provide 100 value block must contain 0 maxmergedbundles bundle block bundle must place bundle beginning block must insert transaction bundle bundle transaction constructing block node reject bundle ha reverting transaction unless hash included revertingtxhashes list bundle object node able compare block profit number bundle 0 maxmergedbundles choose block highest profit e g maxmergedbundles 3 node build 4 different block maximum respectively 0 1 2 3 bundle choose one highest profit bundle eviction node able limit number bundle kept memory apply algorithm selecting bundle evicted many eligible bundle received rationale naive bundle merging bundle merging process necessarily picking profitable combination bundle best guess achievable without degrading latency first bundle included always bundle highest bundle adjusted gas price using bundle adjusted gas price instead adjusted gas price bundle adjusted gas price used prevent bundle creator artificially increasing adjusted gas price adding unrelated high gas price transaction publicly visible transaction pool bundle need blocknumber allows specifying bundle included future block e g smart contract change state cannot used ensure specific parent block hash future consideration full block submission proposal allow mev geth accepting fully constructed block well bundle considered inclusion next version backwards compatibility change affecting consensus fully compatible ethereum specification bundle format backwards compatible v0 2 bundle would rejected v0 1 mev client security consideration node ensure mev bundle awaiting future block evicted risk reaching storage limit memory persistent storage
/0xmlx/lazerpay-go-sdk,Go,lazerpay golang sdk installation install package use command sh go get github com milinches lazerpay go sdk import package go import github com milinches lazerpay go sdk optional import godotenv package code ' help loading env file go import github com joho godotenv also get test api key lazerpay dashboard http dashboard lazerpay finance initialize transaction initiate payment go package main import log github com joho godotenv github com milinches lazerpay go sdk func main load env file err godotenv load sample env err nil log fatal error loading env file secretkey getenv secret key publickey getenv public key also handle error adding second parameter initialize lazerpay lazerpayclient publickey secretkey initialize payment payment lazerpay inittransaction initialize xxxxxxxx 100 njoku emmanuel kalunjoku123 gmail com usd usdc true log println payment verify transaction help confirm transaction payment ha made go package main import log github com joho godotenv github com milinches lazerpay go sdk func main load env file err godotenv load sample env err nil log fatal error loading env file secretkey getenv secret key publickey getenv public key also handle error adding second parameter initialize lazerpay lazerpayclient publickey secretkey verify transaction verify lazerpay verifytransaction initialize referencenumberxxxxx log println verify get accepted coin return list accepted coin lazerpay http www lazerpay finance go package main import log github com joho godotenv github com milinches lazerpay go sdk func main load env file err godotenv load sample env err nil log fatal error loading env file secretkey getenv secret key publickey getenv public key also handle error adding second parameter initialize lazerpay lazerpayclient publickey secretkey get list accepted coin coin lazerpay getacceptedcoins initialize log println coin transfer fund help send fund another recipient address go package main import log github com joho godotenv github com milinches lazerpay go sdk func main load env file err godotenv load sample env err nil log fatal error loading env file secretkey getenv secret key publickey getenv public key also handle error adding second parameter initialize lazerpay lazerpayclient publickey secretkey send fund another recipient address transfer lazerpay transfer initialize 10 recipientxxxxxx usdc binance smart chain log println transfer
/merlion-zone/merlion,Go,merlion merlion blockchain fractional algorithmic stablecoin various vanward defi specific innovation built using cosmos sdk tendermint
/Mean-Finance/dca-fe,TypeScript,mean finance fe repository contains code mean finance public web dapp development environment install dependency bash yarn install run locally port 3000 bash yarn start linting bash yarn lint run linter src src doc check doc doc mean finance http doc mean finance
/OctoFi/octoversity,SCSS,octoversity decentralized finance education platform wanna contribute request suggestion please come join community discussion telegram http octoficommunity
/bloq/sol-qualify-lp,Solidity,qualify lp summary perform simple abi check determine address seems behave like uniswap balancer lp pool token using step 1 qualify lp token call qualifyuniswaplp qualifybalancerlp validate lp token add database step 2 query qualification database import interface file iqualifylp sol solidity contract treat simple mapping function something lp token address lptoken internal return bool &#9; address lpqualaddr address 0xee87996440515154fb913fada7abb4f2caecb14f &#9; iqualifylp lpqual iqualifylp lpqualaddr &#9; uint256 constant lp uniswap 1 &#9; check qualifylp ' mapping validated token &#9; uint256 qualresult lpqual qualified lptoken &#9; require lptoken uniswap like pair liquidity pool contract &#9; requires someone must previously called qualifyuniswaplp &#9; point past &#9; require qualresult lp uniswap deployment ethereum mainnet deployment v0 9 0 0xee87996440515154fb913fada7abb4f2caecb14f http etherscan io address 0xee87996440515154fb913fada7abb4f2caecb14f caveat provide minimum guarantee address provided seems behave like uniswap balancer pool token fork sushiswap using abi uniswap pas qualification plan fix limitation next version using uniswap router
/jet-lab/jet-cli,Rust,div align center img height 125 src http 293354890 file gitbook io file v0 b gitbook legacy file asset 2f 72skn1dye71pumdjs 2f miqzl5ok1cxxakarfer 2f mi yekp1krh7jofzqg 2fjet logomark color png alt medium token 0b8dfc84 37d7 455d 9dfd 7bb59cee5a1a h1 jet cli div p align center target blank href http github com jet lab jet cli action workflow test yaml img alt test src http img shield io github workflow status jet lab jet cli test label test logo github target blank href http github com jet lab jet cli tree master cargo toml img alt version src http img shield io github v release jet lab jet cli color orange label jet cli target blank href http github com jet lab jet cli tree master license img alt license src http img shield io badge license agpl 3 0 later blue p p align center em jet protocol cli geared towards user type wish interact range solana program traditional terminal interface goal provide equivalently high leveled abstraction chain program traditional web application interface would user base wish interact command line via use automated scripting environment em p div installation download pre built binary recommended release http github com jet lab jet cli release cli contains pre built binary tar gz following target aarch64 apple darwin x86 64 apple darwin x86 64 unknown linux gnu require new build target added release build please create issue repository stating preferred request method build source sh cargo install git http github com jet lab jet cli tag tag jet cli locked checkout run source sh clone jet cli git clone http github com jet lab jet cli cd jet cli install submodules git submodule update build run may take cargo run create devnet margin account cargo run margin create account u seed 0 create margin account sh create devnet margin account jet margin create account u seed 0 store margin account pubkey account account jet margin derive seed 0 echo account 77tjm3j57zmagr1bfdgwkejphqark3fkhb3vpt912zha deposit pool requires pool token account pubkey jet margin pool deposit account account pool pool source source 1 troubleshooting error message missing field keypair path ensure solana config file config solana cli config yml content like following yaml json rpc url http localhost 8899 websocket url keypair path config solana id json address label 11111111111111111111111111111111 system program commitment confirmed
/byteball/bonded-stablecoin-ui,JavaScript,bonded stable install install node j clone repository say sh yarn env copy appropriate env xxxx file env run sh yarn start build sh yarn build
/opz/refi-frontend,JavaScript,refi frontend installing refi frontend git clone git github com opz refi core git cd refi core npm install git submodule update init recursive npx buidler compile npm link cd git clone git github com opz refi frontend git cd refi frontend yarn npm link refi core using aave smart contract refi frontend import providerabi refi core lib aave protocol abi lendingpooladdressesprovider json import lendingpooladdressesprovider provideraddress refi core config aave protocol kovan json const provider new web3 eth contract providerabi provideraddress contributor svetamedved http github com svetamedved opz http github com opz project wa bootstrapped create react app http github com facebook create react app available script project directory run yarn start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console yarn test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information yarn eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment yarn build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify
/zemse/uniswap-sushiswap-arbitrager,Solidity,uniswap sushiswap arbitrager find profitable opportunity ethereum mainnet arbitrage two pair token uniswapv2 sushiswap without capital investment e performing flash swap tx gas fee needed obviously involves following program 1 math calculation worked using calculus implemented solidity http github com zemse uniswap sushiswap arbitrager blob main contract arbitrageuniswaplib sol typescript http github com zemse uniswap sushiswap arbitrager blob main script arbitrage lib 2 nodejs program scan arbitrage opportunity implemention find arbitrage http github com zemse uniswap sushiswap arbitrager blob main script find arbitrage 3 solidity contract execute flash arbitrage flash swap normal swap arbitrager sol http github com zemse uniswap sushiswap arbitrager blob main contract arbitrager sol note imp transaction posted mempool frontrun time flashbots http doc flashbots net ethereum dark forest http www paradigm xyz 2020 08 ethereum dark forest please use production unless know '
/sambacha/generator-yyip,JavaScript,spdx license identifier apache 2 0 p align center img src http raw githubusercontent com gist sambacha 9a62174a080ead34271ff5d187a24343 raw 02cad2900f4cedb87895cc57729030e095d2869f gh banner svg align right width 350 &#9; h1 align left yyips yearn improvement proposal generator yeoman h1 h3 align center h3 p align center align center twitter follow http img shield io twitter follow iearnfinance svg label iearnfinance style social http twitter com iearnfinance discord http img shield io discord 734804446353031319 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 734804446353031319 telegram http img shield io badge chat 20telegram blue svg http yearnfinance yyip action status http github com sambacha yyip workflow yyip badge svg http github com sambacha yyip action center p p br br abstract abstract motivation motivation yip yip yip rationale yip rationale process submitting yip process submitting yip yip status yip status example yip example yip validation validation using yyip generator using yyip generator requirement requirement install install command command yip editor yip editor copyright copyright tl dr npm generator yyip g br yo yyip demo asciicast http asciinema org 369942 svg http asciinema org 369942 abstract yearn improvement proposal yip describe standard yearn platform including core protocol specification client apis contract standard definitive cannonical reference specification core logic motivation yyip generator yeoman generator kickstart yearn improvement proposal like strategy yip yip stand yearn improvement proposal ha adapted sip synthetix improvement proposal purpose process ensure change yearn transparent well governed yip design document providing information yearn community proposed change system author responsible building consensus within community documenting dissenting opinion yip rationale intend yip primary mechanism proposing new feature collecting community input issue documenting design decision change yearn maintained text file versioned repository revision history historical record feature proposal highly recommended single yip contain single key proposal new idea focused yip successful likely yip must meet certain minimum criterion must clear complete description proposed enhancement enhancement must represent net improvement process submitting yip 1 review yip 0 yip yip 0 md 2 fork repository clicking fork top right 3 add yip fork repository template yip yip x md 4 submit pull request yearn ' yip repository http github com iearn finance yip first pr first draft final yip must meet formatting criterion enforced build largely correct metadata header editor manually review first pr new yip assign number merging make sure include discussion header url new thread gov yearn finance http gov yearn finance people discus yip whole note important community support behind proposed yip author shepard proposal process yip requires image image file included subdirectory asset folder yip follow asset yip x yip x linking image yip use relative link asset yip x image png believe yip mature ready progress past wip phase ask issue added next governance call discussed inclusion future platform upgrade community agrees include yip editor update state yip ' approved ' yip status wip yip still developed br proposed yip ready reviewed governance call br approved yip ha accepted implementation yearn community br implemented yip ha released mainnet br rejected yip ha rejected br withdrawn yip ha withdrawn author br deferred yip pending another yip change bundled together br moribund yip wa implemented obsolete requires explicit replacement br example yip diff status proposed status approved yip integer created 2020 09 01 last modified 2020 09 03 last modified 2020 09 08 validation yip must pas validation test yip repository ensures running test using html proofer http rubygems org gem html proofer yip validator http rubygems org gem yip validator possible run yip validator locally ruby gem install yip validator yip validator input file using yyip generator follow instruction install requirement nodejs 10 npm 5 yeoman generator install bash npm install g yo bash yo yip command follow command terminal console yip editor current yip editor artem k banteg cooper turley cooopahtroopa daryl lau daryllautk klim k milkyklim sunil srivatsa alphastorm copyright yyip apache 2 0 yip copyright related right waived via cc0 http creativecommons org publicdomain zero 1 0
/zeeshanhanif/defi-projects,TypeScript,defi project repository show skill blockchain ethereum ethereum layer 2 token nfts web complete defi project project list guideline http github com panacloud modern global apps defi dapps solidity smart contract blob main project md project 1 create erc20 token truffle project 1 erc20 token ' 01 erc20 token ' folder project 2 create erc20 token hardhat project 1 erc20 token ' 01 erc20 token ' folder project 2a create erc721 token truffle project 2a erc721 token ' 02 erc721 token basic ' folder contains basic uri based nft also script generate intial nfts project 2b create erc721 token dotenv module load secret infura key truffle project 2b ' 02 erc721 token dotenv ' folder project 2b create erc721 token hardhat project 2b ' 02 erc721 token hardhat ' folder project 2c create erc721 token verify contract etherscan hardhat project 2c ' 02 erc721 token hardhat verify etherscan ' folder project 2c create erc721 token verify contract etherscan truffle project 2c ' 02 erc721 token verify etherscan ' folder
/Pizza-Wallet-Development-team/pizza-wallet,JavaScript,pizza wallet table content description description integration integration supported chain supported chain development guide development guide requirement requirement install dependency install dependency create moralis testnet server create moralis testnet server start development server start webpack development server build app build app docker docker contribute contribute description self custodial user focused wallet built defi feature integration moralis http moralis io web3 tool li fi http li fi cross chain swap onramper http onramper com fiat onramp offramp supported chain ethereum binance smart chain avalanche polygon optimism arbitrum fantom moonriver gnosis heco development guide requirement recommended running debian ubuntu based linux distribution br order install requirement another please refer official guide 1 nvm sh curl http raw githubusercontent com nvm sh nvm v0 37 2 install sh bash source nvm nvm sh 2 node sh nvm use lts 3 yarn sh npm install global yarn install dependency sh yarn install create moralis testnet server 1 go moralis create testnet server following test chain eth kovan polygon mumbai bsc testnet avax testnet 2 set environment variable br 2 1 click view detail newly created instance br 2 2 copy save server url application id br 2 3 export environment variable sh export react app moralis server url insert server url export react app moralis application id insert application id br 2 4 create env file br 2 5 edit env file br shell react app moralis server url insert server url react app moralis application id insert application id start webpack development server sh yarn start build app sh yarn build docker recommend developing docker ensures ' development environment isolated rest machine refer official documentation install docker doc http doc docker com desktop linux install sh docker compose f docker compose dev yml build contribute love builder ' help builder contact info pizzawallet io see useful bug fixer check github ' issue http github com pizza wallet development team pizza wallet issue see need fixed bug hunter found bug either contact u info pizzawallet io create new issue http github com pizza wallet development team pizza wallet issue
/Semiott/RheaNet,Solidity,rheanet digital dispute resolution framework online sport sector powered ethereum engineering ecosystem inspiration application architecture openlaw rising dispute world sport powerful possibilites non fungible token powerful possibility decentralised autonomous organisation doe built challenge ran accomplishment ' proud learned ' next rheanet track chainlink oracle chainlink vrf graph protocol polygon network protocol lab arbitrum aave protocol openlaw protocol concept recursive resolution token resolution governance token resolution risk reward token randomised resolution governance dao construct erc 1155 resolution reserve token erc 721 resolution reward token erc 721 fractional nft resolution risk token time lock time delay fractional nft fractionalising resolution based space time flash loan based dispute resolution reserve reference protocol http github com smartcontractkit chainlink http doc chain link doc architecture request model http doc chain link doc create chainlinked project http blog chain link chainlink external adapter explained http chainlinkadapters com guide link chainlink url endpoint http doc chain link doc intermediate tutorial introduction http github com thodges gh cl ea python template http doc chain link doc running chainlink node http blog chain link build use external adapter http chainlinkadapters com guide http github com daofi fungify nft http github com mapachurro openlease http github com openlawteam opencourt http billoflading org http www wired com 1999 04 open source open court http developer offchainlabs com doc contract deployment http medium consensys net opencourt legally enforceable blockchain based arbitration 3d7147dbb56f
/bonedaddy/wXMR,Go,wxmr wxmr experimental bridge ethereum monero allowing wrap monero erc20 token ethereum blockchain essentially monero equivalent wbtc wrapped cryptocurrencies allows anyone holding monero deposit public reserve n multisignature wallet subsequently anyone burn wxmr retrieving underlying xmr withdrawing public reserve reserve proof periodically stored smart contract provide historical record reserve balance anyone poll api retrieve current date reserve proof roadmap mvp basic bridge allowing wrapping xmr unwrapping burning wxmr done basic api retrieve date reserve proof done basic api retrieve known reserve proof wip basic api retrieve reserve proof signature ' hash wip alpha 1 move reserve wallet multisignature wallet alpha 2 generate monero multisignature wallet using ethereum key alpha 3 governance token elect community managed reserve via stake governance token using eth dai bond testenv bootstrap new testenv use following command shell make start testenv best screen session make build cli wxmr new wallet generates new wallet wmxr mining start start mining proces monero wallet rpc start wallet rpc service run shell monero wallet rpc testnet disable rpc login prompt password rpc bind port 6061 daemon port 28081 wallet dir
/Cryptogs/cryptogs-reborn,CSS,scaffold eth everything need build ethereum quickly experiment solidity using frontend adapts smart contract image http user image githubusercontent com 2653167 124158108 c14ca380 da56 11eb 967e 69cde37ca8eb png quick start prerequisite node http nodejs org en download plus yarn http classic yarnpkg com en doc install git http git scm com downloads clone fork scaffold eth bash git clone http github com scaffold eth scaffold eth git install start hardhat chain bash cd scaffold eth yarn install yarn chain second terminal window start frontend bash cd scaffold eth yarn start third terminal window deploy contract bash cd scaffold eth yarn deploy edit smart contract cryptogsreborn sol package hardhat contract edit frontend app jsx package react app src edit deployment script package hardhat deploy open http localhost 3000 see app documentation documentation tutorial challenge many resource visit doc scaffoldeth io http doc scaffoldeth io learning solidity read doc http doc soliditylang org go topic solidity example http solidity example org editing cryptogsreborn sol scaffold eth primitive data type http solidity example org primitive mapping http solidity example org mapping structs http solidity example org structs modifier http solidity example org function modifier event http solidity example org event inheritance http solidity example org inheritance payable http solidity example org payable fallback http solidity example org fallback learn solidity globals unit http solidity readthedocs io en v0 6 6 unit global variable html buidl check active branch http github com scaffold eth scaffold eth branch active open issue http github com scaffold eth scaffold eth issue join fund buidlguidl http buidlguidl com follow full ethereum speed run http medium com austin 48503 ef b8 8fethereum dev speed run bd72bcba6a4c create first nft http github com scaffold eth scaffold eth tree simple nft example build staking smart contract http github com scaffold eth scaffold eth tree challenge 1 decentralized staking deploy token vendor http github com scaffold eth scaffold eth tree challenge 2 token vendor extend nft example make buyer mint marketplace http github com scaffold eth scaffold eth tree buyer mint nft learn commit reveal http github com scaffold eth scaffold eth tree commit reveal frontend learn ecrecover work http github com scaffold eth scaffold eth tree signature recover build multi sig us chain signature http github com scaffold eth scaffold eth tree meta multi sig extend multi sig stream eth http github com scaffold eth scaffold eth tree streaming meta multi sig learn simple dex work http medium com austin 48503 ef b8 8f minimum viable exchange d84f30bd0c90 ape learning http github com scaffold eth scaffold eth tree aave ape p need rpc key testnets production deployment create alchemy http www alchemy com account replace value alchemy key xxx package react app src constant j new key speedrun ethereum register builder http speedrunethereum com start challenge build portfolio support chat join telegram support chat http joinchat kbyvmre5wkr 8f zz6ajpa ask question find others building scaffold eth please check gitcoin grant http gitcoin co grant 2851 scaffold eth automated gitpod open gitpod http gitpod io button open gitpod svg http gitpod io github com scaffold eth scaffold eth
/Defiville/The-Game,Solidity,1 vxueuwwdulkheq 6 j2q http user image githubusercontent com 2848253 109382859 3d857d80 78e3 11eb 8f2b de3abad75d13 png game main repo defiville game install dependency yarn compile contract dv artist vendingmachine yarn build run test yarn test house garden defiville island token isla isla token ha 7m max supply ha deployed verified etherscan 2021 01 31 isla 0x20a68f9e34076b2dc15ce726d7eebb83b694702d http etherscan io token 0x20a68f9e34076b2dc15ce726d7eebb83b694702d ocean season 1 start period 2021 02 01 18 00 utc end period 2021 03 03 18 00 utc 4 lm pool crv snx sushi aave started 2021 02 01 18 00 utc 100k isla farming reward pool 400k isla total contract verified etherscan islacrvlm 0x99cf79d898e306e382f70c6b63ebce8ca0610cc1 http etherscan io address 0x99cf79d898e306e382f70c6b63ebce8ca0610cc1 code islasnxlm 0x30353c2b2536223600054dadc79c7283d6111314 http etherscan io address 0x30353c2b2536223600054dadc79c7283d6111314 code islasushilm 0x50dbd9f08798d3a2ea542e64764e3334fe2553e1 http etherscan io address 0x50dbd9f08798d3a2ea542e64764e3334fe2553e1 code islaaavelm 0xe27e43e3cde491a28cf1df4b6cbf6e4edf8e6298 http etherscan io address 0xe27e43e3cde491a28cf1df4b6cbf6e4edf8e6298 code another lm pool link voted community ha started 2021 02 13 18 00 utc 100k isla farming reward daily reward poll greater islalinklm 0xce4d7780d760e5d6f3f2b436756d2507478fedb9 http etherscan io address 0xce4d7780d760e5d6f3f2b436756d2507478fedb9 code art defiville artist collection dvart first nft created defiville world reserved emergent artist community propose new artist giving opportunity publish personal artwork even creating new one following defiville world style dvart 0x97bb88b60f2ae621ec64efbf841687531b6b8c52 http etherscan io address 0x97bb88b60f2ae621ec64efbf841687531b6b8c52 code goat season 2
/Coliquidity/contracts-old,JavaScript,shield shield contract bet two group trader protector trader get money protector rug pull happens protector get money trader rug pull doesnt happen trader think rug pull possible therefore willing pay small premium receive big compensation rug pull doe actually happen protector think rug pull unlikely maybe developer control liquidity token maybe insider know general public anyway willing stake big compensation receive small premium rug pull ' actually happen rug pull happens trader get 3x deposit protector get nothing rug pull doesnt happen trader get nothing protector get 1 5x deposit note calculation using default payout coefficient 2 1 payout coefficient parameter set shield contract deployment payouts made one group another group rug pull happens protector pay trader rug pull ' happen trader pay protector payouts limited opposite group fund size rug pull happens trader receive payouts protector fund size rug pull ' happen protector receive payouts trader fund size payouts sorted deposit timestamp deposit early want ensure payout user ' receive payouts receive full refund original deposit coinhunt token coinhunt token cht used shield project coinhunt development group use case buy burn cht using fee shield project total supply 1 ' 000 ' 000 ' 000 cht market uniswap http info uniswap org token 0xa7e6b2ce535b83e82ab598e9e432705f8d7ce929 team denis gorbachev ceo tdg community manager denis started programming age 14 fun c wasm shifted towards higher level language like elixir python javascript solidity love challenge programming smart contract gas optimization trick extra security testing deep understanding finance necessary build real product tdg community leader helped bootstrap multiple crypto project also trader user defi project seeing lot rug pull became interested shield solution problem decided help denis developer reach broader audience demo demo version http shield demo glideapp io user interface please note complete product change future resource website http shieldfinance net telegram http shieldfinancehq twitter http twitter com shieldfinance discord http discord gg vxjtveeswg reddit http www reddit com r shieldfinancehq medium http medium com shield finance hq
/carlbarrdahl/git-dao,TypeScript,git dao 1 sign github see list repos user ha access 2 backend service creates hash signature verifying user ha fact access 3 send repo smart contract verifies signature creates project 4 erc20 token 1m supply created mint 10k owner 1 token 5 owner optionally supply token uniswap eth create initial market 6 people participate contributing code bug report way create value project rewarded token work 7 people company fund project even specific issue help prioritization token initially 0 value creator create initial funding project providing token eth amm like uniswap market created around token contributor rewarded swap token eth choose speculator buy token eth people interested project fund simply sending token vesting wallet 365 day linear vesting created prevent owner withdrawing vision project existing popular open source project find funding stakeholder incentivize prioritization feature bug fix funding issue milestone new idea formulated readme driven way development attracting contributor rewarded participation daos naturally forming around open source repos combining code underlying asset token funding liquidity could provided amm create market around project utilizing githubs platform issue pr discussion code repository merely adding layer smart contract get best web2 web3 working incremental decentralization future work bountyregistry fund specific issue backend service verify github session connected account pr merge status return signature claim function verify signature transfer fund contributor liquidityprovider provide liquidity amm uniswap example zap function swap optimal one sided supply providing eth governance screenshots http github com carlbarrdahl git dao raw master screenshots onboard 1 png http github com carlbarrdahl git dao raw master screenshots onboard 2 png http github com carlbarrdahl git dao raw master screenshots project 1 png project built bootstrap using idea want participate way please join http github com carlbarrdahl git dao discussion inspired balaji srinivasan ' tweet http twitter com balajis status 1326313315044192256 lang en also mentioned dappcamp x balaji srinivasan open problem crypto infrastructure http www youtube com watch v l2vqkbucxns madhavan malolan ' launchdao http mirror xyz madhavanmalolan eth omgh sq9e97r2 ixzy2ndqqgoutuxdvam vboit0mig
/freight-trust/relayswap,TypeScript,title ' protocol outline non oracle based price reporting economic incentive ' copyright 2020 freighttrust clearing corporation right reserved freight trust header area default freight trust banner image p align center img src http raw githubusercontent com freight trust branding master image optimized github repo card png p br freight trust banner image badge start p align center img alt twitter follow src http img shield io twitter follow freighttrustnet label 40freighttrustnet style social telegram badge href http freighttrust img alt join freight trust ' public telegram src http img shield io badge telegram 40freighttrust blue hack md badge p align center href http hackmd io sbgeelz7sbq46laatdez4w img src http hackmd io sbgeelz7sbq46laatdez4w badge p badge end freight trust header area default end br br http raw githubusercontent com freight trust legal master src disclaimer md http raw githubusercontent com freight trust legal master src disclaimer md adversarial staking pool href http freighttrust com freight trust utility staking information post github issue community github freight chain network http github com freight chain network issue adversarial pool adversarial pool proof violation proof violation adversarial pool adversarial pool 1 least value least value mechanic mechanic positive feedback positive feedback strategy game theory strategy game theory equal split method equal split method greater good sacrifice greater good sacrifice governance token governance token controlling interest controlling interest stability fund stability fund profit profit profit pool profit pool token burning token burning security security trustless trustless bankroll bankroll profit pool profit pool 1 technical detail technical detail backing backing winning withdrawal winning withdrawal starting new round starting new round begin proposal proof violation memetic verification method report rewarded honest reporting punished dishonest reporting adversarial pool pool emulate verification proof violation method asking agent user report two pool hold least value end round using asset ' risk e stake verification method adversarial pool mimic market way us market sentiment predict relative value value two pool always trend towards 50 50 split use case reporting price chain asset reporting price chain asset specified price feed reporting price chain asset non specified price feed least value least value mean reporting reported price asset per unit account basis mean defining benchmark price asset reporting aggregate value pool example pool 1 000 x pool b 500 x x 1 00 mechanic reward reporting accurately must always 100 value staked follows dominant strategy would report equally pool yielding ev 1 absolute minimum equal 50 50 split counter fee e g 5 round introduced making equal split method losing strategy value discrepancy pool 2 44 1 48 78 51 22 1 005002 positive feedback fee adjusted necessary equal split method ha become submissive dominant mean liquidity increase necessity fee diminished round trend closer closer towards 50 50 split strategy game theory equal split method reward reporting accurately must always 100 value staked follows dominant strategy would report equally pool yield ev 1 ev 1 absolute minimum equal 50 50 split counter var fee 5 fee round ha introduced making equal split method losing strategy value discrepancy pool 2 44 1 48 78 51 22 1 005002 fee adjusted necessary feel equal split method ha become worthless dominant mean liquidity increase necessity fee diminished round trend closer closer towards 50 50 split greater good sacrifice user may find position 400 edi pool currently hold 30 edi pool b sacrificing 30 ether pool b user hedge initial position increase odds larger report correct method totally encouraged method manipulation proof violation requires user accurately report side least value correctly predicting sum action including example user governance token controlling interest token holder control contract via mechanism allows voting operator contract may start stop round change fee percent planned feature would correspond switch floating exchange rate edi related pem rfc issue 5 http github com freight chain rfc issue 5 note governance token tradeable transferable way get governance token would edi immediate implementation planned governance decentralization implementation ha proven robust one stability fund order deposit staking pool certain number edi deposited pooled stability fund stability fund used ensure loss perform enhancement stability fund external pooling mechanism generate return shall distributed account deposited staking pool profit profit pool profit accumulated pool accessed token holder participating token burning burning portion token one relinquishes governance exchange share profit pool reduces transaction cost periodic dividend eliminates lock period periodic dividend require protects token holder low liquidity exchange mechanism burning token transference stability fund fund use either liquidation via open market operation distributing proceed security trustless without need random number generation use oracle oracle verified fact account confident protected oracle issue bankroll round played account need bankroll could lost play stolen mismanagement profit pool profit pool appears similar bankroll central pool ether design risk secured smart contract technical backing choosing backing side done via back function take unsigned integer argument representing side choice side chosen submitting 1 side b chosen submitting 2 function locked current active round contract paused security measure choice made within certain amount time end round denoted updateable variable buffertime extend end round amount time denoted updateable variable timeadd default buffertime 4 standard block default time add 35 standard block winning withdrawal winning withdrawal done via withdrawwinnings function take unsigned integer argument representing round id withdraw function locked round associated given id still progress contract paused given id invalid doe represent round ha played active round latter ensure startround function ha called withdrawal made ensuring round winner variable ha updated properly round associated given id eth one side refund issued anyone withdrawing round house cut taken winning losing side ignored protect account low activity round round associated given id ended tie house cut taken withdrawal determined house cut tie variable otherwise house cut determined house cut variable starting new round starting new round done via startround function done active round contract paused beyond creating new active round function also declares winner previous round take house cut award bounty allows withdrawal previous round take place incentivize account start new round current round ha completed account awarded bounty calling function equal percentage house cut taken round percentage stored updatable variable start round bounty percent previous round eth round time simply extended first thing checked function gas saving measure event bounty function caller one side eth new round started without taking house cut account previous round get refund event bounty otherwise house cut taken total round bounty taken house cut awarded treasury function caller respective new round started notice notice cftc rule 4 41 hypothetical simulated performance result certain limitation unlike actual performance record simulated result represent actual trading also since trade executed result may compensated impact certain market factor lack liquidity representation made account likely achieve profit loss similar shown legal disclosure http github com freight trust legal privacy policy http github com freight trust legal blob master src privacy policy md term service http github com freight trust legal blob master src term service md tag staking pool ethereum token game theory c freighttrust clearing corporation mit license mit license sam bacha alex wade
/niklr/crowdmint,TypeScript,crowdmint decentralized crowdfunding nervos network http www nervos org p align center &#9; img src asset logo text png alt crowdmint logo p crowdmint blockchain based solution leveraging nfts crowdfund community project developed smart contract support fixed aon nothing flexible kia keep crowdfunding model http www researchgate net publication 272306935 crowdfunding model keep v nothing big advantage smart contract fee known conventional crowdfunding platform eliminated however possible business us case could involve small fee creating project successful campaign directly programmed smart contract typical crowdfunding campaign offer reward contributor specific amount top crowdmint plan leverage nfts incentivize funders choosing option amount funding goal distributed holder minted nfts based percentage defined campaign creator example funding goal wa set 100 ' 000 ckb reached 500 ' 000 ckb 50 amount goal distributed eligible funders nft minting wa limited 100 unit price 1 ' 000 ckb funder minted 2 nfts funder b minted 10 nfts funders b contributed make crowdfunding project success also get roi 50 400 ' 000 ckb 200 ' 000 ckb distributed among eligible funders funder get 2 200 ' 000 ckb 4 ' 000 ckb 2 ' 000 ckb profit funder b get 10 200 ' 000 ckb 20 ' 000 ckb 10 ' 000 ckb profit decentralized crowdfunding solution crowdmint could great impact community leading higher number successful project started nervos table content demo demo architecture architecture roadmap roadmap setup setup demo name demo video walkthrough http youtu 3pjrl0gqq http youtu 3pjrl0gqq live demo http www crowdmint fi http www crowdmint fi accessing live demo please make sure complete following step setup godwoken network metamask metamask create godwoken account making layer 2 deposit deposit architecture name architecture h1 align center &#9; img src asset architecture png alt crowdmint architecture h1 contract found contract contract folder built using solidity http doc soliditylang org en v0 7 6 combination hardhat http hardhat org worker found worker worker folder built using typescript http www typescriptlang org run part github action http github com feature action pinata http www pinata cloud wa selected order pin data hosted ipfs http ipfs io whenever project get created updated worker detect handle event initiated smart contract frontend found client client folder built using react http reactjs org graphql http graphql org combination typescript http www typescriptlang org design layout purpose material ui http mui com framework ha chosen component using polyjuice provider http github com nervosnetwork polyjuice provider interact nervos layer 2 godwoken roadmap name roadmap 2021 q4 alpha release nervos layer 2 godwoken testnet focus functionality minimum viable product start new project creator contribute project individual withdraw creator individual 2022 q1 implement erc 721 http ethereum org en developer doc standard token erc 721 non fungible token standard enable project creator leverage nfts incentivize funders mint project nfts collect nft reward individual beta release nervos layer 2 godwoken testnet 2022 q2 public release nervos layer 2 godwoken mainnet security audit smart contract integrate graph http thegraph com en improve querying performance automatized social medium promotion covering trending project 2022 q3 airdrop governance token allows token holder help shape future crowdmint establish dao decentralize decision making process approve new project vote based promotion start page flag misconducting user suspended banned setup name setup setup split 3 part contract contract worker worker client client part require node http nodejs org en v14 yarn http yarnpkg com getting started install installed install dependency run following command folder containing readme bash yarn install setup godwoken network metamask name metamask http github com kuzirashi gw gitcoin instruction blob master src task 7 port eth dapp md detail open summary godwoken testnet summary pre network name godwoken testnet rpc url http godwoken testnet web3 rpc ckbapp dev chain id 71393 currency symbol lt leave empty gt block explorer url lt leave empty gt pre detail detail summary godwoken devnet summary pre network name godwoken devnet rpc url http localhost 8024 chain id 1024777 currency symbol lt leave empty gt block explorer url lt leave empty gt pre detail create godwoken account making layer 2 deposit name deposit http github com kuzirashi gw gitcoin instruction blob master src component tutorial 4 layer2 deposit md impression p align center &#9; img src asset impression 1 png alt crowdmint impression 1 p p align center &#9; img src asset impression 2 png alt crowdmint impression 2 p p align center &#9; img src asset impression 3 png alt crowdmint impression 3 p
/ILESKOV/LeskovDEX,JavaScript,leskoexchange lesko exchange esko erc 20 standard token video explanation http drive google com file 13wacmzjixlvzaytnbivb x1prbfjpppy view usp sharing table content general info general information technology used technology used feature feature screenshots screenshots setup setup project status project status room improvement room improvement contact contact general information lesko exchange trading eth esko connect wallet deposit eth esko token trade user create order fill cancel also chart eth esko price action available technology used dependency react version 16 13 1 truffle version 5 1 45 web3 version 1 2 6 openzeppelin solidity version 2 1 3 apexcharts version 3 6 3 chai version 4 2 0 redux version 4 0 5 feature list ready feature user connect exchange via wallet deposit withdraw eth esko token user create cancell fill order user buy sell eth esko token user check trade history exchange user see eth esko price action integrated chart screenshots example screenshot screenshot png setup download repository open terminal run npm install order download dependency listed package json file npm install need run local blockchain open ganache terminal run command truffle migrate reset interctions exchange script fill order exchange live traded run truffle exec script seed exchange j let ' run npm run start end page ask connect metamask wallet connected setup done project status project progress room improvement room improvement add token trading add time frame chart contact created leskov http www linkedin com ivan leskov 4b5664189 feel free contact
/mimic-fi/v2-core,TypeScript,h1 align center href http mimic fi img src http www mimic fi logo png alt mimic finance width 200 h1 h4 align center defi automation platform h4 p align center href http github com mimic fi v2 core action workflow ci yml img src http github com mimic fi v2 core action workflow ci yml badge svg alt ci href http discord mimic fi img src http img shield io discourse status server http 3a 2f 2fmeta discourse org alt discord href license img src http img shield io badge license glp 3 0 green p p align center href content content href setup setup href security security href license license p content monorepo hold key component mimic protocol helper package helper library solidity typescript helper used among mimic repository price oracle package price oracle implementation chain price oracle used mimic platform registry package registry mimic implementation chain registry swap connector package swap connector chain dex aggregator used smart vault swap token wallet package wallet mimic wallet contract charge connecting user rest protocol setup set project ' need git http git scm com yarn http classic yarnpkg com installed command line bash clone repository git clone http github com mimic fi v2 core go repository cd v2 core install dependency yarn security blockquote style background rgba 197 127 66 0 34 border ffffff6b text f5fffa h5 style color rgba 225 111 12 0 82 auditing h5 p status contract considered experimental used risk p blockquote even though smart contract reviewed supervised security researcher currently going formal audit process one top firm industry disclose result takeover soon finish process hopefully soon able communicate bug bounty program hacker community however found potential issue smart contract piece code consider critical safety protocol please contact u href mailto security mimic fi security mimic fi license gpl 3 0 website mimic fi http mimic fi nbsp middot nbsp github mimic fi http github com mimic fi nbsp middot nbsp twitter mimicfi http twitter com mimicfi nbsp middot nbsp discord mimic http discord mimic fi
/zestymarket/contracts-v2,Solidity,zesty contract v2 zesty market set smart contract allow creator tokenize digital space example stream overlay streaming platform like twitch digital space game form non fungible token nfts nfts rented marketplace allows advertiser purchase timeslot advertise price discovery done dutch auction mechanism zesty market allows creator create digital asset able generate revenue nfts act financial asset support underwriting giving creator way taking loan insurance support creative endeavor advertiser able advertise trustless way advertiser sure ad spend ha siphoned resulting lost reach sure creator received ad monies directly transparent advertising mechanism advertiser able build partnership creator instead solely advertising blackbox allows advertiser obtain valuable reach ally way go beyond analytics quickstart 1 repository built hardhat first install hardhat npx npx hardhat 2 create env file following information infura project id key infura account needed would want deploy contract public mainnets testnets private key key ethereum account would used deployment mainnets make sure keep key safely added security ensure key contain sufficient fund interaction mainnnets private key test key ethereum account would used deployment testnets keep key safely infura project id get infura io private key get eth account 3 general hardhat command compile test run npx hardhat compile npx hardhat test npx hardhat run script deploy j network specify network 4 detail use local hardhat metamask network name hardhat anything want new rpc url http localhost 8545 chain id 31337 currency symbol dev anything want block explorer leave blank alternatively contract documentation contract found documentation site http doc zesty market http doc zesty market smart contract overview reference code utils interface adapted openzeppelin contract v3 4 http github com openzeppelin openzeppelin contract tree release v3 4 contract code governance adapted compound http github com compound finance compound protocol deployment address 1 zestynft sol rinkeby 0xa6fc03b3343d72630db8767b179c90b0ccd61354 matic 0xba7cd9f08b9a70f05e93025bd26105f2c91aff0a 1 zestymarket erc20 v1 1 rinkeby usdc compound 0xd6551e7cd4dbbaf4f9186665faa7a869868dc73e matic usdc 0x8645a4d5fb4816edec2ae4b1b822b11260830043 1 streamgame eth rinkeby 0x4f170b8f6939c4aee8d32b264628ae64478c5804 matic 0x3943c890d2ff687714358006deca47b8809bf34d 1 zestydice eth rinkeby 0x308529f5a5acce53415a2a279175db6be869439e matic 0x40efb3a83897fe06b6b3b339db878c1ee4620788
/sudeepb02/capitalETH,JavaScript,introduction capitaleth aim solve major problem decentralized finance investing capitaleth help invest systematically disciplined way sit tight invest right br capitaleth capitaleth smart hassle free way investing cryptocurrencies like systematic investment plan sip traditional finance capitaleth sip planned approach towards investment help build habit saving building portfolio future using capitaleth invest pre determined amount regular interval investing small amount regularly market average buy price high low reduces risk significantly br capitaleth investing decentralized cryptocurrencies ha largely ignored defi space many people interested part defi revolution want hold stake ecosystem new le experienced people often confused invest importantly invest volatility high crypto market people skeptical best time invest turn miss opportunity trying time entry majority people still invest based anonymour tip fear missing fomo br advantage dollar cost averaging compounding investment disciplined saving long term gain need monitor market continously br deployment instruction current repository ha token address ropsten network want deploy network local fork main network need change token address token address updated src utils directory deploy clone repository run npm install deploy contract using truffle deploy network ropsten need secret file current directory mnemonic deploying network local update contract deployed contract address set kybernetworkproxycontract address aave address interest earning using aave work mainnet fork kyber aave use different contract deployment dai npm start deployed app capitaleth currently deployed ropsten test network life http capitaleth netlify app investor dashboard view capitaleth 2 src asset ss02 png provider process view capitaleth 3 src asset ss03 png detail project wa built le 30 day ethglobal hackmoney hackathon would really like thank entire ethglobal aave portis team everyone else support thank
/bsureau/Inhetherit,TypeScript,inhetherit cryptos never disappear die plan pas cryptos loved one reminder inhetherit wa made chainlink spring 22 hackathon available testnet project ha awarded top quality project 40 project among 342 submission chainlink spring 22 hackathon http devpost com software inhetherit one must always foresight life bought first apartment wife first time ever wrote notary issue passing cryptocurrencies arose quickly first crypto currency yet well defined term legislation even wife notary would still need access private key order release fund ' direct fast secured reliable way solve problem ' came idea developing inhetherit doe inhetherit dapp developed ethereum smart contract platform allows pas cryptos eth erc20 token erc721 soon whoever want case death 5 minute time create contract linked wallet give permission transfer fund heir die us chainlink request death record public api http matchid io maintained french national institute statistic dapp available france way name appears record die approved fund automatically transferred corresponding address gave creation order resume giver create contract ethereum wallet give permission contract transfer fund eth erc20 token erc721 soon one heir ii heir lost someone gave cryptos using inhetherit claim built first created smart contract solidity made test using hardhat development environment used chainlink make get request gov api smart contract special thanks ijonas met chainlink discord support frontend part wa developed using next j react framework ether j library interacting ethereum blockchain website deployed vercel cloud platform challenge ran learning solidity dealing erc 20 token approval workflow connecting smart contract chain data chainlink network discovering next j ether j library struggling shared state nextjs trying design optimal user experience despite constraint erc20 token approval workflow accomplishment ' proud discovering solidity chainlink web3 infrastructure front end development back end developer participate first hackathon release mvp le one month trying something else nfts project trying respond real life problem seems never tackled learned web3 awesome massive environment innovate solidity wa pretty easy learn standard around eg erc20 approval workflow quickly make complex world chainlink definitely key component web3 infrastructure youll go teammate ' next inhetherit improvement idea weve already think able split certain erc20 token different heir accept erc721 token nfts propose user give fund association make frontend responsive make dapp cross chain interoperable chainlink ccip explore l2 scaling solution integrate gov apis expand around world extend security preserving privacy chainlink mixicles demo video watch http www youtube com watch v 9kkfvsaiaqu wanna try inhetherit link http www inhetherit link sketch explain work technically big picture app ' interaction big picture doc 0 big picture png francois creates pas link bob 1 create doc 1 create png francois pass 3 0 eth alice 2 add eth token doc 2 add token eth png alice report francois ' death 3 report death doc 3 report death png alice claim fund francois 4 claim fund doc 4 claim fund png
/dspytdao/Algo_AMM,Python,automated prediction market maker algorand note code audited used production environment summary algo amm allows trade outcome event follow odds garner accurate insight future liquidity provider supply stable coin return liquidity share liquidity let user buy sell voting share redeemed 1 unit stable asset outcome resolved correct become worthless incorrect core feature app protect owner voting share keeping reserve stable asset primarily case liquidity drain goal harnessing power free market aggregate collective knowledge provide general public unbiased source truth regard likelihood certain significant event happening future http imgur com hilkb03 png algo amm http yt embed herokuapp com embed v ueptnvbp3oq http youtu ueptnvbp3oq algo amm project slide deck http doc google com presentation 1fbchisurc6fsy iekmq4ggges7i6d4prhab8gwoeyqk edit usp sharing wrote contract prediction market constant function automated market maker help pyteal py algorand sdk front end application written react vite repository front end avalaible http github com dspytdao algo amm frontend overview constant function automated market maker amm contract provides configuration option creates market event ha binary outcome liquidity pool provides foundation user purchase redeem spawned token event ha resolved liquidity pool support constant reserve ratio stable price discovery protection liquidity drain liquidity provided allows spawn two token equal amount 25 25 proportion liquidity supplied purchase price token determined equation x k x amount token amm amount b token amm event ha occured price one token resolve 1 0 another liquidity share voting share released creator contract moderated outcome requirement 1 vscode http code visualstudio com another ide 2 python3 10 http www python org downloads 3 pip package manager http pip pypa io en stable 4 py algorand sdk http py algorand sdk readthedocs io en latest index html 5 pyteal http pyteal readthedocs io en stable installation html 6 algorand sandbox http github com algorand sandbox connect algorand node purestake http developer purestake io background pyteal python library generating teal program pyteal used writing smart contract algorand blockchain interact smart contract python sdk used compile deploy pyteal smart contract code step project setup setup python virtual environment following command install activate virtual environment install dependency installing virtual environment bash pip install virtualenv virtualenv venv source venv bin activate pip install pyteal http imgur com pgg6fin png http imgur com pgg6fin png deactivate deactivate virtual environment source venv bin activate activate virtualenv replace bin script window pyteal amm smart contract pyteal contract written python using editor choice compileprogram method produce teal code compiled bytecode deployed blockchain pyteal smart contract consists two program called approval program clear program pyteal program generally created python file approval program responsible processing application call contract exception clear call program responsible implementing logic application clear program used handle account using clear call remove smart contract balance record write pyteal code create new directory amm py config py helper py init py file bash mkdir contract cd contract touch amm py config py helper py init py amm py keep high level logic contract helper py contains lower level method config py keep track global variable key configuration variable pyteal contract configuration file config py contain global variable except token default amount congifure smart contract python pyteal import byte int creator key byte creator key result byte result token funding key byte token funding key token funding reserve byte token funding reserve pool funding reserve byte pool funding reserve pool token key byte pool token key pool token outstanding key byte pool token outstanding key yes token key byte yes token key yes token outstanding key byte yes token outstanding key yes token reserve byte yes token reserve token key byte token key token outstanding key byte token outstanding key token reserve byte token reserve min increment key byte min increment key token default amount int 10 13 variable imported python contract config import creator key token funding key pool token key min increment key pool token outstanding key token default amount yes token key token key token funding reserve pool funding reserve result main conditional python call method txn application args 0 call cond call method byte setup setup call method byte supply supply call method byte withdraw withdraw call method byte redeem redemption call method byte result result call method byte swap swap program cond txn application id int 0 create txn completion oncomplete noop call txn completion oncomplete deleteapplication delete txn completion oncomplete optin txn completion oncomplete closeout txn completion oncomplete updateapplication reject statement heart smart contract based contract called chooses operation run example txn application id 0 code create run txn completion oncomplete noop call run txn application args 0 setup setup run either txn completion oncomplete optin oncomplete closeout oncomplete updateapplication none described case true program exit error let look case create python create seq app globalput creator key txn application args 0 app globalput token funding key btoi txn application args 1 app globalput min increment key btoi txn application args 2 app globalput token funding reserve int 0 app globalput pool funding reserve int 0 app globalput result int 0 approve part program responsible setting initial state smart contract writes key global state value creator key token funding key min increment key key determined application call argument txn application args list meanhwile token funding reserve pool funding reserve result initialised 0 integer value setup python def get setup pool token id app globalgetex global current application id pool token key pool token outstanding app globalgetex global current application id pool token outstanding key setup seq pool token id pool token outstanding assert pool token id hasvalue assert pool token outstanding hasvalue createpooltoken token default amount optin token funding key createnotoken token default amount optin token key createyestoken token default amount optin yes token key approve return setup code run account call txn application args 0 equal byte setup smart contract return true current pool token ha created outstanding token meaning smart contract set method create pool token yes token contract opts application python def createpooltoken pool token amount tealtype uint64 expr return seq innertxnbuilder begin innertxnbuilder setfields txnfield type enum txntype assetconfig txnfield config asset total pool token amount txnfield config asset name byte pooltoken txnfield config asset default frozen int 0 txnfield config asset decimal int 0 txnfield config asset reserve global current application address innertxnbuilder submit app globalput pool token key innertxn created asset id app globalput pool token outstanding key int 0 def optin token key tealtype byte expr return sendtoken token key global current application address int 0 def sendtoken token key tealtype byte receiver tealtype byte amount tealtype uint64 expr return seq innertxnbuilder begin innertxnbuilder setfields txnfield type enum txntype assettransfer txnfield xfer asset app globalget token key txnfield asset receiver receiver txnfield asset amount amount innertxnbuilder submit def createnotoken token amount tealtype uint64 expr return seq innertxnbuilder begin innertxnbuilder setfields txnfield type enum txntype assetconfig txnfield config asset total token amount txnfield config asset name byte notoken txnfield config asset unit name byte txnfield config asset default frozen int 0 txnfield config asset decimal int 0 txnfield config asset reserve global current application address innertxnbuilder submit app globalput token key innertxn created asset id app globalput token outstanding key int 0 app globalput token reserve int 0 def createyestoken token amount tealtype uint64 expr return seq innertxnbuilder begin innertxnbuilder setfields txnfield type enum txntype assetconfig txnfield config asset total token amount txnfield config asset name byte yestoken txnfield config asset unit name byte yes txnfield config asset default frozen int 0 txnfield config asset decimal int 0 txnfield config asset reserve global current application address innertxnbuilder submit app globalput yes token key innertxn created asset id app globalput yes token outstanding key int 0 app globalput yes token reserve int 0 supply python def get supply token txn index txn group index int 1 supply seq assert validatetokenreceived token txn index token funding key gtxn token txn index asset amount app globalget min increment key mintandsendpooltoken txn sender gtxn token txn index asset amount approve return supply code run account call txn application args 0 equal byte supply smart contract return true token received smart contract funding reserve token declared create part program larger quantity minimum value validatetokenreceived validates transfer token mintandsendpooltoken keep track pool funding reserve disburses pool token based proportion provided exisitng fund python def validatetokenreceived transaction index tealtype uint64 token key tealtype byte expr return gtxn transaction index type enum txntype assettransfer gtxn transaction index sender txn sender gtxn transaction index asset receiver global current application address gtxn transaction index xfer asset app globalget token key gtxn transaction index asset amount int 0 def mintandsendpooltoken receiver tealtype byte amount tealtype uint64 expr ratio scratchvar scratchvar tealtype uint64 return seq ratio store int 1 app globalget token reserve int 1 app globalget yes token reserve app globalget pool funding reserve int 0 seq sendtoken pool token key receiver amount app globalget pool token outstanding key app globalget pool funding reserve app globalput pool token outstanding key app globalget pool token outstanding key amount app globalget pool token outstanding key app globalget pool funding reserve elseif app globalget pool funding reserve int 0 seq sendtoken pool token key receiver amount app globalput pool token outstanding key app globalget pool token outstanding key amount app globalput token reserve ratio load amount int 4 app globalget token reserve app globalput yes token reserve int 1 ratio load amount int 4 app globalget yes token reserve app globalput pool funding reserve app globalget pool funding reserve amount withdraw python def get withdraw pool token txn index txn group index int 1 withdraw seq assert validatetokenreceived pool token txn index pool token key withdrawlptoken txn sender gtxn pool token txn index asset amount approve return withdraw code run account call txn application args 0 equal byte withdraw smart contract return true token received smart contract pool token created create part program withdrawlptoken sends proportional amount funding reserve token outstanding pool token supplied pool token funding reserve python def withdrawlptoken receiver tealtype byte pool token amount tealtype uint64 expr ratio scratchvar scratchvar tealtype uint64 return seq sendtoken token funding key receiver app globalget pool funding reserve pool token amount app globalget pool token outstanding key app globalput pool funding reserve app globalget pool funding reserve app globalget pool funding reserve pool token amount app globalget pool token outstanding key app globalput pool token outstanding key app globalget pool token outstanding key pool token amount app globalget result int 0 seq ratio store int 1 app globalget token reserve int 1 app globalget yes token reserve app globalput token reserve app globalget token reserve app globalget pool funding reserve pool token amount app globalget pool token outstanding key int 4 ratio load app globalput yes token reserve app globalget yes token reserve app globalget pool funding reserve pool token amount app globalget pool token outstanding key int 4 int 1 ratio load swap python def get swap token txn index txn group index int 1 option txn application args 1 swap seq assert validatetokenreceived token txn index token funding key option byte buy yes seq mintandsendyestoken txn sender gtxn token txn index asset amount approve elseif option byte buy seq mintandsendnotoken txn sender gtxn token txn index asset amount approve reject return swap code run account call txn application args 0 equal byte swap smart contract return true token received smart contract funding reserve token declared create part program depending argument txn application args 1 user either choose yes option token price token explicitly determined existing liquidity reserve yes token size trade python def mintandsendnotoken receiver tealtype byte amount tealtype uint64 expr funding assetholding balance global current application address app globalget token funding key tokensout scratchvar scratchvar tealtype uint64 return seq tokensout store app globalget yes token reserve amount app globalget token reserve amount app globalput token outstanding key app globalget token outstanding key tokensout load app globalput token reserve app globalget token reserve tokensout load sendtoken token key receiver tokensout load app globalget token outstanding key app globalget yes token outstanding key app globalput token funding reserve app globalget token outstanding key int 2 funding app globalput pool funding reserve funding value app globalget token funding reserve def mintandsendyestoken receiver tealtype byte amount tealtype uint64 expr funding assetholding balance global current application address app globalget token funding key tokensout scratchvar scratchvar tealtype uint64 return seq tokensout store app globalget token reserve amount app globalget yes token reserve amount app globalput yes token outstanding key app globalget yes token outstanding key tokensout load app globalput yes token reserve app globalget yes token reserve tokensout load sendtoken yes token key receiver tokensout load app globalget yes token outstanding key app globalget token outstanding key app globalput token funding reserve app globalget yes token outstanding key int 2 funding app globalput pool funding reserve funding value app globalget token funding reserve result python def get result result txn application args 1 result seq assert txn sender app globalget creator key result byte yes seq app globalput result app globalget yes token key approve elseif result byte seq app globalput result app globalget token key approve reject return result code run account call txn application args 0 equal byte result smart contract return true token received smart contract creator account declared create part program depending argument txn application args 1 creator choose yes result event declare winning option redemption python def get redemption token txn index txn group index int 1 redemption seq assert validatetokenreceived token txn index result redeemtoken txn sender gtxn token txn index asset amount approve return redemption code run account call txn application args 0 equal byte redeem smart contract return true token received smart contract winner decided result part program redeemtoken track withdrawal yes token since initial distribution liquidity provided wa distribtued 50 50 towards token deadline winning token worth double initial price python def redeemtoken receiver tealtype byte result token amount tealtype uint64 expr return seq sendtoken token funding key receiver result token amount int 2 app globalput token funding reserve app globalget token funding reserve result token amount int 2 app globalget result app globalget yes token key app globalput yes token outstanding key app globalget yes token outstanding key result token amount elseif app globalget result app globalget token key app globalput token outstanding key app globalget token outstanding key result token amount contract demo create account deploy smart contract create account fund using testnet dispensary http dispenser testnet aws algodev network python algosdk import account generate account private key address account generate account print private key private key print address address connect algodclient register purestake com http purestake com obtain api key initialize algorand client python algod token enter yout token algod address http testnet algorand api purestake io ps2 header x api key algod token initialize algodclient client algod algodclient algod token algod address header create reserve asset create asset used reserve contract return asset index python algosdk import account algosdk future import transaction def wait confirmation client txid last round client status get last round txinfo client pending transaction info txid txinfo get confirmed round txinfo get confirmed round 0 print waiting confirmation last round 1 client status block last round txinfo client pending transaction info txid print transaction confirmed round format txid txinfo get confirmed round return txinfo def create asset client private key declare sender sender account address private key private key params client suggested params txn transaction assetconfigtxn sender sender sp params total 1 000 000 000 default frozen false unit name copio asset name coin manager sender reserve sender freeze sender clawback sender strict empty address check false url none decimal 0 sign secret key creator stxn txn sign private key send transaction network retrieve txid txid client send transaction stxn print signed transaction txid format txid wait transaction confirmed response wait confirmation client txid print txid txid print result confirmed round format response ' confirmed round ' return response ' asset index ' deploy contract first interact smart contract need compile deploy createammapp function requires client reserve token id minimum increment reserve token creator address private key sign transaction python def waitfortransaction client algodclient txid str timeout int 10 laststatus client status lastround laststatus last round startround lastround lastround startround timeout pending txn client pending transaction info txid pending txn get confirmed round 0 0 return pending txn pending txn pool error raise exception pool error format pending txn pool error laststatus client status block lastround 1 lastround 1 raise exception transaction confirmed round format txid timeout def fullycompilecontract client algodclient contract expr byte teal compileteal contract mode mode application version 6 response client compile teal return b64decode response result def getcontracts client algodclient tuple byte byte get compiled teal contract amm args q client algod client ha ability compile teal program return tuple 2 byte string first approval program second clear state program approval program fullycompilecontract client approval program clear state program fullycompilecontract client clear program return approval program clear state program def createammapp client algodclient token int minincrement int creator str private key str int creates new amm args client algod client creator account create amm application token id token liquidity pool return id newly created amm app approval clear getcontracts client globalschema transaction stateschema num uints 13 num byte slice 1 localschema transaction stateschema num uints 0 num byte slice 0 app args encoding decode address creator token byte 8 big minincrement byte 8 big txn transaction applicationcreatetxn sender creator complete transaction oncomplete noopoc approval program approval clear program clear global schema globalschema local schema localschema app args app args sp client suggested params signedtxn txn sign private key client send transaction signedtxn response waitfortransaction client signedtxn get txid assert response application index none response application index 0 return response application index setting amm python min balance requirement min account balance 110 000 additional min balance 4 asset 100 000 4 def setupammapp client algodclient appid int token int funder str private key str int finish setting amm operation fund pool account creates pool token opts app token b one atomic transaction group args client algod client appid app id amm funder account providing funding escrow account token token id private key return pool token id appaddr get application address appid suggestedparams client suggested params fundapptxn transaction paymenttxn sender funder receiver appaddr amt min balance requirement sp suggestedparams setuptxn transaction applicationcalltxn sender funder index appid complete transaction oncomplete noopoc app args b setup foreign asset token sp suggestedparams transaction assign group id fundapptxn setuptxn signedfundapptxn fundapptxn sign private key signedsetuptxn setuptxn sign private key client send transaction signedfundapptxn signedsetuptxn waitfortransaction client signedfundapptxn get txid glob state client application info appid ' params ' ' global state ' id range len glob state b64decode glob state ' key ' b pool token key id ' pool token key ' glob state ' value ' ' uint ' elif b64decode glob state ' key ' b yes token key id ' yes token key ' glob state ' value ' ' uint ' elif b64decode glob state ' key ' b token key id ' token key ' glob state ' value ' ' uint ' return id setupammapp method requires appid one argument fund app call smart contract given argument one atomic transaction group method return dictionary id created pool option token need opt created new asset python def optintopooltoken client algodclient pooltoken int account str private key str none opts pool token args client algod client account account opting token pooltoken token id private key sign tx suggestedparams client suggested params optintxn transaction assetoptintxn sender account index pooltoken sp suggestedparams signedoptintxn optintxn sign private key client send transaction signedoptintxn waitfortransaction client signedoptintxn get txid supplying amm liquidity python def supply client algodclient appid int q int supplier str private key str token int pooltoken int yestoken int notoken int none supply liquidity pool appaddr get application address appid suggestedparams client suggested params pay fee incurred amm sending back pool token feetxn transaction paymenttxn sender supplier receiver appaddr amt min balance requirement sp suggestedparams tokentxn transaction assettransfertxn sender supplier receiver appaddr index token amt q sp suggestedparams appcalltxn transaction applicationcalltxn sender supplier index appid complete transaction oncomplete noopoc app args b supply foreign asset token pooltoken yestoken notoken sp suggestedparams transaction assign group id feetxn tokentxn appcalltxn signedfeetxn feetxn sign private key signedtokentxn tokentxn sign private key signedappcalltxn appcalltxn sign private key client send transaction signedfeetxn signedtokentxn signedappcalltxn waitfortransaction client signedappcalltxn get txid swap stablecoin option python def swap client algodclient appid int option str q int supplier int private key str token int pooltoken int yestoken int notoken int none option ' yes ' second argument b buy yes elif option ' ' second argument b buy else return appaddr get application address appid suggestedparams client suggested params pay fee incurred amm sending back pool token feetxn transaction paymenttxn sender supplier receiver appaddr amt 2 000 sp suggestedparams tokentxn transaction assettransfertxn sender supplier receiver appaddr index token amt q sp suggestedparams appcalltxn transaction applicationcalltxn sender supplier index appid complete transaction oncomplete noopoc app args b swap second argument foreign asset token pooltoken yestoken notoken sp suggestedparams transaction assign group id feetxn tokentxn appcalltxn signedfeetxn feetxn sign private key signedtokentxn tokentxn sign private key signedappcalltxn appcalltxn sign private key client send transaction signedfeetxn signedtokentxn signedappcalltxn waitfortransaction client signedappcalltxn get txid withdraw lp token python def withdraw client algodclient appid int pooltoken int pooltokenamount int withdrawaccount str token int private key str none withdraw liquidity reward pool back supplier supplier receive stablecoin fee proportional liquidity share pool choose withdraw appaddr get application address appid suggestedparams client suggested params pay fee incurred amm sending back token b feetxn transaction paymenttxn sender withdrawaccount receiver appaddr amt 2 000 sp suggestedparams pooltokentxn transaction assettransfertxn sender withdrawaccount receiver appaddr index pooltoken amt pooltokenamount sp suggestedparams appcalltxn transaction applicationcalltxn sender withdrawaccount index appid complete transaction oncomplete noopoc app args b withdraw foreign asset token pooltoken sp suggestedparams transaction assign group id feetxn pooltokentxn appcalltxn signedfeetxn feetxn sign private key signedpooltokentxn pooltokentxn sign private key signedappcalltxn appcalltxn sign private key client send transaction signedfeetxn signedpooltokentxn signedappcalltxn waitfortransaction client signedappcalltxn get txid set result python def set result client algodclient appid int funder str private key str second argument set winning token key appaddr get application address appid suggestedparams client suggested params feetxn transaction paymenttxn sender funder receiver appaddr amt 2 000 sp suggestedparams calltxn transaction applicationcalltxn sender funder index appid complete transaction oncomplete noopoc app args b result second argument sp suggestedparams transaction assign group id feetxn calltxn signedfeetxn feetxn sign private key signedappcalltxn calltxn sign private key client send transaction signedfeetxn signedappcalltxn waitfortransaction client signedappcalltxn get txid redeem resolved option stablecoin python def redeem client algodclient appid int token int tokenamount int withdrawaccount str token int private key str none appaddr get application address appid suggestedparams client suggested params pay fee incurred amm sending back token b feetxn transaction paymenttxn sender withdrawaccount receiver appaddr amt 2 000 sp suggestedparams tokentxn transaction assettransfertxn sender withdrawaccount receiver appaddr index token amt tokenamount sp suggestedparams appcalltxn transaction applicationcalltxn sender withdrawaccount index appid complete transaction oncomplete noopoc app args b redeem foreign asset token token sp suggestedparams transaction assign group id feetxn tokentxn appcalltxn signedfeetxn feetxn sign private key signedpooltokentxn tokentxn sign private key signedappcalltxn appcalltxn sign private key client send transaction signedfeetxn signedpooltokentxn signedappcalltxn waitfortransaction client signedappcalltxn get txid close amm python def closeamm client algodclient appid int closer str private key str none close amm args client algod client appid app id amm closer closer account public address must original creator pool private key closer account private key sign transaction deletetxn transaction applicationdeletetxn sender closer index appid sp client suggested params signeddeletetxn deletetxn sign private key client send transaction signeddeletetxn waitfortransaction client signeddeletetxn get txid example script python import dotenv import load dotenv algosdk import account algosdk v2client import algod create asset import create asset amm api import createammapp setupammapp optintopooltoken supply withdraw swap set result closeamm redeem load dotenv private key getenv ' key ' creator account address private key private key algod token getenv ' algod token ' algod address http testnet algorand api purestake io ps2 header x api key algod token initialize algodclient client algod algodclient algod token algod address header create stable asset token create asset client private key appid createammapp client client creator creator private key private key token token minincrement 1000 print f alice setting funding amm appid token setupammapp client client appid appid funder creator private key private key token token pooltoken token ' pool token key ' yestoken token ' yes token key ' notoken token ' token key ' print token ' pool token key ' token ' yes token key ' token ' token key ' optintopooltoken client creator private key pooltoken optintopooltoken client creator private key yestoken optintopooltoken client creator private key notoken print supplying amm initial token pooltokenfirstamount 500 000 supply client client appid appid q pooltokenfirstamount supplier creator private key private key token token pooltoken pooltoken yestoken yestoken notoken notoken print supplying amm token pooltokensecondamount 1 500 000 supply client client appid appid q pooltokensecondamount supplier creator private key private key token token pooltoken pooltoken yestoken yestoken notoken notoken print swapping yestokenamount 100 000 buy yes token swap client client appid appid option yes q yestokenamount supplier creator private key private key token token pooltoken pooltoken yestoken yestoken notoken notoken buy token swap client client appid appid option q yestokenamount supplier creator private key private key token token pooltoken pooltoken yestoken yestoken notoken notoken print withdrawing alltokens 2 000 000 withdraw client client appid appid pooltokenamount alltokens pooltoken pooltoken withdrawaccount creator private key private key token token print result set winner set result client client appid appid second argument b yes funder creator private key private key redemption yes print redeeming yestokensamount 95 238 redeem client client appid appid tokenamount yestokensamount token yestoken withdrawaccount creator private key private key token token delete print deleting closeamm client client appid appid closer creator private key private key useful resource pyteal http pyteal readthedocs io en stable index html testnet dispensary http dispenser testnet aws algodev network py algorand sdk http py algorand sdk readthedocs io en latest index html algoexplorer http testnet algoexplorer io address algorand build python http developer algorand org doc get started dapps pyteal alogrand smart contract detail http developer algorand org doc get detail dapps smart contract apps amm demo contract http github com mak ivanov amm demo blob main amm contract contract py creating stateful algorand smart contract python pyteal http developer algorand org article creating stateful algorand smart contract python pyteal
/BerkeleyBlockchain/satchel,JavaScript,satchel table content 1 description description 2 feature feature 3 setup setup 4 demo demo 5 license license description satchel mobile optimized web application leverage crowdfunding framework bank underbanked community may lack access stable financial climate access internet satchel combat hyperinflation economic distrust giving user banking functionality use dai cryptocurrency soft pegged u dollar satchel allows user invest local school operates economic hub community arming community tool need adopt socioeconomic mobility individual communal level satchel redefine financial autonomy global scale technical architecture react j web3 frontend compound ethereum lending protocol garner interest user solidity smart contract metamask authentication visualization primary flow flow flow png feature current feature satchel currently ha two user flow school community member user user sign login metamask account user choose school associated user deposit dai personal wallet satchel garner interest time user withdraw dai saving account satchel point garnered interest evenly split user associated school user see current interest rate satchel dashboard updated upon withdrawal user see exact amount dai contributed local school user see name local school user see project school currently running utilizing contribution school multiple school sign login metamask account school withdraw dai ha sent school garnered interest associated community member withdrawn fund go school wallet school create new project showcased community member school see current project future feature plan add following improvement user take loan satchel redeem loan user maintains credit rating implicates loan flexibility impacted loan redemption timeliness add flow non community member able interact satchel contribute school developing region school project created real data implement governance user vote school project prioritized funding wise setup app running http localhost 3000 http localhost 3000 use goerli testnet testing purpose 1 prerequisite please ensure following installed computer node j node package manager npm yarn truffle hardhat 2 clone repo 3 set dependency cd client npm install cd blockchain npm install cd server npm install 4 get goerli test dai compound instruction http teller gitbook io teller 1 testing guide getting testnet token ropsten 1 dai compound except connect goerli instead ropsten compound http app compound finance 5 fill smart contract side env archive mainnet node url mnemonic archive goerli node url goerli private key 6 deploy smart contract cd blockchain yarn deploy 7 fill server side env port 4000 mongoose mongo db url 8 fill client side env react app contract address address contract deployed step 6 react app token address 0xdc31ee1784292379fbb2964b3b9c4124d8f89c60 react app ctoken address 0x822397d9a55d0fefd20f5c4bcab33c5f65bd28eb 9 start server cd server npm start 10 start frontend cd client npm start demo video demo satchel demo http img youtube com vi 2ggpdbgqiry 0 jpg http youtu 2ggpdbgqiry figma prototype demo figma prototype http www figma com proto mqrabzhxagfjsbrdobx6xf unicef node id 729 3a7067 scaling min zoom showcase envisioned functionality satchel future feature included 2021 update demo satchel 2021 update http drive google com uc id 1e4x84qaaia 6pvtgy5ouefvu efrn29l http drive google com file 1ni5ra krcws4znjzatnk6v8uea88bwsm preview license copyright 2020 blockchain berkeley licensed apache license version 2 0 license may use file except compliance license may obtain copy license http www apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license
/Jonah246/tfusd-reentrancy-attack-write-up,Solidity,true fi pool reentrancy attack true fi strategy http etherscan io address 0xe7f52d4f1c056fbfbf2b377de760510fa088baef curveyearnstrategy http github com trusttoken smart contract blob main contract truefi2 strategy curveyearnstrategy sol three true fi pool tfusdc tftusd tfusdt use strategy implementation approximately 500k worth crv token risk time issue wa reported dangerous public sellcrv ' permissionless function sellcrv http github com trusttoken smart contract blob 76854d53c5036777286d4392495ef28cd5c5173a contract truefi2 strategy curveyearnstrategy sol l228 l245 curveyearnstrategy sellcrv sell crv token stablecoins usdc usdc tusd send truefi pool solidity dev swap collected crv 1inch transfer gain pool receiver token pool revert resulting exchange price much smaller oracle price param data data forwarded 1inch exchange contract acquired 1inch api http api 1inch exchange v3 0 1 swap see http doc 1inch exchange api quote swap swap function sellcrv byte calldata data external i1inch3 swapdescription memory swap uint256 balancediff 1inch exchange data uint256 expectedgain normalizedecimals crvoracle crvtousd swap amount require swap srctoken address minter token curveyearnstrategy source token crv require swap dsttoken address token curveyearnstrategy destination token tusd require swap dstreceiver pool curveyearnstrategy receiver pool require balancediff conservativepriceestimation expectedgain curveyearnstrategy optimal exchange four assertion 1 dstreceiver need pool 2 dsttoken need pool ' token attackrs sell crv strange token 3 srctoken need crv attacker sell token 4 balancediff conservativepriceestimation expectedgain attacker sell crv bad price dev aware leaving public function dangeous make lot assetions however ' enough contract considers ' good trade long balancediff large enough balancediff calculated oneinch library oneinchexchange sol l59 l72 http github com trusttoken smart contract blob 76854d53c5036777286d4392495ef28cd5c5173a contract truefi2 library oneinchexchange sol l59 l72 compare balanceof receiver swap long pool ' balance increase swap ' good trade attacker join pool swap pool ' balance increase take free tfusdc away turn oneinch allows anyone swap attacker pull crv swap join pool attacker end free tfusdc exploit step trigger collectcrv call sellcrv set srcreceiver exploit contract sell crv callback function join truefi pool enjoy free tfusdc reproduce 1 npm 2 npx hardhat test test reentrancy j ' setting hardhat j solidity 0 6 12 network hardhat forking url http eth mainnet alchemyapi io v2 blocknumber 13760924 mocha timeout 1200000 mitigation using oneinch strategy clever market fluctuates time fixing one swapping route would lead bad trade check akward without oneinch sellcrv http github com jonah246 true fi reentrancy writeup blob main contract stealcrv sol l107 l157 however strange thing would happen receiver vault setting sellcrv public function ' bring much benefit
/FandomGold/COLD-DAO,Solidity,cold fango ' defi banking suite asset dao c ertificate f l edger eposits purpose cold defi banking suite create house interest market xfg deposit yield allowing multitude chain asset serve interest time locked xfg ledger deposit simultaneously preserving fango ' fixed supply sound money principal staging list detail financial instrument offered interest option thru cold defi banking suite asset 01 red mercury dao edition img height 100px width 100px title red mercury src http raw githubusercontent com fandomgold cold main tlgm9z8ajk4hnvncx9vq44byt2yffw9pn1 png img tron network contract tlgm9z8ajk4hnvncx9vq44byt2yffw9pn1 ticker cold description introductory governance asset cold defi banking suite asset dao time locked xfg certificate ledger deposit yield decimal 12 total supply 80 current circulating supply 19 262603971250 http tronscan org token20 tlgm9z8ajk4hnvncx9vq44byt2yffw9pn1 dao governance project amount see goverance section cold governance dao governance monetary 0 1 cold required see goverance section cold governance dao governance list new asset burn 1 0 cold required see goverance section cold governance xfg interest rate cold xfg supply atomic unit decimal place differs interest paid using supply ratio cold xfg 1 100000 1 xfg 0 00001 cold every time xfg double half price cold interest rate rise fall half xfg 0 0015 80 apr paid cold xfg 0 0030 120 apr paid cold xfg 0 0060 180 apr paid cold xfg 0 0120 270 apr paid cold xfg 0 0250 405 apr paid cold xfg 0 050 608 apr paid cold xfg 0 100 912 apr paid cold xfg 0 200 1368 apr paid cold xfg 0 40 2052 apr paid cold xfg 0 80 3078 apr paid cold xfg 1 50 4617 apr paid cold xfg 3 00 6925 apr paid cold forth example yield 800 xfg principal term yield 0 0064 cold 8 000 xfg principal term yield 0 064 cold 80 000 xfg principal term yield 0 64 cold initial offering 69 available purchase thru smart contract fixed base price 1 trx 0 000625 cold ' premine ' 11 cold sent development wallet using six 6 cold network stewardship reward xfg elder node operator well five 5 cold reserved interest payment option xfg deposit fixed price offering end either 1 69 token sold 2 fango deposit code successfully implemented whichever arrives first event unsold token remaining cold either added reserve used interest option xfg deposit yield b burned tronlink ledger wallet required smart contract interaction including buytoken limited fixed supply ultimately want full distribution token hand dao member governance website http cold finance token http tronscan io token20 tlgm9z8ajk4hnvncx9vq44byt2yffw9pn1 contract http tronscan io contract tlgm9z8ajk4hnvncx9vq44byt2yffw9pn1 see write contract section contract tab access ' buytoken ' function asset purchase using tronlink ledger wallet h2 id cold governance cold hivemind asset dao governance h2 cold ' asset dao group governing member stewarding excellence defi banking suite election cold hivemind asset delegate new asset integration member vote according required holding amount range topic project branding annual interest rate selection new financial instrument made available user cold ' yield market asset integration order list new asset offered banking reward dao member must first call vote proposed asset positive majority voting decision ha reached dao member must burn total 1 full cold token time integration effectively create deflationary pressure reducing total supply also raising scarcity available integration limiting total amount possible asset issuer limited run asset nft collection fixed supply asset may continue using existing cold integration additional offering asset elected cold hivemind asset delegate managed issued elected party project delegated original asset integration proposal using requirement dao member may propose topic upon vote long proposing member hold min req amount based proposal topic project monetary 1st governance session 3 20 21 holding amount required monetary policy ha lowered 1 cold minimum 0 1 cold holding amount cold allows member vote project governance decision development voting currently thru github discord http discord gg 8basxuy6f7
/orionprotocol/sdk,TypeScript,orion protocol sdk npm version http img shield io npm v orionprotocol sdk svg http www npmjs com package orionprotocol sdk downloads http img shield io npm dm orionprotocol sdk svg http www npmjs com package orionprotocol sdk want integrate orion protocol application see integration guide doc integration md overview orion software developer kit set function method allow dapp developer connect superior aggregated liquidity orion protocol combine orderbooks centralized exchange well decentralized automatic market maker uniswap spookyswap across several supported blockchains connection developer using sdk perform wide range action including swapping selected token using orion aggregated liquidity obtaining relevant market information subscription add remove liquidity orion pool api key orion sdk free use doe require api key registration refer integration example detailed information install install usage usage initialization initialization high level method high level method withdraw withdraw deposit deposit get swap info get swap info make swap market make swap market add liquidity add liquidity remove liquidity remove liquidity low level method low level method get historical price get historical price get tradable pair get tradable pair get swap info get swap info place order orion aggregator place order orion aggregator orion aggregator websocket orion aggregator websocket swap info swap info balance order history stream balance order history stream orderbook stream orderbook stream orion aggregator w stream unsubscribing orion aggregator w stream unsubscribing price feed websocket stream price feed websocket stream fetching system fetching system using contract using contract utils utils parsing trade transaction parsing trade transaction install console npm orionprotocol sdk usage initialization warning ether 5 6 0 required j node j import orionunit orionprotocol sdk import wallet ether const orionunit new orionunit bsc production eth bsc ftm available const wallet new wallet 0x orionunit provider orionunit chain environment abstraction metamask import orionunit orionprotocol sdk import detectethereumprovider metamask detect provider import baseprovider metamask provider import provider ether const startapp async provider baseprovider const web3provider new provider web3provider provider await web3provider ready const signer web3provider getsigner ready go const orionunit new orionunit eth production ready go detectethereumprovider provider provider startapp provider baseprovider else console log please install metamask high level method withdraw orionunit exchange withdraw amount 435 275 asset usdt signer wallet signer ui deposit orionunit exchange deposit amount 2 5 asset orn signer wallet signer ui get swap info const swapinfo fee await orionunit exchange getswapinfo type exactspend assetin orn assetout usdt feeasset orn amount 23 89045345 option optional instantsettlement true poolonly false console log swapinfo console log fee route ' pool ' swapinfo id ' e5d50b8e ca82 4826 b454 3fa12b693c11 ' amountin 20 amountout 25 68 assetin ' orn ' assetout ' usdt ' path ' orn ' ' usdt ' executioninfo ' ' orderinfo assetpair ' orn usdt ' side ' sell ' amount 20 safeprice 1 284 exchange ' binance ' price 1 284 minamountout 12 minamountin 9 4 marketprice 1 284 availableamountout null availableamountin 20 marketamountout 25 68 marketamountin null type ' exactspend ' fee assetname ' ftm ' assetaddress ' 0x0000000000000000000000000000000000000000 ' networkfeeinfeeasset ' 0 00073929546 ' protocolfeeinfeeasset undefined make swap market trading pair ha quantity precision need prepare round quantity according quantity precision const pairconfig await simplefetch orionaggregator getpairconfig orn usdt pairconfig throw new error pair config orn usdt found const qtyprecision pairconfig const amount 23 5346563 const roundedamount new bignumber amount decimalplaces qtyprecision bignumber round floor use math lib orionunit exchange swapmarket type exactspend assetin orn assetout usdt feeasset orn amount roundedamount tonumber slippagepercent 1 signer wallet signer ui option option optional poolonly true specify whether want perform exchange pool instantsettlement true set true ensure fund instantly transferred wallet otherwise possibility receiving fund balance exchange contract logger console log set true want issue associated lack allowance automatically corrected autoapprove true console log add liquidity orionunit farmingmanager addliquidity poolname orn usdt amountasset orn orn usdt pool amount 23 352345 signer wallet signer ui remove liquidity orionunit farmingmanager removeallliquidity poolname orn usdt signer wallet signer ui low level method get aggregated orderbook import simplefetch orionprotocol sdk const orderbook await simplefetch orionunit orionaggregator getaggregatedorderbook orn usdt 20 depth get historical price import simplefetch orionprotocol sdk const candle await simplefetch orionunit pricefeed getcandles orn usdt 1650287678 interval start unix timestamp 1650374078 interval end unix timestamp 5m ' 5m ' ' 30m ' ' 1h ' ' 1d ' get tradable pair import simplefetch orionprotocol sdk const pairslist await simplefetch orionunit orionaggregator getpairslist console log pairslist ' orn usdt ' ' bnb orn ' ' ftm orn ' ' eth orn ' get fee asset import simplefetch orionprotocol sdk const feeassets await simplefetch orionunit orionblockchain gettokensfee get swap info import simplefetch orionprotocol sdk const swapinfo await simplefetch orionunit orionaggregator getswapinfo use ' exactspend ' ' amount ' much want spend use ' exactreceive ' otherwise exactspend type orn asset usdt asset 25 23453457 amount exchange optional specify ' pool ' want pool swap execution specify ' cex ' want cex execution swap info response example json id 2275c9b1 5c42 40c4 805f bb1e685029f9 assetin orn amountin 25 23453457 assetout usdt amountout 37 11892965 price 1 47095757 marketamountout 37 11892965 marketamountin null marketprice 1 47095757 minamountin 8 2 minamountout 12 availableamountin 25 2 availableamountout null path orn usdt orderinfo assetpair orn usdt side sell amount 25 2 safeprice 1 468 executioninfo orion pool orn usdt length 1 25 23453457 orn 37 11892965 usdt market amount 37 11892965 usdt price 1 47095757 usdt orn order sell 25 2 1 47 safe price 1 468 orn usdt available amount 25 2 orn step 1 25 23453457 orn 37 11892965 usdt price 1 47095757 usdt orn passed amount 25 23453457 orn amount cost sell orn usdt order min price 1 47095757 usdt orn sell amount avgweighedprice 1 47095757 usdt orn cost avgweighedprice 37 11892965 usdt executed sell amount 25 23453457 orn place order orion aggregator import simplefetch crypt orionprotocol sdk import exchange factory orionprotocol contract const myaddress await signer getaddress wallet address without await const baseassetaddress 0xfbcad2c3a90fbd94c335fbdf8e22573456da7f68 const quoteassetaddress 0xcb2951e90d8dcf16e1fa84ac0c83f48906d6a744 const amount 345 623434 const price 2 55 const feeassetaddress 0xf223eca06261145b3287a0fefd8cfad371c7eb34 const fee 0 7235 orion fee network fee fee asset const side buy ' sell ' const ispersonalsign false http doc metamask io guide signing data html brief history const chainid orionunit const matcheraddress address transfer fund exchange process await simplefetch orionunit orionblockchain getinfo const signedorder await crypt signorder baseassetaddress quoteassetaddress side price amount fee myaddress matcheraddress feeassetaddress ispersonalsign wallet signer ui chainid const exchangecontract exchange factory connect exchangecontractaddress orionunit provider const orderisok await exchangecontract validateorder signedorder orderisok throw new error order invalid const orderid await simplefetch orionunit orionaggregator placeorder signedorder false true want place order internal orderbook want order executed cexes dexes could filled another internal order orion aggregator websocket available subscription address update subscribe ' au ' order history balance info swap subscribe ' ' swap info update aggregated order book update subscribe ' aobus ' bid asks asset pair config update subscribe ' apcus ' broker tradable atomic swap asset balance update subscribe ' btasabus ' need orion bridge swap info const swaprequestid orionunit orionaggregator w subscribe swap subscribe payload assetin asset assetout asset e true true type swap exactspend omitted true default e ' orion pool ' optional specify ' orion pool ' want pool swap execution 5 62345343 amount handle data update way callback swapinfo switch swapinfo kind case exactspend console log swapinfo availableamountin break case exactreceive console log swapinfo availableamountout break orionaggregator w unsubscribe swaprequestid balance order history stream orionunit orionaggregator w subscribe au address update subscribe order balance payload 0x0000000000000000000000000000000000000000 wallet address callback data switch data kind case initial data order console log data order order order undefined ' order yet console log data balance since initial message balance contain asset break case update data order switch data order kind case full console log pool order data order order pool go history settled status break case update console log order process execution data order break default break data balance console log balance update data balance since update message balance contain changed asset orionunit orionaggregator w unsubscribe 0x0000000000000000000000000000000000000000 orderbook stream orionunit orionaggregator w subscribe aobus payload orn usdt trading pair callback asks bid pairname console log pairname orderbook asks asks console log pairname orderbook bid bid orionunit orionaggregator w unsubscribe orn usdt orion aggregator w stream unsubscribing asset pair config update unsubscribe orionunit orionaggregator w unsubscribe apcu broker tradable atomic swap asset balance unsubscribe orionunit orionaggregator w unsubscribe btasabu price feed websocket stream const alltickerssubscription orionunit pricefeed w subscribe alltickers callback ticker console log ticker alltickerssubscription unsubscribe orionunit pricefeed w unsubscribe alltickers alltickerssubscription id also unsubscribe like const tickersubscription orionunit pricefeed w subscribe ticker callback ticker console log tricker payload orn usdt tickersubscription subscription orionunit pricefeed w unsubscribe ticker tickersubscription id const lastpricesubscription orionunit pricefeed w subscribe lastprice callback pair price console log price price payload orn usdt lastpricesubscription unsubscribe orionunit pricefeed w unsubscribe lastprice lastpricesubscription id fetching system data fetching often pain network issue fetching library error server error wrong response data want able handle error human way sure get expected data 1 overcome limitation exception handling example catch block thrown exception anything neverthrow http github com supermacro neverthrow 2 predictability validation provided u zod http github com colinhacks zod two option interacting service 1 verbose src fetchwithvalidation provides result object successful provides data handle fetching error http code http status response body response status etc 2 simple fetch src simplefetch wrapper verbose way allows fetch perhaps usually verbose way example const getcandlesresult await orionunit pricefeed getcandles orn usdt 1650287678 1650374078 5m getcandlesresult iserr handle fetching error access error text status const error placeorderfetchresult switch error type case fetcherror instance error console error error message break case unknownfetcherror console error url error url error error message break case unknownfetchthrow console error something wrong happened fetching error error break error type see src fetchwithvalidation else success result const candle timestart timeend getcandlesresult value handle response data simple fetch const candle timestart timeend await simplefetch orionunit pricefeed getcandles orn usdt 1650287678 1650374078 5m handle response data using contract use package orionprotocol contract http github com orionprotocol contract utils parsing trade transaction import utils orionprotocol sdk example fillthroughorionpool http bscscan com tx 0xe311fb927b938e1e484b7660b5c4bd0aa9c97c86f6e1f681d6867dabc8a702fe swapthroughorionpool http bscscan com tx 0xb9c93851f605b8b5a906dbc9363eae0aa6635ce41ffb6bf540d954f9138bf58c fillorders http bscscan com tx 0x860b8820ece1a5af11b2459b6bd1a025e7cdc86a1d7e1e3d73558db6e72974d4 const data utils parseexchangetradetransaction data 0x4c36fc72000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000004a817c80000000000000000000000000000000000000000000000000000000000019595c700000000000000000000000000000000000000000000000000000000000002a000000000000000000000000050abeb3e61167365d0a7dd7b3301a8ae27016d760000000000000000000000002d23c313feac4810d9d014f840741363fccba675000000000000000000000000e4ca1f75eca6214393fce1c1b316c237664eaa8e00000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000e4ca1f75eca6214393fce1c1b316c237664eaa8e00000000000000000000000000000000000000000000000000000004a817c8000000000000000000000000000000000000000000000000000000000006df56a00000000000000000000000000000000000000000000000000000000003f7efc600000000000000000000000000000000000000000000000000000182dff605d000000000000000000000000000000000000000000000000000000182e2465cb60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000411b7b9908456b6d0b97e411b3585de8ed2c7c1db9a39d2f5f81fc8ed765f0575d29cd9ebd0533e3eeb819d70971bf7bd705c52871c7a00ba67c738040a69895911c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000e52ccf7b6ce4817449f2e6fa7efd7b567803e4b4000000000000000000000000e4ca1f75eca6214393fce1c1b316c237664eaa8e00000000000000000000000055d398326f99059ff775485246999027b3197955 switch data type case fillorders aggregator cex console log data args order buyorder break case fillthroughorionpool aggregator dex pool console log data args order break case swapthroughorionpool dex pool directly console log data args amount spend break
/Investin-pro/Investin-protocol,Solidity,investin protocol image http user image githubusercontent com 58189246 91845776 63ed9780 ec77 11ea 8865 f8a6e950f43a png invest token governance token investin protocol token reflect ownership protocol fee generated platform would evenly distributed among token holder stake token staking contract
/chrisstef/defi-staking,JavaScript,p align center width 200 img src src bank png alt alt text title optional title p summary decentralized finance app user airdropped token reward staking ' main focus demonstrate fundamental staking yield farming read usage important note trying self near future dapp exist broader dao environment reward token use case voting power access specific social event etc dapp currently deployed folllowing test network mumbai http mumbai polygonscan com rinkeby http www rinkeby io stats stardust http stardust explorer metis io meter http scan warringstakes meter io allows u staketokens add token staking contract yield farming unstaketokens remove token staking contract claimtokens mint mock usdt required staking issuetokens issue reward user staking interaction blockchain created 3 smart contract namely rwd reward token rwd airdropped staking address tether mock tether stablecoin musdt used staking trigger functionality decentralbank decentralbank serf decentralized bank token initially transfered use upgraded logic handle operation total supply rwd musdt 1m token located decentralbank address live project deployed dapp viewed http defi staking vercel app video preview http youtu k7vmh 2dwim usage need metamask http metamask io installed make sure connected one following network mumbai http mumbai polygonscan com rinkeby http www rinkeby io stats stardust http stardust explorer metis io meter http scan warringstakes meter io add network would personally recommend read page chainlist http chainlist org succesfully connect mint free musdt stake airdrop occur every 1 min amount reward token rwd airdropped equal one fifth amount musdt staked rwd musdt 5 patiently wait transaction feel free interact blockchain way want important note prevent crashing staked musdt amount le 60 app serf demonstration yield farming proceed metamask report error huge gas cost mean something wrong always wait transaction finish moving new one ' want block wallet refresh page successful transaction frontend updated automatically developer doc 1 please install installed following nodejs http nodejs org en download npm http www npmjs com package npm 2 install truffle http trufflesuite com doc truffle getting started installation ' already learn http trufflesuite com 3 download install ganache http trufflesuite com doc ganache quickstart 4 clone repo git clone http github com defi staking 5 install project package npm install 6 start project npm start open http localhost 3000 http localhost 3000 browser see result test truffle suite ideal testing smart contract subfoloder test contains custom test wrote name contract match deployment decentralbank sent token initial migration decentralbank functionality working properly img src public defi tests1 png alt alt test title test deployment smart contract deployed following test network mumbai decentralbank smart contract address http mumbai polygonscan com address 0xeea9de7d00fd7080d67074e57f233151532578ad rwd token smart contract address http mumbai polygonscan com address 0x253650822be3bea0e210765200514d24a4e265c9 tether token smart contract address http mumbai polygonscan com address 0xc0a59dd1b11527069411d22b1dc6ca0204f095ec metis stardust decentralbank smart contract address http stardust explorer metis io address 0xeea9de7d00fd7080d67074e57f233151532578ad transaction rwd token smart contract address http stardust explorer metis io token 0x253650822be3bea0e210765200514d24a4e265c9 token transfer tether token smart contract address http stardust explorer metis io token 0xc0a59dd1b11527069411d22b1dc6ca0204f095ec token transfer rinkeby decentralbank smart contract address http rinkeby etherscan io address 0x17836fe1234460221167ce4df2390996ae5e5dd4 rwd token smart contract address http rinkeby etherscan io address 0xb44c0447b54ee3152b61d366cfe28f35f61032fa tether token smart contract address http rinkeby etherscan io address 0xf5f6b924332c350e3fcd3a50fc94db822f0b760f meter decentralbank creation smart contract transaction http scan warringstakes meter io tx 0x1529d8723ad483092514571f7552e5ecb2bdf2ee54560cbdf3658928d285c051 rwd token smart contract address http scan warringstakes meter io address 0x2491962cfad605acaf55dd114b905556a6888d53 tether token smart contract address http scan warringstakes meter io address 0x7e1e5edf904a5a1f901ecef902a8510b60d0c872 img src public defi deploy png alt alt deploy title deploy future idea currently lot idead implemented transition dapp exist inside dao native environment render different apps unique network add claim rwd token button functionality provide option unstaking specific amount token instead allow bigger amount token staked order stakers earn juicy reward add color theme switcher stack used react j bootstrap metamask solidity truffle ganache vercel web3 git license project licensed mit license license
/stakeall/stakeall.finance,JavaScript,stakeall finance stakeall finance aim provide single platform easily managing delegation po protocol leveraging integration various defi protocol user use platform borrow lending protocol like aave compound swap token decentralised exchange like 1inch uniswap stake po protocol single transaction earning passive income feature available one click save significant gas cost time user use case supported 1 wallet creation platform allows user create chain wallet manage fund 2 staking using wallet feature user use fund available various wallet delegate po protocol 3 swap stake allows user swap fund best rate currency required po protocol stake save significant gas cost time done single transaction 4 borrow stake feature allows user use fund collateral borrow lending protocol swap best exchange rate desired currency stake po protocol platform enables user compare interest rate swap amount across various asset save significant gas cost time done single transaction hackathon integrated mentioned protocol project 1 aave v2 used aave v2 protocol depositing user fund collateral borrow asset staking 2 1inch exchange used 1inch exchange contract swap asset desired staking currency 3 graph protocol smart contract integrated graph protocol smart contract enable delegation indexer 4 matic network smart contract integrated polygon matic network smart contract enable delegation validators 5 covalent api used covalent api fetch latest cryptocurrency price balance account apart integration smart contract written solidity language using hardhat forking mainnet testing purpose front end written next j step run 1 replace mainnet infura api infura mainnet endpoint hardhat config j project fork mainnet using hardhat also replace private key 2 start local hardhat forked node running npm run start mainnet fork 3 deploy contract forked node running command npm run deploy fork running npm run deploy memory fork 4 go app folder type command yarn dev start application http localhost 3000 contract 1 graphprotocol facilitates user delegation indexer 2 maticprotcol help stake matic validators 3 1inch allows swap token using 1inch exchange 4 connectv2aavev2 allows user deposit borrow asset aave v2 protocol 5 bitstakeregistry create user wallet already created manages module user interact
/tripplyons/prooftrade,JavaScript,prooftrade low cost orderbook based decentralized exchange ethereum doe mean low cost take 1 transaction excluding token approval orderbook based user offer different price buy sell decentralized trust needed anyone exchange user trade different cryptocurrencies ethereum evm compatible blockchain capable running prooftrade advantage doe offer compared amms automated market maker feature prooftrade uniswapv3 uniswapv2 freely licensed yes yes zero slippage yes zero lp fee almost need approval allows limit order yes yes gas needed per trade 137 203 129 830 105 657 framework used smart contract solidity v0 6 12 http doc soliditylang org en v0 6 12 smart contract written solidity hardhat http hardhat org test deployment web interface http prooftrade vercel app frontend using contract next j http nextjs org web framework mui http mui com style component use ether modal http github com tripplyons use ether modal ether j provider made ether j http doc ether io v5 interacts blockchain web3modal http github com web3modal web3modal interface connecting provider code structure main contract single trading pair contract orderfiller sol example usage 1 person ha 3000 usdc person b ha 1 weth 2 outside blockchain agree trade 3000 usdc 1weth 3 person sign message authorizing person b make specific trade done chain 4 person sends signature person b also done chain 5 person b us signature execute trade chain 6 orderfiller contract verifies signature person b ' transaction 7 trade completed example usdc would considered token0 weth would token1 terminology make sense weth thought term usdc buying trading usdc weth selling trading weth usdc person b would execute sell function since trading token1 token0 usage run npm run test npx hardhat test run test orderfiller contract deployed standalone contract given pair token disclaimer project still development ha trade offs consider see ha received audit thing consider liquidity provider prevent trade occurring transfering token different account ' unsure want possible good liquidity provider cancel order ' like anymore bad spoof order waste people ' time gas resource used http solidity example org signature http solidity example org signature
/givechain/gyvchaincore,CSS,gyvchaincore project creating blockchain solution charity related crowdfunding effort project idea around implementation originated discussion project team participating monash university bootcamp idea project took shape overview charity gyving blockchain cryptocurrency solution transparent low cost instant charity peter eng ig novel peace prize nominee 2021 gyv chain platform provides layer 2 erc 20 ethereum based blockchain solution donor directly share fund across internet selected charity participant completely transparent timely economical way reducing cost typical charity middleman admin management marketing providing gyv chain donor reward engaging platform 48 000 charity australia 20 large 65 small receive le 250 000 per annum half le 50 000 key challenge charity include high level cost administration marketing customer support operational supply chain finance banking regulatory lobbying cost reduce percentage fund make frontline charity needed addition many charity struggle seen heard sea good intention smaller one could argue effective charity tend struggle making cost bit internal info transparent available donor without donor goodwill ultimately fund continue good work compromised enter blockchain technology lends type industry type information make difference made available transparently blockchain see platform gvy chain designed address charitable challenge providing instant transparent low cost vehicle transfer fund immediately directly donor frontline charity recipient best allows charity move web page presence web3 interactivity providing new arguably future proof channel fund raising donor give make feel good however sometimes reticent give sure hard earned money spent donor gyv chain provides opportunity connect charity particularly small frontline charity directly fund chosen cause without concerned hard earned cash end furthermore rewarded win win concept gyv chain early representation potential capacity blockchain smart contract support real world ritsy ditsy ivory tower one particular maintain transparency veracity charitable activity ' passionate think anyone would hard pressed see ' future charitable gyving instruction little point prep firing home page actually donating site download project github select download zip pressing code button open zip file sure unzip file ensure page load correctly using vscode liveserver plugin python ' webserver another option right click frontend gyvweb1 1 index html select open live server oops image available image gyv chain 7 png vscode selection metamask prepare donation setting metamask secure wallet easy use metamask ha great starter article http metamask zendesk com hc en u article 360015489531 getting started metamask add ethereum wallet note need done kovan testnet using known faucet k tap really good faucet found http faucet chain link kovan learn great thing kovan team http kovan testnet github io website uniswap order donate one would need go uniswap http app uniswap org swap make sure metamask connected kovan test network ensure eth shown upper swap dialogue box oops image available image gyv chain 6 png uniswap prep order swap eth gyv use drop lower swap dialogue box copy following address 0x96f407d2dfd6b185d120e6d89171c9146721df00 paste lower swap dialogue box search name paste address select token gyv token appear list add swappable token list completed one time set step need token ha added wallet swap ethereum ' added wallet gyv oops image available image gyv chain 4 png gyv chain frontend return metamask wallet add gyv asset ' position donate open uniswap immediately swap eth gyv follows need know frontend donating cause frontend laboured many hour downing many cup coffee losing many coin swear jar literally end got built site website template added bit piece needed accomplish vision metamask integration ethereum testnet test wallet backend came together make work little bit site tool used follows home page landing page site briefly lay ' one descends page explained revealed touching tokenomics roadmap selected highlighted mock charity campaign one donate course number link button directing user donor gyv page one one ha come site donate across top page one select different aspect mentioned including access whitepaper oops image available image gyv chain 1 png gyv chain frontend gyv page important page place one donate page responsible coffee drunk coin lost connect button magic happens calling various bit javascript allow interaction metamask integration moralis blockchain kovan testnet case finally call smart contract processing donation see next section example oops image available image gyv chain 2 png gyv chain frontend metamask ha connected page order interact contract complete donation charity donation sent must selected highlighted home page charity project 3 fictitious charity example charity selected donate gyv button clicked finalise donation metamask prompt confirm gas fee gyving complete oops image available image gyv chain 5 png selecting campaign contract contract wa deployed kovan viewable anyone planet kovan specific etherscan address http kovan etherscan io address 0x96f407d2dfd6b185d120e6d89171c9146721df00 along viewing contract every transaction interaction donation setting campaign etc also viewed contract address minting gyv wa simulated upon deployment initial supply wa gyv400 000 000 see whitepaper distributed account hold various allocation fund see http kovan etherscan io tx 0x4c16fb28a22df9dbca40fc2d7dd5649e2fdc5784062740b5a5752589ac686f48 transaction kovan ' etherscan breakdown whitepaper project around blockchain platform whether real side project whitepaper view extremely important number reason allows reader understand logic project platform vision project trying solve clearly explains tokenomics integral smart contract without getting bogged detail highlight next step roadmap platform project current version whitepaper always review available frontend gyvweb1 1 resource gyvchain whitepaper v1 1 pdf ' issue accessing relative path frontend gyvweb1 1 resource gyvchain whitepaper v1 1 pdf tool used remix solidity remix ide allows developing deploying administering smart contract ethereum like blockchains including ability deploy rpc network locally using ganache testnet kovan reference document ropsten binance smartchain moralis moralis provides managed backend blockchain project automatically syncing balance user database allowing set chain alert watch smart contract event build index much feature accessed easy use sdk directly using library plugging good ol ' javascript oops image available image gyv chain 3 png moralis admin console brownie brownie python based development testing framework smart contract targeting ethereum virtual machine allows one programmatically automatically compile deploy test smart contract compatible ethereum testnets already mentioned oops image available image brownie config png brownie config example openzeppelin part contract creation used openzeppelin ' standardised contract library allowed u think logic worry writing additional protection utility used erc20 token standard available github http github com openzeppelin openzeppelin contract blob release v3 4 contract token erc20 erc20 sol used entrancy guard utility token standard also available github http github com openzeppelin openzeppelin contract blob release v3 4 contract utils reentrancyguard sol nicepage website used nicepage learn http nicepage site create initial template wanted injected team ' goodness including whitepaper javascript interaction page moralis metamask conclusion challenge despite tight time constraint project full time employment limited testing ico simulation yet wa done wa successful testing campaign creation campaign approval donation concluding campaign transferring fund charity address wa limited pesky ime constraint go without saying testing wanted large amount eth gyv wa possible particularly low supply eth note able successfully create uniswap liquidity pool uniswap v3 swap eth gyv mentioned due shortage gyv low liquidity able go wild limited testing hundred address hundred thousand heck million gyv next lot development work yet required frontend html cs backend javascript mongodb integration required feature want add side equation e g donor charity contract need work finalise tokenomics iron kink well make secure inject best practice limited creation dao concluding thought particular project wa pretty rewarding team wide conclusion setting blockchain project seems first glance fairly daunting ha varying passion team ha differing area life contributed well final result end able together ha superb team short intro team involved little project ' group varying interest career specifically fintech related entire team technically astute said team came together contributed none le andrew neo brian n uxer patrick k socialite pete e pm sid contract mad hatter acknowledgement reference remix ha used ide little project ganache ha also used help testing chain brownie ha used ease contract testing deployment made use chainlink faucet eth used find http faucet chain link kovan chain testing used kovan testnet http kovan testnet github io website learn openzeppelin standard safety provide http doc openzeppelin com specifically relating erc 20 http doc openzeppelin com contract 2 x crowdsales ethereum foundation need acknowledged general work creation specific blockchain allowing ecosystem blossom currently ha thanks trinity college organisation ha provided training turn ha allowed creation project part monash university bootcamp
/growdeficapital/growdefi,Solidity,http growdefi capital feel free read code detail coming soon
/xBacked-DAO/reach-safe-math,Shell,reach safe math module built reach framework http reach sh heavily inspired work openzepplin ha done safemath sol util http github com openzeppelin openzeppelin contract blob master contract utils math safemath sol usage reach documentation http doc reach sh ref program module html 28part ref program import package 29 import safemath ' xbacked dao reach safe math ' alternatively import trydiv ' xbacked dao reach safe math ' install package compilation work use install pkgs flag like reach compile program rsh install pkgs warning note doe compile program run reach compile program rsh install add reach gitignore file
/Devzstudio/Web3UIKit,TypeScript,web3 ui kit opensource web3 ui component using reactjs styled component live demo http web3uikit vercel app
/indradhar/DeFi-Insurance,JavaScript,defi insurance blockchain project decentralized finance based insurance
/growdeficapital/growdefi,Solidity,http growdefi capital feel free read code detail coming soon
/xBacked-DAO/reach-safe-math,Shell,reach safe math module built reach framework http reach sh heavily inspired work openzepplin ha done safemath sol util http github com openzeppelin openzeppelin contract blob master contract utils math safemath sol usage reach documentation http doc reach sh ref program module html 28part ref program import package 29 import safemath ' xbacked dao reach safe math ' alternatively import trydiv ' xbacked dao reach safe math ' install package compilation work use install pkgs flag like reach compile program rsh install pkgs warning note doe compile program run reach compile program rsh install add reach gitignore file
/Devzstudio/Web3UIKit,TypeScript,web3 ui kit opensource web3 ui component using reactjs styled component live demo http web3uikit vercel app
/PigletzNFT/pigletz-contracts,Solidity,pigletz com http pigletz com asset image pigletz logo svg http pigletz com first nft materializes p align center img height 100 src http pigletz com asset image header nft button svg img height 100 src http pigletz com asset image header game button svg img height 100 src http pigletz com asset image header defi button svg img height 100 src http pigletz com asset image header token button svg img height 100 src http pigletz com asset image header 3d print button svg p ' nft p align center img width 400 src http pigletz com asset image header piglet 4 level 3 webp img width 400 src http pigletz com asset image header piglet 2 level 3 webp img width 400 src http pigletz com asset image header piglet 3 level 3 webp p 12 345 unique limited edition piglet provable random characteristic various rarity 100 hand crafted 3d model total 2 billion combination possible randomly minted purchase characteristic get revealed piglet grows additional 5 celebrity ntf ' going charity tokenomics p align center img width 300 src http pigletz com asset image tokenomics step 1 png img width 300 src http pigletz com asset image tokenomics step 2 webp img width 300 src http pigletz com asset image tokenomics step 3 webp p piglet start mining pifi token day buy deposit token piglet way deposit coin piggy bank break piglet access deposited token plus mined pifi token p align center img src http pigletz com asset image tokenomics diagram webp p gamification p align center img src http pigletz com asset image gamification illustration svg p level reveal piglet trait improve base mining rate collect apply booster increase token production speed even monitor manage pigletz convenient dapp booster p align center img src http pigletz com asset image booster svg p booster increase pifi token mining speed piglet 9 total defi lock piglet specific time order accelerate mining process p align left img src http pigletz com asset image defi piglet staking svg p piglet staking lock piglet faster mining p align left img src http pigletz com asset image defi lending svg p lending get pifi credit line pawning piglet materialization use pifi token purchase 3d print nft represents real world order 3d printed piggy bank nft locked smart contract physical object ha unlock code inside break piglet get hold cipher ensures item function one reality given point time always retaining nft characteristic furthermore material state piglet considered last level 4 ha highest base mining rate p align center img src http pigletz com asset image physical object illustration webp p roadmap idea wa born beginning 2021 team wa formed started working q2 2021 conceptualizing modelling trait pigletz q3 2021 development smart contract dapps q4 2021 launch chain december 2021 first pre sale december 18 2021 launch listing binance nft december 2021 january 2022 creat pifi liquidity pool pancakeswap sale first 3d print delivered q1 2022 defi staking released q2 2022 defi lending released q2 2022 mobile game released q3 2022 pigletz live binance smart chain contract &#9; address &#9; &#9; &#9; pigletz &#9; 0xbf84076b06a100d38ce562733098edc0eda4d7f7 &#9; salesmanager &#9; 0x239abccaa52b507cff81c5b73332315ad0df3fce &#9; oracle &#9; 0x3780567c16275887340d90ff4747366a51edbf0d &#9; pifi &#9; 0xf7405eff16ff7e96898b6b40497a54894fc86c44 &#9; pigletzmysterybox &#9; 0x0885070bd8ccc9ffb4a656d4eaecc6c110662566 &#9; router &#9; 0x10ed43c718714eb63d5aa57b78b54704e256024e &#9; follow u info pre sale sale date discount follow u twitter http mobile twitter com pigletz pifi join discord server http discord gg ffcbey7h5b join telegram channel http ruhvqv4mqymze8 youtube channel http www youtube com channel uc8vo0geqpzw0ondqmhy3jcg 2021 2022 pigletz
/roobee-platform/Bsc_Farm,HTML,roobeefarm frontend run run yarn run yarn start yarn start run app development mode br open http localhost 5000 http localhost 5000 view browser page reload make edits br also see lint error console yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed yarn clean remove build directory stats json file yarn compile yarn build without first removing build directory stats json file rimraf related error delete build directory run manually
/hydrogen-dev/molecule-quickstart-app,JavaScript,molecule quickstart app demo react app demonstrates send receive cryptocurrency payment using hydrogen molecule api please visit molecule quickstart guide http www hydrogenplatform com doc molecule quickstart full tutorial molecule including code snippet used app feature create account login application hydrogen managed oauth 2 0 credential send cryptocurrency user access blockchain wallet username email address view transaction etherscan block explorer installation 1 clone repo computer update config configglobal hydrogen api key access molecule api 2 npm 3 npm run start 4 must disable cors browser app run google chrome user linux command google chrome disable web security osx open terminal type open google chrome args disable web security user data dir 5 visit localhost 3000
/sirenmarkets/SIPs,HTML,siren improvement proposal sip siren improvement proposal sip describe standard siren protocol including core protocol specification client apis contract standard browsable version current draft sip found official sip site http sip sirenmarkets com contributing 1 review sip 1 sip sip 1 md 2 fork repository clicking fork top right 3 start new thread proposal gov sirenmarkets com http gov sirenmarkets com 4 add sip fork repository template sip sip template md sure link discussion thread created step 3 5 submit pull request siren ' sip repository http github com sirenmarkets sip first pr first draft final sip must meet formatting criterion enforced build largely correct metadata header editor manually review first pr new sip assign number merging make sure include discussion header url discussion forum open github issue people discus sip whole sip requires image image file included subdirectory asset folder sip follows asset sip n n replaced sip number linking image sip use relative link asset sip 1 image png sip status wip sip still developed proposed sip ready reviewed governance call approved sip ha accepted implementation siren community implemented sip ha released mainnet rejected sip ha rejected preferred citation format canonical url sip ha achieved draft status point http sip sirenmarkets com example canonical url sip 1 http sip sirenmarkets com sip sip 1 local development prerequisite 1 open terminal 2 check whether ruby 2 1 0 higher installed sh ruby version 3 ' ruby installed install ruby 2 1 0 higher 4 install bundler sh gem install bundler 5 install dependency sh bundle install build local jekyll site 1 bundle asset start server sh bundle exec jekyll serve 2 preview local jekyll site web browser http localhost 4000 information jekyll github page http help github com en enterprise 2 14 user article setting github page site locally jekyll
/phanlancer/keykey-ui,JavaScript,keykey keykey ui keykey smart contract http github com phanlancer keykey contract git project built react j available script project directory run yarn install package yarn start run app development mode open http localhost 3000 http localhost 3000 view browser yarn test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information yarn build build app production build folder correctly bundle react production mode optimizes build best performance yarn lint check linting error javascript file j jsx attribution much codebase modified existing work including compound http compound finance jumping point token code governance ampleforth http ampleforth org initial rebasing mechanism modified better suit yam protocol synthetix http synthetix io reward staking contract yearn http yearn finance yfi http ygov finance initial fair distribution implementation
/EthereansOS/WIMD-Core,Solidity,dragon first card game based href http medium com dfohub unimergency done ethitem arriving dragon dfohub weekly oct 17 e51c82370cac item link b rule info b http ethos eth link wimd html wimd website http whereismydragon eth link wimd card farming http whereismydragon eth link toggle farming wimd opensea collection http opensea io asset dragon wimd card smart contract http etherscan io address 0xb6ab68a44ecc9fb2244aab83eb2f6dba54205ebf wimd crafting game smart contract http etherscan io address 0x87ad9009c4fd0aaa7bfe74f7e00845b3f09ad0ce wimd dragon trasury smart contract http etherscan io address 0x32c87193c2cc9961f2283fca3ca11a483d8e426b good luck hunting
/jet-lab/jet-app,TypeScript,div align center img height 170 src http github com jet lab jet app raw master public img jet jet logomark gradient png h1 jet protocol h1 p strong jet app strong p p img alt build status src http github com jet lab jet app action workflow lint yaml badge svg href http discord com channel 880316176612343891 img alt discord chat src http img shield io discord 833805114602291200 color blueviolet href http opensource org license agpl 3 0 img alt license src http img shield io github license jet lab jet v1 color blue p h4 href http jetprotocol io website h4 div note jet protocol active development apis behaviour subject change experimental unaudited software use risk
/merofinance/protocol,Python,mero protocol official repository mero protocol http mero finance contract addition code check official mero documentation http doc mero finance well mero developer documentation http developer mero finance list deployed contract http developer mero finance deployed contract html test suite test repository built pytest http doc pytest org en 6 2 x used brownie http eth brownie readthedocs io en stable toctree html test suite relies following package eth brownie http github com eth brownie brownie testing framework solidity vyper code written python using pytest brownie token tester http github com iamdefinitelyahuman brownie token tester custom mint logic erc20 token mainnet fork mode getting started get started using repository install requirement presumably virtual enviroment pip install r requirement txt run full test suite run brownie test detailed overview mero protocol tested please read test suite documentation test readme md compile contract run brownie compile detailed overview use brownie please check official doc http eth brownie readthedocs io en stable toctree html repository structure mero contract located within contract contract directory test located within test test directory different liquidity pool exist specified test directory test configs environment variable required environment variable need set running test suite listed env example note etherscan token environment variable may need specified running test mainnet fork mode etherscan used fetch latest contract data api request limit may reached
/dFohlen/GeoNFT,TypeScript,contributor shield http img shield io github contributor dfohlen geonft svg style badge contributor url http github com dfohlen geonft graph contributor fork shield http img shield io github fork dfohlen geonft svg style badge fork url http github com dfohlen geonft network member star shield http img shield io github star dfohlen geonft svg style badge star url http github com dfohlen geonft stargazer issue shield http img shield io github issue dfohlen geonft svg style badge issue url http github com dfohlen geonft issue license shield http img shield io github license dfohlen geonft svg style badge license url http github com dfohlen geonft blob master license txt linkedin shield http img shield io badge linkedin black svg style badge logo linkedin colorb 555 linkedin url http linkedin com volker dufner contributor contributor shield contributor url fork fork shield fork url stargazer star shield star url issue issue shield issue url mit license license shield license url linkedin linkedin shield linkedin url br div align center href http solana com summercamp img src http solana com next static medium logo aadda478 svg alt logo width 500 h3 align center href http explorer solana com cluster devnet solana devent h3 p align center decentralized nft geocaching application br href http youtu tq3ajt4auxu view demo href http github com dfohlen geonft issue report bug href http github com dfohlen geonft issue request feature p div geonft img src http user image githubusercontent com 28490587 184869199 e7e38ec0 6954 424d 9874 9a09c5b55459 svg width 250 general info project designed implemented volker dufner http github com dfohlen tim schmitz http github com tim565 part solana summer hackathon http solana com summercamp geocaching geocaching outdoor recreational activity participant use global positioning system gps receiver mobile device navigational technique hide seek container called geocaches cache specific location marked coordinate world typical cache small waterproof container containing logbook sometimes pen pencil geocacher sign log established code name date order prove found cache signing log cache must placed back exactly person found larger container plastic storage container tupperware similar ammunition box also contain item trading toy trinket usually sentimental worth financial geocaching share many aspect benchmarking trigpointing orienteering treasure hunting letterboxing waymarking concept behind nft geocaching concept behind nft geocaching mobile app community drop non fungible token nft specific location choice finder pick creates incentive get outside look potentially valuable nfts geocaching offer something everyone family child retiree geocachers play game see many total find get others play see many new state country visit geocaching great way find remarkable destination would otherwise discovered also excellent education tool excuse get couch since hackathon hosted solana http solana com also use corresponding solana blockchain newly developed solana mobile stack http solana com de news solana mobile stack reveal happy hunting demo flow 1 connect solana compatible wallet choice e g phantom 2 nft holder go location choice would like place nft 3 nft location coordinate sent holder wallet smart contract coordinate additionally encrypted prevent misuse theft nfts 4 searcher use app see nearest nfts make way 5 first person find nft get opportunity take transferred smart contract finder wallet create geocache token created geocaches navigate geocache catch geocache token img src http user image githubusercontent com 28490587 185748465 1e4ed98c c617 4e12 91a0 99229ab6f764 png alt create geocache img src http user image githubusercontent com 28490587 185748470 d1070f70 0377 4f84 9401 b8cb27491802 png alt created geocaches img src http user image githubusercontent com 28490587 185748467 786b0064 fcd2 4328 b89d 1bed236c6016 png alt navigate geocache img src http user image githubusercontent com 28490587 185748462 c3def58b 935e 40b1 88b9 c80383190a0b png alt catch geocache problem ran first major challenge general never worked solana rust react native course embraced started researching best practice creating deploying smart contract solana quickly came across anchor familiarized anchor book basic solana contract transfer nft contract back seems trivial first finished basic contract setting geolocation geocache asked transfer associated nft contract example something like significantly le common point found solution called program derived address pda security aspect nfts smart contract taken everyone claim coordinate nft wa stored practice hacker could call function without playing along rule steal nfts solve problem plan put key application stored chain hash make sure user application extract nfts limitation new mobile wallet adapter contract wa deployed wanted start app quickly encountered limitation caused new mobile wallet adapter among thing android io currently supported also need fake wallet also android sign transaction also example use anchor contract asked developer told everything still development test decided implement react app progressive web app pwa mobile device wallet connect pwa started implementation everything worked browser level without major incident tested app smartphone could link wallet even though phantom app wa also installed github search found deep link http phantom app blog introducing phantom deeplinks wallet yet supported solana wallet adapter would therefore work app phantom browser course tested ended ssl requirement also built solution came next problem geolocation phantom wallet browser linked wallet tried create new geocache could determine current geolocation smartphone phatom ' internal browser doe support feature faced decision create web application course impractical geocaching switch back react native version switch back react native currently mobile wallet adapter ha still limited functionality using app google chrome wallet extension offer best user experience future plan switch back react native make game playable mobile device solana wallet integration gps functionality integration map google map needed proper integration app mobile device whats next since hackathon coming end far reached goal idea would like record planned feature course native app one many sustainability sustainability aspect doe stop blockchain mobile game want follow basic idea solana encourage people use le energy focus sustainable solution help app want bring people back nature regain lost appreciation geonft allows user place valuable difficult inaccessible place vehicle disadvantageous walking cycling mean choice bonus program time limited challenge could provide additional incentive ranking ranking system want able guarantee participant long lasting fun example additional geonft could issued geocache collected thus creating global ranking list landmark permanent geocaches also planned certain point interest user reach point give opportunity mint nft location thereby receive proof presence e g summit cross mount everest business plan founder volker dufner http github com dfohlen based stuttgart blockchain developer tim schmitz http github com tim565 based frankfurt blockchain developer contract volker dufner dufnervolker gmail com start project geonft outdoor activity game participant use global positioning system gps hunt non fungible token nfts around world unique selling point far established competitor functionality however matter time geonft need stay tuned development possibly also consider cross chain solution reach mass first app continue built solana term ui ux enables good gaming experience planned feature think create versatile solution also used countless sport activity financial concept geonft appear non profit organization ' want make money sustainability environmental aspect much important u project course development cost covered depend donation investor addition hoped hackathon prize extreme case small fee transferring nfts would conceivable however would like consciously avoid placing advertising app chance risk chance possible success even hype good consider traditional geocaching used year number active cache million take look pokemon go wa released year ago based similar game principle even reach 166 million possible player technology solana blockchain solana blockchain one famous smart contract platform fast growing user base leading ledger create trade nfts solana seen large competition ethereum smart contract smart contract solana called ' program ' usually written rust programming language mobile app solana announced develop saga android phone special feature integrate cryptocurrencies decentralized apps mobile device aditionally sdk integrate solana classical android application unfortunately game currently available web application ongoing development mobile wallet adapter sdk getting started project structure project structure see following file folder package yarn workspace new way set package architecture allows setup multiple package way need run yarn install install single pas achnor anchor framework solana ' sealevel runtime providing several convenient developer tool writing smart contract program directory solana program smart contract test javascript test code life migration deploy script react app web frontend going built react native app mobile frontend going built preparation rust go http www rust lang org tool install install rust solana go http doc solana com cli install solana cli tool install solana run solana keygen new create keypair default location anchor us keypair run program test switch solana devnet running solana config set devnet fund wallet solana airdrop 2 http solfaucet com yarn go http yarnpkg com getting started install install yarn anchor installing using anchor version manager avm recommended anchor version manager tool using multiple version anchor cli require dependency building source recommended uninstall npm package installed install avm using cargo note replace anchor binary one installed cargo install git http github com project serum anchor avm locked force linux system may need install additional dependency cargo install fails e g ubuntu sudo apt get update sudo apt get upgrade sudo apt get install pkg config build essential libudev dev install latest version cli using avm set version use avm install latest avm use latest verify installation anchor version nft create nft place around world via http app strataprotocol com launchpad create build run 1 run yarn install install related dependency 2 go package anchor folder run anchor build build smart contract 3 run anchor deploy network deploy smart contract solana blockchain 4 go package react app folder run yarn start start development server serve app http localhost 3000 b using docker whale docker build geonft react app f package react app dockerfile copyright volker dufner http github com dfohlen 2022
/byteball/discount-stablecoin-ui,JavaScript,discount stablecoins install install node j clone repository say sh npm install env copy appropriate env xxxx file env run sh npm run start build sh npm run build
/ZinFinance/Zin,CSS,zin migration add migration initial c appdbcontext update database c appdbcontext
/Layer2Labs/Jet-USDJJ,Rust,jet usdjj image http user image githubusercontent com 83122757 156852564 6c6d9db8 5cf1 4f79 b592 b12570ba9f4c png jet algorithm stablecoin lightning network use case lending borrow collateral use output input build stablecoin use case collateral lending borrow buy sell bitcoin decentralized dex rgb network running node rgb source http github com rgb wg rgb node coming soon available rgb network
/blockchaingate/ecombar,HTML,ecombar project wa generated angular cli http github com angular angular cli version 10 0 0 development server run ng serve dev server navigate http localhost 4200 app automatically reload change source file code scaffolding run ng generate component component name generate new component also use ng generate directive pipe service class guard interface enum module build run ng build build project build artifact stored dist directory use prod flag production build running unit test run ng test execute unit test via karma http karma runner github io running end end test run ng e2e execute end end test via protractor http www protractortest org help get help angular cli use ng help go check angular cli readme http github com angular angular cli blob master readme md
/complusnetwork/complus-sdk-heco,TypeScript,complus sdk heco code style prettier http img shield io badge code style prettier ff69b4 svg style flat square http github com prettier prettier action status http github com complusnetwork complus sdk heco workflow ci badge svg http github com complusnetwork complus sdk heco npm version http img shield io npm v complus sdk heco latest svg http www npmjs com package complus sdk heco v latest npm bundle size scoped version http img shield io bundlephobia minzip complus sdk heco latest svg http bundlephobia com result p complus sdk heco latest huobi eco chain heco source code http github com huobigroup huobi eco chain heco explorer http scan hecochain com local development following assumes use node 10 install dependency yarn run build yarn build
/sntsabode/daisweb3.ts,TypeScript,h1 align center welcome daisweb3 h1 p href http www npmjs com package daisweb3 img src http badge fury io j daisweb3 svg alt npm version href target blank img alt license mit src http img shield io badge license mit brightgreen svg img alt maintenance src http img shield io badge maintained yes green svg href target blank img alt documentation src http img shield io badge documentation yes brightgreen href http github com prettier prettier target blank img alt prettier src http img shield io badge code style prettier ff69b4 svg style flat square href target blank img alt linux test src http github com sntsabode dais web3 j action workflow test linux yml badge svg p h2 align center dais web3 h1 dais web3 part suite node j typescript development tool command line tool writes necessary boilerplate interface defi ' popular platform truffle used ethereum development environment solidity smart contract language prerequisite use verions risk truffle 5 3 10 node 16 3 0 npm 7 15 1 yarn 1 22 10 required installation assuming node j installed machine install npm bash npm daisweb3 g recommend using yarn global install source bash git clone http github com sntsabode daisweb3 bash cd daisweb3 assuming tsc command available machine bash tsc bash npm g run test sh yarn run test running single test suite sh yarn run mocha r node register file timeout recommend 20 plan running yarn npm add test test coverage bash yarn run test coverage running run mocha test suite using istanbul ' nyc cli test complete test coverage index html file written coverage open file examine test suite ' test coverage usage sh mkdir dais demo project cd dais demo project daisweb3 option option p purge empty current directory init writes template daisconfig file assemble writes boilerplate yes run without asking question still ask purge offline run yarn npm add offline flag c confirm confirm command quick start sh daisweb3 paicy running daisweb3 command generate initial project structure install necessary dependency path marked question mark optional configured daisconfig file dais demo project contract interface protocol file library protocol file migration sol lib abis abis abis address migration 1 initial migration j node module eslintignore eslintrc gitattributes gitignore fork chain j package json truffle config j tsconfig json generated boilerplate minimal possible truffle project installation done boot fork chain get hacking quickwrite sh daisweb3 protocol pack abi false omitnpmpack false solver supported network c eg sh daisweb3 aave ilendingpool false omitnpmpack 0 8 6 mainnet c argument specified order args protocol supported protocol pack supported import entered protocol abi value false treated true false ' entered imported contract ' abis written lib abis abis directory directory daisweb3 command wa called omitnpmpack value false treated true false entered protocol ' npm package installed directory daisweb3 command wa called solver solidity version going entered contract file supported network supported network used determine contract address return philosophy eventually got tired scouring defi doc god forbid git repository find abis address made daisweb3 one place implemented protocol protocol id name support img src misc img aave png http bancor network aave aave img src http img shield io badge aave supported yellowgreen img src misc img bancor png http bancor network bancor bancor img src http img shield io badge bancor supported yellowgreen img src misc img dydx png http dydx exchange dydx dydx img src http img shield io badge dydx supported yellowgreen img src misc img knc png http kyber network kyber kyber kyber network img src http img shield io badge kyber supported yellowgreen img src misc img 1inch png http app 1inch io oneinch 1inch network img src http img shield io badge 1inch supported yellowgreen img src misc img uniswap v2 png http uniswap org uniswap uniswap img src http img shield io badge uniswap supported yellowgreen daisconfig template daisconfig file json solversion 0 8 6 defaultnet mainnet eslint true git true contractwritedir lib abis artifact ganache true mocha true packman yarn omittrufflehdwalletprovider false ethnodeurl w mainnet infura io w v3 infura url contractimports protocol uniswap pack v2router02 omitnpmpack true abi true protocol dydx pack flashloan omitnpmpack true abi false protocol kyber pack ikybernetworkproxy omitnpmpack true abi true protocol oneinch pack onesplit omitnpmpack true abi true protocol oneinch pack onesplitmulti omitnpmpack true abi true protocol bancor pack ibancornetwork omitnpmpack true abi true addeddependencies express addeddevdependencies type express field solversion solidity version used solidity verison going entered boilerplate contract solidity pragma solidity solversion defaultnet network used parameter influence address written lib address use print address mainnet supported test net typescript export type supportednetwork ' mainnet ' ' kovan ' ' ropsten ' ' ' eslint bool whether eslint configured true eslint dependency installed dev deps template eslintrc eslintignore file written root directory specified path git bool whether git configured true git init called template gitignore gitattributes file written directory specified path contractwritedir string directory going entered contract build directory truffle config j file javascript module export contract build directory contractwritedir ganache bool whether ganache cli added dev dep true ganache cli installed fork mainnet j file written root directory dais web3 command wa called snippet javascript const server ganache server port 7545 default balance ether 100 fork new web3 provider websocketprovider eth node url w true debug true vmerrorsonrpcresponse true verbose true logger console const port 7545 server listen port err blockchain mocha bool whether mocha chai installed dev deps packman yarn npm package manager going used install said dependency default yarn fallback npm yarn fails omittrufflehdwalletprovider bool whether truffle hdwallet provider omitted false truffle hdwallet provider installed truffle config j need redone ethnodeurl string string going printed env variable env file env variable variable used ganache ' fork chain wa enabled web3 ' websocket provider make sure ' ' w ' ' http ' ' http ' ' ' http ' ' http ' please make sure websocket connection enabled endpoint contractimports array icontractimport typescript export type supportedprotocol ' aave ' ' bancor ' ' dydx ' ' kyber ' ' oneinch ' ' uniswap ' export interface icontractimport readonly protocol supportedprotocol readonly pack string readonly omitnpmpack boolean readonly abi boolean h2 align center field h2 protocol defi protocol want interface pack specific import needed defi protocol omitnpmpack whether protocol ' npm package installed true protocol ' npm package installed production dependency abi whether contract ' abi included written boilerplate h1 align center em strong protocol em strong h1 h1 align center em strong aave strong em h2 logo support import img src misc img aave png img src http img shield io badge aave supported yellowgreen ilendingpooladdressesprovider ilendingpool aave decentralised non custodial liquidity protocol user participate depositor borrower depositor provide liquidity market earn passive income borrower able borrow collateralised perpetually collateralised one block liquidity fashion see aave ' doc http doc aave com developer br supported contract import br h3 align center em ilendingpool em h3 json protocol aave pack ilendingpool omitnpmpack true abi false writes ilendingpooladdressesprovider ilendingpool contract interface along datatypes library lendingpool contract main contract protocol expose user oriented action invoked using either solidity web3 library source code found github http github com aave protocol v2 blob ice mainnet deployment 03 12 2020 contract protocol lendingpool lendingpool sol need development support join developer channel aave community discord server http discord gg cjm5jt3 snippet solidity spdx license identifier license pragma solidity 0 6 12 pragma experimental abiencoderv2 import ilendingpooladdressesprovider ' ilendingpooladdressesprovider sol ' import datatypes ' library aave datatypes sol ' interface ilendingpool event flashloan address indexed target address indexed initiator address indexed asset uint256 amount uint256 premium uint16 referralcode event liquidationcall address indexed collateralasset address indexed debtasset address indexed user uint256 debttocover uint256 liquidatedcollateralamount address liquidator bool receiveatoken function liquidationcall address collateralasset address debtasset address user uint256 debttocover bool receiveatoken external function flashloan address receiveraddress address calldata asset uint256 calldata amount uint256 calldata mode address onbehalfof byte calldata params uint16 referralcode external br h3 align center em ilendingpooladdressesprovider em h3 json protocol aave pack ilendingpooladdressesprovider omitnpmpack true abi false writes ilendingpooladdressesprovider contract interface address register protocol particular market contract immutable address never change also see deployed contract http doc aave com developer deployed contract deployed contract section snippet solidity spdx license identifier license pragma solidity solver title lendingpooladdressesprovider contract dev main registry address part connected protocol including permissioned role acting also factory proxy admin right change implementation owned aave governance author aave interface ilendingpooladdressesprovider event marketidset string newmarketid event lendingpoolupdated address indexed newaddress function getlendingpool external view return address br h1 align center em strong bancor strong em h2 logo support import img src misc img bancor png img src http img shield io badge banor supported yellowgreen ibancornetwork many user benefit bancor network using bancor app bancor widget developer also access bancor ' many feature smart contract api reference http doc bancor network guide interfacing bancor contract section provides detailed look full functionality contract system section provide quick look common feature contain sufficient information use case br br supported contract import br br h3 align center em ibancornetwork em h3 json protocol bancor pack ibancornetwork omitnpmpack true abi true writes icontractregistry sol ibancornetwork sol file bancor ' main trading proxy contract interface trading bancor path network path sourcetoken totoken getpathandrate function bancor sdk http www npmjs com package bancor sdk generate optimal path parameter amount source token input amount minreturn token minimum return affiliateaccount address direct affiliate fee affiliatefee fee amount 1000 would equal 0 1 solidity spdx license identifier unlicensed pragma solidity 0 8 6 import openzeppelin ierc20 sol interface ibancornetwork function convertbypath address memory path uint256 amount uint256 minreturn address beneficiary address affiliateaccount uint256 affiliatefee external payable return uint256 function ratebypath address memory path uint256 amount external view return uint256 function conversionpath ierc20 sourcetoken ierc20 targettoken external view return address memory solidity spdx license identifier unlicensed pragma solidity 0 8 6 interface icontractregistry function addressof bytes32 contractname external return address h1 align center em strong dydx strong em h2 logo support import img src misc img dydx png img src http img shield io badge dydx supported yellowgreen flashloan supported contract import br br h3 align center em flashloan em h3 json protocol dydx pack flashloan omitnpmpack true abi false writes boilerplate contract needed perform flashloan dydx boilerplate adapted money lego ' dydx flash loan reference guide special thanks kollateral open sourcing implementation dydx doe natively flashloan feature however achieve similar behavior executing series operation solomargin contract order mimic aave flashloan dydx would need 1 borrow x amount token withdraw 2 call function e logic handle flashloaned fund call 3 deposit back x 2 wei amount token deposit within one transaction reason work dydx natively ha feature called operate allows execute series operation without checking state valid final step mean withdraw much fund like anything long deposit back fund 2 wei asset account within transaction flashloan option entered following starter contract written flashloan sol snippet solidity spdx license identifier unlicensed pragma solidity 0 8 6 pragma experimental abiencoderv2 import interface openzeppelin ierc20 sol import interface dydx isolomargin sol import interface dydx icallee sol import library dydx action sol import library dydx account sol contract flashloan icallee mapping address uint public dydxcurrencymarketids address immutable soloaddress constructor address isolomarginaddress address usdc address weth address dai address sai struct callfuncparam uint256 amount address currency function callfunction address sender account info calldata accountinfo byte calldata data external override callfuncparam memory data abi decode data callfuncparam function flashloan callfuncparam calldata param external action actionargs memory operation new action actionargs 3 solofac operate accountinfos operation function solofac external view return isolomargin solo return isolomargin soloaddress h1 align center em strong kyber strong em h2 logo support import img src misc img kyber network png img src http img shield io badge kyber supported yellowgreen ikybernetworkproxy supported contract import br br h3 align center em ikybernetworkproxy em h3 json protocol kyber pack ikybernetworkproxy omitnpmpack true abi true writes ikybernetworkproxy sol file kyber main proxy contract interface contract kybernetworkproxy ikybernetworkproxy http developer kyber network doc api abi ikybernetworkproxy isimplekyberproxy http developer kyber network doc api abi isimplekyberproxy withdrawablenomodifiers utils5 import withdrawablenomodifiers utils5 safeerc20 ikybernetwork http developer kyber network doc api abi ikybernetwork ikybernetworkproxy http developer kyber network doc api abi ikybernetworkproxy isimplekyberproxy http developer kyber network doc api abi isimplekyberproxy ikyberhint http developer kyber network doc api abi ikyberhint source kybernetworkproxy sol http github com kybernetwork smart contract blob master contract sol6 kybernetworkproxy sol solidity spdx license identifier unlicensed pragma solidity 0 8 6 import openzeppelin ierc20 sol interface ikybernetworkproxy event executetrade address indexed trader ierc20 src ierc20 dest address destaddress uint256 actualsrcamount uint256 actualdestamount address platformwallet uint256 platformfeebps notice backward compatible function tradewithhint erc20 src uint256 srcamount erc20 dest address payable destaddress uint256 maxdestamount uint256 minconversionrate address payable walletid byte calldata hint external payable return uint256 function tradewithhintandfee ierc20 src uint256 srcamount ierc20 dest address payable destaddress uint256 maxdestamount uint256 minconversionrate address payable platformwallet uint256 platformfeebps byte calldata hint external payable return uint256 destamount function trade ierc20 src uint256 srcamount ierc20 dest address payable destaddress uint256 maxdestamount uint256 minconversionrate address payable platformwallet external payable return uint256 notice backward compatible notice rate unit 10 18 destqty twei srcqty twei 10 18 function getexpectedrate erc20 src erc20 dest uint256 srcqty external view return uint256 expectedrate uint256 worstrate function getexpectedrateafterfee ierc20 src ierc20 dest uint256 srcqty uint256 platformfeebps byte calldata hint external view return uint256 expectedrate h1 align center em strong oneinch strong em h2 logo support import img src misc img 1inch2 png img src http img shield io badge oneinch supported yellowgreen onesplit onesplitmulti use service call method onesplitaudit http github com cryptomaniacszone 1inchprotocol blob master contract onesplitaudit sol misc img oneinch tut png use swap token figure way left right point one path scheme example first call method getexpectedreturn see method section return distribution array element array match element splitexchanges see represents fraction trading volume call getexpectedreturnwithgas take account gas splitting method return profitable distribution array exchange call method swap swapwithreferral see method section param distribution wa recieved earlier method getexpectedreturn swap may customized flag see flag section 2 type swap direct swap swap transitional token case direct swap element distribution array match element splitexchanges represents fraction trading token alerady described case swap transitional token element distribution 256 bit match 2 swap second byte equal swap transitional token lowest byte equal swap desired token br br supported contract import br br h3 align center em onesplit em h3 json protocol oneinch pack onesplit omitnpmpack true abi true writes ionesplit sol contract interface oneinch ' main trading interface token token see ionesplitmulti sol snippet solidity spdx license identifier unlicensed pragma solidity 0 8 6 import openzeppelin ierc20 sol interface ionesplit function getexpectedreturn ierc20 fromtoken ierc20 desttoken uint256 amount uint256 part uint256 flag see constant ionesplit sol external view return uint256 returnamount uint256 memory distribution function getexpectedreturnwithgas ierc20 fromtoken ierc20 desttoken uint256 amount uint256 part uint256 flag see constant ionesplit sol uint256 desttokenethpricetimesgasprice external view return uint256 returnamount uint256 estimategasamount uint256 memory distribution function swap ierc20 fromtoken ierc20 desttoken uint256 amount uint256 minreturn uint256 memory distribution uint256 flag external payable return uint256 returnamount br br h3 align center em onesplitmulti em h3 json protocol oneinch pack onesplitmulti omitnpmpack true abi true writes ionesplitmulti contract interface ionesplit contract interface ionesplit imported ionesplit contract written anyway solidity spdx license identifier unlicensed pragma solidity 0 8 6 import openzeppelin ierc20 sol import ionesplit sol interface ionesplitmulti ionesplit function getexpectedreturnwithgasmulti ierc20 memory token uint256 amount uint256 memory part uint256 memory flag uint256 memory desttokenethpricetimesgasprices external view return uint256 memory returnamounts uint256 estimategasamount uint256 memory distribution function swapmulti ierc20 memory token uint256 amount uint256 minreturn uint256 memory distribution uint256 memory flag external payable return uint256 returnamount br br h1 align center em strong uniswap strong em h2 logo support import img src misc img uniswap v2 png img src http img shield io badge uniswap supported yellowgreen v2router supported contract import br br h3 align center em v2router em h3 json protocol uniswap pack v2router omitnpmpack true abi true writes iuniswapv2router01 sol iuniswapv2router02 sol file uniswap ' main trading contract interface router stateless hold token balance replaced safely trustlessly necessary may happen efficient smart contract pattern discovered additional functionality desired reason router release number starting 01 currently recommended release 02 visit v2router02 http uniswap org doc v2 smart contract router02 snippet solidity spdx license identifier unlicensed pragma solidity 0 6 2 interface iuniswapv2router01 function factory external pure return address function weth external pure return address function addliquidity address tokena address tokenb uint256 amountadesired uint256 amountbdesired uint256 amountamin uint256 amountbmin address uint256 deadline external return uint256 amounta uint256 amountb uint256 liquidity function removeliquidity address tokena address tokenb uint256 liquidity uint256 amountamin uint256 amountbmin address uint256 deadline external return uint256 amounta uint256 amountb function swapexacttokensfortokens uint256 amountin uint256 amountoutmin address calldata path address uint256 deadline external return uint256 memory amount function swapexactethfortokens uint256 amountoutmin address calldata path address uint256 deadline external payable return uint256 memory amount function getamountsout uint256 amountin address calldata path external view return uint256 memory amount snippet solidity spdx license identifier unlicensed pragma solidity 0 6 2 import iuniswapv2router01 sol interface iuniswapv2router02 iuniswapv2router01 function removeliquidityethsupportingfeeontransfertokens address token uint256 liquidity uint256 amounttokenmin uint256 amountethmin address uint256 deadline external return uint256 amounteth function swapexacttokensfortokenssupportingfeeontransfertokens uint256 amountin uint256 amountoutmin address calldata path address uint256 deadline external br author sihle masebuku snts abode gmail com show support give project helped readme wa generated readme md generator http github com kefranabg readme md generator
/Layer2Labs/Index,Rust,index index token lightning network product token index backed bitcoin eth synthetic used future use case lending speculation borrow hold defi rgb network running node rgb source http github com layer2labs rgb node blob master readme md disclaimer product development ' security token
/tesla809/BuildersETH,HTML,web3cryptodev learn web3 development zero mastery goal create running series covering solidity thing web3 development result connect devs devs build community around building innovation mutual help see website web3cryptodev com http www web3cryptodev com mission easy use designed open source contribution people like community aim teach developer quickly learn apply web3 development skill focus matter focus matter explore real web3 developer day day go beyond hello world tutorial go deeper explore depth web3 combine theory real world example powered commmunity leverage collective knowledge strive make one small contribution sum greater whole ship ship ship ' let perfect enemy good shipping improving via iteration preferable analysis paralysis approach move fast break thing content written published quickly every weekday solicit community feedback issue http github com tesla809 builderseth pull request http github com tesla809 builderseth pull fix work perfect fact need heavy proof reading edited time build write publish edit public contribution wanted topic youd like contribute want learn feel free open issue http github com tesla809 builderseth issue want submit blog lesson lesson fix image logo submit pull request http github com tesla809 builderseth pull feedback appreciated 3 thing turn issue technical list move issue x add katex math equation x add solidity syntax highlighting x add typescript syntax highlighting x scaffoled basic item x add codesandbox sandpack add typescript sandpack add solc sandpack figure add assertion client x decide monaco codemirror 6 x codemirror win great assessment http blog replit com code editor x codemirror 6 add solidty language support http github com alincode codemirror solidity figure add xterm j wire input output xterm j connect xterm j code editor figure send instruction web3js ethersjs start dao solve p v np profit retire 3rd world country technical create project serve learning base maybe kek nfts like cryptopepes http cryptopepes lol add basic solidity step beginner add web3js etherjs step research see buidlguidl http buidlguidl com doe look html react http www npmjs com package html react help turning code mirror 6 react code read code mirror 6 doc http codemirror net doc manual html go thru sample tutorial http www raresportan com make code editor codemirror6 add newsletter via open source add metric see engagement research part make solidity part fun play need code editor possibly codemirror6 terminal possibly codemirror6 xterm node pty possibly runtime node ganache model interact local ethereum network browser investigate ethereumjs vm http www npmjs com package ethereumjs vm fork v 5 5 3 run ethereum vm inside browser remix ide package json http github com ethereum remix project blob master package json dumpster dive remix ide see evm working inside stand along browser node pty http www npmjs com package node pty allow nodejs interact xterm codemirror based terminal node pty xterm tutorial http www youtube com watch v vhdbbbmjwoy example ganache http trufflesuite github io ganache ganache online ide proof concept ganache http github com trufflesuite ganache blob develop doc asset j inject editor j injected editor used proof concept ganache node mirror http github com soliton4 nodemirror ide node community get fellow big brain get buidl boilerplate mumbo jumbo website built using docusaurus 2 http docusaurus io modern static website generator installation yarn local development yarn start command start local development server open browser window change reflected live without restart server build yarn build command generates static content build directory served using static content hosting service deployment using ssh use ssh true yarn deploy using ssh git user github username yarn deploy using github page hosting command convenient way build website push gh page branch
/ADAOTOP/adao-contracts,Solidity,adao contract get 60 extra astr bonus eternally get 30 extra astr treasury invest capital want whitelist contract contact u discord http discord gg uzwhacwp5h
/Messi-Q/DeFi-Protocol,Solidity,defi protocol
/BetSwirl/Smart-Contracts,Solidity,betswirl ' smart contract contract name source documentation code flow audit bet token source contract betstoken sol doc doc betstoken md graph graph betstoken svg rd auditor audit betswirl token smart contract security report 03 03 22 pdf bank v3 source contract bank bank sol doc doc bank md graph graph bank svg quillhash http github com quillhash quillaudit report blob master betswirlsmart 20contract 20audit 20report 20 20quillaudits pdf dice v4 source contract game dice sol doc doc dice md graph graph dice svg quillhash http github com quillhash quillaudit report blob master betswirlsmart 20contract 20audit 20report 20 20quillaudits pdf cointoss v4 source contract game cointoss sol doc doc cointoss md graph graph cointoss svg quillhash http github com quillhash quillaudit report blob master betswirlsmart 20contract 20audit 20report 20 20quillaudits pdf roulette v2 source contract game roulette sol doc doc roulette md graph graph roulette svg quillhash http github com quillhash quillaudit report blob master betswirlsmart 20contract 20audit 20report 20 20quillaudits pdf deployment listed documentation http documentation betswirl com ecosystem contract build 1 npm install 2 npm run compile
/Synthetixio/synthetix-translations,JavaScript,repo ha deprecated future translation made dapp repos directly please visit http github com synthetixio synthetix mintr http github com synthetixio synthetix exchange synthetix translation circleci http circleci com gh synthetixio synthetix translation svg style svg http circleci com gh synthetixio synthetix translation npm version http badge fury io j synthetix translation svg http badge fury io j synthetix translation discord http img shield io discord 413890591840272394 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 413890591840272394 twitter follow http img shield io twitter follow synthetix io svg label synthetix io style social http twitter com synthetix io internationalization repository synthetix dapps translator instruction 1 fork repo using fork button top right 2 create language folder using language code http en wikipedia org wiki list iso 639 1 code 3 copy en translation json e g synthetix mintr en translation json 4 rename langage folder app name lang code translation json e g synthetix mintr e translation json 5 translate english language 6 submit pr back repo submitting translation please make sure respect following repository architecture app name lang code translation json app name dapp repo name e synthetix mintr synthetix exchange lang code language code language translate example synthetix mintr en translation json synthetix mintr fr translation json please make sure use latest version english en file reference starting translation translation json follows simple key value format ha respected order published &#9; home &#9; &#9; intro &#9; &#9; &#9; title would like &#9; &#9; &#9; subtitle click button view info confirm change amount submitting &#9; &#9; &#9; example new translation look like &#9; home &#9; &#9; intro &#9; &#9; &#9; title translation &#9; &#9; &#9; subtitle translation &#9; &#9; &#9; merged published synthetix translation node package translation cover every key value developer extractlanguages j node script look every translation file dapp folder specified top file concats translation json file root project generate new build use command npm run build
/newbdez33/defi-arbitrage-bot-toolbox,JavaScript,toolbox defi arbitrage bot introduction todo visit deployed app http newbdez33 github io defi arbitrage bot toolbox
/TeneoPython01/algorand_txn_csv_exporter,Python,algorand transaction csv exporter work asas like yldy etc h3 doe h3 li script export transaction algorand wallet csv file li li asas algorand standard asset algorand wallet included export includes asset like yieldly yldy smile coin smile algogems gem akita lofty etc li intended assist filing tax example used help find yieldly yldy asa defi activity ' automatically imported koinly io crypto tax web service li li us v1 api algoexplorer io free ' require special credential li h3 use h3 li simply update wallet variable wallet address e ' interested run script li li active internet connection required since code leverage algoexplorer io api read transaction blockchain li li package used code common one may need install ' already panda panda io json request datetime numpy h3 additional note h3 li last several column export start z field added api feed end commonly used field help find ' looking easily li li optionally update timezone adjustment variable number hour timezone udt required li li datetime field start z format excel us simply change format mask excel field datetime see formatted li h3 option exist download transaction h3 li official algo wallet available via phone app time repo ' creation allow csv export want put wallet phone ' want li li github repo doe something similar attempt group transcations together prefer raw export instead ' link want check approach http github com hashingslash algocsv li script help want tip hope helped helped feel inclined tip algo wallet address set specifically tip necessary certainly welcome p 5q2rgrrxlc3643tfp22y5lite5p3spqlzo2u4kldallmumzwcoefvekqeq p
/FresaClubWallet/landingpage,JavaScript,landing page fresa mern stack docker mysql express react nodejs use express nodejs backend use react script frontend use mysql database v8 include self signed ssl certificate let ' encrypt localhost http letsencrypt org doc certificate localhost format use make command build fast table content host requirement reqts configuration config deploy deploy teardown teardown note note name reqts host requirement docker docker compose required host run code install docker engine http doc docker com engine install http doc docker com engine install install docker compose http doc docker com compose install http doc docker com compose install name config configuration copy env example file env folder backend frontend populate according environment create ssl folder backend folder copy fullchain pem privatekey pem name deploy deploy configured container brought using docker compose 1 set environment variable build image console docker compose build 2 bring landing page container console docker compose moment container observed running console docker compose p name command state port landingpage docker entrypoint sh pm2 r 0 0 0 0 443 443 tcp 443 443 tcp 0 0 0 0 80 80 tcp 80 80 tcp name teardown teardown complete teardown container must stopped removed along volume network created application container command console docker compose stop docker compose name note note let ' encrypt ssl certificate use http github com renci nrig ez letsencrypt http github com renci nrig ez letsencrypt shell script obtain renew let ' encrypt http letsencrypt org certificate using certbot ' webroot method certificate issuance http certbot eff org doc using html webroot
/Nikos-Salichos/Web3.NET-6,C#,smart contract solidity c connect smart contract net web apis installation 1 download project restore nugets 2 configure appsettings json detail 3 launch project order compile smart contract using visual studio code solidity extension compilation use abi bytecode json file create different controller different smart contract smartcontractcontroller deployanycontract deploy contract without parameter callcontractvariable call variable contract callreadfunction call read function contract callwritefunction call write function contract trackcryptowhalesforanytoken track transfer event token choice networkcontroller getlatestblock getalltransactionsofcurrentblock getalltransactionofablock getallcontractcreationtransactions wallet check balance send ether token another wallet uniswapv2 allpairs getreserves getamountsout approve swapexactethfortokens uniswapv3 getreserves getpool token balanceof swapexacttokensfortokens using router02 gettokendata using graphql getmostliquidpools using graphql getpooldata using graphql getrecentswapswithinapool using graphql lottery smart contract deploy getrandomnumber getplayers getbalance enterlottery pickwinner cryptotoken deploy erc20 token getbalance mint approve allowance destroysmartcontract transfer increaseapproval decreaseapproval burn transferfrom burnfrom nftcontroller addition use following tool convert abi string http elmah io tool multiline string converter multiline string single line http tool techcybo com multiline single line order test uniswapv3 get price use following address weth 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48 dai 0x6b175474e89094c44da98b954eedeac495271d0f
/Dickens-odera/Laevitas-defi,Solidity,laevitas defi sample p sample project illustrate fetch data external smart contract using solidity p
/joergkiesewetter/eth-market-analysis,Python,description script meant analyse different erc20 token script fetch whole transaction history etherscan give price coingecko given token afterwards start calculate realized market capitalization usefull statistical value analytical data printed console use however want calculated value total supply moved token realized market capitalization amount coin moved 1 year pre requirement need etherscan api token get one creating account etherscan create new one usage py main py etherscan api token api token
/afmsavage/defiindex,JavaScript,index weight knc 119 5117 kyber network lend 865 173 aave mkr 0 3517 maker kava 21 9652 kava zrx 416 8648 0x lrc 671 0796 loopring ren 566 3728 ren rep 7 3217 augur bnt 46 0263 bancor snx 112 2297 havven comp 1 6667 compound coin
/roobee-platform/RoobeeFarm-Contracts,Solidity,roobee farm reate new file called env set value compile npx buidler compile deploy npx buidler run script deploy j network network
/zgendao/utopia-fund,JavaScript,utopia fund utopia fund yield aggregator pancakeswap ' syrup pool utopia fund flow chart doc utopiaflowchart jpg use deposit call cake token ' approve function spender vault address amount higher amount would like deposit deposit function usable ' important keep received ycake token need withdraw deposited amount getpendingreward function return accumulated profit user value updated harvest withdraw similarly deposit call approve time ycake token like spender vault address amount least equal amount cake token would like withdraw ' include received profit userharvest function sends pending reward set zero ' need approve burning ycake token development thing need node j http nodejs org truffle downloading source code download dependency well open command line project folder run following command sh npm install download every necessary file node module folder need two wallet testing deployment owner strategist owner responsible deployment supervises application strategist responsible efficient profit gaining strategist owner separate entity safety reason core project made 3 smart contract controller vault strategy ' also script file help strategist choose profitable pool always one instance controller link strategy vault one vault vault use one type token base every strategy representing separate pool one linked vault one active strategist decides strategy active changing strategy every token relocated new active strategy planning make system one active strategy asset distributed evenly amongst deployment need create secret file project folder copy 12 word long metamask safety key nothing else make sure share file anywhere endanger wallet saving deploying mainnet truffle config j file change address bsc one would like use owner address deploy contract make sure enough gas deployment contract done 2 deploy contract j file specify contract would like deploy order also pas value constructor deployment done either command mainnet sh truffle deploy network bsc testnet sh truffle deploy network testnet get network date message write reset end command deployment vault least one strategy ha added controller done owner need approve strategy added done strategist least one strategy linked vault call changestrategy function vault linked strategy address least ' done application ready used script work intended need edit app src crypto helper j file adding correct key value pair map also need collection representing every pool index j file ' pool variable implemented database future
/manifoldfinance/tscli,TypeScript,github workflow demo gif tscli command line client install bash npm g tscli cli overview bash tscli manifoldfinance command line utility version tscli cli 0 0 0 darwin x64 node v12 20 2 usage tscli command command autocomplete display autocomplete installation instruction eth ethereum jsonrpc method help display help tscli plugins list installed plugins repl interactive repl distribution information start pkgtoc keep allow update package description tscli cli package cli manifoldfinance command line utility tscli core package core core command line library end pkgtoc keep allow update license spdx license idnetifier mit
/manifoldfinance/multicall-framework,TypeScript,start pkgtoc keep allow update manifold cabal lerna http img shield io badge maintained 20with lerna cc00ff svg http lerna j org styled prettier http img shield io badge styled prettier ff69b4 svg http github com prettier prettier package project package version link ycabal ycabal http npmjs com package greeter latest http img shield io npm v greeter latest svg http npmjs com package greeter readme http img shield io badge readme green svg package greeter readme md package package description ethrpc multicall package ethrpc multicall multi rpc call via single http query ether v5 web3 multicall package web3 multicall make multiple ethereum network request single http query ethcall ether v5 ycabal frontend package ui ycabal multicall package cabal multicall transparently wrap ether contract use multicall contract ycabal relay wrapper package relay wrapper wrap standard ether contract use relayer ycabal wallet package eoa gnosis safe relaying end pkgtoc keep allow update
/solaris-protocol/solaris-eth-margin,TypeScript,solaris margin trading href ' http eth margin solarisprotocol com ' img src ' http raw githubusercontent com solaris protocol solaris eth margin master asset ui png ' alt ' solaris margin trading ' aria label ' eth margin solarisprotocol com ' margin trading using 1inch limit order protocol different lending protocol aave compound liquity 88mph installation clone repository bash git clone http github com solaris protocol solaris eth margin cd solaris eth margin bash yarn start start development yarn build create production build contract repository http github com kmadorin solaris eth margin work href ' http drive google com file 1pfpg pf8urcu4ytouh87y kfa01ysyh2 view usp sharing ' target blank img src ' http raw githubusercontent com solaris protocol solaris eth margin master asset hiw png ' alt ' work ' aria label ' http drive google com file 1pfpg pf8urcu4ytouh87y kfa01ysyh2 view usp sharing ' development install following extension code editor linting ease work code eslint prettier stylint styled component contributing best way submit feedback report bug open github issue please sure include operating system device version number step reproduce reported bug keep mind participant expected follow code conduct
/deusfinance/synchronizer-sdk,TypeScript,synchronizer sdk react redux based library written typescript build decentralized stock exchange top deus finance us deus synchronizer v2 amm peripheral service prerequisite following dependency need manually installed reduxjs toolkit react react redux install npm install deusfinance synchronizer sdk usage javascript import createsynchronizer muonclient ' deusfinance synchronizer sdk ' instantiate muon instance gather oracle signature later app export const muon new muonclient instantiate synchronizer instance export const synchronizer createsynchronizer synchronizer export multiple slice append store const yourstore configurestore reducer destructure slice reducer synchronizer slice export hook later use export const hook synchronizer hook spawn updater instance export function synchronizerupdater const chainid someweb3context const partnerid ' 0x302041dbeb23bc42eb33e85f1c0ae8d5beda716a ' return synchronizer updater chainid chainid partnerid partnerid add updater dom tree reactdom render react strictmode reduxprovider store yourstore synchronizerupdater yourapp reduxprovider react strictmode document getelementbyid ' root ' start using exported method hook app hook simple nature meaning ' additional logic make sense data example ' registrar ' built oracle quote chain partnerfees metadata javascript import supportedchainid ' deusfinance synchronizer sdk ' import hook ' yourinstance ' function yourapp const registrar hook useregistrars supportedchainid fantom return div hi mom div example find plug play example react app example example directory additionally check partner dsynths http github com dsynths dsynths app v2 ha fully integrated sdk exchange contribute easen development ' using yalc package allows u symlink build file example app installation run yalc publish source dir building dist symlink automatically created updated go example directory install package run npm run yalc finish symlink hit npm run start start example app everytime rebuild source code live example repo reflect change instantly api reference constant javascript latest deployed address address collateral address synchronizer address partnermanager address conductor address rolechecker corresponding abis abis synchronizer abis partnermanager abis conductor abis rolechecker abis registrar enumerator allowed chainids supportedchainid type percent token registrar registrarpair direction sector signaturesdata ierror signature javascript instantiate muon client param optional baseurl url interact muon network default http node balancer muon net v1 param optional nsign minimum number signature required default 2 const muon new muonclient get signature pas smart contract call param contract contract address param action ' buy ' ' sell ' param chainid chain get signature return promise signaturesdata ierror extract signaturesdata calldata use muon getsignatures contract string action string chainid supportedchainid hook javascript asset split two version long short registrarpair entity hold version registrar ' id ' shared registrar id commonly referred ' ticker ' param chainid chain get registrarpairs return registrarpair useregistrarpairs chainid supportedchainid list individual registrar per flattened version registrarpairs registrar also hold ' sibling ' field refers version param chainid chain get registrar return registrar useregistrars chainid supportedchainid find registrar contract address param contract contract address param chainid chain get registrar return registrar undefined useregistrarbycontract contract string undefined chainid supportedchainid list registrar instance sushiswap token standard param chainid chain get registrar return token useregistrartokens chainid supportedchainid mapping registrartokens identified contract address param chainid chain get registrar return tokenmap useregistrartokenmap chainid supportedchainid callback function fetch fee given registrar type set deus dao partner param sector sector registrar return bignumber bignumber j instance allows easy math ops usetotalfeecallback sector sector useplatformfeecallback sector sector usepartnerfeecallback sector sector quote oracle data fetched every 60 second callback force refresh useforcerefreshcallback
/byteball/counterstake-sdk,JavaScript,counterstake sdk sdk enables integrate cross chain transaction dapps us counterstake bridge http counterstake org cross chain transfer optionally oswap io http oswap io swap sdk work browser server based apps bot install sh npm install counterstake sdk sh yarn add counterstake sdk quick start would transfer 100 usdc ethereum receive gbyte obyte side hood usdc ethereum first transferred obyte counterstake bridge http counterstake org receiving aa swap usdc obyte gbyte obyte using oswap io http oswap io sent recipient address browser j import transferevm2obyte csevents counterstake sdk const txid await transferevm2obyte &#9; amount 100 0 &#9; src network ' ethereum ' &#9; src asset ' usdc ' &#9; dst network ' obyte ' &#9; dst asset ' gbyte ' &#9; recipient address ' ejc4a7wqghezekw6rlo7f26sar4laqbu ' &#9; assistant reward percent 1 0 &#9; signer signer optional automatically use metamask &#9; testnet false csevents ' newclaim ' claim &#9; console log ' new claim ' claim &#9; claim txid txid &#9; &#9; return console log ' another claim ' &#9; else handle claim transfer node j j const transferevm2obyte csevents require counterstake sdk const ether require ether require ' dotenv ' config const provider new ether provider infuraprovider process env testnet rinkeby homestead process env infura project id const ethwallet ether wallet frommnemonic process env mnemonic const signer ethwallet connect provider const txid await transferevm2obyte &#9; amount 100 0 &#9; src network ' ethereum ' &#9; src asset ' usdc ' &#9; dst network ' obyte ' &#9; dst asset ' gbyte ' &#9; recipient address ' ejc4a7wqghezekw6rlo7f26sar4laqbu ' &#9; assistant reward percent 1 0 &#9; signer &#9; testnet process env testnet csevents ' newclaim ' claim &#9; console log ' new claim ' claim &#9; claim txid txid &#9; &#9; return console log ' another claim ' &#9; else handle claim transfer demo browser react http github com byteball getmein website http getmein ooo node j http github com byteball counterstake demo client api sdk export following function object j import &#9; transferevm2obyte &#9; estimateoutput &#9; csevents &#9; error &#9; gettransfer &#9; getbridges &#9; getobyteclient &#9; findoswappool &#9; getoswapoutput &#9; gettokeninfo &#9; findbridge counterstake sdk transferevm2obyte main function sdk sends cross chain transfer evm based chain ethereum bsc polygon obyte destination coin obyte bridged version original coin usdc ethereum usdc obyte function try find oswap pool would convert bridged coin destination coin usdc obyte gbyte case cross chain transfer sent recipient forwarder aa forwarder oscript additional data sent transfer instructs aa swap received coin destination coin send recipient j const txid await transferevm2obyte &#9; amount 100 0 &#9; src network ' ethereum ' &#9; src asset ' usdc ' &#9; dst network ' obyte ' &#9; dst asset ' gbyte ' &#9; recipient address ' ejc4a7wqghezekw6rlo7f26sar4laqbu ' &#9; data ' data ' &#9; assistant reward percent 1 0 &#9; signer &#9; testnet false &#9; obyteclient client function ' argument object following field amount amount token transferred fractional number string src network source network token transferred ethereum bsc polygon src asset token transfer symbol eth usdc etc token address dst network destination network token transferred obyte ethereum bsc polygon subsequent swap supported obyte dst asset token receive destination network symbol asset id contract address evm network recipient address address recipient destination chain data optional data passed recipient address ' usefull calling aa destination side assistant reward percent percentage amount paid assistant helping process cross chain transfer signer signer object ether http doc ether io signing transfer transaction optional browser missing sdk use metamask create ask user change network necessary testnet whether use testnet optional missing mainnet assumed obyteclient obyte j http obytejs com client use getting data obyte dag optional pas already using obyte j dapp want sdk reuse existing connection missing sdk create obyte j client function called several time without obyteclient sdk create connection reuse call function return transaction hash sending transaction use track progress transfer using csevents function throw nometamaskerror nobridgeerror amounttoolargeerror nooswappoolerror error estimateoutput similar transferevm2obyte function estimate amount received take account assistant reward exchange rate swapping swapping fee slippage j const amountout await estimateoutput &#9; amount 100 0 &#9; src network ' ethereum ' &#9; src asset ' usdc ' &#9; dst network ' obyte ' &#9; dst asset ' gbyte ' &#9; recipient address ' ejc4a7wqghezekw6rlo7f26sar4laqbu ' &#9; assistant reward percent 1 0 &#9; testnet false &#9; obyteclient client function take argument transferevm2obyte except signer returned amount fractional number destination token function throw nobridgeerror amounttoolargeerror nooswappoolerror error csevents csevents eventemitter used listen newclaim event order track progress transfer newclaim event emitted j csevents ' newclaim ' claim &#9; console log ' new claim ' claim &#9; claim txid txid &#9; &#9; return console log ' another claim ' &#9; else update transfer status notify user claim object ha following field sender address sender ' address source chain address address recipient cross chain transfer either recipient ' address receive coin sent another network address aa performs subsequent swap sends proceeds final recipient txid transaction hash sending transaction use match claim prior sending transaction txts timestamp sending transaction amount sent amount penny integer number obyte bignumber evm reward assistant reward penny integer number obyte bignumber evm data data sent transaction string claimant address address claimant usually assistant network network claim took place e destination network aa address address bridge aa contract evm processed claim claim txid claim transaction hash claim num claim number available confirmed claim request optional used obyte true indicates request ha confirmed yet could become bounced removed optional used evm true indicates blockchain ha rewritten claim ha removed obyte normally receive two newclaim event claim first request set true without claim num claim num without request field claim ha processed might also receive several event request several assistant try claim transfer however one eventually succeed evm normally receive newclaim case reorg might get removed event new one receive event claim num transfer ha finished user ha received token error object includes error thrown sdk function j error &#9; nometamaskerror &#9; nobridgeerror &#9; nooswappoolerror &#9; amounttoolargeerror nometamaskerror thrown metamask installed browser nobridgeerror thrown bridge allows send source token chain nooswappoolerror thrown oswap pool exists ha 0 liquidity allows swapping coin received bridge destination coin amounttoolargeerror thrown amount sent large assistant cannot help sdk ' support self claim function throw use instanceof determine type error handle j import estimateoutput error counterstake sdk try &#9; const amountout await estimateoutput &#9; catch e &#9; e instanceof error amounttoolargeerror &#9; &#9; console log ' amount large ' e &#9; &#9; handle error &#9; gettransfer query status transfer previously sent j const transfer await gettransfer txid testnet 1st argument transfer hash txid 2nd optional argument indication working testnet use function track previously sent transfer returned object ha following field sender address sender ' address source chain dest address address recipient cross chain transfer either recipient ' address receive coin sent another network address aa performs subsequent swap sends proceeds final recipient txid transaction hash sending transaction request txts timestamp sending transaction amount sent amount penny string reward assistant reward penny string data data sent transaction string claimant address address claimant usually assistant status claim status sent mined claimed request ha received claim confirmed claim txid claim transaction hash claim num claim number available confirmed claim getbridges get list bridge information j const bridge await getbridges testnet bforceupdate 1st argument indication whether working testnet 2nd argument set true force update counterstake org server otherwise cached response returned le 10 minute old use function get list bridge display choice user function return array object describing bridge object include following field home network home network obyte ethereum bsc polygon home asset home asset id token contract address home asset decimal decimal asset home network home symbol asset ' symbol home network export aa aa contract home chain used exporting token foreign chain foreign network foreign network obyte ethereum bsc polygon foreign asset asset ' id token contract address foreign network foreign asset decimal decimal asset foreign network foreign symbol asset ' symbol foreign network stake asset asset id token contract address asset used back one ' claim foreign chain asset used counterstaking import aa aa contract foreign chain used importing token home chain min expatriation reward minimum reward paid assistant expatriating token home foreign fractional number min repatriation reward minimum reward paid assistant repatriating token foreign home fractional number count expatriation claimant number assistant recently active foreign chain help expatriation transfer count repatriation claimant number assistant recently active home chain help repatriation transfer max expatriation amount maximum amount assistant help expatriating fractional number max repatriation amount maximum amount assistant help repatriating fractional number getobyteclient get obyte j client created sdk j const obyteclient getobyteclient testnet argument indication whether working testnet function creates obyte j client ' created one yet return findbridge find bridge allows transfer src asset src network dst network j const bridge await findbridge src network dst network src asset testnet src network source network obyte ethereum bsc polygon dst network destination network src asset symbol asset id token contract address evm transferred asset source network testnet indication whether working testnet function return object describes found bridge null bridge wa found object ha following field src bridge aa aa contract address bridge source network export expatriation import repatriation dst bridge aa aa contract address bridge destination network import expatriation export repatriation type type transfer expatriation home foreign repatriation foreign home src asset id asset contract address evm source chain dst asset id asset contract address evm destination chain src symbol token ' symbol source chain dst symbol token ' symbol destination chain src decimal token ' decimal source chain dst decimal token ' decimal destination chain min decimal smaller token ' decimal source destination chain use rounding avoid sending amount excessive precision min reward minimum assistant ' reward token cover network fee claiming fractional number max amount maximum amount transfer token assistant help fractional number findoswappool find oswap pool connects asset asset j const pool await findoswappool asset asset testnet obyteclient asset asset asset id testnet indication whether working testnet obyteclient optional obyte j client passed sdk create function return address oswap pool aa return null undefined none found getoswapoutput get output amount swapping asset pool j const amount penny await getoswapoutput pool amount penny asset testnet obyteclient pool address oswap pool aa amount penny input amount penny smallest indivisible unit integer asset id input asset testnet indication whether working testnet obyteclient optional obyte j client passed sdk create function return output amount penny gettokeninfo get information obyte token symbol asset id decimal j const token info await gettokeninfo symbol asset testnet obyteclient symbol asset token ' symbol asset id testnet indication whether working testnet obyteclient optional obyte j client passed sdk create function return object following field asset asset id symbol token ' symbol decentralized token registry http token ooo decimal number decimal
/captain-woof/cazzpay,TypeScript,cazzpay line code http img shield io tokei line github captain woof cazzpay style badge github http img shield io github license captain woof cazzpay logocolor green style badge cazzpay crypto ramping platform facilitates seller allow payment crypto receive fiat repo contains code run cazzpay smart contract subgraph code frontend demo watch demonstration youtube http youtu nb0aalmgfjy cazzpay contract deployed rinkeby testcoin tst http rinkeby etherscan io address 0x6a308fb8391cecd7bb9570840239956f25c101f9 0x6a308fb8391cecd7bb9570840239956f25c101f9 cazzpaytoken czp http rinkeby etherscan io address 0x8d7b5e919620d2c9742389bc1cec671eab0e3150 0x8d7b5e919620d2c9742389bc1cec671eab0e3150 cazzpay http rinkeby etherscan io address 0xdbbd3ef86b6f1a250f542f21362fea46c28f037c 0xdbbd3ef86b6f1a250f542f21362fea46c28f037c cazzpay graph playground http thegraph com hosted service subgraph captain woof cazzpay http thegraph com hosted service subgraph captain woof cazzpay query endpoint http api thegraph com subgraphs name captain woof cazzpay http api thegraph com subgraphs name captain woof cazzpay whitepaper read whitepaper http doc google com document 1rgdqedju52nh dry4xoxmyzdaip m3 6qlyt bzhwyy edit usp sharing get better understanding cazzpay manages everything
/HyperDeFiProtocol/home,Vue,hyperdefi official home official home http github com hyperdefiprotocol home action workflow mainnet yml badge svg http hyperdefi org testnet http github com hyperdefiprotocol home action workflow testnet yml badge svg http testnet hyperdefi org alpha test http github com hyperdefiprotocol home action workflow alpha yml badge svg http alpha hyperdefi org visit http doc hyperdefi org dev learn http doc hyperdefi org zh dev
/Shyft-to/shyft-solana-api,TypeScript,p align center href http shyft target blank img src http shyft asset image shyft logo 2 svg width 320 alt shyft logo p shyft required shyft suite managed service frictionless web3 development launching scalable decentralized app today ' time like going monster hunt shyft ' multiple web3 module arsenal hunt becomes easier get free api key http shyft get api key start hacking shyft equip super power documentation http doc shyft try swagger ui http api shyft sol api explore postman documentation http documenter getpostman com view 18419720 uzqvt5kf import postman collection http www getpostman com collection eb766924a309c10d6d7e box feature godmode create read update burn nfts programmatically create nfts access token program fungible token fetch user ' entire portfolio denote user named account relay service monitoring chain activity soon semi custodial wallet infrastructure soon deploy app marketplace soon license shyft mit licensed license
/byteball/counterstake-bridge-ui,JavaScript,counterstake bridge cross chain bridge based counterstake protocol install install node j clone repository say sh yarn env copy appropriate env xxxx file env run sh yarn start build sh yarn build
/bayroio/ahoj-swap,JavaScript,ahoj swap ahoj swap dex running avalanche implementing automated market maker algorithm repository collection smart contract implement ahoj swap protocol avalanche ahoj czech word english ahoy word ahoj used say hello informal greeting said meeting someone inclusive say bye informal farewell table content install install testing testing contribute contribute license license install bash install project dependency npm install testing run unit test bash npm test contribute report bug within package create issue repository security issue please contact hello bayro io submitting code ensure free lint error ha 100 test coverage bash lint code npm run lint view code coverage npm run coverage license gnu general public license v3 0 c 2020 bayro license fox face
/ncitron/unigov,JavaScript,project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console npm test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information npm run build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify
/powerpool-finance/power-oracle-reporter,TypeScript,power oracle reporter script working power oracle contract allows updating price slash primary price reporter ' deposit cvp case update price time starting power oracle reporter kovan testnet yarn reporter private key reporter private key e g 0x7700fa638003ef53c10485c0535353e9cf7e773cf64b3cfc7942662f8218e88b npm start ethereum main network yarn mainnet 1 reporter private key reporter private key e g 0x7700fa638003ef53c10485c0535353e9cf7e773cf64b3cfc7942662f8218e88b npm start run background yarn global add pm2 pm2 install typescript mainnet 1 reporter private key reporter private key e g 0x7700fa638003ef53c10485c0535353e9cf7e773cf64b3cfc7942662f8218e88b pm2 start index name power oracle reporter pm2 save sudo pm2 startup add startup eth compensation enable cvp compensation converting eth sending poker address add compensate eth 1 option start script command telegram bot use telegram bot receive information change status price reporter fisherman need replenish reporter address balance eth slashing others getting started personal notifier telegram bot 1 go http botfather create new bot name bot 2 copy access token paste tg key argument 3 get telegram user id google get use one popular bot http mytelergamidbot http userinfobot 4 paste telegram user id tg admin argument specify several admins separated comma 5 result command running bot look like tg key 1112233444 aaev2fjbf1ba vbftcp knd2dg0t3wq gya tg admin 555444333 mainnet 1 reporter private key 0x7700fa638003ef53c10485c0535353e9cf7e773cf64b3cfc7942662f8218e88b npm start 6 open telegram bot press start receive notification
/Ithil-protocol/v1-core,TypeScript,ithil header png h1 align center ithil protocol v1 h1 div align center solidity http img shield io badge solidity 0 8 12 e6e6e6 style badge logo solidity logocolor black nodejs http img shield io badge node j 16 x 339933 style badge logo nodedotjs logocolor white discord http img shield io badge discord 7289da style badge logo discord logocolor white http discord gg teagbcgdqc twitter http img shield io badge twitter 1da1f2 style badge logo twitter logocolor white http twitter com ithil protocol website http img shield io badge website e34f26 style badge logo google chrome logocolor white http ithil fi doc http img shield io badge doc 7b36ed style badge logo gitbook logocolor white http doc ithil fi div ithil first decentralised defi investment aggregator perform undercollateralised leveraged trade virtually defi protocol repository contains core smart contract ithil v1 key feature perform leveraged investment wide pool strategy get huge payoff small starting capital provide liquidity almost token like stablecoins meme rebasing token get apy token contribute safeguarding protocol liquidating position loss get rewarded develop new strategy expand trading possibility installation prerequisite project nodejs v16 x yarn git get copy source bash git clone http github com ithil protocol v1 core cd v1 core yarn install usage create environment file env copying template environment file bash cp env example env add following content text alchemy api key needed run mainnet fork test forking true enable mainnet fork report gas true enable gas report end test load local env source env finally compile contract bash npx hardhat compile project us hardhat typechain produce typescript binding waffle test find compiler configuration hardhat config test bash yarn test also check code coverage following command bash yarn coverage security audit report available audit folder find bug please follow instruction security md file bug bounty program cover main source file documentation read ithil documentation website http doc ithil fi licensing main license ithil contract business source license 1 1 busl 1 1 see license file learn solidity file licensed busl 1 1 appropriate spdx header disclamer application provided fault developer make representation warranty kind concerning safety suitability lack virus inaccuracy typographical error harmful component software inherent danger use software solely responsible determining whether software product compatible equipment software installed equipment also solely responsible protection equipment backup data provider liable damage may suffer connection using modifying distributing software product
/xBidi/PancakeSwapPredictionBotLight,TypeScript,update v2 pancakeswappredictionbot light use bot improved new version http github com xbidi pancakeswapbot work pancakepredictionv2 http pancakeswap finance prediction use 1 rename env example env mv env example env 2 provide private key env private key field 3 install dependency npm 4 start app npm run start 5 enjoy winning alt pancakeswap prediction bot winner image ppw image png alt pancakeswap prediction bot winner screenshot image ppw image 2 png alt candle genie bot winner screenshot image ppw image 3 png beware fork give guarantee fork may turn scam disclaimer ' coding stuff pure open source bot ha small tax claim function win 0xc3c531be09102e84d4273984e29e827d71e28ae8 investment strategy investment involve risk loss nothing contained program script code repository construed investment advice reference investment ' past potential performance construed recommendation guarantee specific outcome profit using program accept liability claim made developer others connected program
/apoorvlathey/kTokens,JavaScript,ktokens wrapped atokens non increasing balance explanation video http youtu xuu4nb3iogu http youtu xuu4nb3iogu http imgur com m4jzk7q png http twitter com stanikulechov status 1308873571280785410 problem atoken bridge via shuttleflow conflux http imgur com pncg8dx png atokens interest bearing token balance keep increasing inside user ' wallet passing second let ' take example user want move atoken adai ethereum conflux 1 user deposit 100 adai shuttleflow ' deposit contract 2 corresponding 100 adai get minted conflux blockchain 3 user enjoys high transaction speed adai conflux 4 shuttleflow ha custody adai accumulates 20 adai interest 5 user burn 100 adai conflux receive 100 adai ethereum 6 20 adai accumulated interest get locked shuttleflow deposit contract solution ktokens http imgur com uqidi1v png 1 user deposit atokens corresponding ktoken pool eg deposit adai mint kdai 2 kdai act similar compound ' ctokens amount token remain constant underlying asset keep increasing 3 shuttleflow bridge work perfectly fine 4 user burn initial 100 kdai get back 120 adai 100 initial 20 interest
/byteball/oscript-vscode-plugin,JavaScript,oscript extension visual studio code write validate autonomous agent oscript language aa program automate movement fund obyte network allow create various defi application feature syntax highlighting code completion error highlighting agent deployment directly extension agent deployment oscript extension provides oscript deploy autonomous agent command available command palette execute aa validation get link use deploy agent phone another device another way click validation message status bar testing oscript extension provides integration autonomous agent testing framework execute oscript create test example file generate sample test file execute oscript test current file run test tutorial see autonomous agent documentation http developer obyte org autonomous agent detail
/alejoacosta74/ethereum-farming-example,JavaScript,defi farming example overview project implement defi application consisting farming contract issue new arg coin investor deposit money certain amount time farming flow doc farmingexample png web app view screen shot doc appscreenshot png install clone repository install dependency devdependencies bash npm install g truffle npm install g ganache cli cd defi example npm init npm install usage start ganache cli development ethereum network bash ganache cli another terminal compile deploy solidity contract ganache development network bash truffle compile truffle migrate another terminal start web server bash npm run start use web defi app go http localhost 3000 browser simulate issuing arg token run script bash truffle exec script issue token j dependency need install metamask browser order interact react web app
/oaksprout/an-apple-a-day,JavaScript,setup use yarn package manager get dependency installed root directory terminal yarn install fire terminal yarn redwood dev browser open automatically http localhost 8910 see web app lambda function run http localhost 8911 also proxied http localhost 8910 redwood function
/roobee-platform/Eth_Farm,HTML,roobeefarm frontend run run yarn run yarn start yarn start run app development mode br open http localhost 5000 http localhost 5000 view browser page reload make edits br also see lint error console yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed yarn clean remove build directory stats json file yarn compile yarn build without first removing build directory stats json file rimraf related error delete build directory run manually
/izumiFinance/izumi-swap-periphery,JavaScript,iziswap periphery div align center href http izumi finance img width 900px height auto src image logo png div contract iziswap periphery set environment install node j 12 x npm compile source 1 clone repo github git clone git github com izumifinance izumi swap periphery git suppose root dir project izumi swap periphery 2 checkout branch cd dir izumi swap periphery checkout branch want 3 install denpendencies install package listed package json via npm 4 compile compile via following command npx hardhat compile 5 compiled json file compile abi code contract found file artifact sol json run test case 1 compile izumi swap core running test case compile izumi swap core http github com izumifinance izumi swap core first refer readme md link compile core suppose project dir izumi swap core izumi swap core dir 2 copy compiled json izumi swap core izmui swap periphery compile izumi swap core project copy dirs izumi swap core dir artifact sol izumi swap periphery test core copy compiled json file weth izumi swap periphery test core name weth9 json running test case find abi code izumi swap core contract weth contract izumi swap periphery test core 3 run test case run test case via following command npx hardhat test want run single test case simply run npx hardhat test test file test case json example deploy interact 1 example deploy interact provide example script deploy contract add pool add liquidity view liquidity swap prequery price following take example deploying interface izumi test network ha set izumi swap periphery hardhat config j want deploy interface eth network could configure network hardhat config j specified via network runing coresponding script 2 prepare work establish file called setting j dir izumi swap periphery cp setting j example setting j following 3 field must filled change field sk private key sign account network want deploy change field weth address contract weth network change field izumiswapfactory address izumiswapfactory contract network deployment izumiswapfactory refered izumi swap core http github com izumifinance izumi swap core following field setting j empty string currently 3 example deploy nonfungibleliquiditymanager swap refer example script script deployperiphery j want deploy izumi test network configered hardhat config j simply run npx hardhat run script deployperiphery j network izumi test replace izumi test want deploy 2 contract eth network running deployed address nonfungibleliquiditymanager swap viewed screen copy field nflmaddr swapaddr setting j ineractions add pool add liquidity swap 4 example deploy quoter contract npx hardhat run script deployquoter j network izumi test replace izumi test eth network want running deployed address quoter viewed screen copy field quoteraddr setting j ineractions pre query price 5 example add pool add liquidity swap prequery price script addpool add pool bit usdc 3000 runing make sure nflmaddr swapaddr bit usdc setting j correct bit usdc 2 token address used script donot token eth network deploy using contract test token sol running addpool npx hardhat run script addpool j network izumi test replace izumi test eth network want npx hardhat run script getpool network izumi test view pool address bit usdc 3000 add view liquidity npx hardhat run script addpool j network izumi test npx hardhat run script viewliquidity j network izumi test call swapx2y swap contract npx hardhat run script swapx2y j network izumi test call swapy2x npx hardhat run script swapy2x j network izumi test prequery price node script getswapprice j
/zing-finance/zing-farming,Solidity,zing farming
/manifoldx/typed-sdk,TypeScript,title manifold finance sdk description well typed sdk web3 version 0 1 1 manifold sdk nodejs http github com manifoldfinance typed sdk workflow nodejs badge svg human web3 interface sdk overview keep private key client safe sound import export json wallet import export bip 39 mnemonic phrase 12 word backup phrase hd wallet english italian japanese korean simplified chinese traditional chinese connect ethereum node json rpc public private alias name first class citizen used log manifold finance service complete functionality manifold finance need large collection test case maintained added fully typescript ready definition file full typescript source usage make build br npm install save manifold sdk importing javascript es3 var manifold require ' manifold sdk ' javascript es5 es6 const manifold require ' manifold sdk ' javascript es6 typescript import manifold ' manifold sdk ' example javascript const web3 require web3 const bn web3 utils bn const manifoldprovider require manifold provider class gasevo constructor option gasevo null pollinginterval null account null unlocked false balancewei 0 balance 0 address replace contract address genesisblock 0 loading false option readonlyrpcurl http mainnet infura io autoinit true getpastevents false watchfutureevents false connectionretries 3 object assign option option option autoinit initweb3 connect initweb3 return new promise resolve reject let web3provider false check metamask global web3 web3provider global web3 currentprovider attempt try web3provider else option connectionretries 0 option connectionretries 1 settimeout initweb3 resolve catch error reject new error error 1000 revert read version using infura endpoint else readonly true web3provider zeroclientprovider getaccounts function rpcurl option readonlyrpcurl web3provider global web3 new web3 web3provider startchecking option getpastevents getpastevents option watchfutureevents watchfutureevents check every second switching network switching wallet startchecking pollinginterval clearinterval pollinginterval getgenesisblock pollinginterval setinterval check bind 1000 catch err throw new error err check checknetwork checkaccount bind catch error console error error throw new error error checknetwork return global web3 eth net getid err netid err console error err err network netid network netid return deploycontract checkaccount return global web3 eth getaccounts error account error throw new error error account length account account 0 unlocked true account account 0 else account length unlocked false account null constant function day second return gasevo method day second call resp return resp catch err console error err num rate return gasevo method num rate call resp return resp catch err console error err allowance owner spender return gasevo method allowance owner spender call resp return resp catch err console error err balanceof account return gasevo method balanceof account call resp return resp catch err console error err decimal return gasevo method decimal call resp return resp catch err console error err name return gasevo method name call resp return resp catch err console error err symbol return gasevo method symbol call resp return resp catch err console error err totalsupply return gasevo method totalsupply call resp return resp catch err console error err getethdeposit return gasevo method getethdeposit call resp return resp catch err console error err gettotalrate day return gasevo method gettotalrate new bn day 10 call resp return resp catch err console error err getholderrate holder day return gasevo method getholderrate holder new bn day 10 call resp return resp catch err console error err convevo2eth amountevo return gasevo method convevo2eth new bn amountevo 10 call resp return resp catch err console error err conveth2evo amounteth return gasevo method conveth2evo new bn amounteth 10 call resp return resp catch err console error err getrates holder timestamp return gasevo method getrates holder new bn timestamp 10 call resp return resp catch err console error err getevointerestpct holder amountevo return gasevo method getevointerestpct holder new bn amountevo 10 call resp return resp catch err console error err getevointerestpct holder amountevo timestamp return gasevo method getevointerestpct holder new bn amountevo 10 new bn timestamp 10 call resp return resp catch err console error err getevointerest holder amountevo timestamp return gasevo method getevointerest holder new bn amountevo 10 new bn timestamp 10 call resp return resp catch err console error err getevointerest holder amountevo return gasevo method getevointerest holder new bn amountevo 10 call resp return resp catch err console error err transaction function approve spender amount account return promise reject new error unlock account return gasevo method approve spender new bn amount 10 send account transactionhash hash console log hash loading true resp loading false return resp catch err loading false console error err decreaseallowance spender subtractedvalue account return promise reject new error unlock account return gasevo method decreaseallowance spender new bn subtractedvalue 10 send account transactionhash hash console log hash loading true resp loading false return resp catch err loading false console error err increaseallowance spender addedvalue account return promise reject new error unlock account return gasevo method increaseallowance spender new bn addedvalue 10 send account transactionhash hash console log hash loading true resp loading false return resp catch err loading false console error err withdraweth amountevo account return promise reject new error unlock account return gasevo method withdraweth new bn amountevo 10 send account transactionhash hash console log hash loading true resp loading false return resp catch err loading false console error err transfer value account return promise reject new error unlock account return gasevo method transfer new bn value 10 send account transactionhash hash console log hash loading true resp loading false return resp catch err loading false console error err transferfrom value account return promise reject new error unlock account return gasevo method transferfrom new bn value 10 send account transactionhash hash console log hash loading true resp loading false return resp catch err loading false console error err end example acknowledgement portion ether j much modification license spdx license identifier mit
/BlazarDeFi/blazar,Solidity,overview blazar interest rate stability protocol decentralized financial application deposit borrow instantly fixed rate fixed term built ethereum read blazar ' minimum viable model http medium com blazar defi defis fixed rate lending primitive 83428d550d8e blazar wa one winner ethlondon hackathon read href http devpost com software daj get future interest right target blank devpost write watch winner ' presentation http www youtube com watch v 6bd6vqvy5rq list plxzkmxk2ahh6pula8qiw6 9gpszoxyeis index 4 0 href http blazar sh target blank live demo requires metamask connected kovan ethereum testnet br img src http blazar xyz img section 2 deposit ipad png width 500 building build application please install first dependency running npm install smart contract test executed buidler evm environment started typing npm run test make sure smart contract compiled trying deploy dapp npx truffle compile deploy front end local machine please type command line npm run dev protocol description blazar decentralised lending pool powered automated market maker give depositor fixed return allows borrower take instant fixed rate loan blazar us fixed term unlike variable rate protocol perpetual nature every user blazar user must choose maturity date depositor lock deposit chosen date borrower pay back loan blazar therefore meet two imperative unfailingly repaying depositor maturity providing instant loan borrower achieves addressing short term mismatch deposit loan putting unproductive deposit work variable pool best available rate drawing liquidity variable pool provide loan pool insufficient illustration action img src http miro medium com max 1540 1 z2eubbvt7nrejkgp58tpuq png width 600
/yurycooliq/bearn-fi,JavaScript,bearn fi portfolio tracker console tool track portfolio bearn fi install install node j npm http nodejs org en git http git scm com run git bash execute following command one one git clone http github com yurycooliq bearn fi git cd bearn fi npm cp env example env cp initial balance json example initial balance json env file set address initial balance json file set initial balance usd see profit realtime update run git pull bearn fi directory update initial balance json new value initial balance json example file usage run npm run watch bearn fi directory available pool bdo busd bdo bnb sbdo busd mdo usdt mdo busd md busd brew ramen vbswap bnb vbswap busd 98 2 busd alpaca alpaca bnb example output bearn fi portfolio tracker 0xa1b2 y8z9 vault token 1 24h change token 2 24h change lp price tvl lp amount bfi reward bdo reward mdo reward deposit profit bdo busd 1 31 3 68 1 00 0 32 2 38 39 247 469 94 780 492424 0 000905 2 262995 0 011224 1 858 12 117 12 sbdo busd 3 960 65 11 09 1 00 0 32 134 53 17 606 711 95 0 000000 0 000000 0 000000 0 000000 0 00 0 00 bdo bnb 1 31 3 68 261 35 9 50 38 65 10 701 167 16 14 473641 0 001053 2 633620 0 013063 559 41 18 94 brew 12 91 16 49 12 91 7 287 768 83 0 000000 0 000000 0 000000 0 000000 0 01 0 01 mdo busd 6 97 2 60 1 00 0 32 5 46 2 730 134 67 0 000000 0 000000 0 000000 0 000000 0 00 0 00 mdo usdt 6 97 2 60 1 00 0 11 5 35 1 390 662 71 0 000000 0 000000 0 000000 0 000000 0 00 0 00 md busd 7 480 36 19 74 1 00 0 32 184 06 1 735 955 09 0 000000 0 000000 0 000000 0 000000 0 00 0 00 total 2 417 54 98 18 pancakeswap pair cafeswap brew last snapshot 23 07 28 url http bearn fi bvaults contribution feel free make pull request contact add another vault contributor yury cooliq yurycooliq gmail com paul muller melnyk300 gmail com
/phydy/MoneyStreamNetwork,Solidity,streampay start project navigate prefered directory run command terminal 1 clone project git clone http github com phydy moneystreamnetwork git 2 navigate project directory cd moneystreamnetwork 3 install brownie pip3 install eth brownie 4 install openzepelin chainlink superfluid package brownie pm intsall package 5 set private key brownie config yaml export private key 0xhdgfyugwofgf brownie run script deploy withmarket py network kovan mumbai
/EasyBlock-Finance/easyblock-contracts,Solidity,easyblock make strongblock http strongblock com accesible everybody frontend http github com dogud easyblock frontend
/yam-finance/synths-www,Vue,synths www vue 3 typescript vite development http synthsv3 yam xyz v2 website href http app netlify com site vibrant bell b6c051 deploys target blank netlify status http api netlify com api v1 badge 7307861d 62b7 42ea bf9b a30a0820f0b7 deploy status http develop synthsv3 yam xyz development build href http app netlify com site modest leavitt 3a2875 deploys target blank netlify status http api netlify com api v1 badge 01c3d3c6 fa58 4339 8446 13e2cb46585f deploy status
/0xfffangel/dexfight,Python,dex fight python price bot multiple dex based web3dex python http github com 0xfffangel web3dex python install bash python3 virtualenv venv source venv bin activate pip install r requirement txt example example dexs fight bsc chain bash bnb busd python main py chain bsc input 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c output 0xe9e7cea3dedca5984780bafc599bd69add087d56 python main py chain bsc output 0xe9e7cea3dedca5984780bafc599bd69add087d56 bnb usdt python main py chain bsc input 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c output 0x55d398326f99059ff775485246999027b3197955 python main py chain bsc output 0x55d398326f99059ff775485246999027b3197955 cake bnb python main py chain bsc input 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82 output 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c python main py chain bsc input 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82 mbox bnb python main py chain bsc input 0x3203c9e46ca618c8c1ce5dc67e7e9d75f5da2377 output 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c python main py chain bsc input 0x3203c9e46ca618c8c1ce5dc67e7e9d75f5da2377 usdt busd python main py chain bsc input 0x55d398326f99059ff775485246999027b3197955 output 0xe9e7cea3dedca5984780bafc599bd69add087d56 example dexs fight moonbeam chain glmr busd python main py chain moonbeam output 0xa649325aa7c5093d12d6f98eb4378deae68ce23f run monitor glmr busd python monitor py config pair json run bot configs pair configs file config json wallet wallet private data wallet json glmr busd python bot py
/RigoBlock/rigoblock-monorepo,TypeScript,rigoblock circleci http circleci com gh rigoblock rigoblock monorepo tree master svg style shield circle token 8a3a97d8673b72dacc5efb04a10492ce473e9afb http circleci com gh rigoblock rigoblock monorepo tree master standard j http img shield io badge code style standard brightgreen svg http standardjs com code style prettier http img shield io badge code style prettier ff69b4 svg http github com prettier prettier package package description app package dapp rigoblock decentralized app v2 currently frozen api package api typescript api interact smart contract contract package contract rigoblock solidity smart contract test deployer package deployer tool smart contract compilation deployment ganache bootstrap package ganache bootstrap bootstrapping package deploy smart contract seed ganache exchange connector package stats api interact token exchange stats package stats rigoblock pool statistic collection data collector package stats ethereum token data collection system contributing installation ubuntu pre requisite apt get install build essential libusb libudev dev apt get install build essential libusb 1 0 0 dev libudev dev install nvm use correct node version curl http raw githubusercontent com creationix nvm v0 35 1 install sh bash nvm use issue following step check nvm ' documentation http github com creationix nvm blob master readme md install yarn npm g yarn install lerna using yarn frozen lockfile option accidentally update package break build yarn frozen lockfile bootstrap package install dependency yarn bootstrap build package order ganache need launched first required contract compiled optionally open ganache client instead using cli npx lerna run loglevel silent scope rgbk dapp ganache dev null yarn build kill 1 linting lint package yarn lint publishing package publish package monorepo npm need create new branch let lerna job warning make sure start clean state ganache publishing otherwise staging ' able connect smart contract deployed ganache git checkout master git checkout b feature publish use incremental number git push u origin feature publish yarn build npx lerna publish lerna ask new version update package version update package depend package commit tag current commit package version publish npm push github end ' need create pr feature publish branch merge master order tag properly main branch
/RubiconDeFi/rubicon-protocol-v1,Solidity,github workflow status http img shield io github workflow status rubicondefi rubicon protocol v1 truffle 20tests discord http img shield io discord 752590582274326680 link http discord com invite e7ps24j link http discord com invite e7ps24j doc detailed documentation rubicon protocol please visit doc http doc rubicon finance rubicon protocol rubicon open order book protocol ethereum protocol layer 2 native launch across multiple l2 network optimism http optimism io arbitrum http arbitrum io zksync http zksync io polygon http polygon technology rubicon protocol currently live optimistic ethereum network use today rubicon app http app rubicon finance protocol overview number key smart contract house primary operation rubicon protocol please see overview current smart contract infrastructure rubicon v1 rubiconmarket http user image githubusercontent com 32072172 159312652 a8a82329 844c 4315 8b0c dd6d85cf49ce png high level rubicon revolves around core smart contract rubiconmarket sol http github com rubicondefi rubicon protocol v1 blob master contract rubiconmarket sol facilitates peer peer trade erc 20 token using open order book rubicon pool http doc rubicon finance contract rubicon pool separate system smart contract enables passive liquidity provisioning rubicon order book start rubicon protocol locally bash git clone http www github com rubicondefi rubicon protocol v1 git cd rubicon protocol v1 npm separate instance npm run ganache npm run test
/defiat-crypto/anystake-contracts,Solidity,defiat anystake smart contract anystake smart contract defiat experiment self sustained high yielding decentralized finance anystake staking regulator stabilization vault reward distribution contract found http defiat net installation 1 install dependency yarn yarn install 2 compile contract build artifact hardhat yarn compile 3 run test waffle yarn test contract address anystake anystake regulator anystake vault defiat token http etherscan io token 0xb6ee603933e024d8d53dde3faa0bf98fe2a3d6f1 defiat point http etherscan io token defiat governance http etherscan io address
/rentable-world/rentable-protocol,Solidity,rentable protocol nft renting protocol architecture rentable sol contract rentable sol protocol core logic hold nft deposited orentable sol contract tokenization orentable sol erc721 token representing deposit asset ownership nft collection ha respective orentable token id minted deposit burnt withdraw orentable contain custom logic use rentable proxycall operate deposited asset wrentable sol contract tokenization wrentable sol erc721 token wrapper original nft representing rental nft collection ha respective wrentable token id minted rental start burnt expiry wrentable ownerof reflects rental duration e renter loses wrentable owerniship rental period wrentable contain custom logic use rentable proxycall operate deposited asset icollectionlibrary sol contract collection icollectionlibrary sol interface implement hook protocol event e g postdeposit postrent given collection governance set collection library via rentable setlibrary simplewallet sol contract wallet simplewallet sol smart wallet used renter cannot withdraw rented asset interact allowed protocol method implement eip1217 standard signature validation enabling wallet connect logins walletfactory sol contract wallet simplewallet sol factory smart wallet used rentable generate upgradeable smart wallet user following diagram show main component interaction erc721 nft collection represents generic nft collection e g decentraland land part rentable diagram rentable png main flow rentee deposit nft without listing call safetransferfrom owneraddress rentableaddress data nft collection contract empty data rentee deposit list nft call safetransferfrom owneraddress rentableaddress data nft collection contract rentabletypes rentalconditions contract rentabletypes sol encoded data field rentee receives orentable token representing deposit asset ownership rentee change rental condition listed nft call createorupdaterentalconditions rentable rentee delists nft call deleterentalconditions rentable rentee withdraws nft call withdraw rentable renter rent nft call rent address tokenaddress uint256 tokenid uint256 duration rentable payment token ether renter must pay pricepersecond duration payment token erc20 erc1155 renter must amount equal pricepersecond duration approve rentable transfer renter receives wrentable renter receives original nft simplewallet cannot withdraw interact owner approved protocol method requirement run project need python 3 8 local development environment node j 14 x development environment ganache brownie local environment setup install instruction http eth brownie readthedocs io en stable install html foundry install instruction http github com gakonst foundry installation test bash yarn test installation use tool project provides please pull repository github install dependency follows need yarn http yarnpkg com lang en doc install installed recommended use python virtual environment bash git clone http github com rentable world rentable protocol cd rentable protocol yarn install lock file pip install r requirement dev txt usage 1 choose network 2 deploy contract use already deployed one 3 prepare account 4 use network console remember add http metamask zendesk com hc en u article 360043227612 add custom network rpc network metamask network run following command respectively keep session open network ephemeral close command reset local testnet bash yarn network testnet mainnet fork useful interact protocol mainnet via local fork need local env variable etherscan api http etherscan io apis infura http infura io etherscan token web3 infura project id set env file following env example bash yarn network mainnet fork deploy contract bash yarn deploy testnet use network console run console bash yarn console interact directly contract example check owner tokenid 4 nft smart contract address 0x734f99154988a737ae7159594ebf828eb6761645 python testnft ' 0x734f99154988a737ae7159594ebf828eb6761645 ' ownerof 4 ' 0x5898d8d9a8895dbbd3d035724fa1bc252876cc22 ' run test bash yarn test prod deployment ethereum mainnet deployer 0xf6798a60b576658461eefebf583c2aaecd732334 governance 0xc08618375bb20ac1c4bb806baa027a4362156fe6 operator 0x49941c694693371894d6dcc1abdbc91a7395b703 feecollector 0xa55d576de85da4295abc1e2bea5d5c77fe189205 proxyadmin 0xdb246e57c401792fd272314ce666f5db07e89e67 ologic 0xe1ac13c21e3f1eebf71cc0f9e74d6059abac7970 obeacon 0x31c82151b1fdd035c64eb8b4c896aff799ca63b1 wlogic 0x160ac61afb9323b372feeb157471f23984544dfb wbeacon 0x3ec6fd32bb71fc288f18dcc1f2ebd6bb00bab25f simplewalletlogic 0x0a988b2b8b53de1b21dbe0cffb68eb6b6664868b simplewalletbeacon 0x268bc6fc0ab22847d9de037dceeb8f656826ef44 walletfactory 0x4d0662fb57464eef4dc9431bd49df949b039836d rentable 0xd766a11858c57252cc4f9978282b616c3e0bbac4 rentablelogic 0xacc7e1d41f62eb75309a28d0a3d29f09dbbc56ca decentraland land 0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d olandlogic 0xc1e572797de159155174fefa7bc0f023649153bf olandbeacon 0x3b2fb54b9f57ad9aeb9103af55e10905dee0d8b1 oland 0xce6ac4d01d18b99bf7926a2cdfa87d03d271d3d8 wland 0x21fc48317b1772997ef4753a82f7cb4a26eb2e07 library 0x2b0672f10c2f6487394b5760e2e0a69ca6a4c710 meebits 0x7bd29408f11d2bfc23c34f18275bbf23bb716bc7 omeebits 0xbec515aac1d601e8a1ce7baad493a80dad667e33 wmeebits 0x9a87c43c15d7ba0e4ea9b7ab9a0a0821c8777e94 lobsterdao 0x026224a2940bfe258d0dbe947919b62fe321f042 olobs 0x4fe71dafdd15ef1f9308f249bc7eae1fd48ba828 wlobs 0xc0fde9d7d28376cfecac37971397f01d2d9dfa59 experimental deployment rinkeby deployer 0xf6798a60b576658461eefebf583c2aaecd732334 governance 0xf6798a60b576658461eefebf583c2aaecd732334 operator 0xf6798a60b576658461eefebf583c2aaecd732334 feecollector 0xf6798a60b576658461eefebf583c2aaecd732334 testnft 0x8fa4d7b0c204b8f03c9f037e05cece57dece2214 obeacon 0x6a54cab15d7edf3d97af0b73e2ac9e5e430359ed orentable 0x029675b6bf1fe9bb55c8a46a18bec30e70edfc6e wbeacon 0x94ddf9510c0be76867ebc46dfda4509db492b30b wrentable 0x9fa166996e2f1110332589f6e0f924a45fac4cad simplewalletlogic 0x23588c541018ee522e0c9bdea7172214e61b3a66 simplewalletbeacon 0x09b76511d6f91081b6b5d316bc479b41803cf888 walletfactory 0x8c0f6d5aff5b5f6731cf976c0343aca2f0d38ddc rentable 0xb8cd02cbcc05ac25d77f63fabb2501bb71f9e2bb rentablelogic 0x7d9ba195f29c1a0102e8daad16091f3d79486216 proxyadmin 0xa9853c327d9f695fcca73e592cb624d1ecb60835 security security concern please visit bug bounty http github com rentable world rentable protocol security policy
/findtoni/liquid-dex,JavaScript,liquid dex netlify status http api netlify com api v1 badge aff6642a 05c9 48ef 933d 0483875531ec deploy status http app netlify com site liquid dex deploys decentralized exchange dex stack solidity truffle web3 j chai vue 3 vite pinia feature order book metamask wallet support buy sell order user trade history auto fill cancel order price chart smart contract unit test smart contract ropsten exchange http ropsten etherscan io address 0x2ef12f691fb95c8122c86130324d0cb1722ef7f1 token http ropsten etherscan io address 0x5774e7a581ae59f2ccef8eda4be9792911164683 instruction 1 run yarn install install dependency 2 start new development blockchain ganache 3 run truffle test make sure test pas 4 run truffle migrate build deploy contract development blockchain 5 run truffle exec script seed exchange j seed exchange order transaction 6 run truffle network ensure dev blockchain app network id ' match 7 run yarn run dev start server
/freight-trust/spool2,JavaScript,title ' protocol outline non oracle based price reporting economic incentive ' copyright 2020 freighttrust clearing corporation right reserved freight trust header area default freight trust banner image p align center img src http raw githubusercontent com freight trust branding master image optimized github repo card png p br freight trust banner image badge start p align center img alt twitter follow src http img shield io twitter follow freighttrustnet label 40freighttrustnet style social telegram badge href http freighttrust img alt join freight trust ' public telegram src http img shield io badge telegram 40freighttrust blue hack md badge p align center href http hackmd io sbgeelz7sbq46laatdez4w img src http hackmd io sbgeelz7sbq46laatdez4w badge p badge end freight trust header area default end br br http raw githubusercontent com freight trust legal master src disclaimer md http raw githubusercontent com freight trust legal master src disclaimer md adversarial staking pool href http freighttrust com freight trust utility staking information post github issue community github freight chain network http github com freight chain network issue adversarial pool adversarial pool proof violation proof violation adversarial pool adversarial pool 1 least value least value mechanic mechanic positive feedback positive feedback strategy game theory strategy game theory equal split method equal split method greater good sacrifice greater good sacrifice governance token governance token controlling interest controlling interest stability fund stability fund profit profit profit pool profit pool token burning token burning security security trustless trustless bankroll bankroll profit pool profit pool 1 technical detail technical detail backing backing winning withdrawal winning withdrawal starting new round starting new round begin proposal proof violation memetic verification method report rewarded honest reporting punished dishonest reporting adversarial pool pool emulate verification proof violation method asking agent user report two pool hold least value end round using asset ' risk e stake verification method adversarial pool mimic market way us market sentiment predict relative value value two pool always trend towards 50 50 split use case reporting price chain asset reporting price chain asset specified price feed reporting price chain asset non specified price feed least value least value mean reporting reported price asset per unit account basis mean defining benchmark price asset reporting aggregate value pool example pool 1 000 x pool b 500 x x 1 00 mechanic reward reporting accurately must always 100 value staked follows dominant strategy would report equally pool yielding ev 1 absolute minimum equal 50 50 split counter fee e g 5 round introduced making equal split method losing strategy value discrepancy pool 2 44 1 48 78 51 22 1 005002 positive feedback fee adjusted necessary equal split method ha become submissive dominant mean liquidity increase necessity fee diminished round trend closer closer towards 50 50 split strategy game theory equal split method reward reporting accurately must always 100 value staked follows dominant strategy would report equally pool yield ev 1 ev 1 absolute minimum equal 50 50 split counter var fee 5 fee round ha introduced making equal split method losing strategy value discrepancy pool 2 44 1 48 78 51 22 1 005002 fee adjusted necessary feel equal split method ha become worthless dominant mean liquidity increase necessity fee diminished round trend closer closer towards 50 50 split greater good sacrifice user may find position 400 edi pool currently hold 30 edi pool b sacrificing 30 ether pool b user hedge initial position increase odds larger report correct method totally encouraged method manipulation proof violation requires user accurately report side least value correctly predicting sum action including example user governance token controlling interest token holder control contract via mechanism allows voting operator contract may start stop round change fee percent planned feature would correspond switch floating exchange rate edi related pem rfc issue 5 http github com freight chain rfc issue 5 note governance token tradeable transferable way get governance token would edi immediate implementation planned governance decentralization implementation ha proven robust one stability fund order deposit staking pool certain number edi deposited pooled stability fund stability fund used ensure loss perform enhancement stability fund external pooling mechanism generate return shall distributed account deposited staking pool profit profit pool profit accumulated pool accessed token holder participating token burning burning portion token one relinquishes governance exchange share profit pool reduces transaction cost periodic dividend eliminates lock period periodic dividend require protects token holder low liquidity exchange mechanism burning token transference stability fund fund use either liquidation via open market operation distributing proceed security trustless without need random number generation use oracle oracle verified fact account confident protected oracle issue bankroll round played account need bankroll could lost play stolen mismanagement profit pool profit pool appears similar bankroll central pool ether design risk secured smart contract technical backing choosing backing side done via back function take unsigned integer argument representing side choice side chosen submitting 1 side b chosen submitting 2 function locked current active round contract paused security measure choice made within certain amount time end round denoted updateable variable buffertime extend end round amount time denoted updateable variable timeadd default buffertime 4 standard block default time add 35 standard block winning withdrawal winning withdrawal done via withdrawwinnings function take unsigned integer argument representing round id withdraw function locked round associated given id still progress contract paused given id invalid doe represent round ha played active round latter ensure startround function ha called withdrawal made ensuring round winner variable ha updated properly round associated given id eth one side refund issued anyone withdrawing round house cut taken winning losing side ignored protect account low activity round round associated given id ended tie house cut taken withdrawal determined house cut tie variable otherwise house cut determined house cut variable starting new round starting new round done via startround function done active round contract paused beyond creating new active round function also declares winner previous round take house cut award bounty allows withdrawal previous round take place incentivize account start new round current round ha completed account awarded bounty calling function equal percentage house cut taken round percentage stored updatable variable start round bounty percent previous round eth round time simply extended first thing checked function gas saving measure event bounty function caller one side eth new round started without taking house cut account previous round get refund event bounty otherwise house cut taken total round bounty taken house cut awarded treasury function caller respective new round started notice notice cftc rule 4 41 hypothetical simulated performance result certain limitation unlike actual performance record simulated result represent actual trading also since trade executed result may compensated impact certain market factor lack liquidity representation made account likely achieve profit loss similar shown legal disclosure http github com freight trust legal privacy policy http github com freight trust legal blob master src privacy policy md term service http github com freight trust legal blob master src term service md tag staking pool ethereum token game theory c freighttrust clearing corporation mit license mit license sam bacha alex wade
/freight-trust/graphs,JavaScript,title ' protocol outline non oracle based price reporting economic incentive ' copyright 2020 freighttrust clearing corporation right reserved freight trust header area default freight trust banner image p align center img src http raw githubusercontent com freight trust branding master image optimized github repo card png p br freight trust banner image badge start p align center img alt twitter follow src http img shield io twitter follow freighttrustnet label 40freighttrustnet style social telegram badge href http freighttrust img alt join freight trust ' public telegram src http img shield io badge telegram 40freighttrust blue hack md badge p align center href http hackmd io sbgeelz7sbq46laatdez4w img src http hackmd io sbgeelz7sbq46laatdez4w badge p badge end freight trust header area default end br br http raw githubusercontent com freight trust legal master src disclaimer md http raw githubusercontent com freight trust legal master src disclaimer md adversarial staking pool href http freighttrust com freight trust utility staking information post github issue community github freight chain network http github com freight chain network issue adversarial pool adversarial pool proof violation proof violation adversarial pool adversarial pool 1 least value least value mechanic mechanic positive feedback positive feedback strategy game theory strategy game theory equal split method equal split method greater good sacrifice greater good sacrifice governance token governance token controlling interest controlling interest stability fund stability fund profit profit profit pool profit pool token burning token burning security security trustless trustless bankroll bankroll profit pool profit pool 1 technical detail technical detail backing backing winning withdrawal winning withdrawal starting new round starting new round begin proposal proof violation memetic verification method report rewarded honest reporting punished dishonest reporting adversarial pool pool emulate verification proof violation method asking agent user report two pool hold least value end round using asset ' risk e stake verification method adversarial pool mimic market way us market sentiment predict relative value value two pool always trend towards 50 50 split use case reporting price chain asset reporting price chain asset specified price feed reporting price chain asset non specified price feed least value least value mean reporting reported price asset per unit account basis mean defining benchmark price asset reporting aggregate value pool example pool 1 000 x pool b 500 x x 1 00 mechanic reward reporting accurately must always 100 value staked follows dominant strategy would report equally pool yielding ev 1 absolute minimum equal 50 50 split counter fee e g 5 round introduced making equal split method losing strategy value discrepancy pool 2 44 1 48 78 51 22 1 005002 positive feedback fee adjusted necessary equal split method ha become submissive dominant mean liquidity increase necessity fee diminished round trend closer closer towards 50 50 split strategy game theory equal split method reward reporting accurately must always 100 value staked follows dominant strategy would report equally pool yield ev 1 ev 1 absolute minimum equal 50 50 split counter var fee 5 fee round ha introduced making equal split method losing strategy value discrepancy pool 2 44 1 48 78 51 22 1 005002 fee adjusted necessary feel equal split method ha become worthless dominant mean liquidity increase necessity fee diminished round trend closer closer towards 50 50 split greater good sacrifice user may find position 400 edi pool currently hold 30 edi pool b sacrificing 30 ether pool b user hedge initial position increase odds larger report correct method totally encouraged method manipulation proof violation requires user accurately report side least value correctly predicting sum action including example user governance token controlling interest token holder control contract via mechanism allows voting operator contract may start stop round change fee percent planned feature would correspond switch floating exchange rate edi related pem rfc issue 5 http github com freight chain rfc issue 5 note governance token tradeable transferable way get governance token would edi immediate implementation planned governance decentralization implementation ha proven robust one stability fund order deposit staking pool certain number edi deposited pooled stability fund stability fund used ensure loss perform enhancement stability fund external pooling mechanism generate return shall distributed account deposited staking pool profit profit pool profit accumulated pool accessed token holder participating token burning burning portion token one relinquishes governance exchange share profit pool reduces transaction cost periodic dividend eliminates lock period periodic dividend require protects token holder low liquidity exchange mechanism burning token transference stability fund fund use either liquidation via open market operation distributing proceed security trustless without need random number generation use oracle oracle verified fact account confident protected oracle issue bankroll round played account need bankroll could lost play stolen mismanagement profit pool profit pool appears similar bankroll central pool ether design risk secured smart contract technical backing choosing backing side done via back function take unsigned integer argument representing side choice side chosen submitting 1 side b chosen submitting 2 function locked current active round contract paused security measure choice made within certain amount time end round denoted updateable variable buffertime extend end round amount time denoted updateable variable timeadd default buffertime 4 standard block default time add 35 standard block winning withdrawal winning withdrawal done via withdrawwinnings function take unsigned integer argument representing round id withdraw function locked round associated given id still progress contract paused given id invalid doe represent round ha played active round latter ensure startround function ha called withdrawal made ensuring round winner variable ha updated properly round associated given id eth one side refund issued anyone withdrawing round house cut taken winning losing side ignored protect account low activity round round associated given id ended tie house cut taken withdrawal determined house cut tie variable otherwise house cut determined house cut variable starting new round starting new round done via startround function done active round contract paused beyond creating new active round function also declares winner previous round take house cut award bounty allows withdrawal previous round take place incentivize account start new round current round ha completed account awarded bounty calling function equal percentage house cut taken round percentage stored updatable variable start round bounty percent previous round eth round time simply extended first thing checked function gas saving measure event bounty function caller one side eth new round started without taking house cut account previous round get refund event bounty otherwise house cut taken total round bounty taken house cut awarded treasury function caller respective new round started notice notice cftc rule 4 41 hypothetical simulated performance result certain limitation unlike actual performance record simulated result represent actual trading also since trade executed result may compensated impact certain market factor lack liquidity representation made account likely achieve profit loss similar shown legal disclosure http github com freight trust legal privacy policy http github com freight trust legal blob master src privacy policy md term service http github com freight trust legal blob master src term service md tag staking pool ethereum token game theory c freighttrust clearing corporation mit license mit license sam bacha alex wade
/WickedFinancial/Wicked,TypeScript,wicked repo wicked financial http wickedfinancial netlify app dapp creating redeeming settling synthetich token based uma lsp http medium com uma project introducing uma long short pair lsp financial primitive 84596803864f long short position contract use case lsp contract financial primitive allow user build variety different derivative choosing corresponding configuration parameter currently focusing configuration allows user achieve leveraged exposure exchange rate change fiat currency e eur usd providing potentially interest yielding stable coin token collateral ultimate goal enable people around world easily hedge foreign currency risk distributed permission le way using lsp contract purpose allows user 1 avoid liquidation risk management effort 2 trade long short position individual token secondary market development setup install requirement assuming node v14 x yarn v1 22 installed able install dependency using bash yarn install set rpc url wallet mnemonic task test described require hardhat access kovan rpc node wallet using first account wallet various test deployment task purpose save url kovan rpc node well wallet mnemonic url txt mnemonic txt file root level repository note file added gitignore file extra careful never commit push file repository run test project contains number test regarding dapp well uma contract interface use run bash yarn test run dev server run development nuxt server hot reload serve dapp localhost 300 http localhost 3000 bash yarn dev build run prod server bash generate static project yarn generate build production launch server yarn build yarn start using dapp currently relevant contract instance dapp deployed kovan testnet therefore option using dapp 1 connect kovan directly 2 run local fork kovan connect case suggest using metamask http metamask io browser wallet step work identicially wether use locally hosted version dapp one hosted wicked financial http wicked financial connect kovan directly option switch metamask wallet kovan network start using dapp run local kovan fork want unlimited test eth extended control state network e setting timestamps might want fork kovan network run local copy achieve running following hardhat command replacing kovan rpc url url kovan rpc provider infura http infura io alchemy http www alchemy com bash yarn hardhat node fork kovan rpc url show account recommend provide rpc allows archive access avoid unnecessary transaction error command show number account contain 10000 eth local network setup metamask local network first conn 1 add new network rpc url http localhost 8545 chain id 42 2 add first account shown hardhat command using private key using local network might get error metamask saying something like transaction nonce high case need reset respective account using button setting custom hardhat task speed testing allow user interactively step different phase contract lifecycle implemented number custom hardhat task note parameter network localhost run command local kovan fork also run directly kovan adjusting parameter accordingly however might result spending significant amount eth wallet whose mnemonic provided generate collateral creating minting synthetic token given contract require provide configured collateral generate collateral respective token case lusd visit liquity front end kovan liquity front end get lusd remember currently kovan http eth liquity fi http liquityapp com http app liquity gg fast forward expiry time local network forward block timestamp expiry date contract identified synthetic name run bash yarn hardhat time expiry synthetic name eurusd 210701 network localhost propose price optimistc oracle propose settlement price price feed given contract optimistic oracle run bash yarn hardhat propose synthetic name eurusd 210701 proposed price 1 25 network localhost fast forward past dispute liveness local network fast forward block timestamp default dispute liveness period optimistic oracle run bash yarn hardhat time dispute network localhost settle lsp token also possible ui price ha proposed disputed liveness period ha past settle synthetic token created bash yarn hardhat settle lsp synthetic name eurusd 210701 long token 0 short token 0 network localhost documentation giant whose shoulder stand front end vue 2 doc http vuejs org v2 guide nuxt j doc http nuxtjs org vuetify doc http vuetifyjs com en introduction vuetify web3 smart contract backend uma long short pair http doc umaproject org synthetic token long short pair hardhat doc http hardhat org getting started testing vue test utils http vue test utils vuejs org jest doc http jestjs io doc api hardhat script http hardhat org guide script html linting styling prettier doc http prettier io doc en configuration html eslint doc http eslint org doc user guide configuring
/ElrondDevGuild/lilconvex,Shell,lilconvex project aim provide compound contract ashswap construction work progress construction main functionality add liquidity pool interested enter farm transaction calling addliquidityandenterfarm function compound ash reward usdc usdt pool calling compound function compound ash reward usdc wusdc pool calling compoundusdcwusdc function compound ash reward renbtc wbtc pool calling compoundbtc function compound 3 pool single transaction calling compoundall function withdraw specific farm retrieve liquidity also quitting liquidity pool transaction calling exitposition function right argument function retrieve token swapping farm token lp token ash swapping lp token liquidty liquidity ash token sent compound smart contract wallet also possibility exit position single transaction calling exitallposition function receive liquidity deposited ash reward wallet thought work ha done context ashswap battle yield http battleofyields ashswap io address erd1yq2v0rpt5h2lfa8ljkgu6mchrjvy6en3ywe2wfnnjun2rs4qu8nqalcfe5 signature 5d0d8996611143ff82734dc9d829429f769fd4e2780bf82b078f0e888db5289d899e2783cf064527f96fb164cd3efefa10909d3a53e8d34ae5e21db57fd2e60a order build top smart contract ha designed single user deposit asset compound contract order create single compound contract used several user need add token track percentage liquidity user ha compound contract type treasury management ha done repo recommend use work production moreover although workflow done update smart contract order pas way le argument snippet token identifier smart contract address stored storage mapper deploying contract future schema schema addliquidityandenterfarm workflow alt text http github com yum0e lilconvex blob main image addliquidityandenterfarm png raw true schema compound workflow workflow specific usdc usdt pool bit complicated pool swap alt text http github com yum0e lilconvex blob main image compound2 png raw true autocompound deploy contract call function addliquidityandenterfarm order deposit pool want go workflow cjs execute cron choose period two auto compound choose focus one farm check http crontab guru http crontab guru cron syntax
/iBitLabs/bitbtc-contracts,Solidity,abstract bitcoin currently digital value reserve real private property global consensus bitcoin king coin however pity defi killer dapp based btc world solve problem high price btc slow transfer speed propose solution split btc bitbtc ethereum smart contract 1 btc 1 million bitbtc bitbtc ha faster transfer speed lower transfer fee suitable micropayment energy saving convenient participation defi bitbtc make easier btc buy everything bitant governance token bitbtc dao adhere dao philosophy team doe token token allocated community community autonomy exchange fee mainly used repurchase bitant compile sh cd bitbtc contract yarn cp env example env yarn build link website http bitbtc money http bitbtc money whitepaper http ibitlabs medium com bitbtc whitepaper 32b4aa53b00f http ibitlabs medium com bitbtc whitepaper 32b4aa53b00f grant http bitbtc money grant http bitbtc money grant bitbtc contract address ethereum 0x3c513db8bdc3806e4489d62c3d549a5aaf6a4e97 http etherscan io token 0x3c513db8bdc3806e4489d62c3d549a5aaf6a4e97 bitbtc contract address optimism 0xc98b98d17435aa00830c87ea02474c5007e1f272 http optimistic etherscan io token 0xc98b98d17435aa00830c87ea02474c5007e1f272 bitbtc contract address polygon 0x3c513db8bdc3806e4489d62c3d549a5aaf6a4e97 http polygonscan com token 0x3c513db8bdc3806e4489d62c3d549a5aaf6a4e97 bitbtc contract address bsc 0x3c513db8bdc3806e4489d62c3d549a5aaf6a4e97 http bscscan com token 0x3c513db8bdc3806e4489d62c3d549a5aaf6a4e97 bitant contract address ethereum 0x15ee120fd69bec86c1d38502299af7366a41d1a6 http etherscan io token 0x15ee120fd69bec86c1d38502299af7366a41d1a6 bitant contract address optimism 0x5029c236320b8f15ef0a657054b84d90bfbeded3 http optimistic etherscan io token 0x5029c236320b8f15ef0a657054b84d90bfbeded3 bitant contract address bsc 0x81a4c8438b77221f192d8d25252afac62fecd58f http bscscan com token 0x81a4c8438b77221f192d8d25252afac62fecd58f sat contract address ethereum optimism polygon bsc 0xdb1ced09bfc0ac9599c7921c70e08965d4588a27 http etherscan io token 0xdb1ced09bfc0ac9599c7921c70e08965d4588a27 twitter founder http twitter com satoshinjunior http twitter com satoshinjunior audit certik http www certik org project bitant http www certik org project bitant coingecko http www coingecko com en coin bitant http www coingecko com en coin bitant cmc http coinmarketcap com currency bitant http coinmarketcap com currency bitant coinbase http coinbase com price bitant http coinbase com price bitant global telegram http lovebitbtc http lovebitbtc http bitantchinesecommunity http bitantchinesecommunity optimism gateway http gateway optimism io http gateway optimism io multichain http app multichain org http app multichain org github http github com ibitlabs bitbtc contract http github com ibitlabs bitbtc contract price ethereum bitant http dexscreener com ethereum 0x4f9a70b87aac8e4b751f65350942b8faa9dc4b4e http dexscreener com ethereum 0x4f9a70b87aac8e4b751f65350942b8faa9dc4b4e price optimism bitant http dexscreener com optimism 0x81a53cf23579cb251068a2d62ae8b2071ebe5a7d http dexscreener com optimism 0x81a53cf23579cb251068a2d62ae8b2071ebe5a7d price bsc bitant http dexscreener com bsc 0x9f8e0c128a261b8387d54f029ee5e67a711c3341 http dexscreener com bsc 0x9f8e0c128a261b8387d54f029ee5e67a711c3341
/sambacha/yearn-interfaces,Shell,copyright 2020 yearn finance contributor p align center img src http raw githubusercontent com gist sambacha 9a62174a080ead34271ff5d187a24343 raw 02cad2900f4cedb87895cc57729030e095d2869f gh banner svg align right width 350 &#9; h1 align left yearn interface contract package h1 h3 align center h3 p align center align center twitter follow http img shield io twitter follow iearnfinance svg label iearnfinance style social http twitter com iearnfinance discord http img shield io discord 734804446353031319 svg color 768ad4 label discord logo http 3a 2f 2fdiscordapp com 2fassets 2f8c9701b98ad4372b58f13fd9f65f966e svg http discordapp com channel 734804446353031319 telegram http img shield io badge chat 20telegram blue svg http yearnfinance img alt discourse user src http img shield io discourse user server http 3a 2f 2fgov yearn finance 2f center p p br br overview npm install yfi interface contract vault interface istrategy source code yearn protocol develop interface yearn istrategy sol http github com iearn finance yearn protocol blob develop interface yearn istrategy sol function want return address unwrapped token strategy take deposit tab tab title solidity javascript function want external view return address endtab endtabs type desc output 0 address address token strategy take deposit function deposit deposit token want return smart contact specified strategy tab tab title solidity javascript function deposit external endtab endtabs func withdraw address dust collecting function create additional reward token incorrectly sent strategy take erc20 token address send full amount token strategy controller function access control enforcing controller allowed caller check place ensure token type withdraw used strategy tab tab title solidity javascript function withdraw address external endtab endtabs type desc input 0 address erc 20 token drained function withdraw uint256 partially withdraws fund denominated want token strategy always sending vault case strategy implement harvest withdrawal fee may applied function access control enforcing controller allowed caller tab tab title solidity javascript function withdraw uint256 external endtab endtabs type desc input 0 uint amount withdrawn function skim used obtain remaining amount borrowed lending platform relevant strategy implement lending platform aave tab tab title solidity javascript function skim external endtab endtabs function withdrawall withdraws entire amount want token available always sending vault function access control enforcing controller allowed caller typically used migrating strategy function typically us withdraw performs set sequential function call depending strategy strategy implement liquidity pool lending platform withdrawal platform performed vault unwrapped token delivered back vault return uint256 total amount withdrawn tab tab title solidity javascript function withdrawall external return uint256 endtab endtabs type desc output 0 uint256 amount withdrawn function balanceof return strategy ' current want token balance tab tab title solidity javascript function balanceof external view return uint256 endtab endtabs type desc output 0 uint256 strategy ' want token balance ivault source code yearn protocol develop interface yearn ivault sol http github com iearn finance yearn protocol blob develop interface yearn ivault sol function token return unwrapped native token address vault take deposit tab tab title solidity javascript function token external view return address endtab endtabs type desc output 0 address vault unwrapped native token address function underlying return native underlying token address delegated vault example case alink delegated vault underlying return address link token tab tab title solidity javascript implemented delegated vault function underlying external view return address endtab endtabs type desc output 0 address delegated vault underlying native token address function name return vault wrapped token name string e g yearn dai stablecoin tab tab title solidity javascript function name external view return string memory endtab endtabs type desc output 0 string vault wrapped token name function symbol return vault wrapped token symbol string e g ydai tab tab title solidity javascript function symbol external view return string memory endtab endtabs type desc output 0 string vault wrapped token symbol function decimal return amount decimal vault wrapped token uint8 tab tab title solidity javascript function decimal external view return uint8 endtab endtabs type desc output 0 uint8 decimal vault ' wrapped token func controller return address vault ' controller tab tab title solidity javascript function controller external view return address endtab endtabs type desc output 0 address vault controller contract function governance return address vault governance contract tab tab title solidity javascript function governance external view return address endtab endtabs type desc output 0 address vault governance contract function getpriceperfullshare return price vault wrapped token denominated unwrapped native token calculation nativetokenbalance ytokentotalsupply nativetokenbalance current balance native token e g dai vault controller strategy contract ytokentotalsupply total supply vault ' wrapped token e g ydai tab tab title solidity javascript function getpriceperfullshare external view return uint256 endtab endtabs type desc output 0 uint256 price vault wrapped token denominated unwrapped native token function deposit deposit specified amount native unwrapped token token return vault tab tab title solidity javascript function deposit uint256 external endtab endtabs type desc input 0 uint256 amount deposit vault function depositall deposit maximum available amount native unwrapped token token return vault tab tab title solidity javascript function depositall external endtab endtabs function withdraw withdraws specified amount native unwrapped token token return vault tab tab title solidity javascript function withdraw uint256 external endtab endtabs type desc input 0 uint256 amount withdraw vault function withdrawall withdraws maximum available amount native unwrapped token token return vault tab tab title solidity javascript function withdrawall external endtab endtabs icontroller source code yearn protocol develop interface yearn icontroller sol http github com iearn finance yearn protocol blob develop interface yearn icontroller sol function withdraw call strategy withdraw function amount defined unit256 strategy specified address function access control enforcing vault allowed caller tab tab title solidity javascript function withdraw address uint256 external endtab endtabs type desc input 0 address address strategy withdraw input 1 uint256 amount withdraw function balanceof return strategy ' balance specified token tab tab title solidity javascript function balanceof address external view return uint256 endtab endtabs type desc input 0 address token used strategy output 0 uint256 balance specified token function earn transfer profit earned yield generating activity strategy vault take address token withdraw amount tab tab title solidity javascript function earn address uint256 external endtab endtabs type desc input 0 address token withdrawn vault strategy input 1 uint256 amount withdrawn function want hint style info used currently deployed controller please refer strategy want function want instead endhint tab tab title solidity javascript function want address external view return address endtab endtabs function reward return address treasury system reward fee go tab tab title solidity javascript function reward external view return address endtab endtabs type desc output 0 address treasury contract function vault take token address return corresponding vault address tab tab title solidity javascript function vault address external view return address endtab endtabs type desc input 0 address token find vault address output 0 address vault address associated specified token function strategy take token address return corresponding strategy address tab tab title solidity javascript function strategy address external view return address endtab endtabs type desc input 0 address token find strategy address output 0 address strategy address associated specified token tested find specific versioning information used http gist github com sambacha 116b0dfc5c99cc8905545d63002b8f94 version build date version 0 5 17 mdc6umvszwfzzti0njazmtk5 thu oct 22 01 52 40 utc 2020 version 0 6 0 mdc6umvszwfzztiwmzg2njkz thu oct 22 01 58 22 utc 2020 file converter sol icontroller sol mintr sol onesplitaudit sol strategy sol token sol vault sol latest build name yfi interface contract br version 0 1 0 br package size 13 3 kb br unpacked size 165 8 kb br shasum 85be0cafad7ecd37cd6b2a0fc8ecb6eaf9eca73d br integrity sha512 qnhsqsdzql8u3 jureoqmrqqdtq br total file 17 br security point contact method github issue http github com iearn finance yearn security issue q 3aissue 3aopen sort 3aupdated desc milkyklim milkyklim http github com milkyklim banteg banteg http github com banteg lehnberg lehnberg http github com lehnberg contributing 1 review yip 0 yip yip 0 md 2 fork repository clicking fork top right 3 add yip fork repository template yip yip x md 4 submit pull request yearn ' yip repository http github com iearn finance yip first pr first draft final yip must meet formatting criterion enforced build largely correct metadata header editor manually review first pr new yip assign number merging make sure include discussion header url new thread gov yearn finance http gov yearn finance people discus yip whole license spdx license identifier mit br spdx filecopyrighttext copyright 2020 yearn finance
/pineapple-cash/nitrogen,Solidity,nitrogen token smart contract contained within repo smart contract used create nitrogen nitro token token smart contract ha built feature listed verify feature viewing source code token smart contract http github com pineapple cash nitrogen blob main nitrogen sol total supply 100 000 000 000 nitrogen nitro circulating supply 50 000 000 000 nitro 9 decimal place 50 burned launch verify http bscscan com tx 0x98a370c9cff894c08c0ab7ae8ff8479c22aeb7673e9a99a27082278ff05a0aad 50 added liquidty pancakeswap burned verify http bscscan com tx 0x351698ad39feb4e17f0b5212d4478e7c22c75284ee4df18e62891ba77a8be080 3 redistrubted token holder based trasnfers buy sell etc 3 added avaliable liquidty pair based transfer buy sell etc official smart contract address 0xcd975fed7b03f2a4a1f253007447a2dd917a1382 make sure double check token contract address buying selling nitrogen nitro beware scammer fake token trading need help join pineapple cash telegram http pnapltokengroup buy nitrogen nitro currently nitrogen trading following exchange pancakeswap http pancakeswap info token 0xcd975fed7b03f2a4a1f253007447a2dd917a1382 coming soon view trading stats nitrogen nitro view trading stats nitrogen coin market cap coin gecko soon use following decentalized tool view trading activity poocoin http poocoin app token 0xcd975fed7b03f2a4a1f253007447a2dd917a1382 dextools http www dextools io app pancakeswap pair explorer 0x6f8c7a74f4baa4bee297a9bf7fc472e24b707462
/berkkirtay/berkcoin,JavaScript,berkcoin decentralized app node j ci http github com berkkirtay berkcoin action workflow berkcoin test yml badge svg http github com berkkirtay berkcoin action workflow berkcoin test yml license mit http img shield io badge license mit yellow svg http opensource org license mit berkcoin interactive token environment allows user trade stake token along nft feature us erc20 token standard feature contract deployed truffle framework project aim basic token environment standard feature ensure integrity functionality contract included unit test ci website deployed ropsten testnet berkkirtay github io berkcoin http berkkirtay github io berkcoin basic usage wallet provider used via getweb3 function requirement metamask transaction ethereum testnet preferably use ganache ropsten testnet truffle compile contract migrate compiling contract 1 set related field truffle config j migration folder 2 command line truffle compile truffle migrate 3 migrate testnet mainnet use truffle migrate network name testnet run app cd client npm run start screenshots client token staking enc1 http raw githubusercontent com berkkirtay berkcoin main example staking png token trade enc1 http raw githubusercontent com berkkirtay berkcoin main example trade png nft marketplace enc1 http raw githubusercontent com berkkirtay berkcoin main example nftmarketplace png collectible info enc1 http raw githubusercontent com berkkirtay berkcoin main example collectibleinfo png
/renpool/renpool-contracts,TypeScript,renpool project bringing community pool ren ecosystem ren renvm permissionless decentralized virtual machine protocol secure network virtual computer power interoperability decentralized application enabling cross chain lending exchange collateralization document assumes high level understanding renvm protocol check http github com renproject ren wiki learn inner working renvm information ren ren project found http renproject io renvm visit http github com renproject explore repos word renvm network node called darknodes perform secure multiparty computation smpc shamir secret share control ecdsa private key securely hence custody fund cross chain bridging darknodes earn fee every transaction process order power darknode need stake utility token provided renvm ren token erc20 ethereum token http ethereum org en developer doc standard token erc 20 amount stake known bond 100 000 ren currently 88 000 usd renpool renpool project allows user participate ren staking pool rewarded share fee earned darknode earn darknode reward without 100k ren operaing darknode renpool feature renpool allows user create new pool becoming node operator new darknode deposit ren pool reach 100k renpool team set manage new darknode todo request withdraw running pool another staker want take place transfer staked ren become part pool however keep mind lose reward epoch instead new staker receive todo automatically deregister running node 50 staked ren collectively request withdraw share moreover renpool team never possession ren token reward todo need audit smart contract slashing ethereum gas explain fee owner node operator staker renpool work core renpool powered smart contract dictate pool reward distributed among user renpool architecture renpool arch drawio svg three main actor using renpool owner node operator stakers turn renpool us ren smart contract http renproject github io ren client doc contract interact renvm decentralized permissionless manner ren contract address published mainnet http renproject github io contract mainnet testnet http renproject github io contract testnet renpool state following picture show different state renpool renpool fsm renpool fsm drawio svg unlocked stakers either deposit withdraw ren token see fit however pool collect ren bond currently 100k ren token becomes locked pool locked node operator register new darknode http doc renproject io darknodes getting started digital ocean setup darknode mac linux please note ren token collected contract never possession node operator owner darknode ha registered start earn fee stakers withdraw respective percentage fee claiming reward renpool claim reward sequence renpool reward drawio svg getting started renpool project us yarn package manager hardhat http hardhat org getting started http hardhat org getting started development environment ethereum use alchemy http www alchemy com json rpc provider fork ethereum network skip next section working yarn installation install sh npm install g yarn install project sh yarn install create env file env template file defines environment variable read hardhat sh cp env template env add alchemy key http doc alchemy com alchemy introduction getting started newly created env file txt alchemy key alchemy key init hardhat console create local blockchain plus 10 local account loaded eth sh yarn hardhat console want use mainnet fork run sh fork mainnet yarn hardhat console deploy renpool contract local network mint erc20 token called ren get fresh instance every time init hardhat console j const renpool rentoken faucet await require ' script deploy j ' renpool rentoken contract object faucet function used mint ren token interact renpool rentoken contract interact contract use signer provided hardhat first get ren token faucet j const signer await ether getsigners await rentoken balanceof signer address tostring ' 0 ' await faucet rentoken signer await rentoken balanceof signer address tostring ' 1000000000000000000000000 ' deposit ren token ren pool j await renpool totalpooled tostring ' 0 ' await rentoken connect signer approve renpool address 100 await renpool connect signer deposit 100 verify ren pool balance ha increased j await renpool totalpooled tostring ' 100 ' withdraw ren token j await renpool connect signer withdraw 5 await renpool totalpooled tostring 95 deploying smart contract live network first need fund wallet target network e g kovan mainnet add private key etherscan api key env file etherscan api key used deployment process verify smart contract see http etherscan io verifycontract information smart contract verification etherscan use hardhat etherscan http hardhat org plugins nomiclabs hardhat etherscan html using programmatically plugin verify smart contract txt private key private key etherscan api key etherscan api key deploy smart contract kovan use sh yarn deploy network kovan replace kovan name network wish use e g mainnet running test code coverage renpool depends heavily ren smart contract interact renvm ren smart contract deployed independently ren team address found http renproject github io ren client doc contract deployment test ren folder contains check verify contract address test suite designed run local fork network ren smart contract already deployed currently network mainnet kovan run test suite kovan fork sh yarn test hand want run test mainnet fork sh yarn test mainnet run test suite report gas usage end sh yarn test gas run test coverage coverage report written coverage index html sh yarn coverage run solhint solidity linter sh yarn lint yarn script declared package json running static analysis use slither http github com crytic slither run static analysis renpool contract slither run hardhat application need install slither sh pip3 install slither analyzer run sh slither see http github com crytic slither information static analysis ha integrated pipeline github action see result analysis see http github com ethernautas renpool action workflow analysis yaml query send renvm transaction wip useful claiming reward full doc http renproject github io ren client doc api endpoint http explorer renproject io http lightnode testnet herokuapp com http lightnode devnet herokuapp com example http post http lightnode testnet herokuapp com http 1 1 content type application json accept application json method ren querytxs id 1 jsonrpc 2 0 params txstatus done offset 0 limit 10 http post http lightnode testnet herokuapp com http 1 1 content type application json accept application json method ren querytx id 1 jsonrpc 2 0 params txhash s8bza6dhmrtol6noeo3yalgdtnqfedef4vkvvcxecci
/tyedem/NFT-AuctionHouse,Solidity,project 3 auction market place nfts alt nftimages banner2 png br table content description description goal project goal data collection preparation data collection preparation development technology development technology instruction instruction video demo video demo outcome summary outcome summary contributor contributor reference resource reference resource description project aim create nft marketplace decentralized appliccation dapp auction digital asset using smart contract solidity streamlit goal alt image nft popularity image png br recent year ha ever increasing interest nfts example one nft wa image column written new york time sold 560 000 matter day observing keen interest demand sale nfts well expanding market digital asset felt would great idea launch gram auction marketplace gram ' goal support local emerging artist provide fast efficient fintech platform register work sell auction based marketplace allowing connect collector world decentralized network nft auction marketplace provides 1 platform connects artist collector blockchain technology complete transparency hold asset token deed auctioned using erc721 standard 2 ability place bid auction decentralized network following function feature br ability participate english auction whereby bid price keep increasing duration auction ability monitor auction process start bid bid price highest bidder etc ability view frequency bidder safe secure transfer nft ownership upon auction completion safe secure transfer fund upon auction completion refund fund bidder get lucky 3 use polygon network provides user method lower cost efficient faster compared transacting directly ethereum network polygon essentially scaling solution aim address inefficiences transacting high demand ethereum network group multiple transaction single block comitting main ethereum network 4 work digital assests stored established secure file storage system ipfs pinata 5 gram doe charge fee retain profit nft sale hence providing free cost platform artist opposed opensea charge chunky one time registration fee list nft well recurring fee data collection preparation order test demo application need inventory digital artwork created custom one using photoshop order generate ipfs link custom artwork utilized pinata alt image creation image png br development technology nft marketplace build using following technology solidity smart contract remix ide streamlit frontend metamask wallet decentralized blockchain network polygon testnet ganache xbox gamebar quicktime player demo video chainlink new technology library covered class pinata photoshop python library used json request eth account eth typing web3 pathlib dotenv streamlit dataclasses typing chainlink aggregatorv3interface openzeppelin erc721 erc721uristorage ownable counter alt image solidity image png br alt image remix image png br instruction environment preparation file download following file help get started 1 auctionregistry sol final auctionregistry sol 2 auction sol final auction sol add polygon mumbai testnet metamask step 1 open metamask select setting 2 select network 3 select add network 4 enter network name matic mumbai 5 enter new rpc url http rpc mumbai maticvigil com 6 enter chain id 80001 7 enter currency symbol matic 8 enter block explorer url http mumbai polygonscan com 9 add matic account via http faucet polygon technology obtain rpc server address 1 option 1 polygon mumbai test intended project blockchain create account http rpc maticvigil com create dapp rpc link mumbai testnet 2 option 2 ganache backup project blockchain simply copy rpc server ganache ui load key env file 1 load pinata api key pinata secret api key env file ipfs hashing storage 2 load web3 provider uri rpc server address 3 load smart contract address according streamlit dapp nftregistry dapp requires nftregistry sol contract address deployed remix auction dapp requires auction sol contract address deployed remix 4 load wallet ' mnemonic seed phrase remix step run application clone code github repository 1 compile auction sol ensure compiles without error 2 compile auctionregistry sol ensure compiled successfully 3 prior deployment ensure metamask wallet connected corresponding item injected web3 remix ide selected 4 deploy auction sol check deployed contract ensure copy address would required next step 5 add auction sol contract address deploy auctionregistry sol proceed deploy auctionregistry sol 6 auctionregistry sol deployed contract use address auction contract setapprovalforall input field value true ensure nft registered participate auction 7 auctionregistry sol deployed contract use registernft field provide address ownner key nft detail register auction 8 proceed auction process registered nft please follow step demonstrated auction demo see video demo section alt image remix metamask png br streamlit dapp 1 copy deployed auctionregistry sol contract address smart contract address key env file location auctionregistry dapp auction sol separate env file location auction dapp location captured step 2 open command line interface terminal 3 nftregistry dapp navigate location project 3 final streamlit registry input command streamlit run app py 4 auction dapp navigate location project 3 final streamlit registry input command streamlit run app py alt image streamlit registry png br alt image streamlit registry tx png br alt image streamlit auction png br video demo remix contract demo remixauctiondemo mov dapp nft registry demo streamlitauctionregistrydemo mov dapp auction demo streamlitauctiondemo mov outcome summary though aimed achieve minimum viable product mvp within 2 week fully successful working every bug encountered list known bug current version gram ' nft auction house area consider optimization optimization debugging opportunity 1 polygon matic mumbai testnet remix issue deploying polygon ' mumbai testnet however running dapp via streamlit unable successfully load address account thus time would needed resolve dapps operability polygon order circumvent issue project loading ethereum ' ganache testnet sufficient solution please note obtaining matic usd price feed via getlatestprice call function possible connected polygon ' mumbai testnet otherwise function operable connected ganache 2 interoperability streamlit dapps current state project ha 2 separate dapps one registering nfts possible via auction owner another one place bid nfts registered however programmatic mechanism ha sufficiently worked connect operability boths dapps seamlessly alternatively consideration may made consolidate dapps single frontend platform 3 smart contract bug end function auction sol contract doe execute auction time ha run thus leaving auction open without mean complete transfer nft ownership withdrawal bid fund respective account 4 streamlit bug bid function doe execute correctly app3 py e auction dapp end function bug still applies contributor project team h2 href http github com tyedem img src http avatar githubusercontent com u 90783116 v 4 width 60 tyedem h2 h2 href http github com riteshchugani img src http avatar githubusercontent com u 93497343 60 riteshchugani h2 h2 href http github com 1ightray img src http avatar githubusercontent com u 93296496 v 4 width 60 1ightray h2 h2 href http github com atoosa img src http avatar githubusercontent com u 93611442 v 4 width 60 atoosa h2 h2 href http github com ksmaria img src http avatar githubusercontent com u 93277973 60 v 4 ksmaria h2 reference resource nft sale http www nytimes com 2021 03 26 technology nft sale html br nft sale volume http thedefiant io nft sale boom past 100m 30 day br gas free nft ipfs http opensea io blog announcement decentralizing nft metadata opensea br opensea fee http support opensea io hc en u article 1500006315941 gas fee ethereum br dapp auction http github com sbwengineer auction dapp solidity vue br polygon http www wealthsimple com en ca learn polygon utm term matchtype campaign 16685794737 adgroup 138618658447 gclid cjwkcajwx46tbhbheiwara djh4oks3izweumuznrh1itbvfvlwnui9ovczhzeqe6jpyx30xus4fchocjxqqavd bwe problem ethereum br nft auction http github com techwithtim solidity nft auction br nft marketplace http betterprogramming pub solidity contract nft marketplace 5a706bb94486 br nft marketplace http betterprogramming pub solidity contract nft marketplace 5a706bb94486 br chainlink price feed http doc chain link doc get latest price br openzeppelin contract wizard http doc openzeppelin com contract 4 x wizard br openzeppelin erc721 doc http doc openzeppelin com contract 3 x api token erc721 ierc721 setapprovalforall address bool br copyright 2022 project 3
/manapixels/popp,JavaScript,p align ' center ' img src ' src image logo popp png ' width 600 p popp popp unifies reward loyalty program polygon every transaction popp mint proof purchase simplicity associability called stamp stamp allows user redeem reward unified platform promotion campaign merchant affiliated partner inspiration pain point brand often isolated apps reward user manage multiple reward system brand build reward system capability since reward isolated ' traded cash reward non physical reward system require membership requires user register name email address phone number start collecting reward feature purchase item using crypto ordering payment system view trade collected stamp open market like opensea redeem reward cross brand collaboration campaign merchant collect stamp fun social sharing technology used solidity contract proof purchase protocol found contract contract brand factory brand contract manage mintable item create edit delist item purchase mint create campaign contract campaign contract redemption reward mintable item contract mint burn chainlink umbrella network get price feed accurate exchange rate brand owner ' currency choice run define following env variable pre react app umbrella api key react app umbrella api url react app umbrella registry contract address react app blockchain provider url pre start app yarn start future work 1 programmable reward system stamp custom rule upgradable stamp tier 1 stamp upgraded tier 2 token etc loyalty stamp minted upon reaching significant milestone qualifying wallet holder buff e g discount vip access fragmentable stamp bundled product represented stamp broken individual stamp e g meal stamp broken component 1x burger 1x fry 1x beverage limited edition stamp limited edition stamp seasonal etc stamp varying rarity rare design stamp may collected fun 2 marketplace stamp trading development popp specific marketplace building opensea 3 brand verification confirm identity vendor large brand cross branch collaboration 4 community driven stamp design design follow brand product theme
/clockwork-protocol/clockwork,JavaScript,coverage status http coverall io repos github clockwork protocol clockwork badge svg branch master http coverall io github clockwork protocol clockwork branch master clockwork clockwork decentralized protocol enables recurring payment ethereum give user ability manage repeat payment entirely chain thus clockwork enables use cryptocurrency subscription saas repeat payment business model possible problem although decentralized financial infrastructure ecosystem ha seen rapid growth protocol stable coin decentralised money market exchange among many others date efficient way run trustless recurring payment cryptocurrency recurring payment backbone saas model necessary component financial infrastructure traditional solution fiat ecosystem number inherent problem expensive credit card transaction fee regularly exceed 4 fragmented end user perspective since payment managed separately individual service provider easy way track cancel change recurring monthly payment clockwork doe clockwork decentralised crypto native repeat payment solution clockwork protocol enables decentralised repeat payment incentivising execution recurring transaction keeping payment schedule information chain allow saas platform accept recurring crypto payment much lower fee without build custom software give user control subscription single place use case clockwork protocol include subscription collection maintenance saas entity customer primary use case payroll processing allow doas company pay regular salary crypto potential additional use case work clockwork protocol ethereum blockchain establishes market executing recurring payment doe defining relationship payer payee transaction executor management interface payment denominated dai avoid vollatility summary mechanism work follows pre funding contract user send dai shared funding contract funding contract act like prepaid debit card recurring payment allows user set budget manages risk large amount fund locked contract funding contract create new payment schedule keep track payment schedule user ha signed fund payment generated payment schedule funding contract cancel suspend payment schedule time payment schedule payment schedule set payment term create fund payment keep track payment history status schedule always owned funding contract cancelled owner construction term payment schedule set immutable change term old schedule must cancelled new one created transaction execution transaction created funded payment schedule available publicly execution execution pay fee address set executor incentivises third party execute transaction clockwork protocol fee
/AleRapchan/stop-loss-bot,HTML,bot defender stop loss strategy project implement stop loss bot sell crypto wallet balance stable coin also offer dai faucet smart contract meant starter code utilized stable coin provider future version alt text http wiki teamfortress com w image 0 0e robotarmy png disclaimer presentation either investment advice recommendation solicitation buy sell investment used evaluation merit making investment decision relied upon accounting legal tax advice investment recommendation content reflected herein subject change without updated code written informational educational purpose use software risk responsible money past performance necessarily indicative future result author affiliate assume responsibility trading result project project us decentralized finance defi concept automated market maker could use lending protocol future implementation utilizes dai stable crypto coin smart contract uniswap smart contract perform stop loss strategy ' financial function high level design bot check cryptocurrency price make trade buy sell threshold trigged doe natively blockchain powered smart contract bot work 1 code continuous monitor ethereum price ethereum one popular cryptocoins future crypto added future version 2 sell ethereum drop specific price stop loss limit loss ethereum ' price go sell ethereum exchanging different cryptocurrency crypto ' going use dai dai stable coin price ' change relative u 1 dai 1 u erc20 smart contract token uniswap exchange using also smart contract access exchange without ui using smart contract gas cost optimization uniswap remains popular dex several ethereum based exchange use amm model issue gas fee however exchange offer better rate specific token depending liquidity available mean user get better exchange rate would uniswap decentralized exchange aggregator 1inch search best rate multiple dexs splitting trade several pool retrieve maximum amount token possible one transaction useful large trade going multiple exchange beneficial ensure better exchange rate rebating value lost gas fee aggregating multiple exchange doe improve gas cost swap 1inch us chi gas token minted gas price low burnt high allows exchange user save 40 gas fee even trade go exchange uniswap sushiswap layer two solution also multiple layer two solution available despite unknown general public layer two solution function running blockchain connecting ethereum smart contract lock token ethereum blockchain release proxy token second chain allows cheaper transaction often dubbed sidechains transaction sidechains kept decentralized trustless network validators watcher similar function miner ethereum chain security consideration integrating uniswap v2 another chain system particular care must taken avoid security vulnerability avenue manipulation potential loss fund preliminary note smart contract integration happen two level directly pair contract router direct interaction offer maximal flexibility require work get right mediated interaction offer limited capability stronger safety guarantee two primary category risk associated uniswap v2 first involves called static error include sending many token pair swap requesting token back allowing transaction linger mempool long enough sender ' expectation price longer accurate one may address error fairly straightforward logic check executing logic check primary purpose router interact directly pair must perform check dynamic risk second category involves runtime pricing ethereum transaction occur adversarial environment naively written smart contract exploited profit example suppose smart contract check asset ratio uniswap pool runtime trade assuming ratio represents fair market price asset case highly vulnerable manipulation malicious actor could e g trivially insert transaction naive transaction called sandwich attack causing smart contract trade radically worse price profit trader ' expense return contract original state low cost one important caveat type attack mitigated trading highly liquid pool low value best way protect attack introduce price oracle oracle device return desired information case pair ' spot price best oracle simply trader ' chain observation prevailing price passed trade safety check strategy best suited retail trading venue user initiate transaction behalf however often case trusted price observation available e g multi step programmatic interaction involving uniswap without price oracle interaction forced trade whatever potentially manipulated rate uniswap implementation detail setup install package j npm install env file important piece information needed app stored url ethereum node connected robson test network private key account ' going trade cryptocurrency utilize api key infura account address ' ethereum wallet try install metamask ' need test ether robson test network ether ' going use sell index j file ' nodejs app running express app library web server bash npm run start code start monitoring ethereum price buying selling based upon price check price ethereum every second price change executes trade step configure express server use web3 connect blockchain use private key saved env file use url connect ethereum node configure smart contract robsten network function selleth transaction setting use high gas limit read account env file sends ethereum amount performs swap return transaction hash checkbalances function check price balance read much dai eth wallet log console checked swap make sure bot running correctly monitorprice finally actual function monitor price ' single function called repeatedly stop loss strategy ' going sell everything wallet automaticaly test case install truffle bash npm install truffle g hood truffle us mocha http mochajs org testing framework chai http www chaijs com assertion library test smart contract furthermore truffle test command run test test file inside test folder bash npm install save dev chai truffle assertion import top test file javascript const truffleassert require ' truffle assertion ' install solidity coverage bash npm install save dev solidity coverage add package plugins array truffle config j truffle doc http www trufflesuite com doc bash module export network plugins solidity coverage run truffle run coverage command option dai faucet smart contract created dai faucet smart contract future integration dai faucet smart contract utilizing dai address kovan network necessary fork kovan network j ganache cli fork http kovan infura io v3 900388c317644e7da164c3da4b5d9bca http kovan infura io v3 900388c317644e7da164c3da4b5d9bca project author name git hub linkedin twitter alexandre rapchan b barros alerapchan http www github com alerapchan alexandre rapchan http www linkedin com alexandre rapchan rapchan http www twitter com rapchan support support please send email blockchain alexandrebarros com &#9; revision date revision description author &#9; 05 08 2021 0 1 first draft alexandre rapchan b barros 25 08 2021 0 2 final review alexandre rapchan b barros roadmap utilize stable coin utilize ai trade check coir pair price look arbitrage opportunity link dai makerdao http makerdao com en dai smart contract http github com makerdao developerguides blob master dai dai smart contract dai smart contract md kovan testnet kovan faucet http github com kovan testnet faucet kovan faucet 2 http enjin io software kovan faucet ethereum testnet faucet http ethdrop dev kovan testnet explorer http kovan etherscan io kovan exported smart contract http kovan etherscan io address 0xf526b465fae92d3184594b1140e612ad10e6f979 oasis app maker vault http oasis app tool nodejs http nodejs org javascript runtime git http git scm com downloads code repository management tool truffle http www trufflesuite com command line tool migrating smart contract infura api key http infura io provides access point ethereum network metamask http metamask io wallet use manage key balance tip consideration building uniswap http doc uniswap org protocol v2 concept advanced topic security optimize gas fee dexes http cointelegraph com news dexs becoming unusable navigate record gas fee ahead eth2 using infura custom provider http www trufflesuite com guide using infura custom provider truffle mint dai http github com ryanio truffle mint dai mit license copyright c 2021 rapchan permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
/riflending/rlending-protocol,Solidity,rlending protocol rlending algorithmic distributed protocol deployed rsk network ' main motivation allow user lend crypto currency collateral borrow crypto asset based interest rate set real time supply demand smart contract rlending protocol developed using rsk smart contract supplying borrowing asset ctoken contract account blockchain supply capital rbtc erc 20 token receive ctokens borrow asset protocol holding asset collateral rlending ctoken contract track balance algorithmically set interest rate borrower read protocol documentation rlending app http rlending app doc introduction question interacting rlending please visit telegram http rlendingcommunity contract detail core contract rlending protocol dl dt ctoken cerc20 crbtc dt dd rlending ctokens self contained borrowing lending contract ctoken contains core logic cerc20 crbtc add public interface erc20 token rbtc respectively ctoken assigned interest rate risk model see interestratemodel comptroller section allows account mint supply capital redeem withdraw capital borrow repay borrow ctoken erc 20 compliant token balance represent ownership market dd dl dl dt price oracle proxy dt dd contract controlls adapter link protocol price oracle dd dl dl dt comptroller dt dd risk model contract validates permissible user action disallows action fit certain risk parameter instance comptroller enforces borrowing user must maintain sufficient collateral balance across ctokens dd dl dl dt rlen dt dd rlending governance token rlen holder token ability govern protocol via governor contract dd dl dl dt governor alpha dt dd administrator rlending timelock contract holder rlen token may create vote proposal queued rlending timelock effect rlending ctoken copmtroller contract contract may replaced future beta version dd dl dl dt interestratemodel dt dd contract define interest rate model model algorithmically determine interest rate based current utilization given market much supplied asset liquid versus borrowed dd dl dl dt careful math dt dd library safe math operation dd dl dl dt errorreporter dt dd library tracking error code failure condition dd dl dl dt exponential dt dd library handling fixed point decimal number dd dl dl dt safetoken dt dd library safely handling erc20 interaction dd dl deployed network contract mainnet testnet unitroller comptroller proxy 0x57f3edae1d2a109f0d5e4e6269aca2f532cdbaaa http explorer rsk co address 0x57f3edae1d2a109f0d5e4e6269aca2f532cdbaaa ctab code 0x3a983c7597b3ac4fbc3e0cf484d7631d70d04c05 http explorer testnet rsk co address 0x3a983c7597b3ac4fbc3e0cf484d7631d70d04c05 ctab code crif 0xb7ff2c56c897562c0aa6747d2679d35f5e937492 http explorer rsk co address 0xb7ff2c56c897562c0aa6747d2679d35f5e937492 ctab code 0x4664d4cbd5104a0e974354724cbc8e0d9bd1aca3 http explorer testnet rsk co address 0x4664d4cbd5104a0e974354724cbc8e0d9bd1aca3 ctab code crbtc 0x872664a885a1995d754e3666a23fad5c801401c4 http explorer rsk co address 0x872664a885a1995d754e3666a23fad5c801401c4 ctab code 0xc19f0882bf318c9f8767c7d520018888e878417b http explorer testnet rsk co address 0xc19f0882bf318c9f8767c7d520018888e878417b ctab code crusdt 0xd256c121a507cadd2687599e27fa45e31b7c3199 http explorer rsk co address 0xd256c121a507cadd2687599e27fa45e31b7c3199 ctab code 0xfd09f3349fdab173d162cd0e4669b591ed5a78fb http explorer testnet rsk co address 0xfd09f3349fdab173d162cd0e4669b591ed5a78fb ctab code installation run rlending pull repository github install dependency need yarn http yarnpkg com lang en doc install npm http doc npmjs com cli install installed git clone http github com riflending rlending protocol cd rlending protocol yarn install lock file npm install repl rlending protocol ha simple scenario evaluation tool test evaluate scenario could occur blockchain inherited feature original source code primarily used constructing high level integration test tool also ha repl interact local rlending protocol similar truffle console yarn repl n development yarn repl n rinkeby read ctoken cbat address command read ctoken cbat address addressv val 0xad53863b864ae703d31b819d29c14cda93d7c6a6 read scenario runner scenario doc http github com riflending rlending protocol tree master scenario scenario md step using repl testing jest contract test defined test directory http github com riflending rlending protocol tree master test run test run yarn test integration spec additional test spec scenario http github com riflending rlending protocol tree master spec scenario folder high level integration test based scenario runner depicted aim test highly literate high coverage interaction contract code coverage run code coverage run yarn coverage linting lint code run yarn lint note developer prerequisite rlending initially developed tested operating system macos debian 10 buster ubuntu lts rsk node http developer rsk co quick start step1 install rsk local node node j http nodejs org en download lts 12 npm http doc npmjs com cli install optional yarn http yarnpkg com lang en doc install make make g g ganache cli ganache cli optional ganache http www trufflesuite com ganache solc http solidity readthedocs io en v0 4 24 installing solidity html binary package sol select http github com crytic solc select optional node gyp http github com nodejs node gyp installation optional direnv http direnv net g ubuntu debian sudo apt install g make ubuntu debian sudo apt get install make recomend recomend gnu install build essential package node gyp ubuntu debian sudo apt get install build essential npm install g node gyp also recommend seting git pull default rebase mode http coderwall com p tnoiug rebase default git pull ubuntu debian git config global pull rebase true deployment deploy contract use buidler copy envrc example rename envrc change mnemonic use direnv allow dirally rectory finally run yarn deploy networkname deploy selected network debugging debug local ganache cli v code run ganache cli terminal ganache cli gaslimit 20000000 gasprice 20000 defaultbalanceether 1000000000 allowunlimitedcontractsize true v k istanbul configure launch json v code buil launch json create necesary add follow version 0 2 0 configuration name dev request launch type node runtimeexecutable usr bin npx program saddle args test audit formal verification version 0 2 1 http github com riflending rlending protocol blob master audit rlending security audit final report v210303 pdf security liability contract without warranty without even implied warranty merchantability fitness particular purpose discussion concern protocol open issue visit u telegram http rlendingcommunity discus security concern please email contact rlending app mailto contact rlending app copyright 2021 rlending
/santanukumar666/Etherbank,JavaScript,etherbank developed defi application user deposit withdrawn ethereum coin depositing ethereum yield additional gain erc20 token apy 10 deposit must higher 0 1 eth address allowed deposit active time stack react j frontend framework ganache run local blockchain node j environment truffle enables communication blockchain deployment smart contract test mocha chi test suite smart contract testing deployment web3 enables communication local remote ethereum node deployment deployed react webapp using heroku right smart contract run directly ethereum blockchain project ' original focus wa use local blockchain created ganache connected ropsten test network anyone use without creating local blockchain etherbank http etherbank herokuapp com warning metamask wallet download extension run app creating account switch ropsten test network request test ether http faucet metamask io get going etherbank main page http user image githubusercontent com 60546202 149648909 492d54da 78a8 45d0 8c1d b2908fc1115f jpg borrow http user image githubusercontent com 60546202 149648907 386ca2e3 bf11 4013 b0ad 444cb3a1b179 jpg deposit http user image githubusercontent com 60546202 149648908 0ff52941 6544 4bc0 ab5f 305f5c503ab5 jpg compile migrate smart contract first make sure running local erc20 blockchain example ganache http www trufflesuite com ganache verify development network configured truffle config j match params else modify execute truffle command bash cd truffle truffle compile truffle migrate run truffle test bash truffle test launch frontend application go back root proyect already run bash cd npm start visit http localhost 3000 connect metamask one ganache account make sure running ganache pick first account copy private key go http localhost 3000 metamask add new network url http localhost appropriate port chain id use network development also metamask import account specify private key copied ganache first account warning use account real account reload webapp
/supercoolx/NFT-Yield-Farming-Contract,JavaScript,nft yield farming bsc introduction nft yield farming bsc smart contract enable user farm yield staking lp token bep20 nft pool user stake lp token nft pool reward token governance token mined every block user staked receive governance token reward farmed yield user un stake smart contract work bsc binance smart chain nbsp workflow diagram workflow diagramnft yield farming bsc http user image githubusercontent com 19357502 108629603 1888a900 74a4 11eb 9337 581f757d7b4c jpg nbsp setup 1 install module install npm module root directory npm install br 2 add env root directory please copy code env example env please input information wallet private key etc following code env example http github com supercoolx nft yield faming contract blob main env example br 3 compile contract bsc testnet npm run compile bsc testnet br 4 test execute test smart contract bsc testnet note sometime timeout happen test recommend try 5 script instead test npm run test nft yield farming bsc testnet truffle test test test bsc nftyieldfarmingonbsc test j network bsc testnet br 5 script execute script smart contract bsc testnet truffle exec command npm run script nft yield farming bsc testnet truffle exec script script bsc nftyieldfarmingonbsc script j network bsc testnet note advance please check whether deployer ' wallet address bsc testnet ha enough bnb balance nbsp remark 503 error happen please select new bsc rpc endpoint change referencing list http doc binance org smart chain developer rpc html screen shot 2021 02 21 08 44 38 http user image githubusercontent com 19357502 108611369 64463e80 7421 11eb 9e56 166a3321ca22 png please replace bsc rpc endpoint 2 file truffle config j http github com supercoolx nft yield faming contract blob main truffle config j l9 nftyieldfarmingonbsc script j http github com supercoolx nft yield faming contract blob main script script bsc nftyieldfarmingonbsc script j l5 br governance token moment governance token used reward token although ha implemented yet implement governance token governance strucure e g governance token holder vote etc future br lp token lp token created bep20 assuming lp token pair governance token bnb pool create pair lp token ha implemented yet mement br version solidity solc v0 6 12 truffle v5 1 60 web3 j v1 2 9 openzeppelin solidity v3 2 0 br reference bsc getting started bsc http binancex dev blog html p making move ethereum bsc bsc blockchain explorer http explorer binance org smart testnet bsc testnet faucet http testnet binance org faucet smart bsc smart contract ide http remix ethereum org optimize false run 200 evmversion null version soljson v0 7 4 commit 3f05b770 j bsc development ecosystem tool http github com binance chain bsc develop ecosystem bsc faq http doc google com document 1jf p aokxhse38bnqltnhlhkiu0jrcnrvregdoba 0o edit usp sharing br bsc bep20token template http github com binance chain bsc genesis contract blob master contract bep20 template bep20token template br bsc rpc endpoint http doc binance org smart chain developer rpc html
/Bisonai/curve-api-historical-data,JavaScript,curve api historical data repository updated version curve api http github com curvefi curve api enables access latest data curve finance dex additionally provide historical data simply specifying block number additional parameter prerequisite docker docker compose setting create dev env prod env file corresponding environment variable required docker compose list required environment variable included environment section development setup shell docker compose f docker compose dev yaml build docker compose f docker compose dev yaml env file dev env production setup shell docker compose f docker compose prod yaml build docker compose f docker compose prod yaml env file prod env historical data endpoint endpoint listed enable access historical data api getfactoryapys block block number example output pooldetails index 0 pooladdress 0x9547429c0e2c3a8b88c6833b58fce962734c0e8c poolsymbol dola apyformatted 0 12 apy 0 11813988038860135 apyweekly 0 12632708044177932 virtualprice 1014802666754888345 volume 0 totalvolume 20572200 081073303 api gettvl block block number example output tvl 12376315054 757349 usdtvl 6831486622 154737 ethtvl native 1652987 7054902713 usd 4898215818 294046 asset ethereum btctvl native 15254 736434638018 usd 603401099 6721067 asset bitcoin eurtvl native 31648893 302398853 usd 33769369 153659575 asset euro othertvl usd 9442145 482802702 allpools lptoken 0x6c3f90f043a72fa612cbac8115ee7e52bde6e490 pool address 0xbebc44782c7db0a1a60cb6fe97d0b483032ff1c7 balance 3342439876 110956 asset price 1 sidetvls chain polygon tvl 392428028 38835347 sidechaintvl 2782688533 573472 todo historical data extraction sidetvls currently return latest data historical data extraction sidechaintvls currently return latest data faq get following error error returned value ' valid run gas might also see error using correct abi contract retrieving data requesting data block number doe exist querying node fully synced problem likely occurs pool ha created sometime generation requested block also could caused lack specific smart contract solve problem request block number pool exists
/vjgaur/Defi-Blockchain-Application,JavaScript,project brief dapp development using smart contract solidity web3 react mocha ethereum blockchain programming front end token staking widthdrawal dapp application investor stake token get reward also widthdraw token point time application interacts metamask wallet deposit widthdrawal token ethereum testnet list technology language framework library used project solidity ethereum blockchain bootstrap web3js truffle mocha chai javascript react j async await node http github react lifecycles front end ui ux npm ganache metamask jsx transfer transferfrom approval authorization event security ethereum blockchain network deployment smart contract interaction
/GruDev325/SheeshaStaking_LP_smartcontracts,Solidity,sheeshastaking lp smartcontracts token smart contract erc20 ethereum chain staking smart contract native token staking smart contract lp liquidity pool token vesting functionality distribution smart contract partner ethereum chain
/goldminingfarm/gmt-sdk,JavaScript,gmt sdk development kit goldmining daap
/wfil/wfil-portal,JavaScript,wrapped filecoin wfil portal repository wrapped filecoin wfil public website
/FIREDAO/firedao-protocol,TypeScript,firedao protocol logo http github com firedao firedao protocol raw main logo 180 png ci http github com firedao firedao protocol workflow ci badge svg firedao easy use tool maximizes return cryptocurrency asset automatically deploying decentralized finance defi protocol generate highest yield via lending farming exchange service contract code yeild copied yearn protocol http github com iearn finance yearn protocol contract code fire governance copied compound protocol http github com compound finance compound protocol test environment 10 x nodejs truffle 5 1 15 ganache cli 6 9 1 openzeppelin cli 2 8 2 test console yarn yarn g yarn test mainnet audit audit report http certik foundation project firedao
/post-digitalist/BeginnersGuidetoUBICoin,JavaScript,p align center img src public ubilogo2 png width 150 p p align center government ' going p beginner guide ubi ubi ethereum based universal basic income solution benefit humanity guide aim introduce newcomer eth ubi built collaboration democracy earth http democracy earth kleros http github com kleros proof humanity project http github com proof humanity repos ' want check ubi http github com democracyearth ubi proof humanity contract http github com proof humanity proof humanity proof humanity website http github com proof humanity proof humanity web learn proof humanity http proofofhumanity id proof humanity forum http gov proofofhumanity id run clone repo yarn install install dependency go http data defipulse com get api key ethgasstation create env file put gas api key key like env gas api key key run yarn dev add new page navigate content folder click add file create new file create file tilte number something descriptive md instance last available file folder titled 5howtoobtainubi md title document something like 6liquiditypools md create front matter following format title id id page ' slug write content markdown click propose new file credit font panamera http noirblancrouge com font panamera text panamera 20is 20a 20modern 20sans 20serif 20font 20family text panamera 20font 20works 20well 20both 20wide 20range 20of 20projects inter http github com rsms inter
/indiejoseph/scrt-counter,Rust,counter secret network example smart contract development secret network development follow instruction spin local dev environment http build scrt network dev quickstart html setup local developer testnet initiate wasm contract dev container shell compile contract wasm npm run compile upload local container docker exec secretdev bash c mkdir p root code docker cp contract contract wasm gz secretdev root code contract wasm gz store contact docker exec secretdev bash c cd code secretcli tx compute store contract wasm gz gas 1000000 keyring backend test list current smart contract code docker exec secretdev bash c secretcli query compute list code instantiate contract docker exec e init ' count 100000000 ' e code id 1 secretdev bash c secretcli tx compute instantiate code id init label counter keyring backend test get contract address docker exec secretdev bash c secretcli query compute list contract code 1 query contract docker exec secretdev bash c contract secretcli query compute list contract code 1 jq r 0 address secretcli query compute query contract ' get count ' connect local node shell env cat env local grep v xargs npm bin node src connect
/gelatocoin/gelatocoin.github.io,CSS,landing page icecream swap http icecreamswap finance icecream swap http gelatocoin github io image logo11 png open source html cs landing page defi apps img src image capture 3 jpg width 18 img img src image capture 2 jpg width 18 img img src image capture 1 jpg width 18 img
/RiccardoBiosas/constant-sum-amm,Solidity,constant sum automated market maker proof concept constant sum amm aka liquidity pool relation asset determined following invariant x k run unit integration test yarn install yarn test run echidna fuzzing test docker pull trailofbits eth security toolbox docker run v pwd home training trailofbits eth security toolbox solc select 0 8 10 cd home training echidna test contract echidnacsamm config config yaml
/PathX-Projects/Alpha-Homora-V2-Python,Python,project header div align center href http homora v2 alphaventuredao io img src http github com pathx project alpha homora v2 python blob main img ahv2 logo png raw true alt alpha homora v2 logo height 200 br h2 align center strong alpha homora v2 python strong h2 href http homora v2 alphaventuredao io img src http img shield io website color red message disconnected label alpha 20homora 20v2 color blue message online url http 3a 2f 2fhomora v2 alphaventuredao io 2f img src http img shield io badge python 3 9 2b yellow href http github com pathx project alpha homora v2 python issue img src http img shield io github issue pathx project alpha homora v2 python color red href http badge fury io py alpha homora v2 img src http badge fury io py alpha homora v2 svg alt pypi version p align center python3 9 package wrap alpha homora v2 b yield farming position b simplify interaction smart contract python project p h3 strong current feature strong h3 reward value position value debt leverage ratio pool info current apy br harvest reward close position add remove liquidity br h3 strong current supported network strong h3 avalanche br del ethereum del wip br div br table content table content detail ol li href overview overview li li href installation installation li li href usage usage li ol li href avalanche avalanche li ol li href uninstallation uninstallation li li href feature roadmap li li href contribution contribution li ol detail overview project aim simplify interaction alpha homora v2 ' yield farming position smart contract python project packaging necessary functionality single python package built top web3 py http web3py readthedocs io en stable instead brownie position image img site png currently yield farming position supported plan integrate lending position functionality yield farming position available avalanche ethereum use case include algorithmic liquidity management automated position closing position analytics installation package set installed using pip package manager 1 ensure python 3 9 installed download http www python org downloads release python 3912 syntax dependent feature added recent version 2 install package using pip bash pip install upgrade alpha homora v2 update made package version automatically incremented order get newest version end simply use installation command pip detect update newest version usage use package avalanche 1 import avalancheposition class python script python alpha homora v2 import avalancheposition 2 optional instantiate custom web3 provider object interact network python alpha homora v2 util import get web3 provider network rpc url rpc url provider get web3 provider network rpc url 2 creating avalancheposition alpha homora v2 position py instance requires following position id integer id match position alpha homora without demo http github com pathx project alpha homora v2 python blob main img id highlight png raw true deprecated token symbol pair string parameter exactly match token symbol pair displayed alpha homora shown demo img token highlight png deprecated dex identifier string parameter exactly match dex identifier displayed alpha homora position shown demo img dex highlight png public wallet key optional private wallet key private key required sign transactional method optional web3 provider object none passed http provider created default avalanche rpc url http api avax network ext bc c rpc ' gathered variable create position instance like example python position avalancheposition position id 11049 owner wallet address 0x owner private key 123abc456efg789hij optional see step 4 web3 provider provider optional ' like use custom provider 3 alternatively get open position avalancheposition alpha homora v2 position py object owner wallet address python alpha homora v2 position import get avax position owner position get avax position owner owner address owner wallet address owner private key owner private key optional note passing private key optional required want use transactional method returned avalancheposition object 4 use position instance interact alpha homora v2 position smart contract network transactional method return transactionreceipt alpha homora v2 receipt py object upon success private wallet key required use sign transaction see documentation avalancheposition alpha homora v2 position py class function parameter python add liquidity lp position add params remove liquidity lp position remove params harvest available reward position harvest close position position close informational method return json data private wallet key required use see example position info ipynb http github com pathx project alpha homora v2 python blob development example avalanche position info ipynb output example python get position value equity debt position value position get position value get value harvestable reward position get reward value get current debt ratio position get debt ratio get current leverage ratio position get leverage ratio get current pool apy position get current apy get underlying token lp pool position get pool token get debt token position token debt uint256 debt token debt usd position get token debt alternatively get debt single token position get token debt token address get token borrow rate cream position get cream borrow rate get lp pool info position pool uninstallation uninstall package like python package using pip uninstall command bash pip uninstall alpha homora v2 feature x avalanche x get open position owner wallet address x harvest position reward x close position x get position value equity debt x get current debt ratio x get outstanding reward value native reward token usd x add liquidity x remove liquidity x get aggregate pool apy incl borrowapy ethereum get open position owner wallet address harvest position reward close position get position value equity debt get current debt ratio get outstanding reward value native reward token usd add liquidity remove liquidity get aggregate pool apy incl borrowapy contribution contribution welcome please read contribution guideline contributing md learn contribute project get touch hschickdevs gmail com mailto hschickdevs gmail com
/Jupyter-Network/Jupyter-Swap,Solidity,jupyter swap official contract used jupyter swap http jupyter tech jupyter swap contract used setup amm swap corresponding liquidity pool inexpensive br safe br fast br installation contract folder contains truffle http trufflesuite com doc truffle project download git clone http github com jupyter network jupyter swap install truffle &#9; npm install g truffle install node module &#9; npm install &#9; usage start development blockchain &#9; truffle develop migrate change &#9; truffle migrate run test &#9; truffle test documentation coming soon license contract published mit license jupyter swap yet deployed blockchain u still early version code subject change jupyter swap officially deployed q1 2023
/zincoshine/decofi,JavaScript,decofi decentralized community finance decentralized social community financing based type loan called pre purchasing financing pool aka href http en wikipedia org wiki chit fund chit fund consists gathering certain number people interested buying instance property minimizing interest rate regular individual loan img class lb image src http challengepost s3 challengepost netdna ssl com photo production software photo 000 948 823 data original png alt style display block width 1253px height 753px work group people deposit initial pot equally distributed collateral pot size calculated based future purchase value loan value ratio example group user want buy 20 000 dai car amount paid per month depend number individual well minimum duration financing pool every cycle e g weekly monthly user chosen lottery get right get loan word chosen participant granted amount money buy property group hundred participant minimum number cycle one hundred guarantee user chosen implying user pay amount divided one hundred month chosen user pay specific month value individual initial deposit remaining debt complete pot divided amongst participant cycle repeat user granted amount
/mcdexio/mai-fund-protocol,JavaScript,mai fund protocol build status http travis ci org mcdexio mai fund protocol svg branch master http travis ci org github mcdexio mai fund protocol coverage status http coverall io repos github mcdexio mai fund protocol badge svg branch master http coverall io github mcdexio mai fund protocol branch master mfp mai fund protocol trading tool built mai protocol mfp able perform automated trading investor way copy trading doc check doc doc deploy npm install npx oz deploy check autotradingfund misc autotradingfund desc socialtradingfund misc socialtradingfund desc interface list
/duck-fi/contracts,Python,duck fi contract vyper contract used duck finance http www duck finance farming contract overview duck finance metapharming project ethereum network allows member earn money providing liquidity reduce transaction fee view litepaper doc litepaper pdf get info project depth technical explanation please view smart contract documentation http duck fi github io contract testing development dependency python3 http www python org downloads release python 368 version 3 6 greater python3 dev ganache cli http github com trufflesuite ganache cli tested version 6 11 0 http github com trufflesuite ganache cli release tag v6 11 0 vyper http github com vyperlang vyper version 0 2 11 http github com vyperlang vyper release tag v0 2 11 brownie http github com iamdefinitelyahuman brownie tested version 1 13 0 http github com eth brownie brownie release tag v1 13 0 duck finance contract compiled using vyper http github com vyperlang vyper however installation required vyper version handled brownie setup get started first create initialize python virtual environment http doc python org 3 library venv html next clone repo install developer dependency bash git clone http github com duck fi contract git python3 venv venv pip3 install r requirement txt compiling contract compile project contract bash brownie compile compiled contract abis located build directory running test test suite test contains common test run entire suite bash brownie test launch unit integration test bash brownie test test unitary brownie test test integration communication question project feel free contats u telegram http duck finance license copyright c 2020 duck finance right reserved license
/BooneTB/StiffMoney,HTML,stiff money token deed http bscscan com token 0x919efd12babc1f93ad19330fbb35e9bb16fb89e9 stiff money deed staking smart contract still undergoing testing strongly advise deposit anything mainnet publicly launch product http testnet bscscan com address 0x6efead432cf746a44d39d368fcdf59a95f6c86f9 definition description deed token governing token built bep20 binance smart chain staking contract ha 10 apy lp reward deed staked stiff money smart contract deed token circulation represent 1 equivalent bnb swapped deed staked smart contract programmatically reward lp provider fixed 10 apy paid deed deed staked stiff money smart contract vote region acquire single family home resold leased term homebuyers acquire deed token intillay swap bnb http stiffmoney com bnb swap using smart contract zero fee lp cap reached stiff money governing token objective stable apy attract liquidity provider want help others become homeowner provide deed stakers easy way vote buy real estate provide people opportunity home token model initial market cap 10 000 000 10 000 000 deed stable model 1 deed circulation equal 1 real estate value circulation 10 increase number token year based staked fair launch pre mine team advisor starting balance zero fee transaction cost gas fee staking swapping governing token distribution 5 000 000 worth bnb swapped 1 deed 1 00 worth bnb exchange rate staking deed provides 10 apy based number deed staked 50 deed available bnb swap 50 deed available staking reward stiff money ha model use profit selling real estate buy back deed keep stable balance staked deed deed held lp reward maintain greater 1 per deed collateralization governing token framework deed token holder easily participate shaping decision stiff money purchase single family home using platform deed token staked counted 1 vote anyone 100 deed token staked vote place world considered place invest proposal invest subject 60 day voting period address voting power vote proposal majority vote yes proposed region added queue property profit potential searched region voting voting done http stiffmoney com zero gas cost transaction fee quorum least 51 total amount deed staked need vote proposal valid else fail automatically also least 51 vote must yes pas
/KurobiHq/kurobi-smartcontract-erc20,Solidity,kurobi smartcontract erc20
/untypedjay/defichain-blockrewards,TypeScript,defichain blockrewards
/freight-trust/token-api,JavaScript,edi erc 20 token restful api service api service intended exchange pool operator node operator repository service module component deployment ready package server standalone server front end request handling network standlone server back end request handling test unit testing contract testing api conformance get started get started developing shell install deps npm install run development mode npm run dev run test npm run test install dependency install package dependency one time operation shell npm install usage production use pm2 etc run development mode run application development mode used production shell npm run dev debug shell npm run dev debug run production mode compiles application start production production mode shell npm run compile npm start testing run mocha unit test shell npm test debug shell npm run test debug local development open ' browser http localhost 3000 http localhost 3000 invoke token endpoint bash curl http localhost 3000 contract api v1 token troubleshooting email support freight zendesk com server bash npm run dev debug debug test bash npm run test debug linting view airbnb linter output bash npm run lint fix airbnb linter error bash npm run lint license apache 2 0
/afmsavage/keepcli,TypeScript,keepcli cli tool used request information running node keep network oclif http img shield io badge cli oclif brightgreen svg http oclif io version http img shield io npm v keepcli svg http npmjs org package keepcli downloads week http img shield io npm dw keepcli svg http npmjs org package keepcli license http img shield io npm l keepcli svg http github com afmsavage keepcli blob master package json toc usage usage command command tocstop usage usage sh session npm install g pantsme keepcli keepcli command running command keepcli v version version pantsme keepcli 0 0 1 linux x64 node v12 18 4 keepcli help command usage keepcli command usagestop command command keepcli bond address keepcli bond address keepcli config file keepcli config file keepcli help command keepcli help command keepcli keep file keepcli keep file keepcli liquidation file keepcli liquidation file keepcli tdt file keepcli tdt file keepcli bond address check free bond ecdsa signing node usage keepcli bond address argument address operator address check option addr addr operator address check f force h help show cli help example keepcli bond 0x0000000000000000000000000000000000 eth available bonding 20 2345 see code src command bond http github com afmsavage keepcli blob v0 0 1 src command bond keepcli config file configure keepcli node ' operator address usage keepcli config file option f force h help show cli help n name name name print see code src command config http github com afmsavage keepcli blob v0 0 1 src command config keepcli help command display help keepcli usage keepcli help command argument command command show help option see command cli see code oclif plugin help http github com oclif plugin help blob v3 2 0 src command help keepcli keep file describe command usage keepcli keep file option f force h help show cli help n name name name print see code src command keep http github com afmsavage keepcli blob v0 0 1 src command keep keepcli liquidation file describe command usage keepcli liquidation file option f force h help show cli help n name name name print see code src command liquidation http github com afmsavage keepcli blob v0 0 1 src command liquidation keepcli tdt file describe command usage keepcli tdt file option f force h help show cli help n name name name print see code src command tdt http github com afmsavage keepcli blob v0 0 1 src command tdt commandsstop
/Planxnx/defi-tx-kit,Go,h3 align center img align right src http user image githubusercontent com 37617738 128595261 94098f32 9236 4151 a73a f0f8e7e481e5 png alt go eth height 180 h3 defi tx kit modular blockchain framework building infrastructure application ethereum compatible network integration service implement go ethereum http github com ethereum go ethereum golang http img shield io badge evm 20compatible 555555 style flat logo ethereum http ethereum org en developer doc evm golang http badge aleen42 com src golang svg http golang org go report card http goreportcard com badge github com planxnx defi tx kit http goreportcard com report github com planxnx defi tx kit build status http travis ci com planxnx defi tx kit svg branch main http travis ci com planxnx defi tx kit github issue http img shield io github issue planxnx defi tx kit deepsource http deepsource io gh planxnx defi tx kit svg label active issue http deepsource io gh planxnx defi tx kit ref repository badge license gpl v3 http img shield io badge license gplv3 blue svg http github com planxnx defi tx kit blob main license wip installation img align right src http user image githubusercontent com 37617738 120122855 b1cb0800 c1d5 11eb 9502 8d64bb275337 png height 140 alt gopher console go get github com planxnx defi tx kit contributing eth http user image githubusercontent com 37617738 120125730 1d1bd680 c1e4 11eb 83ad 45664245cae9 png pull request welcome contribution please create new branch submit pull request review
/frenchie-foundation/frenchie,TypeScript,project wa bootstrapped create react app http github com facebook create react app available script project directory run yarn start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console yarn test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information yarn eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org
/arcxmoney/contracts,TypeScript,npm version http badge fury io j 40arcxgame 2fcontracts svg http badge fury io j 40arcxgame 2fcontracts arcxmoney http circleci com gh arcxmoney contract svg style svg circle token 9efd5821c24db49c53c74b3ebe7fe5db7bc1dfe2 http app circleci com pipeline github arcxmoney contract arcx contract arcx credit decentralized liquidity market offer safest capital efficient borrowing experience defi use defi credit score unlike traditional borrowing protocol arcx credit reward borrower demonstrate effective risk management practice granting progressively higher maximum loan value ltv ratio loan primary objective arcx credit profitably improve capital efficiency defi lending market measuring rewarding responsible borrowing behavior click read official doc http wiki arcx money welcome arcx credit introduction architecture contract high level arch http user image githubusercontent com 5834876 182736613 a1498b60 3b64 4119 91e0 728ff0d22044 png high level arcx protocol credit market ha work following manner lender lend stablecoins borrower meet minimum credit score requirement sapphirepool contract arcx observes borrowing behavior chain address issue credit score score compiled inside merkle tree root published sapphirepassportscores contract daily basis borrower deposit collateral inside sapphirecore contract take loan respecting personal collateral ratio determined credit score repay part interest go back lender part go protocol warning experimental beta software provided available basis give warranty liable loss direct indirect continued use code audit bug bounty contract yet audited one way currently active bug bounty viewed todo found critical bug please let u know bug bounty program developer contract written solidity test typescript want contribute familiarity hardhat http github com nomiclabs hardhat ether http github com ether io ether j waffle http github com ethworks waffle typechain http github com ethereum typechain needed pre requisite running command make sure install dependency sh yarn install build compile smart contract buidler generate typechain artifact sh yarn build lint solidity lint solidity code sh yarn lint sol test unit run unit test sh yarn test coverage generate code coverage report sh yarn coverage clean delete smart contract artifact coverage report buidler cache sh yarn clean discussion concern feedback open issue visit u discord http discord gg skwz6je discus
/noraliucode/opyn-taco,JavaScript,platform otc trade opyn protocol install run npm install npm start npm run deploy screenshot http imgur com owx8dlu png
/Celsians/celswap-periphery,Solidity,celswap periphery celswap fork uniswap http uniswap org several modification base token part every token pair lowered fee 0 3 0 15 local development following assumes use node 10 install dependency yarn compile contract yarn compile run test yarn test
/DigiMancer3D/Defi2,Solidity,defi2 changing way defi work cryptocurrency br br nbsp nbsp nbsp defi try encourage quick investing entry gamified way sooner one get token value may received interest rebasing circulating supply current token increase circulating supply without additional token minted purchased gamified entry method tends cause spike value token rebasing token minted help reduce value token common tactic stable coin seeing non stable coin intended help next wave investor consumer token br br nbsp nbsp nbsp defi 2 0 take gamified entry rebasing model revers token get locked ha participant pre pay rebasing token get minted return given back 4 rebase pool per new pool season pool season entry period investor consumer able pre purchase token rebase pool season token able purchased contract next pool season begin pool season short cool period equal half time pool season br nbsp nbsp nbsp investor consumer paying 25 pool size token become expensive retrospect since cost participant total token purchase increase every participant entry br br b new tactic used defi 2 0 token follows b br ol instead participant locking token received initial minting rebase token locked rebase distribution start every new pool season loop ol ol entry minting done predetermined season based time measure since last season end ol ol pool season control wallet one hacked pool season wallet effected ol ol prepay rebase minting ol ol minting rebase inital minting ol ol taking 25 new pool season distribute rebase pool per pool season ol ol limited burn mix burn method participant swapping without exchange ol ol new gamified method seen follows br ol rebase price inflation per entry ol ol multiple address per entity multiple entry per entity ol ol burning token amount based participant entry pool size ol ol layered return possibility ol ol participant able receive ultra pool reward ol ol hr br br feasible demand based inflation automated reduced circulation token burn mix br br design new defi token economics br ol user usability locking user held defi token ol ol applying real world community assistance financial pool model ol ol injecting temparory inflation based demand ol ol mixing returned burned token instead burning ol ol controlled circulation frozen rebase pool ol ol seperating pool season season independance ol br br nbsp nbsp nbsp without new design defi token would stay fool ipo game new action cause legitimacy contract instead hope devs ' exit scam dev build contract correctly paid per season end enforcing developer want see longevity project since rebase acitivated new pool season participant enforced want see longevity project extra native token distributed participant ultra pool overflow wallet reach specific amount enforces participant want higher amount intial pool minting mark token burned increase speed ultra pool fill enfroces longevity defi 2 0 token ' smart contract distribute defi token well native token participant even ha chance recieve portion entry back longevity reward ultra pool distribution br br nbsp nbsp nbsp defi 2 0 token gamifing much aspect possible defi token economics help increase longevity defi 2 0 system participant win even ' break even sup sub defi 2 0 token guarantee profit sub sup hr br br ' actually happening nbsp nbsp nbsp defi 2 0 gmaified investing wtih prepaid interest pool let ' break br participant incentivized enter sooner pool season native token dropped minting pool mean new participant pay 25 participant prepaying rebase pool via incentive entry setup 25 extra minting pool paid per entry minium entry threshold different per chain approximately 75 minimum minting cost minimum minting cost example tron minimum 1024 trx mint token minimum entry must least 1792 trx ensure even one entry minting performed participant paying minting cost rebase additional percentage dev pool 10 total entry burn pool 15 total entry dev pool burn pool come minting fund minting occurs paid rebase incentive system number entry low amount native coin minting pool low dev pool burn pool lower minting power fine long ' happen often row happens often token price minted go since entry incentive cause price spike offsetting 75 participant ' entry minting pool used mint token becuase entry incentive minted planned planned minting based 75 entry regardless entry ' rebase pay amount known participant 25 minted defi2 token locked end next pool season approx locked 4 5 day per release rebase pool 25 minted locked token locked series 4 pool time locking seperate ammounts timed release mechanism predefined amount token released participant ' entry pool minitng pool address address time start pool season end pool season pool season approx 3 day 72hrs 1 5 day 36hrs cool amount time later approx 4 5 day 108hrs happens 25 release minted locked coin distributed participant paying based defi token ' price cost factor mint rebase extra handful season cost buy pool season cheaper exchanging incentice people burn token price token native token relased minting equal 15 minting pool time open pool season gamifies burning process well allowing previous participant participate later pool season theroetically participant could participate every pool season except 2cd season burned defi token recieved paricipate later season initial release based amount wallet address entered 75 total inputted even unique address mulitple entry burning sending token special wallet able accept token 15 minting pool open season wallet act wait list user send back thier defi token pool season release 15 minting pool around minting process next set arrived transaction would paid back participant could pre send burn mix later automatically contract receive burn back native token burned token mixed pool season acconts transaction get paid native token defi token received used le defi token need minted difference sometimes hyped inflation minting pool would mint le expected potentially setting minting previous pool season mintings unusual burn method gamified participant earn return native token causing extended loss minting power okay beacuse naturally drag token value closer native minting cost longer happens would stop abuse would longer earn burnbacks set minting power return token nomics back track partipants paying le token could worth give defi 2 0 protocol pool season cool worth could later adjusted cool timer could adjusted conjection pool season time pool season time reduced cool time increased 108hrs minimum time length pool season cool mean total alloted time increased could one day internal protocol used auto adjust three timer pool season cool total time automated difficulty adjustment system could used prevent malicious participant malicious burnbacks oveerseeding entry pool season hopefully modulated pool season oversees pool season contract oversees pool would great hacking defense still work option possible minium pool season director simple millasecond timer based contract begin contract start specific block time date info represented millaseconds every pool season start would recorded block number millasecond timer pool season predetermined approximately 259200000 millaseconds go cool timer total alloted timer represented 129600000 millaseconds 388800000 millaseconds leftover remaining native token pushed ultra pool released congruent section like rebase pool 1 pool holding per pool season ultra pool rebase sent pool season participant unique address considered 1 new participant hr br br testing additionals whitepaper read http github com digimancer3d defi2 blob master whitepaper md defi2 whitepaper md hr br br user interaction page click http itty bitty site data text html charset utf 8 bxze64 xqaaaajvkaaaaaaaaaaehmqhyty4pykmqfkwr6oocxsimxpq7ojnohg lzs74sbbw2 gsluz uhamrq4f yryz2xmsbanq4hyivkahbfg0unh9y qyxt59pxdpf5d6msiavp1isb7ws ofaqjtajriz3hnak0ublhnmhzjb5rmuwibdt2iob6unna2ho7ymw coivs1wqyqj8pdjhk3 kqnibkcvxxuzhk8uxd5zlv jhhj0cxmzddlzshts5x5k9bhfdjumuy3eonccwko9j8hkrm73xgqvhiicabqnji6gbnqetzrebzqcuo1qlkythxnmpo6wk0eiir40qvu8axwkdkcog8piudx6v53 swho1z3sojbomno4ageczxevyolmohmv4jlk16aj8vtozwqtm0mjcz fw pvmabi9qjxfx gcmaorj3obaagoxyyqk3r1azjlldjkfohpxu9h9rfwws9wyclgg47wfpzqvmu8breiwqbjt5mty5eizh1pfgb1yqd0pc1trbk4zhmi6iux nt9j0yilul9brh6gzundmyolmriy2rdccha5qj5gdnvzfdnbucpumd6lgt7lnwr9wg6pnzhmfjphvrdutrkanhiu7puovmszomgaq3fhsb kt6wf44mjskl4gedojgur9yd6wrnqz0qbysrwq6023gxkgg0jvyji98v9 wb14 ieaf 05h3ynmltpxenxhqyvx6lfsr19xfji4xtgclocyjgkrrs9 qfstvkhccvqfntxaefwhkm0wbu hhwkgo1dnbihsrznzlvl4lguk5fgjr w2zslmd5jgmupaz6m1wyendikajb5pif2uz9anbe9lzt62bgjdogowwabc8jpm4udflvwgdejtv2mu qy4qo9 5nfdmaxkqf4wc7zoct4ysasihfwlt 15pkljwh53plsa e1levp dk2uraurfnurtacit5wy3ua4sk1qcugezr2 ab33o2akik5zqddeqc4em38zpq4g5rqyqfb5s5he5 xzdc0v6fincnxtthbpz4 gghs3q2qtyejpfpan1fwp0qmajb0i3odi3saa055xsiackywb70o nj0fuo ewqznli8p3ni4l5nbh8k8dhspazab5x4hyrh3y7oie5kjwvd7ijahl8ipbcbq6yr1jvgotv04u4zcv1yseszqh2trqjn1ju9e escescy6ejtkpfjps1enrrlersd1ivbfrslx3exj akmcmmt ett1lw3zlu3fznt371 8ysemitfgcdquajr1p4whk1mgxwecnzwikdviyr6mh4lm jdwbfwoaygv6tewsg qeao8jlnl8z4ddn 72xuxszu forun1rvlmbrzexv4nug4tvfspuvuyf ghv aa3q yku4y7ywtmmeclz6yp8bh7dfx7czpbc70wvvstqvcq6qp5nqhoktih mdvu4zruquanwgz4crh4npgbytcnwghbdxzp1 szwcljdbwzmmrofu03zqdbfbjbk93baodpmflmgfb8u7y tbukf8ipfzrssh0 v l0f5lswkmi1mu2gwac47c9lpundj ab3wgmnrw3ggdjlfit8v2y5k74so7vfp mnx7s92e gfpcmbix0wjdxs5z4ttnz3z8akizww64pq jat1kwl95y3eu2neqbbbrbxr2tbgrb8i3xhttb1poqgt pcor0awf2k5qgryeqgvpts7zabdklzqv6hc3ngmt5cvjn4tidt1ygs37rc6mr6p0olawyzrcxqhtzv4h5o9qcsxbtoo2haouzniazzwvzaemptbxicy3sri1xspavabwryxxijy5dd0o0xhbeprlmbw0btovv0lbgvim ju1q5w08nzgogltzqrjtvymnv3neye7urevyc08c407r0nszpjz rrygo0ildg0n tnp9bb5bl1fw1xkza7toxopvsbq6ukpvlrqh7dn3pkq9vvja uwfjiwzgnbzqtdjn8zkl9wth1nccr2skvquxwxlsfucebentaplkqtrnjy7fcqspz8gife406c79kmzklr3xyk e 4wmdawtenqwebkkc8tqlwrhopca sthpsql5ckuxwnp4fbfhrbxig2itdht5dnbhkwihdh3uamvdg7bnuaweot516tsw8xxddmew m5icdrhkvglpq4j0t7nxlfwwg pt mwaog17jvhpntwg8otd7nabkn5l1klagbdyzemllkflxpz rvz7p9klghmcdhq0lpubxpa2nzvuuttudx5suxcba3xq9veinoioxijwdcmzksay afq5nt4icaofcla xhzxwottcynn83o0weu7tw0t8fiodbzftbtuv2pau dcmwe762uzjvhoobrvfuttedyt0lt493ymomv yyoxgvh2dkhrtawghc1qzxqr 3durgmtxpjymlf dsrq17g2xpuon6hnxacvafjfjuoqmqrzkydb2gr02yuudjgasnlzhu82l2ntkl56at4qt4e2deew0bel nukq3zhuekurjvyfi iqvdivnutaljsmchdtoz2sd340bnqbgdokzi0 lvnlsetgosljiepoxnh2je54vquooso39q8di8hsdr6ofx2dbfkuzk6s3be4p9kckjks9arjchbur0p8giw8anco3agzq1wp488bdstlhkgyeutafnlifjixy2neonot6imjjzw1xc3ffxu5bjlqx9w31kyot5vnu0 b5aggltl 0meazjiibbrd z7wgcmx7nb7tsnwf3of6f7swoysrokvxxofsvuopduaay9tvwkofzqo jrpyikxdiyfsqxo1zs mqrjichg3qxom6bgb 0llom3gcvbu8cpt 04rxbaqppim cbatlkwicakj8qwe3ys0w9opvyqliww wtbpdrk8vybe5m0k4zldzijtpp0tjoyz3giramd8pkx3cmjbjn1snr1w0jtd9o7bcz20on8c oxskef68qipe 1urhdfe8wlg ze4pu6arnlg4k4rsi6v3cpusiwxcicbczw4mvifw8gc48dsq2bzp avodm0qh pm1lpf5h6mbb2hskff3cn7livlatzr4tzbz9v mu zhno8jlucz9ihu kn2ngwropehkcg5pluzs8bgh7uo8dxgve0exwira9d qixbng 99sxne idbdee4nrxs cvksvgiihqsh jjqugvrzuzrjxl4uk7kxttmftdujw ff9ckg ngb d9fcxbici xkdglnymofcqvjypyin2o5kn yxlwaba4m2lv13epytqiwaneglyfdofsecdoqgn gwyh35ri0 hot6oodb3ui5swmiklzjnejh2jcuvrnvlv4 l8pnpbu8unhegwhqr2y9 l701a bcea09rofixi6tf wbssp830hhjchdb390ciah8djm4o9egfjdgltfpztb6jcayxdc4m13ygwopsuztcgtp ge7zfgn3l r3d4 9d1ey4qawzbqnbugid3zjtadi26i13t34ujltrxovz7zcp9thfsysl3iaq0dr95mpcn8cvhgm jyoii5lqft3ggn96aqed0g8vmt5jd0bxqbsiobnvqrzuayn a8lkfjwdqe4skjnvvnvuxaxzbqycawsrltmet7bo7ficpzfmdrovxczu3ngp0egxvj cmsw dmgjyuysnvvi5p1nljspaaexy0yhysrwnlgkxr1im1q61ibzeahs4umigslt9f0n4alzmitz3m b254wa6wt38kk0lsspvcb02cm1nhodkygmxh1y6dpgq7dvt0pfwd ml5763mqra ojoi9lxjllk7rxquo45faazikhcu0ixw2g5ocg blha3ac1gqtrczk0dkra2imqxwim8ygixtnkll2 u0qwt4fwdmu3t97hhq zol8ath2dpzozfwqultprtqcej 750c4wsmco 0hcapzjlujsqwqwi2llyse1q07engm rtwmfu7qvasri65e3vueqaworrdrkin rknnp dsdlhjucsiahra 4ocg rjz3f8pz2sauy60vbiuwi3ty21g67z7wz6ecozslzq98jtgouchlbx7d 2nws rijniwmqsqqtnf0lqu f12qewpfxscnt2tcbe2nsnihpc4 plg1yk23xcqg4fwckc9afieu2lmkrkfd5 1 mz3gqvz0aasmanzxbwj9r fwljksf rovbybwlhzbjvwn0gilgf75 lam29yyrfoei8yydtwrrgphax0nfelgnuqfvpiie3apjiugiky4inrqtaei922fqmoplsecmfk64cbmac9m1x2myjfcq0alnuqi5bxyyucpbjntx2yo 5plkm9hrobtcnccybcjvdxtupf9k xw3qpcah20g7mddaif2c dh26hkl8epaxisllkjjyzh2ijpasti22kwb bn8sr6p t181htxv2ync qupvekxhpxfvlakxdixfwfr1l9sozkc1f2vyosdjcu9ksul6k7puwnrbspgjf1gja5hbowikubphmzs5mzjxnq7eeqc3xmm gd5 kxjwiiqkbtaaevszgerkaz0zt1w8h0u2culocrbvtitiamw4rlbyq56dva5z9jejd4f 236uivucbc petto6t0rwh7kwtdmzzec8qptayrwrr8sefnrsia e sqd0fcqbhc0yubj3f8hfszhtj ciwqy urean0ibcsgyjsoz geawfnl4wnqqhl2kana5 gmjpu2rsbjjuvrwiiffl1xmpupke6wjzjbofguoocwp fpifxjpafddcxk1zjug7tvcgrbo23suaavzblz xkpj1mkd qi0pqjrsysxuycutfbsurullw2fp kqnim access serverless verison basic website user interacting input change greatly welcome made non dev team member readme file hr br br informational image bsic info http raw githubusercontent com digimancer3d defi2 master defi 202 0 png token aenoxmdhoxrzyw52ytgsoc27n3swe ' forget check name page vote idea like everyone ha control buidl buidl ' get build page need em always see previous page change made per team memeber
/GigameshGarages/ReefNet,Solidity,summary privacy preserving metadata proof powered data streaming token vault ocean protocol problem lack provenance data streaming market place lack metadata verifiability data streaming market place lack fairness data trading data monetisation market solution integration data streaming token metadata mixing proof implementation data streaming standard usig erc 1620 implementation verifiable delay function dao security implementation zero knowledge proof powered rollups scalability implementation token vault yield aggregator balancer pool component fork ocean protocol smart contract data token using ocean protocol framework data streaming standard based erc 1620 token vault integration balancer pool data diligence proof using circom circuit metadata proof using zokrates zkp toolkit data streaming indexing using starkware veedo vdf data stream security using starkware veedo vdf data streaming management using vdf protected randao data token transaction using simple zkrollups testing instruction solidity smart contract testing truffle circom circuit compilation using circom circom circuit execution using snarkjs zokrates proof compilation remix zokrates proof verification remix node package manager circom snarkjs npm install g circom npm install g snarkjs node package manager truffle npm install g truffle
/ironminter/shabushabu-ui,JavaScript,shabushabu ui project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console npm test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information npm run build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify
/garyb9/kosho-coin,Solidity,kosho coin kosho coin pogchamp
/MagiBridge/MagiBridge,Solidity,magi bridge magi bridge http wrap magibridge com way wrap magi xmg bnb smart chain http bscscan com 1 xmg 1 wxmg wrap within 24 hour fee website http wrap magibridge com wxmg whitepaper http drive google com file 1iymumsk47lc 8uw6u0dixujdhctcifv view usp sharing contract source code http github com magibridge magibridge blob main wxmg sol wxmg logo http github com magibridge magibridge blob main wxmg 20logo png wxmg bnb lp logo http github com magibridge magibridge blob main wxmg bnb 20lp 20logo png term service http github com magibridge magibridge blob main tos md license http github com magibridge magibridge blob main license
/viaMover/holyheld-landing-v1,SCSS,http cdn image 1 medium com max 2400 1 jirj4wdytlof28mxfkiuqq png holyheld beautiful website holyheld make internet economy easy available everyone app abstract blockchain complexity finally get great financial service defi benefit earn highest safest yield digital asset automatic portfolio management system also send receive swap 3000 digital asset ethereum dependency requires node j http nodejs org en work project built using webpack http webpack j org stack javascript es6 pug http pugjs org api getting started html sas http sas lang com command npm install install dependency npm start initiate development mode booting server npm run build build production mode structure public content folder copied dist without change src source file component component data data filling page font font icon icon collected sprite image picture page page script general script script import component style general style import style component template pug template dist compiled project webpack common j general webpack config used mode webpack dev j webpack config development mode webpack prod j webpack config production mode
/nymmrx/yv2,TypeScript,yv2
/0xPilou/DebtFlashSwap,Solidity,debt flash swap smart contract smart contract easily swap debt aave lending market
/Garinmckayl/KoKoRo,Python,mit license license shield license url devpost kokoro http badge devpost shield com get badge name kokoro 20 e5 bf 83 id kokoro type big logo style badge http devpost com software kokoro project logo br p align center href http kokoro vercel app img src http localchia vercel app img logo gif alt logo width height 300 h3 align center kokoro h3 p align center powering collective action economy sustainable abundance br href http medium com theideasbankllc kokoro e5 bf 83 improved defi 64cc0c6b198e strong read article strong br p p table content detail open open summary table content summary ol li href project project ul li href built built li ul li li href getting started getting started ul li href prerequisite prerequisite li li href installation installation li ul li li href demo app demo li li href roadmap roadmap li li href contributing contributing li li href license license li li href contact contact li ol detail project project beginning new digital age would wrong simply extend old industrial thinking future nil elmark post boomer face mounting issue climate change cause extreme weather pattern growing financial inequity limited opportunity rapid paradigm shift coupled overdependence imperfect technology artificial intelligence solve growing problem new age need power human grassroots action part solution human intelligence base creativity lie try digitize running time ' computing power wa decentralized iphone gave access information everybody crowdsourcing decentralized funding gave access funding ability invest everybody chia decentralized smart contract coin decentralizes currency everybody ha ability create rule use people imbue intention money br br img src asset localchia code png alt project built chia http www chia net download chia dev tool http github com chia network chia dev tool chialisp http chialisp com python http www python org getting started getting started get local copy running follow simple example step prerequisite example list thing need use software install chia blockchain http github com chia network chia blockchain wiki install installation 1 install chia dev tool http github com chia network chia dev tool http github com chia network chia dev tool 2 clone repo sh git clone http github com garinmckayl kokoro git 3 cd kokoro directory sh cd kokoro 4 run puzzle sh cdv clsp build kokoro clsp kokoro gif http s9 gifyu com image kokoro 1 gif roadmap roadmap see open issue http github com garinmckayl kokoro issue list proposed feature known issue demo demo link http scavengerhuntkokoro netlify app homepage browse metaverse find smf ' offer img src asset demo1 png alt project upload intention via kokoro img src asset demo2 png alt project validate offer dashboard img src asset demo3 png alt project contributing contributing contribution make open source community amazing place learn inspire create contribution make greatly appreciated 1 fork project 2 create feature branch git checkout b feature amazingfeature 3 commit change git commit ' add amazingfeature ' 4 push branch git push origin feature amazingfeature 5 open pull request license license distributed mit license see license information contact contact natnael zeleke natnaelgetenew http twitter com natnaelgetenew natnael getenew addissoftware com project link http github com garinmckayl kokoro http github com garinmckayl kokoro markdown link image http www markdownguide org basic syntax reference style link license shield http img shield io github license othneildrew best readme template svg style badge license url http github com garinmckayl kokoro blob master license txt product screenshot image screenshot png
/izumiFinance/izumi-bridge,JavaScript,izumi contract div align center href http izumi finance img width 250px height auto src asset logo png div repo contains contract used izumi backboned truffle http www trufflesuite com doc truffle quickstart step deloy contract certain blockchains 1 compile shell trffule compile 2 deploy shell trffule migrate network xxxnet current supportted net ' bsc ' ' bsctestnet ' ' matic ' ' matictestnet ' 3 verify shell truffle run verify bridge 0xxxx xxxxx network xxxnet
/gokulnair2001/BuyMeAChai,JavaScript,buy chai ever thought decentralised version buy coffee technology used alchemy hardhat solidity javascript html repel snapshot following screenshots website check http buymeachai solidity defi tipping gokulnair2001 repl co img width 900 alt screenshot 2022 05 22 5 57 16 pm src http user image githubusercontent com 56252259 169695138 af307c31 f8c1 408b a95c fdabd1a41627 png img width 900 alt screenshot 2022 05 22 5 57 27 pm src http user image githubusercontent com 56252259 169695127 0ce00e19 f25a 4125 92a0 ecf68a38ef52 png use add contract etherium chain using alchemy http www alchemy com fork website repel change contract address current ready go prospect project really basic right really intrested let know work
/0ptim/DeFiChain-Wiki,JavaScript,deploy github page http github com 0ptim defichain wiki action workflow deploy yml badge svg http github com 0ptim defichain wiki action workflow deploy yml defichain wiki http 0ptim github io defichain wiki defichain wiki knowledgebase around defichain ecosystem maintained defichain community contribute help u build wiki translate existing page add new one correct mistake everything help appreciated ' http 0ptim github io defichain wiki doc auto contribute quick guide edit page wiki built using docusaurus 2 http docusaurus io modern static website generator search functionality implemented algolia http www algolia com installation npm install local development npm start command start local development server open browser window change reflected live without restart server build npm build command generates static content build directory served using static content hosting service
/cusdt-LINK/alpha-subgraph,TypeScript,alphaswap subgraph alphaswap http swap alphadao money decentralized protocol automated token exchange kcc network subgraph dynamically track pair created alphaswap factory track current state alphaswap contract contains derived stats thing like historical data usd price aggregated data across pair token data individual pair token data transaction data liquidity provider historical data alphaswap pair token aggregated day running locally make sure update package json setting point graph account query way show query alphaswap subgraph data query show information queryable many filtering option used check querying api http thegraph com doc graphql api query used locally graph explorer playground key entity overview alphaswap factory contains data across alphaswap entity track important thing like total liquidity kc alpha see time volume transaction count number pair token contains data specific token token specific data aggregated across pair updated whenever transaction involving token pair contains data specific pair transaction every transaction alphaswap stored transaction contains array mint burn swap occured within mint burn swap contain specifc information transaction thing like pair triggered transaction amount sender recipient linked parent transaction entity example query api endpoint http thegraph kcc network subgraphs name alpha swap querying aggregated alphaswap data query decimal name symbol alpha token graphql token id 0x0490c1076552ed3c91876ead9f6a547b389e69d4 symbol name decimal response graphql data token decimal 9 name alphadao token symbol alpha
/CryptoCans/Frontend,JavaScript,getting started create react app project wa bootstrapped create react app http github com facebook create react app available script project directory run npm start run app development mode open http localhost 3000 http localhost 3000 view browser page reload make change may also see lint error console npm test launch test runner interactive watch mode see section running test http facebook github io create react app doc running test information npm run build build app production build folder correctly bundle react production mode optimizes build best performance build minified filename include hash app ready deployed see section deployment http facebook github io create react app doc deployment information npm run eject note one way operation eject ' go back ' satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point ' ' ever use eject curated feature set suitable small middle deployment ' feel obligated use feature however understand tool ' useful ' customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment http facebook github io create react app doc deployment npm run build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify http facebook github io create react app doc troubleshooting npm run build fails minify
/asqisys/newrl,Python,newrl newrl blockchain ' python client prerequisite 1 computer accessible outside port open incoming 1 start node aws launch ec2 instance instruction http doc aws amazon com efs latest ug g step one create ec2 resource html make sure make port 8090 open public configuring security group 2 start node digital ocean droplet instruction http doc digitalocean com product droplet quickstart 3 git installed step http git scm com downloads 4 python3 7 installed preinstalled common linux distribution 5 pip python3 venv installed installation step available http pip pypa io en stable installation installation bash git clone http github com asqisys newrl git script install sh start node bash script start sh
/bancorprotocol/etl,Python,github workflow main yml http github com bancorprotocol etl action workflow main yml badge svg http github com bancorprotocol etl action workflow main yml extract transform load etl bancor v3 dashboard analytics data repository developed maintained bancor research team order support protocol ' dashboard analytics http analytics bancor network
/Contribute-Defi/website,JavaScript,contribute frontend initial official ui created contribute team contributing feel like joining u three option definitely prefer first one 1 help improve official website creating pull request 2 forking tweaking deploying version 3 take inspiration build project installation clone git clone git github com contribute defi website install dependency yarn setup cp env example env vim env run yarn dev deploy yarn deploy ftp live website deploy script expects env variable setup feel free create deploy script setup contract contract folder ' find contract data format truffle build tool produce e json abi list network contract deployed network part applies contribute contract wanna deploy contract local dev net kovan even mainnet make sure update address e contribute json file friendly note initial developer ' react functional component hook es6 javascript ' bother typescript one code pretty simple self explanatory anyone react experience ' gonna pice cake jump architecture ' top notch development wa fairly hasted test ' interface smart contract join u help u improve project
/pooltogether/v4-admin-dashboard,TypeScript,p align center href http github com pooltogether pooltogether brand asset img src http github com pooltogether pooltogether brand asset blob 977e03604c49c63314450b5d432fe57d34747c66 logo pooltogether logo purple gradient png raw true alt pooltogether brand style max width 100 width 200 p br pooltogether v4 admin dashboard ci http github com pooltogether v4 admin dashboard action workflow main yml badge svg coverage status http coverall io repos github pooltogether v4 admin dashboard badge svg branch master http coverall io github pooltogether v4 admin dashboard branch master gplv3 license http img shield io badge license gplv3 blue svg http perso cran org besson license html pooltogether v4 admin dashboard simplifies reading writing v4 protocol smart contract admin pooltogether com http admin pooltogether com getting started development sh yarn dev production sh yarn build production updated new build deployed netlify overview core web3 component application built modularity mind component express data required fetching normalizing frontend handled automatically contractisolatedmulticall http github com pooltogether v4 admin dashboard blob master src component web3 contract contractisolatedmulticall tsx contractmulticallandrender http github com pooltogether v4 admin dashboard blob master src component web3 contract contractmulticallandrender tsx contractreadvaluesgenericrender http github com pooltogether v4 admin dashboard blob master src component web3 contract contractreadvaluesgenericrender tsx genericreadfunction http github com pooltogether v4 admin dashboard blob master src component web3 contract genericreadfunction tsx web3typerender http github com pooltogether v4 admin dashboard blob master src component web3 web3typerender tsx web3safetyperender http github com pooltogether v4 admin dashboard blob master src component web3 web3safetyperender tsx example view contractdrawbeacon view defines read executed value passed dynamic render component ideally generic render component utilize tailwind cs class modularity minimally perriptive design j import react ' react ' import apppageheader ' src component app apppageheader ' import contractmulticallandrender ' src component web3 contract contractmulticallandrender ' import contractreadvaluesgenericrender ' src component web3 contract contractreadvaluesgenericrender ' import interfacedrawbeacon ' src contract interface ' import admin ' src template admin ' const contractdrawbeacon const method ' owner ' ' getdrawbuffer ' ' getrngservice ' ' canstartdraw ' ' cancompletedraw ' ' calculatenextbeaconperiodstarttimefromcurrenttime ' ' calculatenextbeaconperiodstarttime ' ' beaconperiodremainingseconds ' ' beaconperiodendat ' ' getnextdrawid ' ' getbeaconperiodseconds ' ' getlastrnglockblock ' ' getlastrngrequestid ' ' getrngtimeout ' ' isbeaconperiodover ' ' isrngcompleted ' ' isrngrequested ' ' isrngtimedout ' const input return div classname card apppageheader classname mt 0 title drawbeacon description create propagates draw contractmulticallandrender contractinterface interfacedrawbeacon contractname drawbeacon method method args input component prop contractreadvaluesgenericrender classname text base block px 8 pb 8 pt 5 shadow md border 2 rounded xl mt 5 classnamerender flex justify border b 2 py 2 classnamevalue text sm classnamelabel font bold text sm value prop value div contractdrawbeacon layout admin export default contractdrawbeacon changelog 0 0 1 calculate prizedistributions verify live parameter monitor view
/powerpool-finance/powerpool-vaults,Solidity,powerindex vault ci http github com powerpool finance powerpool vault workflow ci badge svg codecov http codecov io gh powerpool finance powerpool vault branch master graph badge svg http codecov io gh powerpool finance powerpool vault smart vault defi protocol different ecosystem automatic reward claim compounding testing development use yarn npm run following npm task yarn compile compile contract yarn test run test yarn coverage generate test coverage report
/complusnetwork/complus-master-bsc,Solidity,complus master contract bsc license mit http img shield io badge license mit green svg http github com complusnetwork complus master bsc blob master license contribution complus network http img shield io badge contribution welcome brightgreen svg style flat http github com complusnetwork complus master bsc issue website http img shield io website green red http shield io svg label website http bsc complus exchange contract determine yield farming staking protocol bsc listed deployed contract hash complus com 0x7fa892544d49598460b821de4d99e8c28b1decaa http bscscan com address 0x7fa892544d49598460b821de4d99e8c28b1decaa code timelock 0x9309ec8333a65c58b319f4405e199463a2e5c91a http bscscan com address 0x9309ec8333a65c58b319f4405e199463a2e5c91a code multicall 0xcd413ed064df3db6f05217fa8d533b7642e8e5ba http bscscan com address 0xcd413ed064df3db6f05217fa8d533b7642e8e5ba code converterregistrycontract 0x3d2050077b256133825628ed8bb3b35b0c17f54d http bscscan com address 0x3d2050077b256133825628ed8bb3b35b0c17f54d code xcom 0x59d8e0ad1a61b9baf152a66cbad2743a70555077 http bscscan com address 0x59d8e0ad1a61b9baf152a66cbad2743a70555077 code maestro 0xbe83b77e65f746785010056f4de11ef1f9b61994 http bscscan com address 0xbe83b77e65f746785010056f4de11ef1f9b61994 code sudosu 0x110650bbafce4ec7e864fe4a4a88bbd4af547159 http bscscan com address 0x110650bbafce4ec7e864fe4a4a88bbd4af547159 code binance smart chain bsc doc http doc binance org index html bsc explorer http bscscan com
/freight-trust/NACHA,HTML,nacha compliant ppd ach see github page detailed breakdown file format documentation link nacha file http freight trust github io nacha doc nacha file html br nacha record http freight trust github io nacha doc nacha record html br nacha format http freight trust github io nacha doc nacha format html br nacha record http freight trust github io nacha doc nacha record html br nacha type http freight trust github io nacha doc nacha type html br br anatomy ach file every line ach file called record record sort rule dont need know wont get need know though need one file header record control record pair multiple batch single file sake tutorial well build single batch file header record batch header record ppd entry detail record batch control record batch2 header record ppd entry detail record batch2 header record file control record may notice header record control record similar html tag used cordon different section file important information file contained ppd entry detail record may multiple record single batch sequence record description nacha formatted file originate consists following record file header record one company batch header record entry detail record addendum record allowed choose include required one company batch control record file control record file begin file header record following file header record may number batch batch identified batch header record contains one entry detail record end batch batch control record file ended file control record diagram following page illustrates sequence record ach entry sequence record always regardless sec code sequence record lack mandatory record cause portion file reject padding 9 record end file optional input file description file header file header record designates physical file characteristic identifies immediate origin entry contained within file within transmitted batched data addition record includes date time file identification field used uniquely identify file company batch header record company batch header record identifies originator briefly describes purpose entry contained within batch example gas bill reg salary indicates reason transaction originated originator also indicates intended effective entry date transaction within batch information contained company batch header record applies uniformly subsequent entry detail record batch wish vary information must create separate batch example making regular payroll payment bonus payment create one batch described reg salary another bonus entry detail record entry detail record contain information relate specific entry receiver receiving depository financial institution account routing transit number debit credit amount prenotifications prenotes special zero dollar entry used test validity account number transit routing number provided receiver prenotes identical basic entry detail format contain appropriate transaction code zero amount field prenotes batched dollar entry batched separately zero dollar entry used corporate trade payment deliver remittance information contain appropriate transaction code zero amount field otherwise formatted entry zero dollar entry batched ccd dollar entry batched separately one addendum record must accompany ccd zero dollar entry addendum record non iat entry addendum record used originator supply additional information entry detail record receiver many type entry payroll addendum record optional addendum record usually required tax payment company batch control record company batch control record contains count hash total total dollar control preceding detail entry within indicated batch entry detail record hashed method calculating hash total provided entry information column record layout entry detail record addendum record included entry addendum count batch header batch control record included file control record file control record contains dollar entry hash total accumulation company batch control record file record also contains count number block number batch within file batched data transmitted single destination nacha data entry specification alphanumeric alphabetic field must left justified space filled numeric field must right justified unsigned zero filled character used ach record restricted 0 9 z space special character ebcdic value greater hexadecimal 3f ascii value greater hexadecimal 1f occurrence value ebcdic 00 3f ascii 00 1f valid use character meet requirement field inclusion requirement following information defines requirement inclusion certain data field ach entry designation mandatory required r optional mandatory mandatory field contains information necessary ensure proper routing posting ach entry ach operator reject entry batch doe appropriate value mandatory field required omission required field cause entry reject ach operator may cause reject rdfi example dfi account number field entry detail record omitted rdfi may return entry cannot posted include appropriate value required field avoid processing control problem rdfi optional inclusion omission optional data field discretion originator include optional field rdfi must include return annotated nacha record format file header record format file header record designates physical file characteristic also identifies bank immediate destination company immediate origin file field position size content field name entry information r 1 01 01 1 ' 1 ' record type code code identifying file header record ' 1 ' 2 02 03 2 ' 01 ' priority code currently 01 used r 3 04 13 10 bnnnnnnnnn immediate destination immediate destination field identifies party file delivered usually routing number ach operator 4 14 23 10 nnnnnnnnnn immediate origin immediate origin field identifies sender file 5 24 29 6 yymmdd file creation date date create transmit input file br yy last two digit year br mm month two digit br dd day two digit 6 30 33 4 hhmm file creation time time day create transmit input file field used distinguish among input file submit one per day br hh hour based 24 hr clock br mm minute two digit 7 34 34 1 upper case z 0 9 file id modifier code distinguish among multiple input file sent per day label first file 0 continue sequence 8 35 37 3 094 record size number byte per record always 94 9 38 39 2 10 blocking factor number record per block 10 40 40 1 1 format code currently 1 used 11 41 63 23 alphameric immediate destination name field contains name ach operator receiving point file destined 12 64 86 23 alphameric immediate origin company name field contains name ach operator sending point transmitting file 13 87 94 8 alphameric reference code may use field describe input file internal accounting purpose fill space company batch header record format batch collection like entry within file must use separate batch batch level information effective date company name company description change batch header record sec except iat field position size content field name entry information r 1 01 01 1 ' 5 ' record type code code identifying company batch header record ' 5 ' 2 02 04 3 numeric service class code identifies type entry batch 200 ach entry mixed debit credit 3 05 20 16 alpha numeric company name company name 4 21 40 20 alpha numeric company discretionary data use field defined odfi 5 41 50 10 numeric company identification 10 digit company number 6 51 53 3 alpha standard entry class code standard entry class code 7 54 63 10 alpha numeric company entry description transaction description 8 64 69 6 alpha numeric company descriptive date date choose identify transaction 9 70 75 6 yymmdd effective entry date date transaction posted participant account r 10 76 78 3 blank settlement date julian inserted ach operator inserted ach operator 11 79 79 1 numeric originator status code 1 12 80 87 8 numeric originating dfi identification standard entry detail trace number 13 88 94 9 numeric batch number number batch sequentially company batch control record format field position size content field name entry information r 1 01 01 1 ' 8 ' record type code code identifying company batch header record ' 8 ' 2 02 04 3 ' 200 ' br ' 220 ' br ' 225 ' service class code identifies type entry batch must match value used batch header record 3 05 10 6 numeric entry addendum count total number entry detail record plus addendum record record type 6 7 batch requires 6 position right justify left zero fill 4 11 20 20 numeric entry hash total eigh character transit routing aca number batch include transit routing check digit enter ten low order right digit number 5 21 32 12 total debit entry dollar amount batch dollar total debit entry batch none zer fill field enter decimal point right justify left zero fill 6 33 44 12 total credit entry dollar amount batch dollar total credit entry batch none zer fill field enter decimal point right justify left zero fill 7 45 54 10 nnnnnnnnnn company identification 10 digit company number 8 55 73 19 alpha numeric message authentication code mac eight character code derived special key used conjunction de algorithm mac used validate authenticity ach entry de algorithm key message standard must accordance standard adopted american national standard institute remaining eleven character field blank 9 74 79 6 alpha numeric reserved leave blank n 10 80 87 8 nnnnnnnn originating dfi identification standard entry detail trace number 11 88 94 9 numeric batch number number batch sequentially must match batch header ack acknowledgement record ccd ack entry acknowledgement receiving depository financial institution rdfi corporate credit ccd ha received ack entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alpha numeric original entry trace number original detail record trace number 8 55 76 22 alpha numeric receiving company name receiver ' company name 9 77 78 2 alpha numeric discretionary data use field defined odfi 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number ack addendum record field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record adv automated accounting advice adv entry identifies non monetary entry used ach operator provide accounting information regarding entry participating dfi ' ' optional service provided ach operator must requested dfi wanting service adv batch control record field position size content field name entry information r 1 01 01 1 ' 8 ' record type code code identifying company batch header record ' 8 ' 2 02 04 3 ' 200 ' br ' 220 ' br ' 225 ' service class code identifies type entry batch must match value used batch header record 3 05 10 6 numeric entry addendum count total number entry detail record plus addendum record record type 6 7 batch requires 6 position right justify left zero fill 4 11 20 10 numeric entry hash total eight character transit routing aca number batch include transit routing check digit enter ten low order right digit number 5 21 40 20 total debit entry dollar amount batch dollar total debit entry batch none zero fill field enter decimal point right justify left zero fill 6 41 60 20 total credit entry dollar amount batch dollar total credit entry batch none zero fill field enter decimal point right justify left zero fill 7 61 79 19 alpha numeric ach operator data field used specified ach operator 8 80 87 8 nnnnnnnn originating dfi identification originating dfi identification 9 88 94 7 numeric batch number number batch sequentially must match batch header adv file control record file control record contains dollar entry hash total file ' company batch control record record also contains count block batch file field position size content field name entry information r 1 01 01 1 ' 9 ' record type code code identifying file control record ' 9 ' 2 02 07 6 numeric batch count total number company batch header record record type 5 file 3 08 13 6 numeric block count total number physical block file including file header file control record 4 14 21 8 numeric entry addendum count total number entry detail addendum record record type 6 7 file 5 22 31 10 numeric entry hash total eight character transit routing aba number file field 3 entry detail record include transit routing check digit enter 10 low order right digit number example sum 998877665544 enter 8877665544 6 32 51 20 total debit entry dollar amount file dollar total debit entry file none zero fill field enter decimal point right justify left zero fill 7 52 71 20 total credit entry dollar amount file dollar total credit entry file none zero fill field enter decimal point right justify left zero fill 8 72 94 23 blank reserved leave field blank n adv detail entry field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 27 15 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 28 39 12 amount entry amount dollar two decimal place 7 40 48 9 numeric advice routing number field contains routing number check digit dfi correspondent defined ach operator 8 49 53 5 alpha numeric file identification field contains file creation date file id modifier 9 54 54 1 alpha numeric ach operator data field used specified ach operator 10 55 76 22 alpha numeric individual name name associated advice routing number r 11 77 78 2 alpha numeric discretionary data use field defined odfi 12 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 13 80 87 8 ttttaaaa routing number ach operator routing number th ach operator 14 87 90 3 numeric julian date julian date advice created 15 91 94 4 numeric sequence number sequence number within batch arc account receivable entry account receivable entry consumer check converted one time ach debit difference arc pop arc result check mailed pop person arc account receivable detail record account receivable arc entry provides billers opportunity initiate single entry ach debit customer account converting check point receipt u mail drop box location person payment bill manned location biller required provide customer notice prior acceptance check state receipt customer check deemed authorization arc debit entry customer account provision notice receipt check together constitute authorization arc entry customer check solely used source document obtain routing number account number check serial number field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 9 alpha numeric check serial number serial number check represented 8 55 76 22 alpha numeric individual name receiver ' name 9 77 78 2 blank discretionary data use field defined byu odfi 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number atx acknowledgment record ctx atx entry acknowledgment receiving depository financial institution rdfi corporate credit ctx ha received atx entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit valid code br 22 automated deposit checking credit br 23 prenote checking credit br 24 zero dollar checking credit remittance data ccd ctx entry br 27 automated payment checking debit br 28 prenote checking debit br 29 zero dollar checking debit remittance data ccd ctx entry br 32 automated deposit saving credit br 33 prenote saving credit br 34 zero dollar saving credit remittance data ccd ctx entry br 37 automated payment saving debit br 38 prenote saving debit br 39 zero dollar saving debit remittance data ccd ctx entry 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place right justified left zero filled without decimal point enter 10 zero non dollar prenote entry 7 40 54 15 alpha numeric identification number field contains accounting number receiver known originator descriptive purpose nacha rule recommend require rdfi print content field receiver statement r 8 55 58 4 numeric number addendum record number addendum record associated transaction 9 59 74 16 alpha numeric receiving company name id number name receiver 10 75 76 2 blank reserved leave blank n 11 77 78 2 blank discretionary data field use field defined odfi 12 79 79 1 numeric addendum record indicator ' 1 ' addendum included 13 80 94 15 numeric trace number standard entry detail trace number atx addendum record 9 999 addendum record may included atx entry detail record addendum used pre note field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record boc back office conversion back office conversion entry single entry debit initiated point purchase manned bill payment location transfer fund conversion ach debit entry back office processing unlike arc entry boc conversion require customer present notice check may converted boc ach entry posted boc back office conversation detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 9 alpha numeric check serial number serial number check represented 8 55 76 22 alpha numeric individual name receiver ' name 9 77 78 2 blank discretionary data use field defined byu odfi 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number ccd corporate credit debit ccd corporate credit debit entry used facilitate business business b2b ach payment ccd corporate credit debit detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alpha numeric identification number receiver ' identification number 8 55 76 22 alpha numeric receiving company name receiver ' name r 9 77 78 2 alpha numeric discretionary data company ' internal use desired specific format required 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number ccd corporate credit debit addendum record field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 7 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record cie customer initiated entry customer initiated entry credit entry initiated behalf upon instruction consumer transfer fund non consumer receiver cie entry usually transmitted company payment fund consumer owes company initiated consumer type online banking product bill payment service provider cies fund owed consumer pushed biller form ach credit opposed billers use debit application e g ppd web pull fund customer account cie entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alpha numeric individual name field entered odfi provide additional identification receiver may helpful identifying returned entry field 7 rather field 8 entry detail record used individual name r 8 55 76 22 alpha numeric individual identification number field contains accounting number originator payor known receiver payee used receiver update account receivable record number shown invoice statement billhead notice communication reference number may policy customer invoice meter sequence alphanumeric combination field 8 rather field 7 entry detail record used individual identification number 9 77 78 2 alpha numeric discretionary data field entry detail record allows odfis include code significance enable specialized handling entry standardized interpretation value field either single two character code two distinct one character code according need odfi originator involved field must returned intact returned entry 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number cie addendum record field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record ctx corporate trade exchange corporate trade exchange ctx application provides ability collect disburse fund information company generally used business paying one another good service payment replace check electronic process debiting crediting invoice financial institution participating company ctx entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit valid code br 22 automated deposit checking credit br 23 prenote checking credit br 24 zero dollar checking credit remittance data ccd ctx entry br 27 automated payment checking debit br 28 prenote checking debit br 29 zero dollar checking debit remittance data ccd ctx entry br 32 automated deposit saving credit br 33 prenote saving credit br 34 zero dollar saving credit remittance data ccd ctx entry br 37 automated payment saving debit br 38 prenote saving debit br 39 zero dollar saving debit remittance data ccd ctx entry 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place right justified left zero filled without decimal point enter 10 zero non dollar prenote entry 7 40 54 15 alpha numeric identification number field contains accounting number receiver known originator descriptive purpose nacha rule recommend require rdfi print content field receiver statement r 8 55 58 4 numeric number addendum record number addendum record associated transaction 9 59 74 16 alpha numeric receiving company name id number name receiver 10 75 76 2 blank reserved leave blank n 11 77 78 2 blank discretionary data field use field defined odfi 12 79 79 1 numeric addendum record indicator ' 1 ' addendum included 13 80 94 15 numeric trace number standard entry detail trace number ctx addendum record 9 999 addendum record may included ctx entry detail record addendum used prenotes field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record dne death notification entry death notification entry dne batch file sent united state federal agency e g social security notifying depository financial institution death government benefit receiver dne entry detail field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place must 10 zero dne 7 40 54 15 alpha numeric identification number field contains accounting number receiver known originator descriptive purpose nacha rule recommend require rdfi print content field receiver statement 8 55 76 22 alpha numeric individual name receiver ' name r 11 77 78 2 blank discretionary data field use field defined odfi 12 79 79 1 numeric addendum record indicator ' 1 ' addendum included 13 80 94 15 numeric trace number standard entry detail trace number dne addendum field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record enr automated enrollment entry enr automated enrollment entry non monetary entry enrolls person agency u government depository financial institution enr entry detail field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place must 10 zero enr 7 40 54 15 alpha numeric identification number field contains accounting number receiver known originator descriptive purpose nacha rule recommend require rdfi print content field receiver statement 8 55 58 4 numeric number addendum record many addenda05 record entry 9 59 74 35 alphameric receiving company name individual name receiver ' name 10 75 76 2 blank reserved n 11 77 78 2 blank discretionary data field use field defined odfi 12 79 79 1 numeric addendum record indicator ' 1 ' addendum included 13 80 94 15 numeric trace number standard entry detail trace number enr addendum field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alpha numeric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information r 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record mte machine transfer entry machine transfer entry mte support clearing transaction automated teller machine field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alpha numeric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place must 10 zero enr 7 40 54 15 alpha numeric individual name receiver ' name 8 55 76 22 alpha numeric identification number field contains accounting number receiver known originator descriptive purpose nacha rule recommend require rdfi print content field receiver statement 9 77 78 2 alphameric discretionary data field use field defined odfi 10 79 79 1 numeric addendum record indicator ' 1 ' addendum included 11 80 94 15 numeric trace number standard entry detail trace number mte addendum field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 02 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 10 7 alphameric transaction description field describes transaction accordance regulation e possible description include chkdep checking deposit savdep saving deposit payment chksav transfer checking saving savchk transfer saving checking chkwdl checking withdrawal savwdl saving withdrawal advance credit card cash advance r 4 11 13 4 alphameric network identification code field uniquely identifies atm network allows processing mte transaction dfis belonging different network 5 14 19 6 alphameric terminal identification code field identifies electronic terminal unique code allows terminal owner switching network identify terminal entry originated r 6 20 25 6 alpha numeric transaction serial number entry amount dollar two decimal place r 7 26 29 4 mmdd transaction date date expressed mmdd identifies date transaction occurred r 8 30 35 6 hhmmss transaction time time expressed hhmmss identifies time transaction occurred r 9 36 62 27 alpha numeric terminal location field identifies specific location terminal e street name intersection address etc accordance requirement regulation e r 10 63 77 15 alpha numeric terminal city identifies city electronic terminal located r 11 78 79 2 alpha numeric terminal state identifies state electronic terminal located r 12 80 94 15 numeric trace number standard entry detail trace number pop point purchase point purchase entry check presented person merchant purchase presented ach entry instead physical check ach debit application used originator method payment person purchase good service consumer single entry debit entry initiated originator based written authorization account information drawn source document check obtained consumer point purchase source document voided merchant returned consumer point purchase used collect consumer routing number account number check serial number used generate debit entry consumer account pop point purchase detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 48 9 alphameric check serial number field contains check serial number check 8 49 52 4 alphameric terminal city field contains truncated name abbreviation identify city town village township electronic terminal located 9 53 54 2 alphameric terminal state field identifies state united state electronic terminal located 10 55 76 22 alphameric individual name receiver ' name r 11 77 78 2 alphameric discretionary data use field defined odfi 12 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 13 80 94 15 numeric trace number standard entry detail trace number po point sale point sale entry po entry debit entry initiated electronic terminal consumer account receiver pay obligation incurred point sale transaction effect point sale terminal cash withdrawal point sale entry po ach debit entry typically initiated use merchant issued plastic card pay obligation point sale much like financial institution issued debit card merchant issued debit card swiped point sale approved use however authorization verifies card open active within card limitsit doe verify receiver account balance debit account time purchase settlement transaction move card network ach network creation po entry card issuer debit receiver account po entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 9 alphameric individual identification number serial number check represented 8 55 76 22 alphameric individual name receiver ' name r 9 77 78 2 alphameric card transaction type code used card processor identify type transaction purchase cash advance reversal value field assigned major card organization code value br 01 purchase good service br 02 cash br 03 return reversal br 11 purchase reversal br 12 cash reversal br 13 return br 21 adjustment br 99 miscellaneous transaction 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number po addendum record field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 02 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 10 7 alphameric reference information 1 field may used additional reference number identification number code merchant need identify particular transaction customer 4 11 13 3 alphameric reference information 2 field may used additional reference number identification number code merchant need identify particular transaction customer 5 14 19 6 alphameric terminal identification code field identifies electronic terminal unique code allows terminal owner switching network identify terminal entry originated r 6 20 25 6 alphameric transaction serial number entry amount dollar two decimal place r 7 26 29 4 mmdd transaction date date expressed mmdd identifies date transaction occurred r 8 30 35 6 alphameric authorization code card expiration date field indicates code card authorization center ha furnished merchant 9 36 62 27 alphameric terminal location field identifies specific location terminal e street name intersection address etc accordance requirement regulation e r 10 63 77 15 alphameric terminal city identifies city electronic terminal located r 11 78 79 2 alphameric terminal state identifies state electronic terminal located r 12 80 94 15 numeric trace number standard entry detail trace number ppd prearranged payment deposit entry prearranged payment deposit entry recurring entry direct deposit payroll pension etc direct payment recurring bill utility loan etc prearranged payment deposit detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alphameric individual identification number receiver ' identification number number may printed receiver ' bank statement receiving financial institution 8 55 76 22 alphameric individual name receiver ' name 9 77 78 2 alphameric discretionary data use field defined odfi 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number rck represented check entry represented check entry physical check wa presented returned insufficient fund may represented ach entry rck represented check detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alphameric check serial number serial number check represented 8 55 76 22 alphameric individual name receiver ' name 9 77 78 2 alphameric discretionary data use field defined byu odfi 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number shr shared network entry shared network entry shr entry debit entry initiated electronic terminal term defined regulation e consumer account receiver pay obligation incurred point sale transaction effect point sale terminal cash withdrawal also adjusting credit entry related debit entry transfer fund obligation shr entry initiated shared network odfi rdfi agreement addition rule process entry shr entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 43 4 mmdd card expiration date code used cardholder processor cardholder financial institution verify card remains valid certain security procedure required various card authorization system met r 8 44 54 11 numeric document reference number field defines transaction event receiver inquiry example electronic sequence number r 9 55 76 22 numeric individual card account number individual card account number number assigned card issuer obtained card r 10 77 78 2 alphameric card transaction type code used card processor identify type transaction purchase cash advance reversal value field assigned major card organization code value br 01 purchase good service br 02 cash br 03 return reversal br 11 purchase reversal br 12 cash reversal br 13 return br 21 adjustment br 99 miscellaneous transaction 11 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 12 80 94 15 numeric trace number standard entry detail trace number shr addendum record field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 02 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 10 7 alphameric reference information 1 field may used additional reference number identification number code merchant need identify particular transaction customer 4 11 13 3 alphameric reference information 2 field may used additional reference number identification number code merchant need identify particular transaction customer 5 14 19 6 alphameric terminal identification code field identifies electronic terminal unique code allows terminal owner switching network identify terminal entry originated r 6 20 25 6 alphameric transaction serial number entry amount dollar two decimal place r 7 26 29 4 mmdd transaction date date expressed mmdd identifies date transaction occurred r 8 30 35 6 mmdd authorization code card expiration date field indicates code card authorization center ha furnished merchant 9 36 62 27 alphameric terminal location field identifies specific location terminal e street name intersection address etc accordance requirement regulation e r 10 63 77 2 alphameric terminal city identifies city electronic terminal located r 11 78 79 2 alphameric terminal state identifies state electronic terminal located r 12 80 94 15 numeric trace number standard entry detail trace number tel telephone initiated entry telephone initiated entry detail record used origination single entry debit transaction consumer account pursuant oral authorization obtained consumer via telephone field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alphameric individual identification number receiver ' identification number number may printed receiver ' bank statement receiving financial institution 8 55 76 22 alphameric individual name receiver ' name 9 77 78 2 alphameric payment type code input ' r ' recurring payment ' ' single entry payment 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number trc trc truncated entry truncated entry standard entry class code used identify debit entry truncated check field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 9 alphameric check serial number serial number check represented 8 55 60 6 alphameric process control field code identifies document type r 9 55 60 16 alphameric item research number micr location number check item research r 10 77 78 2 blank item type indicator indicates type item truncated code 01 value nac truncated item 11 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 12 80 94 15 numeric trace number standard entry detail trace number trx truncated entry check truncation entry exchange standard entry class code used identify debit entry truncated check multiple field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit valid code br 22 automated deposit checking credit br 23 prenote checking credit br 24 zero dollar checking credit remittance data ccd ctx entry br 27 automated payment checking debit br 28 prenote checking debit br 29 zero dollar checking debit remittance data ccd ctx entry br 32 automated deposit saving credit br 33 prenote saving credit br 34 zero dollar saving credit remittance data ccd ctx entry br 37 automated payment saving debit br 38 prenote saving debit br 39 zero dollar saving debit remittance data ccd ctx entry 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place right justified left zero filled without decimal point enter 10 zero non dollar prenote entry 7 40 54 15 alphameric identification number field contains accounting number receiver known originator descriptive purpose nacha rule recommend require rdfi print content field receiver statement r 8 55 58 4 numeric number addendum record number addendum record associated transaction 9 59 74 16 alphameric receiving company name id number name receiver 10 75 76 2 blank reserved leave blank n 11 77 78 2 blank item type indicator indicates type item truncated code 01 value nac truncated item 12 79 79 1 numeric addendum record indicator ' 1 ' addendum included 13 80 94 15 numeric trace number standard entry detail trace number trx addendum record 9 999 addendum record may included trx entry detail record field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying entry detail record ' 7 ' 2 02 03 2 ' 05 ' addendum type code addendum type code defines specific interpretation format addendum information contained entry 3 04 83 80 alphameric payment related information field contains payment related ansi asc x12 data segment identify payment transmit additional remittance information 4 84 87 4 numeric addendum sequence number number consecutively assigned addendum record following entry detail record first addendum sequence number must always 1 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail corporate entry detail record trace number number last seven digit trace number related entry detail record corporate entry detail record web internet authorized entry internet authorized entry entry submitted pursuant authorization obtained via internet mobile device wireless network web detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alphameric individual identification number receiver ' identification number number may printed receiver ' bank statement receiving financial institution 8 55 76 22 alphameric individual name receiver ' name 9 77 78 2 alphameric payment type code input ' r ' recurring payment ' ' single entry payment r 10 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 11 80 94 15 numeric trace number standard entry detail trace number xck destroyed check entry destroyed check entry application utilized collecting institution collection certain check check destroyed xck entry detail record field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 29 17 alphameric dfi account number receiver ' account number rdfi value found micr line check r 6 30 39 10 amount entry amount dollar two decimal place 7 40 54 15 alphameric check serial number serial number check represented 8 55 60 6 alphameric process control field field contains optional code obtained check share draft generally identifies document type field usually located right account number u field micr line sometimes called transaction code r 9 61 76 16 alphameric item research number field contains micr locator number check item research r 10 77 78 2 alphameric discretionary data use field defined odfi 0 11 79 79 1 numeric addendum record indicator 0 addendum br 1 one addendum included 12 80 94 15 numeric trace number standard entry detail trace number iat international ach transaction international ach transaction entry credit debit ach entry part payment transaction involving financial agency office e depository financial institution business issuing money order located territorial jurisdiction united state iat entry made corporate consumer account must accompanied seven 7 mandatory addendum record identifying name physical address originator name physical address receiver receiver account number receiver bank identity reason payment iat batch header record field position size content field name entry information r 1 01 01 1 ' 5 ' record type code code identifying company batch header record 2 02 04 3 ' 200 ' br ' 220 ' br ' 225 ' service class code identifies type entry batch br 200 mixed debit credit br 220 credit br 225 debit 3 05 20 16 blank iat indicator leave blank 4 21 22 2 ' ff ' foreign exchange indicator fixed fixed currency conversion entry originated fixed value amount received fixed value amount currency fixed value entry space foreign exchange reference field 5 23 23 1 ' 3 ' foreign exchange reference indicator code used indicate content foreign exchange reference field br 3 space filled r 6 24 38 15 blank foreign exchange reference space filled r 7 39 40 2 alphameric iso destination country code field contains two character code approved international organization standardization iso identify country entry received value found international organization standardization website www iso org 8 41 50 10 alphameric originator identification u entity number assigned tax id br non u entity number assigned dda number last 9 character account number exceeds 9 character 9 51 53 3 ' iat ' standard entry class code mnemonic designated nacha international ach transaction 10 54 63 10 alphameric company entry description establish value field provide description displayed receiver describe purpose entry payroll trade pay 11 64 66 3 alphameric iso originating currency code account currency field contains three character code approved international organization standardization iso identify currency denomination entry wa first originated source fund within territorial jurisdiction u enter ' usd ' otherwise refer international organization standardization website value www iso org 12 67 69 3 alphameric iso destination currency code payment currency field contains three character code approved international organization standardization iso identify currency denomination entry ultimately settled final destination fund within territorial jurisdiction u enter usd otherwise refer international organization standardization website value www iso org 13 70 75 6 yymmdd effective entry date date desire fund post receiver account 14 76 78 3 blank settlement date julian ach operator populate actual settlement date field 15 79 79 1 ' 1 ' originator status code identifies originator non federal government entity 16 80 87 8 ttttaaaa gateway operator identification odfi identification inbound iat entry field contains routing number u gateway operator outbound iat entry field contains standard routing number assigned acuity identifies u odfi initiating entry 17 88 94 7 numeric batch number assign batch number ascending order batch note iat return entry field company batch header record remains unchanged original record except 1 foreign exchange reference return outbound international ach transaction originated u odfi field contain foreign exchange rate applicable time return entry foreign exchange rate provided within field forward entry 2 originator status code changed reflect originator status code institution initiating return entry e rdfi original entry 3 gateway operator identification odfi identification changed reflect routing number institution initiating return entry e rdfi original entry 4 batch number changed batch number assigned institution preparing automated return entry iat entry detail field position size content field name entry information r 1 01 01 1 ' 6 ' record type code code identifying entry detail record ' 6 ' 2 02 03 2 numeric transaction code two digit code identifies checking account credit debit 3 04 11 8 ttttaaaa receiving dfi identification routing transit number receiver financial institution 4 12 12 1 numeric check digit ninth character rdfi routing transit number used check transposition 5 13 16 4 numeric number addendum record number addendum record 6 17 29 13 blank reserved leave blank 7 30 39 10 amount entry amount dollar two decimal place 8 40 74 35 alphameric foreign receiver ' account number dfi account number receiver account number rdfi domiciled territorial jurisdiction u value generally found micr line check enter micr dash cue symbol hyphen account number vary format account number ha le 35 character left justify blank fill ignore blank space within account number 9 75 76 2 blank reserved leave blank n 10 77 77 1 blank gateway operator ofac screening indicator assigned ach gateway operator 11 78 78 1 blank secondary ofac screening indicator assigned ach gateway operator 12 79 79 1 1 addendum record indicator 1 addendum record follow entry 13 80 94 15 numeric trace number field constructed follows br position 80 87 field 16 iat company batch header position 88 94 filled entry detail sequence number number must assigned ascending order entry within batch although number need continuous note iat return entry field entry detail record remains unchanged original entry except 1 transaction code changed appropriate return entry transaction code 2 receiving dfi identification changed routing number institution receiving return entry e ofi original entry 3 check digit changed check digit according nach standard based routing number contained position 04 11 4 amount return outbound international ach transaction originated u odfi amount different amount reflected original forward entry exchange rate different time return 5 trace number changed trace number assigned institution preparing automated return entry iat addendum record iat entry first seven addendum record mandatory contain additional information receiver odfi rdfi required ofac type ' 717 ' remittance addendum optional used originator supply additional information entry detail record receiver maximum two type ' 717 ' addendum allowed type ' 718 ' foreign correspondent bank addendum must included foreign correspondent bank involved processing iat entry maximum five type ' 718 ' addendum allowed addendum record must included item count entered company batch control record iat first addendum record 710 first addendum record identifies receiver transaction dollar amount payment field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 10 ' addendum type code first addendum record iat 3 04 06 3 alphameric transaction type code describes type payment br ann annuity br bus business commercial br dep deposit br loa loan br mi miscellaneous br mor mortgage br pen pension br rls rent lease br rem remittance2 br sal salary payroll br tax tax br tel telephone initiated transaction br web internet initiated transaction br arc account receivable entry br boc back office conversion entry br pop point purchase entry br rck presented check entry r 4 07 24 18 foreign payment amount inbound iat payment field contain usd amount may blank r 5 25 46 22 alphameric foreign trace number insert blank zero 6 47 81 35 alphameric receiving company name individual name receiver ' name 7 82 87 6 blank reserved leave blank n 8 88 94 7 alphameric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 1st addendum record remains unchanged original 1st addendum record except entry detail sequence number reflects entry detail sequence number assocoiated trace number assigned institution preparing automated return entry iat second addendum record 711 second third addendum record identify key information related originator entry field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 11 ' addendum type code second addendum record iat 3 04 38 35 alphameric originator name contains originator name company name 4 39 73 35 alphameric originator street address contains originator street address company ' address 5 74 87 14 blank reserved leave blank n 6 88 94 7 alphameric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 2nd addendum record remains unchanged original 2nd addendum record except entry detail sequence number reflects entry detail sequence number associated trace number assigned institution preparing automated return entry iat third addendum record 712 field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 12 ' addendum type code third addendum record iat 3 04 38 35 alphameric originator city state province city state separated asterisk delimiter field end backslash br example san francisco ca 4 39 73 35 alphameric originator country postal code data element must separated asterisk must end backslash br example u 10036 5 74 87 14 blank reserved leave blank n 6 88 94 7 alphameric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 3rd addendum record remains unchanged original 3rd addendum record except entry detail sequence number reflects entry detail sequence number associated trace number assigned institituion preparing automated return entry iat fourth addendum record 713 fourth addendum record contains information related financial institution originating entry inbound iat entry fourth addendum record must contain information identify foreign financial institution providing funding payment instruction iat entry field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 13 ' addendum type code fourth addendum record iat 3 04 38 35 alphameric originating dfi name outbound iat entry field must contain name u odfi br inbound iats name foreign bank providing funding payment transaction 4 39 40 2 01 originating dfi identification number qualifier 01 national clearing system br inbound iats 2 digit code identifies numbering scheme used foreign dfi identification number field br 01 national clearing system br 02 bic code br 03 iban code 5 41 74 34 alphameric originating dfi identification field contains routing number identifies u odfi initiating entry br inbound iats field contains bank id number foreign bank providing funding payment transaction 6 75 77 3 alphameric originating dfi branch country code usb united state br b indicates blank space br inbound iats 3 position field contains 2 character code approved international organization standardization iso used identify country branch bank originated entry located value country found international organization standardization website www iso org 7 78 87 10 blank reserved leave blank n 8 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 4th addendum record remains unchanged original 4th addendum record except entry detail sequence number whihch reflects entry detail sequence number associated trace number assigned institution preparing automated return entry iat fifth addendum record 714 fifth addendum record identifies receiving financial institution holding receiver ' account field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 14 ' addendum type code fifth addendum record iat 3 04 38 35 alphameric receiving dfi name name receiver ' bank 4 39 40 2 numeric receiving dfi identification number qualifier 2 digit code identifies numbering scheme used receiving dfi identification number field br 01 national clearing system br 02 bic code br 03 iban code 5 41 74 34 alphameric receiving dfi identification number bank identification number dfi receiver maintains account 6 75 77 3 alphameric receiving dfi branch country code 3 position field contains 2 character code approved international organization standardization iso used identify country branch bank receives entry located value country found international organization standardization website www iso org br usb united state br b indicates blank space 7 78 87 10 blank reserved leave blank n 8 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 5th addendum record remains unchanged original 5th addendum record except entry detail sequence number whihch reflects entry detail sequence number associated trace number assigned institituion preparing automated return entry iat sixth addendum record 715 sixth seventh addendum record identify information related receiver field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 15 ' addendum type code sixth addendum record iat 3 04 18 15 alphameric receiver identification number field contains accounting number originator known receiver descriptive purpose nacha rule recommend require rdfi print content field receiver ' statement 4 19 53 35 alphameric receiver street address receiver physical address 5 54 87 34 blank reserved leave blank n 6 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 6th addendum record remains unchanged original 6th addendum record except entry detail sequence number whihch reflects entry detail sequence number associated trace number assigned institution preparing automated return entry iat seventh addendum record 716 field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 16 ' addendum type code seventh addendum record iat 3 04 38 35 alphameric receiver city state province city state separated asterisk delimiter field end backslash br example san francisco ca 4 39 73 35 alphameric receiver country postal code data element must separated asterisk must end backslash br example u 10036 5 74 87 34 blank reserved leave blank n 6 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record note iat return entry field 7th addendum record remains unchanged original 7th addendum record except entry detail sequence number whihch reflects entry detail sequence number associated trace number assigned institution preparing automated return entry iat addendum record remittance information 717 optional optional addendum record used provide payment related data may include two addendum record iat entry field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 17 ' addendum type code seventh addendum record iat 3 04 83 80 alphameric payment related information payment information associated preceding entry detail record must contain nacha endorsed ansi asc x12 data segment nacha endorsed banking convention asterisk must delimiter data element back slash must terminator data segment 4 84 87 4 numeric addendum sequence number sequence number type 17 remittance addendum ascending order beginning 0001 5 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record iat addendum record foreign correspondent bank information 718 addendum record used provide information foreign correspondent bank involved processing iat entry foreign correspondent bank involved record included br note maximum five ' type 18 ' addendum record may included iat entry field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 18 ' addendum type code addendum record foreign correspondent bank information iat 3 04 38 35 alphameric foreign correspondent bank name field contains name foreign correspondent bank 4 39 40 2 alphameric foreign correspondent bank identification number qualifier field contains 2 digit code identifies numbering scheme used foreign correspondent bank identification number field code value field br 01 national clearing system br 02 bic code br 03 iban code 5 41 74 34 alphameric foreign correspondent bank identification number field contains bank id number foreign correspondent bank 6 75 77 3 alphameric foreign correspondent bank branch country code field contains two character code approved international organization standardization iso identify country branch foreign correspondent bank located value found international organization standardization website www iso org 7 78 83 6 blank reserved leave blank n 8 84 87 4 numeric addendum sequence number sequence number type 18 foreign correspondent bank identification addendum ascending order beginning 0001 9 88 94 7 numeric entry detail sequence number field contains ascending sequence number section entry detail record trace number number last seven digit trace number field 13 related entry detail record iat addendum record iat return 799 addendum record used provide return data returned iat entry field position size content field name entry information r 1 01 01 1 ' 7 ' record type code code identifying addendum record 2 02 03 2 ' 99 ' addendum type code addendum record iat return 3 04 06 3 alphameric return reason code field contains code associated reason return 4 07 21 15 numeric original trace number field contains trace number originally included forward entry 5 22 27 6 yymmdd date death field used return reason code r14 r15 6 28 35 8 alphameric original dfi field contains receiving dfi identification originally included forward entry rdfi returning correcting r 7 36 45 10 numeric original payment amount original payment forward entry r 8 46 79 34 alphameric addendum information addendum information 9 80 94 15 numeric trace number trace number entry returned file control file control record contains dollar entry hash total file ' company batch control record record also contains count block batch file field position size content field name entry information r 1 01 01 1 ' 9 ' record type code code identifying file control record ' 9 ' 2 02 07 numeric batch count total number company batch header record record type 5 file 3 08 13 6 numeric block count total number physical block file including file header file control record 4 14 21 8 numeric entry addendum count total number entry detail addendum record record type 6 7 file 5 22 31 10 numeric entry hash total eight character transit routing aba number file field 3 entry detail record include transit routing check digit enter 10 low order right digit number example sum 998877665544 enter 8877665544 6 32 43 12 total debit entry dollar amount file dollar total debit entry file none zero fill field enter decimal point right justify left zero fill 7 44 55 12 total credit entry dollar amount file dollar total credit entry file none zero fill field enter decimal point right justify left zero fill 8 56 94 39 blank reserved leave field blank n
/masaun/nexus-reinsurance,Solidity,nexus reinsurance introduction nexus reinsurance smart contract creating reinsurance layer nexus user stake uniswap balancer lp token return additional wnxm reward return nexus mcr drop certain threshold eg 80 nexus claim portion lp token withdraw underlying asset transfer asset nexus mutual pool nbsp workflow workflow nexus reinsurance reinsurance capital provided uniswap balancer lp high quality asset eg eth dai usdc etc capital rewarded wnxm token paid nexus mutual claim trigger defined mcr drop certain threshold certain amount lp token taken injected nexus mutual capital reinsurance pool factory generalised protocol deploys pool nexus well project nexus reinsurance pool manager interface nexus mutual reinsurance pool manages setting interaction different reinsurance pool screen shot 2020 12 01 16 52 04 http user image githubusercontent com 19357502 100712128 9c774b80 33f5 11eb 83ce 1fb665bccc4a png source http doc google com document 1ezlrdxkfb 3lbkap1fnris4vkdxpfnko6pj0imnp4vw edit nbsp setup 1 install module npm install br 2 compile migrate contract kovan testnet npm run migrate kovan br 3 testing progress nbsp reference nexus mutual nexus reinsurance layer document http doc google com document 1ezlrdxkfb 3lbkap1fnris4vkdxpfnko6pj0imnp4vw edit nexus reinsurance layer gr8 http gitcoin co issue nexusmutual smart contract 48 100024186 mcr stand minimum capital requirement http nexusmutual gitbook io doc doc capital model br nexus mutual resource nexus mutual smart contract http github com nexusmutual smart contract tree master contract nexus mutual doc http nexusmutual gitbook io doc doc nexus mutual app http app nexusmutual io nexus mutual smart contract index http nxm surge sh stats http nexustracker io wrapped nxm wnxm http etherscan io address 0x0d438f3b5175bebc262bf23753c1e53d03432bde code gr8 bounty http gitcoin co issue nexusmutual smart contract 47 100024185 deployed contract address deployed contract information http nexusmutual gitbook io doc doc deployed contract information deploy kovan http github com nexusmutual smart contract getting started
/complusnetwork/blocks-heco,TypeScript,complus heco block indexing huobi eco chain block data converter registry contract converterregistrycontract sol http scan hecochain com address 0xb8d8b45a1ea8bcfa1e7e3574879bd699dc7ef3f6 contract running local graph node sh yarn yarn codegen yarn create local yarn deploy local
/TheAustrian1998/camDaiLeverage,Solidity,camdaileverage tool leveraging dai yield aave using qidao protocol polygon network warning highly experimental detailed non technical info mechanism follow 1 take flash swap dai 2 deposit dai aave 3 deposit amdai camdai vault qidaoprotocol 4 deposit camdai collateral vault qidaoprotocol 5 borrow mai 6 swap mai dai 7 pay flash swap tool instadapp style protocol call createnew function create new contract account msg sender manage install clone repo npm install create secret json file fill blank npx hardhat test test test j function leveragefactory createnew create new camdaileverage contract getcontractaddresses address account get contract address account camdaileverage dorulo uint amount loop undorulo undo loop transfertokens address tokenaddress transfer token owner used rescue token
/rugieri/basic-token,JavaScript,basic token basic smart contract token example book ethereum smart contract development solidity 1st ed remix example project remix example project present remix load first time file existing file explorer contains 3 directory 1 ' contract ' hold three contract different complexity level denoted number prefix file name 2 ' script ' hold two script deploy contract explained 3 ' test ' contains one test file ' ballot ' contract unit test solidity script ' script ' folder contains example async await script deploying ' storage ' contract deployment contract ' contractname ' ' constructorargs ' updated along code required script full access web3 j ether j library run script right click file name file explorer click ' run ' remember solidity file must already compiled output script appear remix terminal
/sambacha/defi-threat-matrix,CSS,defi threat matrix mitre att ck adapted decentralized finance original v1 http doc google com spreadsheet e 2pacx 1vr5unbx4m9sg43fo76ewetena1l 4zo82lqsjumr3uuzpe7lurnakg8jzpg0ybnsdtuoy5nvgsdwpc1 pubhtml v2 wip
/youves-com/youves-sdk,TypeScript,youves sdk library provides method interact youves com contract installation package currently npm install directly github npm http github com youves com youves sdk usage functionality located engine typescript import tezostoolkit ' taquito taquito ' import createengine mainnetcontracts mainnettokens mainnetnetworkconstants storage ' youves sdk ' const toolkit new tezostoolkit rpc url export class memorystorage implement storage public storage map string constructor storage new map public async set k extends storagekey key k value storagekeyreturntype k promise void storage set key value public async get k extends storagekey key k promise storagekeyreturntype k return storage get key public async delete k extends storagekey key k promise void storage delete key public async clear storage clear const youves createengine tezos toolkit contract mainnetcontracts 0 uusd storage new memorystorage indexerendpoint indexer url token mainnettokens activecollateral mainnetcontracts 0 collateraloptions 0 tez networkconstants mainnetnetworkconstants const result await youves getrequiredcollateral console log result
/ethic-money/ethic,JavaScript,thic image http avatar githubusercontent com u 77220017 400 u 4c74930480eff37b4dacb870b810e441baf22b64 v 4 ethical decentralized voluntary self stabilizing money element fiat monetary system white check mark algorithmic stablecoin x product fiat money system white check mark voluntary elastic supply x premine white check mark 100 community governance x pre existing developer pool white check mark fully composable defi x rebasing white check mark publicly identified developer white check mark path free voting improved governance thic thic stablecoin meant revolutionize role money usher greater responsibility professionalism defi world thic chance opt money system bound fiat monetary system unethical enforced violence exacerbating imbalance world ' rich poor symbol thic mathematical sign meaning element set meant express thic ' core mission define stable voluntary ethical store value unit account medium exchange element unethical system comprise fiat monies well pay homage emptysetsquad anonymously authored underlying dllar smart contract framework thic built upon important component ethical action acknowledge suitably reward whose prior contribution made progress possible image http github com ethic money ethic blob master cointelegraph 20oct 202 202020 20douglas 20horn png break fiat money thic first voluntary elastic stablecoin protocol developed publicly disclosed developer strong multi year track record blockchain douglas horn http github com douglashorn led creation telos blockchain 2018 highly successful ico blockchain community 2018 october 2020 call higher defi standard http cointelegraph com news chance defi fulfill technology promise wa published cointelegraph outlining five hallmark responsible defi white check mark publicly identified experienced founder white check mark reward every crucial member ecosystem white check mark pre mine robbable developer pool developer fund generated along way white check mark governance prioritized easy deterministic white check mark protection rug pull code error thic designed fulfill requirement set new gold standard responsible safe defi offering thic ethical opt monetary system anyone free interact derives value action decision user owned governed entirely user pre sale early mining special class ownership everyone ha equal opportunity participate reward critical participant role greatest extent feasible minimizes electrical usage offset ecological impact decentralized community governed built ethereum blockchain entirely governed ethc token holder epoch length reward developer reward recipient configuration parameter governed ethc token holder self stabilizing self sustaining programmatically aligns current value ethc towards economic standard currently u dollar via maker dai upgradeable community governance pre mined reserve developer pool risk rug pull developer reward generated new epoch incentivize developer longevity continuing effort project proposal system driven voted community member perform additional marketing education service outreach voted ethc token holder small pool developer reward created epoch advance sustain development even prolonged period non expansion protocol doe stagnate element fiat monetary system thic seek track value maker dai cryptocurrency track u dollar programmatically derived stable free risk unregulated usd stablecoins e g fund ' actually free risk government regulation stablecoins meant track u dollar directly stablecoin shorthand name thic full name ethic money symbol ethc decimal 18 character u 2209 feature tokenomics thic seek optimize feature voluntary elastic stablecoin class improved feature tokenomics parameter name setting rationale target denomination maker dai standard 1 usd unit without directly tied fiat usd epoch time 4 hour smaller consistent adjustment bonding 100 ethc 100m ethcs successful previous protocol oracle reserve minimum 10 000 dai successful previous protocol bootstrapping period 7 day 42 epoch longer period lower speedup bootstrapping price target 1 10 dai successful previous protocol bootstrapping speedup factor 2 lower speedup paired longer bootstrap period epoch advance reward 19 2 ethc reduce bot reward dump governance period 2 day 12 epoch shortened voting period nimble voting case problem governance expiration 1 day 6 epoch reasonable amount time execute governance proposal governance quorum 30 higher quorum support better governance governance proposal threshold 1 ensure proposal reasonable support governance super majority 60 higher quorum lower supermajority help ensure passage broader community support governance emergency delay 3 day 18 epoch delay rare ensures time fully develop test solution dao entrance lockup period 4 day 24 epoch shorter period creates better liquidity user dao exit lockup period 7 day 42 epoch longer period encourages stable staking expand pool equity pool exit lockup period 4 day 24 epoch improved experience liquidity provider coupon expiration 45 day 270 epoch provides longer viable period coupon holder preserve value loss prolonged contraction debt ratio cap 24 initial coupon redemption penalty 50 favor earlier token burner later thanks dsd improvement coupon redeption penalty delay 1 hour supply change limit 1 5 epoch 9 per day supply change lower daily amount greater stability coupon supply limit 6 oracle pool ratio 20 treasury ratio 2 25 lower treasury ratio accommodate additional creation advance dashboard simple dashboard http github com ethic money ethic dashboard interacting thic protocol litepaper thic litepaper http github com ethic money ethic blob master xxxxx pdf describes unique feature thic among set dollar protocol originally developed empty set dollar whitepaper http github com emptysetsquad dollar blob master c3 b8llar pdf community owned governed thic entirely owned operated community ethc token holder v1 governance exist ethereum ' aragon rapidly within 3 month launch migrate v2 governance telos decide governance system allow benefit including free voting ballot deterministic cross chain interaction cci ethereum execute ballot outcome fast easy voting experience via custom thic voting wallet mobile app current ethereum based voting system inefficient voting requires paying large gas fee managing voting telos decide system make voting free fast encouraging better governance thic also modifies quorum threshold amount attempt improve functional governance shift power away whale towards broad governance open source software legacy contribution thic aim honor legacy open source software first acknowledging long line ofcontributions developer past 70 year computer science particularly cryptocurrencies portion developer fee paid emptysetsquad contribution first governance vote thic determine service provider developer e g metamask ethereum developer etc ethc token holder wish also include ongoing developer reward structure rewarding developer incentivizes remain project uncovering bug developing new improved feature listening community control fee ultimate predictor project grow thrive year come contract ropsten testnet 0xad6d458402f60fd3bd25163575031acdce07538d maker dai token 0x8f9fa63ff3cc3ef3e94d1a2b6cfc8dde16a38a91 dao ethcs token 0x086765a465eccfb78722587932d1898182d2aeb3 thic ethc token 0xa6f8379114640a80053337c4f64ad942628331d4 oracle 0x5ab7ff199ac6da5c1995e458698e88a4b11e56fa uniswapv2 dai ethc pair 0xc4bee5f4f85617c13affa22bcf5fdd150a1c64c1 lp bonding pool 0x88b6b8518d80ecf62c39d5a3aafaccc4705941a7 community treasury multisig kovan testnet 0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa maker dai token 0x5bc5d5964cd2ee0fb452fe4d219d6f1ec0ac781d dao ethcs token 0xb0deb36900e84cf257325452a775fe9e81d060fb thic ethc token 0xd62df41a88c4b2ba17e140a55f16d51092a292ac oracle 0x7ab1d07dcf918d1ab6f312b50464dd5c65ca0250 uniswapv2 dai ethc pair 0xc8ffacea42c3cbe6747d64ef4383d9e1a10aabb2 lp bonding pool 0x88b6b8518d80ecf62c39d5a3aafaccc4705941a7 community treasury multisig ethereum mainnet 0xb5c18e59ac0ee2fe1a91542981dd5efd8b6ee5c0 dao ethcs token 0x223b787a82d286bec67b9f8068c1d679ca4cfb4a thic ethc token 0xaf078d6e313c833fb04ff2570ee01b08936fe42a oracle 0xdb312a0952705484f3c685074f547c877eaa244b uniswapv2 dai ethc pair 0x71ce74c83e88dc19bf9bef4db23a713444dbb6d0 lp bonding pool 0x25825313bead63ab5b93aae07f1879a6bc501f6e community treasury multisig audit audit forked codebase available http github com emptysetsquad dollar blob master audit rep dollar 06 11 20 pdf additional audit specific thic codebase coming soon join thic thic always looking additional developer expand developer base programmatically sustained developer pool generated new expansion epoch smaller extent new epoch advance new developer encouraged join make contribution protection community thic project accept developer publicly identified real individual many defi protocol developed anonymous team creating strong incentive exit scam project hit rough patch thic intends set new gold standard responsible defi claiming developer reward thic earns regular pool new developer reward order continuously advance protocol intended function reward encourage ongoing future development however thic recognizes debt every program owes predecessor importance rewarding contributor success system participant ha legitmate claim contributing existence health system propose payment example developer empty set dollar protocol others whose work help form foundation project community treasury fund control thic operation accrues fund community treasury pool intended support ongoing development marketing effort fund deposited ethereum address controlled multisignature wallet using gnosis multisig wallet contract signer ability approve transaction approve transaction voted passed community developer protocol role approve valid draw multisig wallet executing transfer requires agreement 4 signature possible 7 signer update log ethic project code upgraded vote ethic bonded dao member date tx hash change 0 feb 13 2021 0x86f8c2ec9d7d9de9679bbdce77d15339227bf4039aeb91bff6d2f9ebf32a4a40 http etherscan io tx 0x86f8c2ec9d7d9de9679bbdce77d15339227bf4039aeb91bff6d2f9ebf32a4a40 original implementation 1 feb 22 2021 0x23898336328ccacbbbfe1e7a4e57271566e9cdcb4ca28c42134561c61f369c72 http etherscan io tx 0x23898336328ccacbbbfe1e7a4e57271566e9cdcb4ca28c42134561c61f369c72 change advance fee 19 8 br change bootstrap period 7 day br change gov voting period 2 day disclaimer project experiment decentralize finance monetary system contract unaudited based previously audited open source software code contract operate blockchain dependency open source software code price oracle accessed wallet application computer operating system built using variety framework programming language code library believed reliable outside control developer bug error exploit unknown developer may exist discovered introduced layer step technology stack component make application operate participant take great caution interacting experimental software loss fund contributed experimental system possibilite developer treasury address multisig signer disavow fiduciary responsibility custodianship legal moral responsibility loss resulting anything outside direct explicit intentioned action copyright 2021 ethic money devs devs ethic money copyright 2020 empty set squad emptysetsquad protonmail com licensed apache license version 2 0 license may use included code except compliance license may obtain copy license http www apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license br escape fiat monetary system
/Praexor/Waves_dApp,JavaScript,wave dapp wave development ecosystem br http wavesdapp herokuapp com br br currently wave ecosystem provides several useful tool developer wave ide http ide wavesplatform com br vscode plug http marketplace visualstudio com item itemname wavesplatform wave ride br surfboard http github com wavesplatform surfboard br wave explorer http wavesexplorer com br wave keeper http doc wavesprotocol org en ecosystem wave keeper despite early testing use management dapps somewhat complicated tedious due need manual scripting building temporary uis wave dapp com wave dapp com wave dapp com provides auto generated ui dapp meta information work via wave keeper web3 provider inside wave ecosystem work mainnet testnet stagenet even customnet localhost 6869 paste dapp address searchfield url app figure network byte address operate correct node forget switch wave keeper network website recognizes prompt warning user invokes function wave keeper pop request confirmation developer condunct early testing try functionality contract implemented br tester full access callable function br dapp administrator dont need separate interface built wave dapp ui simple powerful enough br hacker inspect dapp try various attack user friendly way ismagin 1 http medium com ilya smagin wave dapp com auto generated ui wave dapps 3f4f6c9109ce
/VadimSvirdoff/tezos-dex,TypeScript,fa2 defi dapp tezos network live example find dapplciation using link http tezos fa2 defi vercel app quick start ensure node j http nodejs org 12 later installed yarn http yarnpkg com v1 v2 installed 1 clone repository bash git clone http github com vadimsvirdoff tezos fa2 defi git cd tezos fa2 defi 2 install dependency bash yarn 3 run dapp bash yarn dev 4 prepare temple wallet install http templewallet com download signup http www youtube com watch v s8 tl8pfcts ab channel madfish solution switch tezos mainnet edo2 testnet left avatar 5 get tezos edo2 testnet go faucet http faucet tzalpha net copy json press avatar import account faucet file insert json faucet json press submit 6 fun
/tidelabs/primitives,Rust,tidefi primitive low level type used throughout tidefi ecosystem generate json schema cargo install git http github com tidelabs primitive force tidefi primitive json dist parse latest json schema example view supported asset curl l http github com tidelabs primitive release latest download asset json jq ' id name abbr exponent ' view available network curl l http github com tidelabs primitive release latest download network json jq ' name ' license sup entire code within repository licensed href license gplv3 sup
/AnshuJalan/sizzler-network,TypeScript,sizzler network sizzler network http sizzler network vercel app enables automation recurring smart contract task tezos delegating bonded entity called ' sizzlers ' aim function self sustaining system effective incentivisation reward mechanic using utility token called sizzle motivation complex smart contract system often require action taken automatically storage reach certain state instance smart contract system representing decentralised derivative would ideally need automated margin call closing position however cannot implicitly done chain due way smart contract work tezos resolution developer set extensive dev ops infrastructure handle task external smart contract call sizzler network aim solve problem providing system dev ops task loaded left handled entity called sizzlers sizzlers rewarded optionally incentivised tip using network ' utility token sizzle szl using sizzler developer could skip tedious item often lead launch delay tend create centralised point failure leading untimely event poor user experience infrastructure go know extensively system working look elaborate techinical paper http sizzler network vercel app technical paper pdf sample task contract task involves calling specific entrypoint specific contract entrypoint ha written certain way approved sizzler network must include call complete task entrypoint taskmanager http github com anshujalan sizzler network blob master contract task manager py contract call either built core contract platform dedicated proxy contract set recommended example method given smartpy http smartpy io build call python sp entry point def liquidate position self position id sp set type position id sp tnat logic liquidate associated position required call taskmanager contract c sp contract sp taddress self data task manager address complete task open sp transfer sp sender sp tez 0 c proxied call python sp entry point def liquidate position proxy self position id sp set type position id sp tnat call core contract c core sp contract sp tnat self data core address liquidate position open sp transfer position id sp tez 0 c required call taskmanager contract c task manager sp contract sp taddress self data task manager address complete task open sp transfer sp sender sp tez 0 c task manager repo structure contract smart contract running sizzler network written smartpy dapp front end interact sizzler network deploy helper script deploy sizzler network contract indexer blockchain indexer task completion log relevent link demo video http youtu poupvt9zve8 website http sizzler network vercel app deployed contract sizzle token kt1e6gg3tswkahghtggjjwwqqgoajpkd6ehn http ithacanet tzkt io kt1e6gg3tswkahghtggjjwwqqgoajpkd6ehn dummy lp token kt1wpuceymjk1na7spfdaiy8v6znh3tp5rwe http ithacanet tzkt io kt1wpuceymjk1na7spfdaiy8v6znh3tp5rwe task manager kt1f8y2x8abz3jmi3nbbsk7qibm3wqsynvyz http ithacanet tzkt io kt1f8y2x8abz3jmi3nbbsk7qibm3wqsynvyz sizzler manager kt1pbphzn59vgg1gchgmpdfcxywxsc7gohnu http ithacanet tzkt io kt1pbphzn59vgg1gchgmpdfcxywxsc7gohnu minter kt1aanvmay6mkblha6kdq2t38v8mladwaxay http ithacanet tzkt io kt1aanvmay6mkblha6kdq2t38v8mladwaxay governor kt1jxtazk3vcngxdnegjnkgihyxemmn9zu2m http ithacanet tzkt io kt1jxtazk3vcngxdnegjnkgihyxemmn9zu2m task breakdown x paper designing x smart contract x unit testing contract x deployment system x ui design x front end component x indexing system x connection front end contract x technical paper write x walkthrough video
/Layer2Labs/layer2labs.github.io,CSS,layer2labs 568889 2 http user image githubusercontent com 83122757 160811590 ef651449 fbe1 4b33 af24 171e304ca6ef png
/Midas-Protocol/monorepo,TypeScript,netlify status http api netlify com api v1 badge 4e389938 790e 4adb bfc9 0e3d47dafd64 deploy status http app netlify com site midas capital dapp deploys monorepo installation clone make sure clone submodules together git clone recurse submodules already pulled using git clone use command update submodules git submodule update init recursive dependency node 16 x http nodejs org en download yarn preinstalled node 16 foundry http book getfoundry sh getting started installation html fresh clone yarn yarn workspace midas capital sdk forge install yarn workspace midas capital sdk build tip run everything top level ask env file team add package sdk want add package module like yarn workspace midas capital sdk add ether run forge command inside sdk package run yarn workspace midas capital sdk forge install dep yarn workspace midas capital sdk forge build etc adding package copy source package new package add reference root tsconfig json json reference path package new package add workspace level dependency package json inside package json dependency midas capital package workspace yarn top level update dependency symlinks
/belugaprotocol/beluga-protocol-old,Solidity,notice contract deprecated sunsetting current contract favor several improvments moved new repository http github com belugaprotocol beluga protocol beluga protocol contract repository contains belugaprotocol ' smart contract deployed contract belugatoken http bscscan com address 0x181de8c57c4f25eba9fd27757bbd11cc66a55d31 code timelock old http bscscan com address 0x7de7390a77dd4e0abbd579cc7685c5ea4bca9475 timelock new http bscscan com address 0x7de7390a77dd4e0abbd579cc7685c5ea4bca9475 hardworker old http bscscan com address 0xcf6a7cc99bbbc03fcf37ad41d47de9e48d453143 hardworker v2 http bscscan com address tbd governor http bscscan com address tbd amm belugaswap factory http bscscan com tbd belugaswap router http bscscan com tbd pool pool stake token reward token reward pool contract link fee staking beluga beluga 0x55b53793010183d90a72239478983861dabd816e http bscscan com address 0x55b53793010183d90a72239478983861dabd816e code beluga bnb pool nlp beluga 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e http bscscan com address 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e beluga busd pool flip beluga 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e http bscscan com address 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e bcake pool bcake beluga 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e http bscscan com address 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e bnlp pool bnlp beluga 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e http bscscan com address 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e bustflip pool bustflip beluga 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e http bscscan com address 0x0b6b9139f73f0c7c7987796602cceb06d54fb18e bmamznflip pool bmamznflip beluga 0x50bc981ecd02ca74f1c2854c3700d8f06cbf54af http bscscan com address 0x50bc981ecd02ca74f1c2854c3700d8f06cbf54af expired pool pool stake token reward token reward pool contract link cake pool cake beluga 0x62a56836c8cadaa074b3b06285d91fef3ef124e0 http bscscan com address 0x62a56836c8cadaa074b3b06285d91fef3ef124e0 cake bnb pool flp beluga 0xbc99402da199656fa4305a1528537a126d7210cc http bscscan com address 0xbc99402da199656fa4305a1528537a126d7210cc nar bnb pool nlp beluga 0x46c30627f48b03cd7fd704f157ca92f0b10f1df3 http bscscan com address 0x46c30627f48b03cd7fd704f157ca92f0b10f1df3 nar btcb pool nlp beluga 0x3bf6adb5f2b24a1e6a15c3cbd98f8c0d87787177 http bscscan com address 0x3bf6adb5f2b24a1e6a15c3cbd98f8c0d87787177 vault vault stake token vault token vault contract link cake cake bcake 0xc4e990af391157c6f5cd45eb47dc2d02249155b3 http bscscan com address 0xc4e990af391157c6f5cd45eb47dc2d02249155b3 code drug drug bdrugs 0x9159a5af6b5b3120a224c09eb4df6cf602457497 http bscscan com address 0x9159a5af6b5b3120a224c09eb4df6cf602457497 nar bnb nlp nlp bnlp 0xddcc3e361b3b6347469dc086da4abd546cf9bd98 http bscscan com address 0xddcc3e361b3b6347469dc086da4abd546cf9bd98 mamzn ust flip flip bmamznflip 0x49c1ada3b47abf7a09fd87b1b296a959246395aa http bscscan com address 0x49c1ada3b47abf7a09fd87b1b296a959246395aa ust busd flip flip bustflip 0xf7347d14506b2acfbdd02a7b84fe8d9592629dbb http bscscan com address 0xf7347d14506b2acfbdd02a7b84fe8d9592629dbb
/splinefi/spline,Svelte,spline important project work progress yet stable l2 native aggregator l1 yield development use pnpm monorepo management ' yet pnpm install following command npx pnpm add g pnpm install project dependency npx pnpm front end run front end locally default http localhost 3000 npx pnpm run ui dev build static file npx pnpm run ui build locally preview build directory exists npx pnpm run ui preview cloudflare page repository synced cloudflare page http page cloudflare com latest build always available http spline page dev within minute commit see ui root path src build output directory us node 12 22 1 npm 7 16 0 time commit made master run following command take around 3 5 minute npx pnpm add g pnpm npx pnpm npx pnpm run build user contributor need run command linting use eslint prettier linting npx pnpm run lint must lint opening pr though husky automatically license gnu gplv3 http www gnu org license gpl 3 0 html
/Bisonai/orca-api,TypeScript,orca api orca api rest api server defines user friendly interface orca sdk http github com orca typescript sdk orca sdk contains set simple use apis allow developer integrate orca ' decentralized exchange platform installation bash npm install running app bash development npm run start watch mode npm run start dev production mode npm run start prod running locally orca api accessible http 0 0 0 0 3000 test bash unit test npm run test e2e test npm run test e2e test coverage npm run test cov endpoint endpoint detailed parameter response found http 0 0 0 0 3000 doc pool pool list orca pool pool balance gauge fund allocated designated pool pool deposit deposit fund designated pool pool withdraw withdraw fund designated pool farm farm list orca farm farm balance gauge fund allocated designated farm farm deposit deposit fund designated farm farm withdraw withdraw fund designated farm swap swap swap token others portfolio list account ' portfolio token list token traded orca license apache license 2 0
/HappyDAO/zknet-contract,Solidity,zknet contract zknet contract l1 l2 dependency hardhat 2 9 3 typescript 4 6 4 solidity 0 8 4 env node 16 14 2 npm 8 5 0 usage prepare bash clone project git clone http github com happydao zknet contract git init cd zknet contract npm install compile contract bash compiled contract generated artifact contract npm run compile test contract bash test case test npm test
/ergolabs/default-token-list,JavaScript,ergolabs default token list test http github com ergolabs default token list workflow test badge svg http github com ergolabs default token list action query workflow 3atests package includes json schema token list default token list used ergodex interface json schema json schema represents technical specification token list used cross chain dapp interface ergodex interface json schema id http ergodex io tokenlist schema json semantic versioning repo includes version field package json follows semantic versioning http semver org list version must follow rule increment major version token removed ' updated tokenlist schema json file increment minor version token added increment patch version token already list minor detail changed name ticker logo url decimal changing token address chain id considered remove add major version update latest version ergodex default token list store http ergodex io default token list json adding token request add token file token request issue http github com ergolabs default token list issue new assignee label token request template token request md title add 7btoken ticker 7d 3a 7bproject name 7d disclaimer note filing issue doe guarantee addition default token list review token addition request particular order guarantee review request add token default list
/freight-chain/factoring,Vue,factoring invoice factoring dapp
/omgswap/omg-site,CSS,project wa bootstrapped create react app http github com facebook create react app available script project directory run yarn start run app development mode br open http localhost 3000 http localhost 3000 view browser page reload make edits br also see lint error console yarn test launch test runner interactive watch mode br see section running test http facebook github io create react app doc running test information yarn build build app production build folder br correctly bundle react production mode optimizes build best performance build minified filename include hash br app ready deployed see section deployment http facebook github io create react app doc deployment information yarn eject note one way operation eject cant go back arent satisfied build tool configuration choice eject time command remove single build dependency project instead copy configuration file transitive dependency webpack babel eslint etc right project full control command except eject still work point copied script tweak point youre dont ever use eject curated feature set suitable small middle deployment shouldnt feel obligated use feature however understand tool wouldnt useful couldnt customize ready learn learn create react app documentation http facebook github io create react app doc getting started learn react check react documentation http reactjs org code splitting section ha moved http facebook github io create react app doc code splitting analyzing bundle size section ha moved http facebook github io create react app doc analyzing bundle size making progressive web app section ha moved http facebook github io create react app doc making progressive web app advanced configuration section ha moved http facebook github io create react app doc advanced configuration deployment section ha moved http facebook github io create react app doc deployment yarn build fails minify section ha moved http facebook github io create react app doc troubleshooting npm run build fails minify
/czhc/bookmarks,Python,bookmark taking 3 mo ' literally read buidl experiment e discount mba sad laugh material sorted sprint category tracking progress staying focused feel free eye nbsp repo idea suggestion much welcomed tweet czhc http twitter com czhc following along
/AnshuJalan/newton,JavaScript,newton screenshot trading page http ibb co w7wxmxz trading jpg description overview newton decentralized trading platform otc counter ethereum call put option newton give trader freedom customize option select strike price premium lot size choice placing order american style option default fixed expiry period 48 hour time creation order get listed platform ' order book handled smart contract potential counterparties could directly take long sell position order choice short position always collaterilzed hedge risk defaulting either underlying amount eth margin 2 3rd market value eth stake dai settlement could done anytime expiry either eth dai stablecoin settlement type expected decided party supposed selling underlying asset e long position holder put short position holder call market value needed platform calculate seller ' margin settlement cash received tellor oracle http tellor io platform live http newton 1 herokuapp com rinkeby get insight trade view comprehensive demo http www youtube com watch v if4sl0 libe 27 technical aspect front end react web3 j smart contract solidity chart canvasjs chart http canvasjs com oracle tellor http tellor io pricing api coinbase pro api http doc pro coinbase com running locally dapp requires metamask wallet cloning repo enter following command root directory 1 npm install install dependency 2 npm run client install install client dependency e react 3 npm run dapp launch dapp localhost 3000 scope contribution contribution improvment proposal welcomed possible idea around platform could extended tokenization option allowing holder sell position expiry system making margin call possibly similar keeper system makerdao dai margin kept fixed assuming relatively steep price change span 48 hour relevant link live rinkeby http newton 1 herokuapp com demo youtube http www youtube com watch v if4sl0 libe 27
/qnity/insurance_solidity,Solidity,h1 align center style border botom none b actuarial model solidity b h1 br p align center collection useful model actuary use speed task p algorithm avalible algorithm source description bootstrap wiki bootstrap smart contract generates bootstraped vector number bootstrap http github com qnity insurance solidity tree main bootstrap wiki bootstrap http en wikipedia org wiki bootstrapping statistic algorithm planned algorithm source description tbd tbd tbd b new suggestion algorithm welcome b b anybody interested publishing algorithm implemented help project contact u make happen b
/theloanstream/thels,Solidity,loan stream div align center href http thels vercel app img src http cdn discordapp com attachment 937528130262949898 938031096636002325 thels logo 1 png alt thels logo width 256 height 256 h3 href http mumbai polygonscan com address 0x192b059c691609b942976fb4422c2b5c5ff4ac0c code 0x192b059c691609b942976fb4422c2b5c5ff4ac0c polygon mumbai h3 div br allow daos large treasury defi user collateralize treasury take loan form stream without sell asset local deployment deploy contract network cmd cd backend brownie run script deploy py run frontend local environment using following command cmd cd frontend npm install npm run dev
/defistuff/web3-api,JavaScript,defistuff api api documentation run de project api v1 get available module method json api defistuff api version 1 0 1 alpha module module ethereum method get blockchian address createaddress description return ethereum keypairs pub priv key endpoint api v1 ethereum create account getaddressbalance endpoint api v1 ethereum get balance address 0x00000000000000000000000000000000000 transaction getransaction description return transaction info endpoint api v1 ethereum get transaction tx 0x000000000000000000000000000000000000000 post transaction sendrawtransaction description transfer ether one account another endpoint api v1 ethereum send raw transaction requestbody addressfrom 0x37ebed3178e9c3b9087184f44a937c562e9770d2 privkey 0xee0f1ce4e615a834cfb9d531b89171ecdb1f7687e503f0402a271f4d3fdd715e addressto 0x1d9f33cdfe6df18de9dbb57db879a88faf3c1ad9 amount 0 5 usage install dependency bash yarn install development proposes run currently connects http localhost 7545 ganache cli http www trufflesuite com ganache bash yarn dev custom setup run use infura provider provider wish bash yarn start port custom port httpprovider custom provider chain chain name contribute create new branch bash feature feature fix fix create pull request
/byteball/discount-stablecoin-aa,JavaScript,autonomous agent discount stablecoins source code aa test suite install install node j 8 clone repository say sh yarn run test sh yarn test
/anrid/traderbot,JavaScript,create yield farming chart farming luna osmo lp bash simulates yield farming luna osmo lp osmosis dex starting apr 100 final apr 60 starting jul 1 2021 duration 365 number day want harvest compound yield go run example yield farming main go path tmp asset terra luna asset b osmosis apr 100 0 final apr 60 start date 2021 07 01 2021 07 01 position 10 000 00 il 0 00 hodl 10 000 00 apr 100 00 6 54 b 4 01 unit 764 00 1 247 38 2021 07 02 position 8 753 03 il 0 21 hodl 8 735 00 apr 99 84 5 93 b 3 37 unit 738 56 1 297 42 lot row removed 2022 03 04 position 106 430 21 il 28 04 hodl 83 124 51 apr 60 16 90 56 b 11 18 unit 587 65 4 761 86 2022 03 05 position 97 558 70 il 27 28 hodl 76 651 23 apr 60 00 83 82 b 10 11 unit 581 95 4 824 31 writing chart tmp yield farming luna osmo 2021 07 01 2022 03 05 html render html chart screenshot chart example yield farming screen yield farming luna osmo 2021 07 01 2022 03 05 v2 jpg farming avax usdc lp bash simulates yield farming avax usdc e lp 0 apr see full impact impermanent loss starting apr 0 final apr 0 starting jul 1 2021 duration 365 number day want harvest compound yield go run example yield farming main go path tmp asset avalanche 2 asset b usd coin apr 0 0 final apr 0 0 start date 2021 07 01 2021 07 01 position 10 000 00 il 0 00 hodl 10 000 00 apr 0 00 11 98 b 1 00 unit 417 38 4 983 67 2021 07 02 position 9 713 69 il 0 05 hodl 9 718 26 apr 0 00 11 28 b 1 00 unit 430 39 4 833 02 lot row removed 2022 03 04 position 25 599 92 il 32 42 hodl 37 878 16 apr 0 00 78 82 b 1 00 unit 162 39 12 808 83 2022 03 05 position 25 726 79 il 32 59 hodl 38 165 82 apr 0 00 79 49 b 1 00 unit 161 82 12 854 43 writing chart tmp yield farming avax usdc 2021 07 01 2022 03 05 html render html chart screenshot chart example yield farming screen yield farming avax usdc 2021 07 01 2022 03 05 v2 jpg ema 9 21 day trading simulation golang example ema 9 21 trading strategy main go executes basic trading strategy based exponential moving average indicator ema 9 day ema cross 21 day ema indicator buy 9 day ema cross 21 day ema indicator sell import &#9; log &#9; github com anrid traderbot pkg coingecko &#9; github com anrid traderbot pkg jsoncache &#9; github com anrid traderbot pkg trade func main &#9; cg coingecko new coingecko usd &#9; id terra luna coingecko id &#9; var periodindays uint 365 start trading strategy simulation 365 day ago &#9; counting today &#9; err cg marketchartwithcache id periodindays jsoncache invalidatedaily &#9; err nil &#9; &#9; log fatal err &#9; &#9; ema9d trade newemaindicator 9 price &#9; ema21d trade newemaindicator 21 price &#9; err trade newemacrossoverstrategy ema9d ema21d &#9; err nil &#9; &#9; log fatal err &#9; &#9; initialinvestment 10 000 0 usd &#9; trade executetradesandprint 9 day 21 day em crossover strategy initialinvestment trade output bash go run cmd ema trading strategy example main go trading ' terra ' luna 9 day 21 day em crossover strategy 1 2021 04 27 buy terra luna 17 6307 amount 10 000 0000 unit 567 1920 2 2021 05 13 sell terra luna 14 8174 amount 8 404 2978 unit 567 1920 portfolio 8 404 2978 3 2021 07 07 buy terra luna 6 4806 amount 8 404 2978 unit 1 296 8387 4 2021 07 21 sell terra luna 5 9036 amount 7 656 0801 unit 1 296 8387 portfolio 7 656 0801 5 2021 07 23 buy terra luna 7 3690 amount 7 656 0801 unit 1 038 9540 6 2021 09 22 sell terra luna 24 9468 amount 25 918 5351 unit 1 038 9540 portfolio 25 918 5351 7 2021 09 24 buy terra luna 36 4343 amount 25 918 5351 unit 711 3775 8 2021 10 17 sell terra luna 36 7548 amount 26 146 5548 unit 711 3775 portfolio 26 146 5548 9 2021 10 21 buy terra luna 42 8015 amount 26 146 5548 unit 610 8788 10 2021 11 19 sell terra luna 40 2905 amount 24 612 6431 unit 610 8788 portfolio 24 612 6431 11 2021 11 30 buy terra luna 51 5801 amount 24 612 6431 unit 477 1735 12 2022 01 09 sell terra luna 66 9792 amount 31 960 7004 unit 477 1735 portfolio 31 960 7004 13 2022 01 16 buy terra luna 87 6574 amount 31 960 7004 unit 364 6091 14 2022 01 22 sell terra luna 64 3927 amount 23 478 1657 unit 364 6091 portfolio 23 478 1657 15 2022 02 25 buy terra luna 65 4442 amount 23 478 1657 unit 358 7510 number txns 15 first buy 2021 04 27 last sell 2022 01 22 270 day first buy initial investment 10 000 00 portfolio value 26 999 00 p l 169 99 yield farming simulation golang example yield farming simple main go simulates yield farming luna osmo lp osmosis dex average apr 75 starting jul 1 2021 daily harvesting compounding max 365 day import &#9; log &#9; time &#9; github com anrid traderbot pkg coingecko &#9; github com anrid traderbot pkg jsoncache &#9; github com anrid traderbot pkg timeseries &#9; github com anrid traderbot pkg trade func main &#9; startdate 2021 07 01 date initial investment start farming date &#9; harvestdays 365 number day harvest compound yield &#9; initialinvestment 10 000 0 initial investment usd &#9; apr 99 0 farm apr &#9; cg coingecko new coingecko usd &#9; err cg marketchartwithcache terra luna uint harvestdays jsoncache invalidatedaily &#9; err nil &#9; &#9; log fatal err &#9; &#9; b err cg marketchartwithcache osmosis uint harvestdays jsoncache invalidatedaily &#9; err nil &#9; &#9; log fatal err &#9; &#9; farm err trade newlpfarm b coingecko usd initialinvestment startdate apr &#9; err nil &#9; &#9; log fatal err &#9; &#9; farm setaprchangerateatharvest 0 15 lower apr 0 15 percentage point every day &#9; timeseries totime startdate &#9; 1 harvestdays &#9; &#9; current add time duration 24 time hour &#9; &#9; current time &#9; &#9; &#9; break &#9; &#9; &#9; &#9; date timeseries todate current &#9; &#9; yield err farm harvest date &#9; &#9; err nil &#9; &#9; &#9; log fatal err &#9; &#9; &#9; &#9; farm addlp date yield compound yield &#9; output bash go run cmd yield farming example main go coingecko say v3 moon downloaded data terra luna 365 day usd downloaded data osmosis 365 day usd 2021 07 01 position 10 000 00 il 0 00 hodl 10 000 00 apr 99 00 6 54 b 4 01 unit 764 00 1 247 38 2021 07 02 position 8 729 15 il 0 07 hodl 8 735 00 apr 98 85 5 93 b 3 37 unit 736 54 1 293 88 2021 07 03 position 8 646 05 il 0 26 hodl 8 623 95 apr 98 70 5 74 b 3 40 unit 753 11 1 272 28 2021 07 04 position 8 792 81 il 0 53 hodl 8 746 45 apr 98 55 5 81 b 3 45 unit 756 42 1 273 57 2021 07 05 position 9 032 71 il 0 80 hodl 8 961 16 apr 98 40 5 97 b 3 53 unit 757 03 1 279 43 2021 07 06 position 9 404 48 il 1 08 hodl 9 303 98 apr 98 25 6 15 b 3 69 unit 764 61 1 273 58 2021 07 07 position 8 955 39 il 0 70 hodl 8 892 94 apr 98 10 6 48 b 3 16 unit 690 94 1 416 98 2021 07 08 position 9 043 67 il 0 40 hodl 9 080 18 apr 97 95 7 12 b 2 92 unit 634 66 1 550 94 2021 07 09 position 8 059 41 il 1 46 hodl 8 178 40 apr 97 80 6 71 b 2 44 unit 600 11 1 649 05 2021 07 10 position 8 593 13 il 5 31 hodl 9 074 94 apr 97 65 8 17 b 2 27 unit 525 87 1 891 94 2021 07 11 position 8 697 70 il 3 76 hodl 9 037 32 apr 97 50 7 94 b 2 38 unit 547 58 1 826 65 2021 07 12 position 8 840 81 il 5 09 hodl 9 314 60 apr 97 35 8 43 b 2 31 unit 524 53 1 917 13 2021 07 13 position 7 913 85 il 6 91 hodl 8 501 37 apr 97 20 7 94 b 1 95 unit 498 06 2 029 81 2021 07 14 position 7 028 92 il 7 00 hodl 7 558 03 apr 97 05 7 10 b 1 71 unit 495 21 2 052 38 lot row removed 2022 02 21 position 67 665 98 il 39 37 hodl 48 551 16 apr 63 75 49 61 b 8 54 unit 682 03 3 962 00 2022 02 22 position 66 129 91 il 36 63 hodl 48 400 05 apr 63 60 50 25 b 8 02 unit 657 99 4 121 07 2022 02 23 position 70 382 86 il 34 96 hodl 52 151 53 apr 63 45 54 67 b 8 33 unit 643 72 4 227 15 2022 02 24 position 74 897 35 il 32 81 hodl 56 395 63 apr 63 30 59 79 b 8 59 unit 626 31 4 359 73 2022 02 25 position 78 844 51 il 29 66 hodl 60 809 89 apr 63 15 65 44 b 8 67 unit 602 38 4 548 70 2022 02 26 position 85 735 22 il 27 39 hodl 67 302 13 apr 63 00 73 18 b 9 13 unit 585 77 4 693 84 2022 02 27 position 91 962 50 il 28 33 hodl 71 658 79 apr 62 85 77 69 b 9 86 unit 591 86 4 661 67 2022 02 28 position 85 241 13 il 27 67 hodl 66 765 55 apr 62 70 72 64 b 9 03 unit 586 71 4 718 72 2022 03 01 position 100 691 11 il 22 51 hodl 82 193 25 apr 62 55 91 26 b 10 00 unit 551 67 5 035 71 2022 03 02 position 100 241 62 il 23 38 hodl 81 247 15 apr 62 40 90 00 b 10 01 unit 556 92 5 005 33 2022 03 03 position 104 887 23 il 25 46 hodl 83 600 55 apr 62 25 91 97 b 10 69 unit 570 23 4 905 28 2022 03 04 position 106 589 57 il 28 23 hodl 83 124 51 apr 62 10 90 56 b 11 18 unit 588 53 4 768 99 2022 03 05 position 97 710 38 il 27 47 hodl 76 651 23 apr 61 95 83 82 b 10 11 unit 582 85 4 831 81 2022 03 06 position 101 427 19 il 27 26 hodl 79 699 80 apr 61 80 87 30 b 10 43 unit 580 93 4 864 29 2022 03 07 position 93 011 33 il 28 26 hodl 72 518 26 apr 61 65 79 19 b 9 63 unit 587 24 4 828 31 2022 03 08 position 92 935 68 il 29 87 hodl 71 561 87 apr 61 50 77 72 b 9 76 unit 597 85 4 758 64 2022 03 09 position 106 407 93 il 22 29 hodl 87 014 17 apr 61 35 97 24 b 10 20 unit 547 12 5 217 46
/reach-sh/humble-sdk,JavaScript,humblesdk v2 0 0 header img src logo white svg width 80 height auto header javascript library interacting humbleswap dex http app humble sh humblesdk v2 0 0 humblesdk v200 documentation documentation v2 change v2 change installing sdk installing sdk option 1 npm recommended option 1 npm recommended option 2 cloning repo directly option 2 cloning repo directly example usage example usage subscribing stream liquidity pool data subscribing stream liquidity pool data swapping pair token swapping pair token local testing local testing documentation documentation ha moved http reach sh github io humble sdk v2 change v2 introduces change add new functionality including staking pool function may renamed review change changelog changelog md view documentation http reach sh github io humble sdk additional info installing sdk option 1 npm recommended fastest way use npm bash npm reach sh humble sdk option 2 cloning repo directly get started without npm clone build sdk repository bash clone repository git clone http github com reach sh humble sdk git enter directory repo replace path repository clone cd path humble sdk install dependency ' lot npm install build sdk output lib directory folder package json file take second ' output anything terminal npm run build know complete terminal ' typing prompt reappears final step copy move new lib directory project allow access like j module typescript import inithumblesdk path lib example usage subscribing stream liquidity pool data typescript import subscribetopoolstream createreachapi reach sh humble sdk const stdlib createreachapi const acc await stdlib createaccount fetch existing stream get notified new one created subscribetopoolstream acc pool id id pool token received contract pool data ha fetched yet onpoolreceived info const pooladdr tokenaid tokenbid info something data pool token data ha received network onpoolfetched result fetchpooltxnresult const succeeded pooladdress data message result succeeded something data swapping pair token note swapping doe use routing read doc http reach sh github io humble sdk learn fetch pool dex operation typescript import calculatetokenswap performswap reach sh humble sdk const pool pool source calculate expected swap output const tokenaid tokenbid pool const amounta 100 const swap calculatetokenswap pool swap amounta tokenaid tokenbid perform swap const swapopts pooladdress pool pooladdress swap pool const data message succeeded await performswap acc swapopts succeeded data amountin string amountout string local testing humble sdk contains helper script running sdk command line see cli readme md
/izumiFinance/izumi-iZiSwap-sdk,TypeScript,izumi iziswap sdk latest version sdk considered alpha software may contain bug change significantly patch version check izumi finance http developer izumi finance depth documentation run example npx tsc example liquiditymanager mint resolvejsonmodule esmoduleinterop outdir bin node bin example liquiditymanager mint j
/cartercarlson/automated-cdp,Python,carter carlson project still early stage development ultimately repo offer suite tool manage cdp collatoralized debt position makerdao documentation http makerdao com en whitepaper getting started 1 git clone http github com carlfarterson automated cdp git 2 cd automated cdp 3 edit py main py simulated action ' like 4 python py main py 5 npm install 6 npm start goal automatically manage cdp prevent liquidation predicting future cdp value summary dashboard backtesting various cdp strategy historical price homepage homepage display data src asset cdp json file created py main py homepage src asset homepage png
/fsn-dev/whallet-mobile,Vue,whallet project setup yarn install compiles hot reloads development yarn serve compiles minifies production yarn build lint fix file yarn lint customize configuration see configuration reference http cli vuejs org config
